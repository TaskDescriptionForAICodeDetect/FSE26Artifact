[
  {
    "language": "Scala",
    "code": "\nobject Main extends App {\n\n  import scala.io.StdIn._\n\n  solve\n  def solve: Unit = {\n    val line = readLine\n    if (line == null) return\n    val args = line.trim.split(' ').map(_.toInt)\n    println(if (args.head + 0.000000001 >= minLength(args.tail.map(Cake))) \"OK\"\n    else \"NA\")\n    solve\n  }\n  def minLength(cakes: Array[Cake]): Double = {\n    val memo = Array.tabulate(1 << cakes.length){_ ⇒ Array.tabulate(cakes.length){_ ⇒ None: Option[Double]}}\n    def sub(flags: Flags, last: Int): Double = {\n      memo(flags.toIndex)(last) match {\n        case Some(r) ⇒ r\n        case None ⇒\n          cakes.indices.filter(flags.isUnset).map{i ⇒\n            sub(flags.set(i), i) + cakes(i).neighborPosition(cakes(last))\n          }.let{s ⇒ if (s.isEmpty) cakes(last).size else s.min}.also{m ⇒ memo(flags.toIndex)(last) = Some(m)}\n      }\n    }\n    cakes.indices.map{i ⇒ sub(Flags().set(i), i) + cakes(i).size}.min\n  }\n  case class Flags(flags: Int = 0) extends AnyVal {\n    def set(position: Int): Flags = Flags(flags | (1 << position))\n    def isSet(position: Int): Boolean = (flags & (1 << position)) != 0\n    def unset(position: Int): Flags = Flags(flags & ~(1 << position))\n    def isUnset(position: Int): Boolean = (flags & (1 << position)) == 0\n    def toIndex: Int = flags\n  }\n  case class Cake(size: Int) extends AnyVal {\n    def neighborPosition(right: Cake): Double = math.sqrt((size + right.size).let{it ⇒ it * it} - (size - right.size).let{it ⇒ it * it})\n  }\n  implicit class Extension[T](val value :T) extends AnyVal {\n    @inline\n    def let[A](@inline func: T ⇒ A): A = func(value)\n    @inline\n    def also(@inline func: T ⇒ Unit): T = {func(value); value}\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0]+2.0*sqrt((double)r[0]*r[p[0]+1]);\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0*sqrt((double)r[p[i]+1]*r[p[i+1]+1]);\n\t}\n\ttw += 2.0*sqrt((double)r[1]*r[p[n-1]+1])+r[1];\n\tif( tw <= w ){\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif( num > 2 ){\n\t\t\tif( solve( p, num-2, w, r) ) cout << \"OK\\n\";\n\t\t\telse cout << \"NA\\n\";\n\t\t}else if( num <= 2 ){\n\t\t\tif( num == 2 ){\n\t\t\t\tdouble t = 0;\n\t\t\t\tt = r[0]+r[1]+2.0*sqrt((double)r[0]*r[1]);\n\t\t\t\tif(t <= w ) cout << \"OK\\n\";\n\t\t\t\telse cout << \"NA\\n\";\n\t\t\t}else if(num == 1){\n\t\t\t\tif( r[0] * 2 <= w ) cout << \"OK\\n\";\n\t\t\t\telse cout << \"NA\\n\";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <cctype>\n#include <sstream>\n#include <string>\n#include <list>\n#include <vector>\n#include <queue>\n#include <set>\n#include <stack>\n#include <map>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <iterator>\n#include <bitset>\n#include <complex>\n#include <fstream>\nusing namespace std;\ntypedef long long ll;\nconst double EPS = 1e-9;\ntypedef vector<int> vint;\ntypedef pair<int, int> pint;\n#define rep(i, n) REP(i, 0, n)\n#define ALL(v) v.begin(), v.end()\n#define MSG(a) cout << #a << \" \" << a << endl;\n#define REP(i, x, n) for(int i = x; i < n; i++)\ntemplate<class T> T RoundOff(T a){ return int(a+.5-(a<0)); }\ntemplate<class T, class C> void chmax(T& a, C b){ if(a < b) a = b; }\ntemplate<class T, class C> void chmin(T& a, C b){ if(b < a) a = b; }\ntemplate<class T, class C> pair<T, C> mp(T a, C b){ return make_pair(a, b); }\n\nvector<string> split(string str, string delim)\n{\n    vector<string> result;\n    int cutAt;\n    while( (cutAt = str.find_first_of(delim)) != str.npos )\n    {\n        if(cutAt > 0)\n        {\n            result.push_back(str.substr(0, cutAt));\n        }\n        str = str.substr(cutAt + 1);\n    }\n    if(str.length() > 0)\n    {\n        result.push_back(str);\n    }\n\treturn result;\n}\n\nint tonumber(string s)\n{\n\tint res = 0;\n\t\n\trep(i, s.size())\n\t{\n\t\tres *= 10;\n\t\tres += s[i] - '0';\n\t}\n\t\n\treturn res;\n}\n\nbool rec(vint& R, int& n, int& H, double h, int prv, int S)\n{\t\n\t// end\n\tif(S == (1 << n) - 1)\n\t{\n\t\treturn h + prv <= H;\n\t}\n\t\n\tbool res = false;\n\t\n\trep(i, n)\n\t{\n\t\tif(!(S >> i & 1))\n\t\t{\n\t\t\tint dr = R[i] + prv;\n\t\t\tint dy = abs(R[i] - prv);\n\t\t\tdouble dx = sqrt(dr * dr - dy * dy);\n\t\t\t\n\t\t\tres |= rec(R, n, H, h + dx + (S == 0 ? R[i] : 0), R[i], S | 1 << i);\n\t\t}\n\t}\n\t\n\treturn res;\n}\n\nint main()\n{\n\tstring line;\n\twhile(getline(cin, line))\n\t{\n\t\tvector<string> ss = split(line,  \" \");\t\t\n\t\t\n\t\tint n = ss.size() - 1;\n\t\tint H = tonumber(ss[0]);\n\t\t\n\t\tvint R(n);\n\t\t\n\t\trep(i, n)\n\t\t\tR[i] = tonumber(ss[i + 1]);\n\t\t\n\t\t\n\t\tcout << (rec(R, n, H, 0, 0, 0) ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n\n#include <stdio.h>\n#include <ctype.h>\n#include <string>\n#include <iostream>\n#include <vector>\n#include <stack>\n#include <fstream>\n#include <sstream>\n#include <queue>\n#include <exception>\n#include <cmath>\n#include <numeric>\n#include <map>\n#include <algorithm>\n\n#define INF 100000000\n#define MAX_N 12\n\nusing namespace std;\ntypedef long long int lint;\n\ndouble dp[MAX_N][1 << MAX_N];\ndouble d[MAX_N][MAX_N];\ndouble rad[MAX_N];\n\n//S : ???????????±???????????????, i : ?????????????????±??????\ndouble rec(int S, int i, int n) {\n\tif (dp[i][S] < INF) return dp[i][S];\n\n\tdouble r = 0;\n\n\t//1????????????\n\tif (S == (1 << i)) {\n\t\treturn dp[i][S] = rad[i];\n\t}\n\n\t//??¨????????????\n\tif (S == (1 << n) - 1) {\n\t\tr = rad[i];\n\t}\n\n\tdouble res = INF;\n\t//S ?????? i ??????????????????\n\tint SS = S ^ (1 << i);\n\tfor (int j = 0; j < n; j++) {\n\t\tif ((SS >> j) & 1) {\n\t\t\tres = min(res, rec(SS, j, n) + d[j][i] + r);\n\t\t}\n\t}\n\n\treturn dp[i][S] = res;\n}\n\nvoid init(int n) {\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < (1 << n); j++) {\n\t\t\tdp[i][j] = INF + 1;\n\t\t}\n\t}\n}\n\nbool AOJ0120()\n{\n\tstring str;\n\tif (!getline(cin, str)) return false;\n\n\tistringstream iss(str);\n\t\n\tint width;\n\tvector<int> radii;\n\n\tiss >> width;\n\tint radius;\n\twhile (iss >> radius) {\n\t\tradii.push_back(radius);\n\t}\n\n\tint n = radii.size();\n\n\t//init\n\tinit(n);\n\tfor (int i = 0; i < n; i++) {\n\t\tfor (int j = 0; j < n; j++) {\n\t\t\td[i][j] = sqrt(radii[i] * radii[j]) * 2;\n\t\t}\n\t\trad[i] = radii[i];\n\t}\n\n\tdouble ans = INF + 1;\n\tfor (int i = 0; i < n; i++) {\n\t\tans = min(ans, rec((1 << n) - 1, i, n));\n\t}\n\n\tif (ans < width + 1e-8) cout << \"OK\" << endl;\n\telse cout << \"NA\" << endl;\n\t\n\treturn true;\n}\n\nint main()\n{\n\twhile (AOJ0120()) {\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <limits.h>\n#include <math.h>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n\n#define VARIABLE(x) cerr << #x << \"=\" << x << endl\n#define BINARY(x) static_cast<bitset<16> >(x);\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n\nconst int INF = 100000000;\ntypedef double D;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={-1, 0, 1, 0}, dy[4]={0, -1, 0, 1};\nusing namespace std;\ntypedef pair<int, int> P;\n\n/** Problem0120 : Patisserie **/\nconst int MAX_N = 12;\n\ndouble W;\nvector<double> size;\ndouble dp[1<<MAX_N][MAX_N];\nint N;\n\nint sig(double a, double b) {\n\tif(a < b - EPS) return -1;\n\tif(a > b + EPS) return +1;\n\treturn 0;\n}\n\ndouble rec(int S, int v)\n{\n\t//printf(\"(S, v, w) = (%d, %d, %.2f)\\n\", S, v, w);\n\t\n\tif (dp[S][v]>=0)\n\t\treturn dp[S][v];\n\t\n\tif (S==(1<<N)-1) {\n\t\treturn dp[S][v] = size[v];\n\t}\n\t\n\tdouble res=INF;\n\trep(u, N) {\n\t\tif (!(S>>u&1)) {\n\t\t\tdouble d = sqrt((size[u]+size[v])*(size[u]+size[v]) - (size[u]-size[v])*(size[u]-size[v]));\n\t\t\tres  = min(res, rec(S|1<<u, u)+d);\n\t\t}\n\t}\n\t\n\treturn dp[S][v] = res;\n}\n\nint main()\n{\n\tstring in;\n\twhile (getline(cin, in)) {\n\t\tsize.clear();\n\t\t\n\t\tstringstream ss(in);\n\t\tss>>W;\n\t\tdouble d;\n\t\twhile (ss>>d) {\n\t\t\tsize.push_back(d);\n\t\t};\n\t\tN=(int)size.size();\n\t\t\n\t\tmemset(dp, -1, sizeof(dp));\n\t\t\t\n\t\tdouble ans=INF;\n\t\trep(i, N) {\n\t\t\tans = min(ans, rec(1<<i, i)+size[i]);\n\t\t}\n\t\t//cout << ans << \" \" << W << endl;\n\t\tcout << (sig(ans, W)!=1?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\ndouble calc(vector<int>&v, int s, int n, int p,int b,double w,double l)\n{\n  if(n == 0) return l + p;\n  double m = 300.0;\n  for(int i=0; i<s; i++){\n    if(!(b & (1 << i))){\n      double d;\n      if(p == 0) d = v[i];\n      else {\n\tdouble q = p - v[i];\n\tdouble r = p + v[i];\n\tdouble cos = sqrt(1.0 - q * q / (r * r));\n\td = r * cos;\n      }\n      if(l + d > w) continue;\n      d = calc(v,s,n-1,v[i],(b | (1 << i)),w,l + d);\n      m = min(m, d);\n      if(p == 0 && m <= w) return m;\n    }\n  }\n  return m;\n}\nint main()\n{\n  string s;\n  while(getline(cin, s)){\n    istringstream in(s);\n    int n=0, i;\n    double w;\n    vector<int> v;\n    in >> w;\n    while(in >> i){\n      v.push_back(i);\n      n++;\n    }\n    double r = calc(v,n,n,0,0,w,0);\n    if(w < r) cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<math.h>\n#define INF 100000000.0f\nusing namespace std;\ndouble dp[12][1<<12];\nint s[12];\ndouble min(double a,double b){return a<b?a:b;}\nint main(){\n\tint l;\n\twhile(scanf(\"%d\",&l)!=EOF){\n\t\tint i=0,j,k;\n\t\twhile(1){\n\t\t\tchar c;\n\t\t\tscanf(\"%d%c\",&s[i],&c);\n\t\t\ti++;\n\t\t\tif(c=='\\n')break;\n\t\t}\n\t\tint n=i;\n\t\tfor(i=0;i<1<<n;i++)for(j=0;j<n;j++)dp[j][i]=INF;\n\t\tfor(i=0;i<n;i++)dp[i][(1<<n)-1-(1<<i)]=s[i];\n\t\tfor(i=(1<<n)-2;i>=0;i--){\n\t\t\tfor(j=0;j<n;j++){\n\t\t\t\tif(i>>j&1)continue;\n\t\t\t\tfor(k=0;k<n;k++)dp[j][i]=min(dp[j][i],dp[k][i|1<<j]+2*sqrt(s[j]*s[k]));\n\t\t\t}\n\t\t}\n\t\tdouble ans=INF;\n\t\tfor(i=0;i<n;i++)ans=min(ans,dp[i][0]+s[i]);\n\t\tif(ans<=l)printf(\"OK\\n\");\n\t\telse printf(\"NA\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#include <list>\n#include <vector>\n#define REP(i, a, b) for (int i = (a); i < (b); ++i)\n#define rep(i, n) REP(i, 0, n)\n#define pb push_back\n#define pf push_front\nint main()\n{\n\tint a[12], b[12];\n\tchar buf[256];\n\twhile (fgets(buf, 256, stdin)) {\n\t\tchar* p = strtok(buf, \" \");\n\t\tint L = atoi(p);\n\t\tint n = 0;\n\t\twhile (p = strtok(NULL, \" \")) a[n++] = atoi(p);\n\t\tstd::sort(a, a + n);\n\t\tbool ok = false;\n\n\t\tb[n/2] = a[0];\n\t\tint i = 0, j = 1, k = 1, l = 1;\n\t\twhile (i < n) {\n\t\t\tif (i % 4 == 0) { b[n/2+k] = a[n-l]; l++; }\n\t\t\tif (i % 4 == 1) { b[n/2-k] = a[n-l]; l++; k++; }\n\t\t\tif (i % 4 == 2) { b[n/2+k] = a[j]; j++; }\n\t\t\tif (i % 4 == 3) { b[n/2-k] = a[j]; j++; k++; }\n\t\t\ti++;\n\t\t}\n\t\tdouble t = b[0];\n\t\tREP(i, 1, n) t += 2 * sqrt(b[i-1] * b[i]);\n\t\tt += b[n-1];\n\t\tif (!(t > L)) ok = true;\n\n\t\t/*\n\t\tdo {\n\t\t\tdouble t = a[0];\n\t\t\tREP(i, 1, n) t += 2 * sqrt(a[i-1] * a[i]);\n\t\t\tt += a[n-1];\n\t\t\tif (!(t > L)) { ok = true; break; }\n\t\t} while (std::next_permutation(a, a+n));\n\t\t*/\n\t\tputs(ok ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <queue>\nusing namespace std;\n\n#define EPS 1e-8\n\ndouble calcR(double r1, double r2)\n{\n\treturn sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\nclass Trl\n{\npublic:\n\tint p, h;\n\tdouble c;\n\tTrl(int p, int h, double c)\n\t:p(p),h(h),c(c)\n\t{}\n\t\n\tbool operator<(const Trl& t) const\n\t{\n\t\treturn c>t.c;\n\t}\n};\n\nint main()\n{\n\tdouble cst[11][11]={0};\n\tfor(int i=0; i<=10; i++)\n\t\tcst[0][i]=2*i;\n\t\t\n\tfor(int i=3; i<=10; i++)\n\tfor(int j=3; j<=10; j++)\n\t\tcst[i][j]=calcR(i,j)-i+j;\n\t\t\n\tint L;\n\twhile(cin >> L)\n\t{\n\t\tint cake[10], p=0;\n\t\twhile(cin.peek() != '\\n')\n\t\t\tcin >> cake[p++];\n\t\t\n\t\tpriority_queue<Trl> q;\n\t\tq.push(Trl(0,0,0));\n\t\tbool g=false;\n\t\tbool v[12][1<<12]={0};\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tTrl t=q.top(); q.pop();\n\t\t\tif(v[t.p][t.h]) continue;\n\t\t\tv[t.p][t.h]=1;\n\t\t\t\n\t\t\tif(t.h==(1<<p)-1)\n\t\t\t{\n\t\t\t\tg=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tfor(int i=0; i<p; i++)\n\t\t\t{\n\t\t\t\tif(t.h&(1<<i)) continue;\n\t\t\t\tdouble tc=t.c+cst[cake[t.p]][cake[i]];\n\t\t\t\tint th=t.h+(1<<i);\n\t\t\t\tif(v[i][th]) continue;\n\t\t\t\tif(tc>L+EPS) continue;\n\t\t\t\t\n\t\t\t\tq.push(Trl(i, th, tc));\n\t\t\t}\n\t\t}\n\t\tcout << (g?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "const int INF = 100000000;\ntypedef double D;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={-1, 0, 1, 0}, dy[4]={0, -1, 0, 1};\nusing namespace std;\ntypedef pair<int, int> P;\n\n/** Problem0120 : Patisserie **/\nconst int MAX_N = 12;\n\ndouble W;\nvector<double> size;\nint dp[1<<MAX_N][MAX_N];\nint N;\n\nint sig(double a, double b) {\n\tif(a < b - EPS) return -1;\n\tif(a > b + EPS) return +1;\n\treturn 0;\n}\n\nbool rec(int S, int v, double w)\n{\n\t//printf(\"(S, v, w) = (%d, %d, %.2f)\\n\", S, v, w);\n\t\n\tif (dp[S][v]>=0)\n\t\treturn dp[S][v];\n\t\n\tif (S==(1<<N)-1) {\n\t\tprintf(\"%.2f %.2f\\n\", W, w);\n\t\treturn dp[S][v] = (sig(W, w)!=-1);\n\t}\n\t\n\tbool res=false;\n\trep(u, N) {\n\t\tif (!(S>>u&1)) {\n\t\t\tdouble nw = w - size[v] + size[u] + sqrt((size[u]+size[v])*(size[u]+size[v]) - (size[u]-size[v])*(size[u]-size[v]));\n\t\t\tres |= rec(S|1<<u, u, nw);\n\t\t}\n\t}\n\t\n\treturn dp[S][v] = res;\n}\n\nint main()\n{\n\tstring in;\n\twhile (getline(cin, in)) {\n\t\tsize.clear();\n\t\t\n\t\tstringstream ss(in);\n\t\tss>>W;\n\t\tdouble d;\n\t\twhile (ss>>d) {\n\t\t\tsize.push_back(d);\n\t\t};\n\t\tN=(int)size.size();\n\t\t\n\t\tmemset(dp, -1, sizeof(dp));\n\t\t\t\n\t\tbool ans=false;\n\t\trep(i, N) {\n\t\t\tans |= rec(1<<i, i, 2*size[i]);\n\t\t}\n\t\t\n\t\tcout << (ans?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> temps(20, 0), cakes;\n    priority_queue<P> Q;\n    int temp;\n    while (is >> temp) {\n      ++temps[temp];\n    }\n    rep(i,temps.size()) if(temps[i]) Q.push(P(temps[i], i));\n    \n    while (!Q.empty()) {\n      P lhs = Q.top(); Q.pop();\n      if (Q.empty()) {\n        rep(i,lhs.first) cakes.push_back(lhs.second);\n        continue;\n      }\n      P rhs = Q.top(); Q.pop();\n      cakes.push_back(lhs.second);\n      cakes.push_back(rhs.second);\n      if (lhs.first > 1) {\n        --lhs.first; Q.push(lhs);\n      }\n      if (rhs.first > 1) {\n        --rhs.first; Q.push(rhs);\n      }\n    }\n\n    double current_length = cakes[0];\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      if (cakes[i] == cakes[i+1]) {\n        current_length += 2 * cakes[i];\n      } else {\n        int larger = max(cakes[i], cakes[i+1]);\n        int smaller = min(cakes[i], cakes[i+1]);\n        double height = larger - smaller;\n        double naname = larger + smaller;\n        double width = sqrt(pow(naname, 2) - pow(height, 2));\n        // printf(\"%lf\\n\", width);\n        current_length += width;\n      }\n    }\n    current_length += cakes[cakes.size() - 1];\n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\t//if(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\tif(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<climits>\n#include<cfloat>\n#include<sstream>\n#define all(c) (c).begin(),(c).end()\n#define INF (1<<29)\n\nusing namespace std;\n\n\ndouble dist(double p,double q){\n  double a=p+q,b=abs(p-q);\n  return sqrt(a*a-b*b);\n}\n\nint count(int bits){\n  bits = (bits & 0x55555555) + (bits >> 1 & 0x55555555);\n  bits = (bits & 0x33333333) + (bits >> 2 & 0x33333333);\n  bits =(((bits >> 4) + bits) & 0x0f0f0f0f);\n  bits += bits >> 8;\n  return (bits + (bits >> 16)) & 0xff;\n}\n\ndouble dp[(1<<12)][12];\n\nint main(void){\n\n  string str;\n  while(getline(cin,str)){\n    int value;\n    stringstream ss(str);\n    vector<double>in;\n    while(ss >> value)in.push_back(value);\n    if(in.size()<1)break;\n    double L=in[0];\n    int m=in.size()-1;\n    vector<double>p(m);\n    for(int i=1;i<in.size();i++)p[i-1]=in[i];\n\n    fill(dp[0],dp[1<<12],INF);\n    for(int i=0;i<m;i++)dp[1<<i][i]=p[i];\n\n    for(int S=0;S<(1<<m);S++){\n      for(int v=0;v<m;v++){\n\tfor(int u=0;u<m;u++){\n\t  if(S>>u&1)continue;\n\t  int nx=S;\n\t  nx|=(1<<u);\n\t  if(count(S)==m-1)dp[nx][u]=min(dp[nx][u],dp[S][v]+dist(p[v],p[u])+p[u]);\n\t  else dp[nx][u]=min(dp[nx][u],dp[S][v]+dist(p[v],p[u]));\n\t}\n      }\n    }\n    double ans=INF;\n    for(int i=0;i<m;i++)ans=min(ans,dp[(1<<m)-1][i]);\n    if(ans<=L)cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <cctype>\n#include <sstream>\n#include <string>\n#include <list>\n#include <vector>\n#include <queue>\n#include <set>\n#include <stack>\n#include <map>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <iterator>\n#include <bitset>\n#include <complex>\n#include <fstream>\nusing namespace std;\ntypedef long long ll;\nconst double EPS = 1e-9;\ntypedef vector<int> vint;\ntypedef pair<int, int> pint;\n#define rep(i, n) REP(i, 0, n)\n#define ALL(v) v.begin(), v.end()\n#define MSG(a) cout << #a << \" \" << a << endl;\n#define REP(i, x, n) for(int i = x; i < n; i++)\ntemplate<class T> T RoundOff(T a){ return int(a+.5-(a<0)); }\ntemplate<class T, class C> void chmax(T& a, C b){ if(a < b) a = b; }\ntemplate<class T, class C> void chmin(T& a, C b){ if(b < a) a = b; }\ntemplate<class T, class C> pair<T, C> mp(T a, C b){ return make_pair(a, b); }\n\nvector<string> split(string str, string delim)\n{\n    vector<string> result;\n    int cutAt;\n    while( (cutAt = str.find_first_of(delim)) != str.npos )\n    {\n        if(cutAt > 0)\n        {\n            result.push_back(str.substr(0, cutAt));\n        }\n        str = str.substr(cutAt + 1);\n    }\n    if(str.length() > 0)\n    {\n        result.push_back(str);\n    }\n\treturn result;\n}\n\nint tonumber(string s)\n{\n\tint res = 0;\n\t\n\trep(i, s.size())\n\t{\n\t\tres *= 10;\n\t\tres += s[i] - '0';\n\t}\n\t\n\treturn res;\n}\n\nbool check(int& H, vint& R)\n{\n\tint n = R.size();\n\tdouble side = R[0] + R[n - 1];\n\t\n\trep(i, n - 1)\n\t{\n\t\tint dr = R[i] + R[i + 1];\n\t\tint dy = abs(R[i] - R[i + 1]);\n\t\tdouble dx = sqrt(dr * dr - dy * dy);\n\t\t\n\t\tside += dx;\n\t}\n\t\n\treturn side <= H;\n}\n\nint main()\n{\n\tstring line;\n\twhile(getline(cin, line))\n\t{\n\t\tvector<string> ss = split(line,  \" \");\t\t\n\t\t\n\t\tint n = ss.size() - 1;\n\t\tint H = tonumber(ss[0]);\n\t\t\n\t\tvint R(n);\n\t\t\n\t\trep(i, n)\n\t\t\tR[i] = tonumber(ss[i + 1]);\n\t\t\n\t\t\n\t\tvint RR(n);\n\t\tsort(ALL(R));\n\t\tif(n % 2) RR[n - 1] = R[n / 2];\n\t\trep(i, n / 2)\n\t\t{\n\t\t\tRR[i * 2] = R[i];\n\t\t\tRR[i * 2 + 1] = R[n - i - 1];\n\t\t}\n\t\t\n\t\tcout << (check(H, RR) ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<cmath>\nusing namespace std;\n#define rep(i, n) for ( int i = 0; i < (int)n; i++)\n#define MAX 12\n#define INFTY (1<<21)\nint W, L[MAX], n;\n\ndouble getL(int r1, int r2){\n    double d = r1 - r2;\n    return sqrt((r1+r2)*(r1+r2)-d*d);\n}\n\nvoid compute(){\n    double T[1<<MAX][MAX];\n    rep(i, 1<<n) rep(j, n) T[i][j] = INFTY;\n    rep(i, n) T[1<<i][i] = L[i]*2;\n    rep(i, 1<<n) rep(j, n) rep(l, n){\n\tif ( (1<<l) & i ) continue;\n\tT[(1<<l)|i][l] = min(T[(1<<l)|i][l], T[i][j] - L[j] + L[l] + getL(L[j], L[l]));\n    }\n    double minv = INFTY;\n    rep(i, n) minv = min(minv, T[(1<<n)-1][i]);\n    if ( minv > W ) cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n}\n\nmain(){\n    string line;\n    int l;\n    while( getline(cin, line) && !cin.eof() ){\n\tstringstream sin(line);\n\tn = 0;\n\tsin >> W; \n\twhile( sin >> l ) L[n++] = l;\n\tcompute();\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <string>\n#include <sstream>\n#include <cmath>\n\nusing namespace std;\nstring str;\nconst int INF = 1 << 30;\n\ndouble min(double a, double b) {\n    return a > b ? b : a;\n}\nvoid swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\ndouble dist(int a, int b) {\n    return b + sqrt((a + b) * (a + b) - (a - b) * (a - b)) - a;\n}\n\nint main() {\n\n    while(getline(cin, str)) {\n        //begin input\n        stringstream ss(str);\n        int X;\n        ss >> X;\n        int radius[13];\n\n        int i = 0;\n        while(ss >> radius[i]) {\n            i++;\n        }\n        int N = i;\n        //end input\n        \n        vector<vector<double> > dp(1 << N, vector<double>(N, INF));\n        for(int j = 0; j < N; j++) {\n            dp[1 << j][j] = 2 * radius[j];\n        }\n\n        for(int i = 1; i < (1 << N); i++) {\n            for(int j = 0; j < N; j++) {\n                if((i >> j) & 1){\n                    for(int k = 0; k < N; k++) {\n                        if (!((i >> k) & 1)) {\n                            //cout << i << \" to \" << (i | (1 << k)) << \" : \" << j << \", \" << k << \", \" << radius[j] << \", \" << radius[k] << endl;\n                            dp[i | (1 << k)][k] = min(dp[i | (1 << k)][k], dp[i][j] + dist(radius[j], radius[k]));\n                        }\n                    }\n                }\n            }\n        }\n\n        double mini = INF;\n        for(int j = 0; j < N; j++) {\n            mini = min(mini, dp[(1 << N) - 1][j]);\n        }\n        if (mini <= X) {\n            //cout << mini << endl;\n            cout << \"OK\" << endl;\n        } else {\n            //cout << mini << endl;\n            cout << \"NA\" << endl;\n        }\n\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <map>\n#include <set>\n#include <bitset>\n#include <numeric>\n#include <utility>\n#include <iomanip>\n#include <algorithm>\n#include <functional>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vint;\ntypedef vector<long long> vll;\ntypedef pair<int,int> pint;\ntypedef pair<long long, long long> pll;\n\n#define MP make_pair\n#define PB push_back\n#define ALL(s) (s).begin(),(s).end()\n#define EACH(i, s) for (__typeof__((s).begin()) i = (s).begin(); i != (s).end(); ++i)\n#define COUT(x) cout << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << endl\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, pair<T1,T2> P) \n{ return s << '<' << P.first << \", \" << P.second << '>'; }\ntemplate<class T> ostream& operator << (ostream &s, vector<T> P) \n{ for (int i = 0; i < P.size(); ++i) { if (i > 0) { s << \" \"; } s << P[i]; } return s; }\ntemplate<class T> ostream& operator << (ostream &s, vector<vector<T> > P) \n{ for (int i = 0; i < P.size(); ++i) { s << endl << P[i]; } return s << endl; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, map<T1,T2> P) \n{ EACH(it, P) { s << \"<\" << it->first << \"->\" << it->second << \"> \"; } return s; }\n\n\n\nconst double INF = 1LL<<60;\ndouble dp[100000][15];\n\nstring str;\n\nint main() {\n    //freopen( \"/Users/macuser/Dropbox/Contest/input.in\", \"r\", stdin );\n    while (getline(cin, str)) {\n        istringstream sin(str);\n        int L; sin >> L;\n        double d;\n        vector<double> vec;\n        while (sin >> d) vec.PB(d);\n\n        int n = vec.size();\n        for (int i = 0; i < (1<<n); ++i) for (int j = 0; j < n; ++j) dp[i][j] = INF;\n        for (int i = 0; i < n; ++i) dp[(1<<i)][i] = vec[i];\n        for (int bit = 0; bit < (1<<n); ++bit) {\n            for (int i = 0; i < n; ++i) {\n                for (int j = 0; j < n; ++j) {\n                    int nbit = bit | (1<<j);\n                    \n                    chmin(dp[nbit][j], dp[bit][i] + 2.0*sqrt( vec[i] * vec[j] ) );\n                }\n            }\n        }\n        double res = INF;\n        for (int i = 0; i < n; ++i) chmin(res, dp[(1<<n)-1][i] + vec[i]);\n        \n        if (res <= L) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <sstream>\n#include <cassert>\n#include <list>\n#include <ctime>\n#include <numeric>\n#include <fstream>\n#include <valarray>\nusing namespace std;\nstatic const double EPS = 1e-6;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> PI;\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define mp(a,b) make_pair(a,b)\n#define pb(a) push_back(a)\n#define SZ(a) (int(a.size()))\n#define F first\n#define S second\nconst long double pi=acos(-1.0);\nint dx[]={0,1,0,-1,1,1,-1,-1,0},dy[]={1,0,-1,0,1,-1,1,-1,0};\n\nstring str;\nvector<int> in;\ndouble dp[1<<14][14];\nbool vis[1<<14][14];\n\ndouble rec(int st,int la){\n  if(st==(1<<la))return in[la]*2;\n  if(vis[st][la])return dp[st][la];\n  vis[st][la]=true;\n  double& ret=dp[st][la]=1<<30;\n\n  rep(i,SZ(in)){\n    if((st&(1<<i))==0 || i==la)continue;\n    double mi=rec(st^(1<<la),i);\n    int l=in[la]+in[i],r=in[i]-in[la];\n    double dist=sqrt(l*l-r*r);\n    ret=min(ret,mi+dist-in[i]+in[la]);\n  }\n  return ret;\n}\n\nvoid solve(){\n  stringstream ss(str);\n  in.clear();\n  int len;\n  ss>>len;\n  int t;\n  while(ss>>t)in.pb(t);\n  memset(vis,0,sizeof(vis));\n  rep(i,SZ(in))\n    if(len+EPS>rec((1<<SZ(in))-1,i)){\n      //cout<<rec((1<<SZ(in))-1,i)<<endl;\n      cout<<\"OK\"<<endl;\n      return;\n    }\n  \n  cout<<\"NA\"<<endl;\n}\n\n\nmain(){\n  while(getline(cin,str))\n    solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <deque>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<30;\nconst int EPS = 1e-8;\n\ntypedef pair<int, int> pii;\n\nmap<pii, double> mp;\n\ndouble calc(int r1, int r2) {\n  if (mp[pii(r1,r2)]) return mp[pii(r1,r2)];\n  return mp[pii(r1,r2)] = sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main() {\n  string s;\n  while(getline(cin, s)) {\n    stringstream ss(s);\n    double x;\n    ss >> x;\n    int r;\n    vector<int> v;\n    while(ss >> r) {\n      v.push_back(r);\n    }\n    sort(ALL(v));\n    int n = v.size();\n    if (n == 0) {\n      cout << \"OK\" << endl;\n      continue;\n    }\n    deque<int> dq;\n    REP(i,n/2) {\n      if (i%2 == 0) {\n        dq.push_front(v[i]);\n        dq.push_back(v[n-i-1]);\n      } else {\n        dq.push_front(v[n-i-1]);\n        dq.push_back(v[i]);\n      }\n    }\n    if (n%2) {\n      if (n==1)\n        dq.push_back(v[0]);\n      else if (dq[n-2] + calc(dq[0],v[n/2]) < dq[0] + calc(dq[n-2], v[n/2]))\n        dq.push_front(v[n/2]);\n      else\n        dq.push_back(v[n/2]);\n    }\n    FOR(it, dq) {\n      cout << *it << \" \";\n    }\n    cout << endl;\n\n    double xx = dq[0] + dq[n-1];\n    REP(i, n - 1) {\n      xx += calc(dq[i], dq[i+1]);\n    }\n    if (xx <= x)\n      cout << \"OK\";\n    else\n      cout << \"NA\";\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n\ndouble pythagoras( int a, int b )\n{\n\treturn 2 * sqrt( (double)( a * b ) );\n}\n\nint main()\n{\n\tint length;\n\n\twhile( cin >> length ){\n\t\tstring s;\n\t\tgetline( cin, s );\n\n\t\tvector< int > curcles;\n\t\tstringstream ss( s );\n\t\twhile( !ss.eof() ){\n\t\t\tint r;\n\t\t\tss >> r;\n\t\t\tcurcles.push_back( r );\n\t\t}\n\t\tsort( curcles.begin(), curcles.end() );\n\n\t\tdouble width = 0.f;\n\t\tint f = 0, b = curcles.size() - 1;\n\t\tint minR = 0, maxR = 0;\n\t\tint edge1 = curcles[ f++ ], edge2 = edge1;\n\t\tfor( int i = 0; i < (int)curcles.size() - 1; ++i ){\n\t\t\tminR = curcles[ f ];\n\t\t\tmaxR = curcles[ b ];\n\t\t\tif( maxR - edge1 > edge2 - minR ){\n\t\t\t\twidth += pythagoras( edge1, maxR );\n\t\t\t\tedge1 = maxR;\n\t\t\t\t--b;\n\t\t\t}else{\n\t\t\t\twidth += pythagoras( edge2, minR );\n\t\t\t\tedge2 = minR;\n\t\t\t\t++f;\n\t\t\t}\n\t\t\tif( edge1 > edge2 ){\n\t\t\t\tswap( edge1, edge2 );\n\t\t\t}\n\t\t}\n\t\twidth += edge1 + edge2;\n\n\t\tcout << ( width <= length ? \"OK\" : \"NA\" ) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    sort(r.begin(),r.end());\n\n    if(r.size()<=5){\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    if(r.size()>2)swap(r[1],r[r.size()-1]);\n\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.000001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <bitset>\n#include <vector>\n#include <string>\n#include <map>\n#include <algorithm>\n#include <sstream>\n\n#define REP(i,n) for(int i=0;i<(int)(n);i++)\n\nusing namespace std;\n\nconst double INF = 1e+10;\n\nint main() {\n  string str;\n  while (getline(cin, str)) {\n    stringstream ss;\n    ss << str;\n    int l;\n    ss >> l;\n    vector<int> r;\n    while(ss){\n      int ri;\n      ss >> ri;\n      r.push_back(ri);\n    }\n    r.pop_back();\n    int n=r.size();\n    vector<vector<double>> d(n+1,vector<double>(n+1,INF));\n    REP(i,n)REP(j,n){\n      double h = abs(r[i] - r[j]);\n      double c = r[i] + r[j];\n      double w = sqrt(c*c - h*h);\n      d[i][j] = w;\n    }\n    REP(i,n){\n      d[i][n] = d[n][i] = r[i];\n    }\n    vector<vector<double>> dp(1<<(n+1), vector<double>(n+1,INF));\n    dp[1<<n][n] = 0.0;\n    REP(i,1<<(n+1)){\n      bitset<13> bs(i);\n      REP(j,n+1){\n        if(!bs[j]){\n          auto cp = bs;\n          cp[j] = true;\n          REP(k,n+1)\n            dp[cp.to_ulong()][j] = min(dp[cp.to_ulong()][j], dp[i][k] + d[k][j]);\n        }\n      }\n    }\n    double mind = INF;\n    REP(i,n){\n      mind = min(mind, dp[(1<<(n+1))-1][i] + r[i]);\n    }\n    if (mind <= l)\n      cout << \"OK\" << endl;\n    else\n      cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define MAX_N 12\ndouble dp[MAX_N][1 << MAX_N], p[MAX_N][MAX_N], x[MAX_N]; int N, M, bit[MAX_N]; string S;\nint main() {\n\twhile (S = \"\", getline(cin, S)) {\n\t\tS += ' '; string T; int u = 0;\n\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\tif (S[i] == ' ') { if (u == 0) { M = stoi(T); } else { x[u - 1] = stoi(T); }u++; T = \"\"; }\n\t\t\telse { T += S[i]; }\n\t\t}\n\t\tN = u - 1;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\tif (i == j) { continue; }\n\t\t\t\tp[i][j] = sqrt((x[i] + x[j])*(x[i] + x[j]) - (x[i] - x[j]) * (x[i] - x[j])) - x[i] + x[j];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < MAX_N; i++) { for (int j = 0; j < (1 << MAX_N); j++) { dp[i][j] = 1e9; } }\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tdp[i][1 << i] = x[i] * 2;\n\t\t}\n\t\tfor (int i = 0; i < (1 << N); i++) {\n\t\t\tfor (int j = 0; j < N; j++) { bit[j] = (i / (1 << j)) % 2; }\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\tif (dp[j][i] >= 1e8) { continue; }\n\t\t\t\tfor (int k = 0; k < N; k++) {\n\t\t\t\t\tif (bit[k] == 0) {\n\t\t\t\t\t\tdp[k][i + (1 << k)] = min(dp[k][i + (1 << k)], dp[j][i] + p[j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble maxn = 1e9;\n\t\tfor (int i = 0; i < N; i++) { maxn = min(maxn, dp[i][(1 << N) - 1]); }\n\t\tif (maxn <= M) { cout << \"OK\" << endl; }\n\t\telse { cout << \"NA\" << endl; }\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    sort(temps.begin(), temps.end());\n\n    {\n      for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n        if (lb == ub) {\n          // if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n          //   cakes.push_back(temps[lb]);\n          // else\n          //   inserter(cakes, cakes.begin()) = temps[lb];\n          if (abs(cakes[0] - temps[lb]) < abs(cakes[cakes.size()-1] - temps[lb]))\n            cakes.push_back(temps[lb]);\n          else\n            cakes.insert(cakes.begin(), temps[lb]);\n        } else {\n          cakes.push_back(temps[lb]);\n          cakes.push_back(temps[ub]);\n        }\n      }\n    }\n\n    // puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint main(){\n  string s;\n  while(getline(cin,s)){\n    double w;\n    vector<double> v;\n    stringstream ss(s);\n    ss>>w;\n    double t;\n    while(ss>>t) v.push_back(t);\n    int n=v.size();\n    double dp[1<<n][n],inf=1<<25;\n    for(int i=0;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tdp[i][j]=inf;\n    for(int i=0;i<n;i++) dp[1<<i][i]=v[i];\n    for(int i=1;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tfor(int k=0;k<n;k++)\n\t  if(((i>>j)&1)&&!((i>>k)&1)) \n\t    dp[i+(1<<k)][k]=min(dp[i+(1<<k)][k],\n\t\t\t\tdp[i][j]+sqrt((v[j]+v[k])*(v[j]+v[k])-(v[j]-v[k])*(v[j]-v[k])));\n    bool f=v.size()==0;\n    for(int i=0;i<n;i++) f|=dp[(1<<n)-1][i]+v[i]<=w+1e-7;\n    cout<<(f?\"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\n\n#define MAX 12\n\nusing namespace std;\n\nlong double CalculateRoleCakesLength(const vector<int> &r){\n\tlong double ret;\n\tret = r[0] + r[r.size() - 1];\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2 * sqrt((long double)(r[i]*r[i+1]));\n\t}\n\treturn ret;\n}\nlong double MinmumLengthArrangeRoleCakes(vector<int> &vInBoxCakes, vector<int> &vCakes){\n\tif( vCakes.size() == 0 ) return 0;\n\telse{\n\t\twhile( vCakes.size() > 0 ){\n\t\t\tlong double minlen = 262144;\n\t\t\tint minins = 0;\n\n\t\t\tfor(unsigned j = 0; j <= vInBoxCakes.size(); ++j){\n\t\t\t\tlong double l;\n\n\t\t\t\tvInBoxCakes.insert( vInBoxCakes.begin() + j, vCakes[0]);\n\t\t\t\tl = CalculateRoleCakesLength( vInBoxCakes );\n\t\t\t\tif( l < minlen ){\n\t\t\t\t\tminlen = l; minins = j;\n\t\t\t\t}\n\t\t\t\tvInBoxCakes.erase( vInBoxCakes.begin() + j );\n\t\t\t}\n\t\t\tvInBoxCakes.insert( vInBoxCakes.begin() + minins, vCakes[0] );\n\t\t\tvCakes.erase( vCakes.begin() );\n\t\t}\n\t\treturn CalculateRoleCakesLength( vInBoxCakes );\n\t}\n}\nint main(void){\n\twhile(true){\n\t\tlong double boxLength;\n\t\tlong double length = 0;\n\t\tvector<int> vLeftCakes;\n\t\tvector<int> vInBoxCakes;\n\t\t\n\t\tcin >> boxLength;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t\tcin >> tmp;\n\t\t\tvLeftCakes.push_back(tmp);\n\t\t}\n\n\t\tlength = MinmumLengthArrangeRoleCakes( vInBoxCakes, vLeftCakes );\n\t\tif( length <= boxLength ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "# include <iostream>\n# include <sstream>\n# include <string>\n# include <cmath>\n# include <algorithm>\nconst int MAX_N = 12;\nconst double INF = (1 << 16);\n\nint n, l;\nint r[MAX_N];\ndouble memo[1 << MAX_N][MAX_N];\n\ndouble solve(int s, int v) {\n\tif (s == (1 << n) - 1)\n\t\treturn r[v];\n\tif (memo[s][v] >= 0)\n\t\treturn memo[s][v];\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif ((s >> i & 1) == 0)\n\t\t\tres = std::min(res, solve(s | (1 << i), i) + sqrt(pow(r[i] + r[v], 2) - pow(r[i] - r[v], 2)));\n\t}\n\treturn memo[s][v] = res;\n}\n\nint main() {\n\twhile (1) {\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tn = 0;\n\t\tstd::string str;\n\t\tstd::getline(std::cin, str);\n\t\tstd::stringstream s(str);\n\t\ts >> l;\n\t\ts.ignore();\n\t\twhile (!s.eof()) {\n\t\t\tint a;\n\t\t\ts >> a;\n\t\t\tr[n] = a;\n\t\t\t++n;\n\t\t\ts.ignore();\n\t\t}\n\t\tfor (int i = 0; i < (1 << n); ++i) {\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tmemo[i][j] = -1;\n\t\t}\n\t\tdouble ans = INF;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tans = std::min(ans, solve((1 << i), i) + r[i]);\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t\tif (ans <= (double)l)\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\telse\n\t\t\tstd::cout << \"NA\" << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdlib>\n#include <string>\n#include <string.h>\n#include <cmath>\nusing namespace std;\nint n,len;\nint r[12];\nbool input(){\n\tstring str=\"\";\n\tif(!getline(cin,str)) return false;\n\tn=-1;\n\tfor(int i=0;i<str.size();i++){\n\t\tchar ch; ch=str[i];\n\t\tstring tmp=\"\";\n\t\twhile(ch!=' '){\n\t\t\ttmp+=ch,i++; if(i>=str.size()) break;\n\t\t\tch=str[i];\n\t\t}\n\t\tif(n==-1) len=atoi(tmp.c_str()),n++;\n\t\telse r[n++]=atoi(tmp.c_str());\n\t}\n\treturn true;\n}\ndouble dp[1<<12][12];\ndouble EPS=1e-10;\ndouble ADD(double a,double b){\n\tif(abs(a+b)<=EPS*(abs(a)+abs(b))) return 0;\n\treturn a+b;\n}\ndouble LEN(double a,double b){ return sqrt(4*a*b);}\nint main() {\n\twhile(input()){\n\t\tfor(int i=0;i< 1<<n ;i++) for(int j=0;j<n;j++) dp[i][j]=100000;\n\t\tfor(int i=0;i<n;i++) dp[((1<<n)-1)-(1<<i)][i]=r[i];\n\t\t//1が立っているところはまだ見てない\n\t\tfor(int S=(1<<n)-2;S>=0;S--){\n\t\t\t//vが現在地\n\t\t\tfor(int v=0;v<n;v++){\n\t\t\t\tfor(int u=0;u<n;u++){\n\t\t\t\t\tif( S>>u & 1){\n\t\t\t\t\t\tdp[S-(1<<u)][u]=min(dp[S-(1<<u)][u],dp[S][v]+LEN(r[v],r[u]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble MIN=100000;\n\t\tfor(int i=0;i<n;i++) if(MIN>dp[0][i]+r[i]) MIN=dp[0][i]+r[i];\n\t\tif(ADD(MIN,-len)<=0) cout << \"OK\" << '\\n' ;\n\t\telse cout << \"NA\" << '\\n' ;\n\t\tmemset(r,0,sizeof(r));\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<cstdlib>\n#include<complex>\n#include<vector>\n#include<iomanip>\n#include<algorithm>\n#include<sstream>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29) \n#define EPS (1e-10)\n#define COUNTER_CLOCKWISE 1\n#define CLOCKWISE -1 \n#define ONLINE_BACK 2\n#define ONLINE_FRONT -2\n#define ON_SEGMENT 0\n#define equals(a,b) (fabs((a)-(b)) < EPS)\n\nusing namespace std;\n\nclass Point\n{\n  public:\n  double x,y;\n\n  Point(double x = -1,double y = -1): x(x),y(y){}\n\n  Point operator + (Point p ){return Point(x+p.x,y+p.y);}\n  Point operator - (Point p){return Point(x-p.x,y-p.y);}\n  Point operator * (double a){return Point(a*x,a*y);}\n  Point operator / (double a){return Point(x/a,y/a);}//※イケメンに限る\n\n  bool operator < (const Point& p) const\n  {\n    return x != p.x?x<p.x:y<p.y;\n  }\n\n  bool operator == (const Point& p)const\n  {\n    return fabs(x-p.x) < EPS && fabs(y-p.y) < EPS;\n  }\n\n//必要に応じて\ndouble norm()\n{\nreturn x*x+y*y;\n}\n\n};\n\nstruct Segment\n{\n  Point p1,p2;\n  Segment(Point p1 = Point(-1,-1),Point p2 = Point(-1,-1)):p1(p1),p2(p2){}\n};\ntypedef Point Vector;\ntypedef Segment Line;\ntypedef vector<Point> Polygon;\n\n\ndouble dot(Point a,Point b)\n{\n  return a.x*b.x + a.y*b.y;\n}\ndouble cross(Point a,Point b)\n{\n  return a.x*b.y - a.y*b.x;\n}\n\ndouble norm(Point a)\n{\n  return a.x*a.x+a.y*a.y;\n}\n\nbool pequals(Point a,Point b)\n{\n  return equals(a.x,b.x) && equals(a.y,b.y);\n}\n\n//rad は角度をラジアンで持たせること\nPoint rotate(Point a,double rad)\n{\n  return Point(cos(rad)*a.x - sin(rad)*a.y,sin(rad)*a.x + cos(rad)*a.y);\n}\n\n// 度をラジアンに変換\ndouble toRad(double agl)\n{\n  return agl*M_PI/180.0;\n}\n\ndouble angle(Point a,Point b,Point c)\n{\n  double ux = b.x - a.x, uy = b.y - a.y;\n  double vx = c.x - a.x, vy = c.y - a.y;\n  return acos((ux*vx + uy*vy)/sqrt((ux*ux + uy*uy) * (vx*vx + vy*vy)));\n}  \n\ndouble args(Point p){\n  return atan2(p.y,p.x);\n}\n\ndouble L;\n\nvoid split(string s,vector<double> &vec)\n{\n  stringstream ss;\n  ss << s;\n  for(int i=0;!(ss >> s).fail();i++)\n    {\n      if(i == 0)L = (atoi)(s.c_str());\n      else\n\t{\n\t  vec.push_back((atoi)(s.c_str()));\n\t}\n    }\n\n}\n\nint n;\ndouble dp[(1<<12)][12];\n\n//半径vec[i](0 <= i < n )の円をその順番でそこと接するようにおいていく\ndouble compute(vector<double> &vec)\n{\n  vector<Point> ps;\n  double len = vec[0];\n  ps.push_back(Point(0,vec[0]));\n  rep(i,n-1)\n    {\n      double a = vec[i]+vec[i+1];\n      double b = fabs(vec[i]-vec[i+1]);\n      double c = sqrt(pow(a,2)-pow(b,2));\n      len += c;\n      ps.push_back(Point(ps[ps.size()-1].x+c,vec[i+1]));\n    }\n  return len + vec[n-1];\n}\n\ndouble getDistance(double r1,double r2)\n{\n  return sqrt(pow(r1+r2,2)-pow(r1-r2,2));\n}\n\nint main()\n{\n\n  string line;\n  while(getline(cin,line))\n    {\n      vector<double> vec;\n      split(line,vec);\n      n = vec.size();\n      rep(i,(1<<n))rep(j,n)dp[i][j] = inf;\n\n      //円が１つのときと2つのとき\n      rep(i,(1<<n))\n\t{\n\t  rep(j,n)\n\t    {\n\t      rep(k,n)\n\t\t{\n\t\t  if(i == 0)\n\t\t    {\n\t\t      dp[i|(1<<j)][j] = min(dp[i|(1<<j)][j],vec[j]); \n\t\t      continue;\n\t\t    }\n\t\t  \n\t\t  if(dp[i][k] == inf)continue;\n\t\t  int next = i|(1<<j);\n\t\t  if(__builtin_popcount(next) == n)\n\t\t    {\n\t\t      dp[next][j] = min(dp[next][j],\n\t\t\t\t\tdp[i][k]+getDistance(vec[k],vec[j])+vec[j]);\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      dp[next][j] = min(dp[next][j],\n\t\t\t\t\tdp[i][k]+getDistance(vec[k],vec[j]));\n\t\t    }\n\t\t}\n\t    }\n\t}\n\n      double ans = inf;\n      rep(i,n)ans = min(ans,dp[(1<<n)-1][i]);\n      if(equals(ans,L) || (!equals(ans,L) && ans < L))cout << \"OK\" << endl;\n      else        cout << \"NA\" << endl;\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    for( int i = 0; i < N / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      else {\n        cakes.push_back(0);\n        for (int i = cakes.size()-2; i >= 0; --i) cakes[i+1] = cakes[i];\n        cakes[0] = e;\n      }\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tvector<vector<double> > d(15, vector<double>(1 << n, 1e25));\n\t\t//cout << (float)1e25 << endl;\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\nconst double INF = 1e9;\n\nint N, L;\nvector<int> v;\n\nvoid input(string &str, char delim){\n  stringstream ss(str);\n  string tmp;\n  bool f = true;\n  while(getline(ss, tmp, delim)){\n    if(f) { L = atoi(tmp.c_str()); f = false; }\n    else v.push_back(atoi(tmp.c_str()));\n  }\n  N = v.size();\n}\n\nint main() {\n  string s;\n  while(getline(cin, s)){\n    v = vector<int>();\n    input(s, ' ');\n    vector< vector<double> > dp((1 << N), vector<double>(N, INF));\n    REP(i, N) dp[(1 << i)][i] = v[i];\n    REP(bit, (1 << N)){\n      REP(bef, N){\n        if(dp[bit][bef] == INF) continue;\n        //cout <<bitset<3>(bit).to_string() <<\", \" <<bef <<\" = \" <<dp[bit][bef] <<endl;\n        REP(n, N){\n          if(1 & (bit >> n)) continue;\n          int nb = bit | (1 << n);\n          double l = sqrt((v[bef] + v[n]) * (v[bef] + v[n]) - (v[bef] - v[n]) * (v[bef] - v[n]));\n          if(nb == (1 << N) - 1) l += v[n];\n          //cout <<\"    \" <<bitset<3>(nb).to_string() <<\", \" <<n <<\" = min(\" <<dp[nb][n] <<\", \" <<dp[bit][bef] <<\" + \" <<l <<\")\" <<endl;\n          dp[nb][n] = min(dp[nb][n], dp[bit][bef] + l);\n        }\n      }\n    }\n    double len = INF;\n    REP(i, N) len = min(len, dp[(1 << N) - 1][i]);\n    cout <<(len <= L ? \"OK\" : \"NA\") <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\ndouble dp[1<<12][12];\nint n;\n\n\nint main(){\n\n    \n    \n    \n    \n\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[12]={0};\n        n=0;\n        cake[n]=0;\n        n++;\n        while(ss>>cake[n]){\n            n++;\n        }\n        \n        double v[12][12]={0};\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(i==j){\n                    v[i][j]=0;\n                    v[j][i]=v[i][j];\n                }else{\n                    double x = (cake[i]+cake[j])*(cake[i]+cake[j])-(cake[i]-cake[j])*(cake[i]-cake[j]);\n                    v[i][j]=sqrt((fabs(x)));\n                    //cout<<i<<\" \"<<j<<\" \"<<v[i][j]<<endl;\n                    v[j][i]=v[i][j];\n                }\n                \n            }\n        }\n        \n        \n       \n        //memset(dp, 999999.9999, sizeof(dp));\n        for(int i=0; i<(1<<12); i++){\n            for(int j=0; j<12; j++){\n                dp[i][j]=100000000;\n            }\n        }\n        \n        \n        dp[(1<<n) - 1][0] = 0;\n\n        \n        for(int i=(1<<n)-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                \n                for(int k=0; k<n; k++){\n                    if(!((i >> k) & 1)){\n                        if(j==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[k]);\n                        }else if(k==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[j]);\n                        }else{\n                            /*\n                            int m=i;\n                            for(int l=0; l<n; l++){\n                                cout<<m%2;\n                                m/=2;\n                            }\n                            cout<<endl;\n                            cout<<\"j  \"<<j<<endl;\n                            cout<<\"k  \"<<k<<endl;\n                             */\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + v[j][k]);\n                            /*\n                            cout<<\"dp \"<<dp[i][j]<<endl;\n                            cout<<\"v  \"<<v[j][k]<<endl;\n                            cout<<\"-----------\"<<endl;\n                             */\n                        }\n                    }\n                }\n            }\n        }\n        \n        //cout<<dp[0][0]<<endl;\n        if(dp[0][0]<=box)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n\n        \n        \n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 10000000\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    vector<double> vec;\n    stringstream ss(str);\n    int wid,n=0;\n    ss >> wid;\n    while(!ss.eof()){\n      double s;\n      ss >> s;\n      vec.push_back(s);\n      n++;\n    }\n    double dp[1<<n][n];\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tdp[i][j] = INF;\n      }\n    }\n    for(int i=0;i<n;i++){\n      dp[(1<<n)-1-(1<<i)][i] = vec[i];\n    }\n    for(int i=(1<<n)-2;i>-1;i--){\n      for(int j=0;j<n;j++){\n\tif(!(i & (1<<j))){\n\t  for(int k=0;k<n;k++){\n\t    dp[i][j] = min(dp[i][j],dp[i | (1<<j)][k] + 2*sqrt(vec[j]*vec[k]));\n\t  }\n\t}\n      }\n    }\n    double ans = INF;\n    for(int i=0;i<n;i++){\n      ans = min(ans,dp[0][i]+vec[i]);\n    }\n    if(ans <= wid) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <stream>\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <cstdlib>\n#include <ctime>\n#include <stdio.h>\nusing namespace std;\n\nconst int LOOP = 100000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n        int a = rand() % N;\n        int b = rand() % N;\n        swap(r[a],r[b]);\n        if(Evaluate(r) <= mi) mi = Evaluate(r);\n        else\n        {\n            if(Changes(cnt)) mi = Evaluate(r);\n            else swap(r[a],r[b]);\n        }\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cmath>\n#include<cstring>\n#include<cstdlib>\n#include<iostream>\n#define rep(i,j) for(int i=0;i<(j);i++)\n\nusing namespace std;\n\nconst int N = 12;\nconst int INF = 1e7;\nint r[N];\n\ndouble dp[1<<N][N];\n\ndouble diff(int a,int b){\n    return sqrt((r[a]+r[b])*(r[a]+r[b]) - (r[a] - r[b])*(r[a] - r[b]));\n}\n\nint main(){\n    int w;\n    char s[1024];\n    while(gets(s)!=NULL){\n        w = atoi(s);\n        char *p = strchr(s,' ');\n        int n = 0;\n        while(NULL != p){\n            p++;\n            r[n++] = atoi(p);\n            p = strchr(p,' ');\n        }\n        rep(i,1<<n){\n            fill(dp[i],dp[i]+n,INF);\n        }\n        dp[(1<<n)-1][0] = 0;\n        for(int i=(1<<n)-1;i>=0;i--){\n            rep(j,n){\n                rep(k,n){\n                    if(!((i>>k)&1))dp[i][j] = min(dp[i][j],dp[i|(1<<k)][k] + diff(j,k));\n                }\n            }\n        }\n        puts(dp[0][0] <= w?\"OK\":\"NA\");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <stdio.h>\n#include <algorithm>\n#include <list>\nusing namespace std;\n\nint main() {\n int i,n,k,box;\n double s,a,b,da[15];\n list<double> lis;\n list<double>::iterator it;\n while(cin >> box) {\n n=0;\n while(cin >> da[n++]) if (cin.peek()=='\\n') break;\n sort(da,da+n);\n lis.push_front(da[0]);\n for (i=1;i<(n/2)*2;i++) {\n\t k=(i % 2)==0 ? i/2 : (n-1)-i/2;\n  if ((i % 2==1 && (lis.front()<lis.back())) || (i % 2==0 && (lis.front()>lis.back()))) lis.push_front(da[k]);\n  else lis.push_back(da[k]); }\n if (n>1 && n % 2==1)\n\t if (2*sqrt(da[n/2]*lis.front())-lis.front()<2*sqrt(da[n/2]*lis.back())-lis.back()) lis.push_front(da[n/2]); \n\t else lis.push_back(da[n/2]);   \n s=lis.front();\n for (it=lis.begin(),i=0;i<n-1;i++,it++) { a=*it++; b=*it--; s+=2*sqrt(a*b); }\n s+=lis.back();\n if (s<=box) cout << \"OK\" << endl; else cout << \"NA\" << endl; \n lis.clear();\n }\n return 0;\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <sstream>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\ndouble distance(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nint main()\n{\n\tint box_width;\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tdeque<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsort(cakes.begin(), cakes.end());\n\t\t// for (int i = 0; i < cakes.size(); ++i) {\n\t\t\t// cout << cakes[i] << endl;\n\t\t// }\n\n\t\tbool ok = false;\n\t\tdeque<int> save = cakes;\n\n\t\tdouble length = cakes.front() * 2;\n\t\tint prev = cakes.front();\n\t\tcakes.pop_front();\n\t\tbool front = false;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += distance(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tcakes = save;\n\t\tlength = cakes.back() * 2;\n\t\tprev = cakes.back();\n\t\tcakes.pop_back();\n\t\tfront = true;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += distance(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tif (ok) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n#define INF 100000\n\nint n, W;\nint r[12];\ndouble bitDP[12][(1<<13)]; // [??????????????£???] , [?????£?????±?????????bit??§??????]\n\nbool inputData() {\n\tstring str;\n\tgetline(cin, str);\n\tif(cin.eof()) {\n\t\treturn false;\n\t}\n\t\n\tstr += ' ';\n\t\n\tint i, tmp = 0;\n\tfor(i = 0; i < str.size(); i++) {\n\t\tif('0' <= str[i] && str[i] <= '9') {\n\t\t\ttmp  = tmp * 10 + str[i] - '0';\n\t\t} else {\n\t\t\tW = tmp;\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tn = tmp = 0;\n\twhile(i < str.size()) {\n\t\tif('0' <= str[i] && str[i] <= '9') {\n\t\t\ttmp  = tmp * 10 + str[i] - '0';\n\t\t} else {\n\t\t\tr[n++] = tmp;\n\t\t\ttmp = 0;\n\t\t}\n\t\t\n\t\ti++;\n\t}\n\t\n\treturn true;\n}\n\nint main()\n{\n\twhile(inputData()) {\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\t\tbitDP[i][bit] = INF;\n\t\t\t}\n\t\t\tbitDP[i][0] = 0;\n\t\t}\n\t\t\n\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\tfor(int i = 0; i < n ; i++) { // i ????????????????????¨??????????????±??????\n\t\t\t\tif((1 << i) & bit) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor(int j = 0; j < n; j++) { // ???????????????????????±??????\n\t\t\t\t\tif(i == j || bitDP[j][bit] == INF) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tint next = (1 << i) | bit;\n\t\t\t\t\tdouble distance_r = r[i] + r[j];\n\t\t\t\t\tdouble distance_y = (r[i] - r[j] >= 0)? r[i] - r[j]: r[j] - r[i];\n\t\t\t\t\tdouble cost = distance_r * cos(asin(distance_y / distance_r));\n\t\t\t\t\tif(bit == 0) {\n\t\t\t\t\t\tcost = r[i];\n\t\t\t\t\t}\n\t\t\t\t\tbitDP[i][next] = min(bitDP[i][next], bitDP[j][bit] + cost);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tdouble ans = INF;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tans = min(ans, bitDP[i][(1<<n)-1] + r[i]);\n\t\t}\n\t\tcout << ((ans <= W)? \"OK\": \"NA\") << endl;\n\t\t\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<sstream>\n#include<utility>\n#include<map>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>P;\nchar I[1000],*p;\nint R[15],N;\ndouble B,EPS=0.00001,dp[1<<13][13];\n\ndouble calc(int a,int b)\n{\n\tif(a==-1)return R[b];\n\tif(b==-1)return R[a];\n\tint x=R[a]+R[b],y=R[a]-R[b];\n\treturn sqrt((double)(x*x-y*y));\n}\n\ndouble dfs(int f,int s,int d)\n{\n\tif(s>=0&&dp[f][s]>0)return dp[f][s];\n\tif(d==N)\n\t{\n\t\treturn R[s];\n\t}\n\tdouble res=1000000;\n\tfor(int i=0;i<N;i++)\n\t{\n\t\tif(!(f>>i&1))\n\t\t{\n\t\t\tres=min(res,dfs(f|1<<i,i,d+1)+calc(s,i));\n\t\t}\n\t}\n\tif(s>=0)dp[f][s]=res;\n\treturn res;\n}\n\nint main()\n{\n\tfor(;gets(I);)\n\t{\n\t\tmemset(dp,0,sizeof(dp));\n\t\tp=strtok(I,\" \");\n\t\tB=(double)atoi(p);\n\t\tfor(N=0;(p=strtok(NULL,\" \"))!=NULL;)\n\t\t\tR[N++]=atoi(p);\n\t\tputs(B-dfs(0,-1,0)>=-EPS?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cmath>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint r[12],n;\ndouble tbl_sqrt[101];\n\n// memo[stat][last] :\n//  Ì¶[©çÉcakeðu¢Ä¢­B\n// u¢½cakeªstat(bitÅ\\»)AÅãÉu¢½cakeªlastÌÆ«ÉA\n// cèÌcakeðu­ÌÉKvÈÅ¬ªmemo[stat][last]B\ndouble memo[1<<12][12];\n\ndouble solve(int stat,int last)\n{\n//printf(\"stat : %d\\n\",stat);\n\tif(memo[stat][last]>1e-6)\treturn memo[stat][last];\n\n\tif(stat==0)\treturn memo[stat][last]=r[last];\n\n\tdouble wmin=10000;\n\tfor(int i=0;i<n;i++){\n\t\tif((stat&(1<<i))==0)\tcontinue;\n\t\tstat&=~(1<<i);\n\t\twmin=min(wmin,2*tbl_sqrt[r[last]*r[i]]+solve(stat,i));\n\t\tstat|=(1<<i);\n\t}\n//printf(\"stat : %d, wmin : %.3f\\n\",stat,wmin);\n\treturn memo[stat][last]=wmin;\n}\n\nint main()\n{\n\tfor(int i=1;i<=100;i++)\ttbl_sqrt[i]=sqrt(i);\n\n\tint box;\n\twhile(~scanf(\"%d \",&box)){\n\t\tfor(n=1;;n++){\n\t\t\tscanf(\"%d\",r+n-1);\n\t\t\tif(getchar()=='\\n')\tbreak;\n\t\t}\n\n\t\tfor(int i=0;i<n;i++)for(int j=0;j<(1<<n);j++)memo[j][i]=0;\n\n//printf(\"n=%d\\n\",n);\n\t\tdouble ans=10000;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tint stat=((1<<n)-1)&~(1<<i);\n//printf(\"start stat : %d\\n\",stat);\n\t\t\tans=min(ans,r[i]+solve(stat,i));\n//printf(\"stat : %d, ans : %.3f\\n\",stat,ans);\n\t\t}\n//printf(\"ans = %.5f\\n\",ans);\n\t\tputs(ans<=box?\"OK\":\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n#include <iomanip>\n#include <iterator>\n#include <cassert>\n\nusing namespace std;\ntypedef long long ll;\nconst int MODULO = 1000000007;\nconst int INF = 100000000; //1e8\n\ntypedef long long ll;\ntypedef pair<int,int> Pii;\ntypedef pair<ll,ll> Pll;\ntypedef complex<double> Cd;\n\n#define FOR(i,n) for(int i = 0; i < (n); i++)\n#define sz(c) ((int)(c).size())\n\ntemplate<class T>\nvoid splitstr(const string &s, vector<T> &out)\n{\n    istringstream in(s);\n    out.clear();\n    copy(istream_iterator<T>(in), istream_iterator<T>(), back_inserter(out));\n}\n\nvector<int> a;\ndouble memo[12][1 << 12];\n\ndouble solve(int start,int flag,int rest){\n\tif(rest == 0)\n\t\treturn memo[start][flag] = a[start];\n\tdouble ret = INF;\n\tFOR(i,sz(a)){\n\t\tif((1<<i)&flag) continue;\n\t\tdouble add = solve(i,flag|(1<<i),rest - 1) + sqrt((double)a[start] * a[i]) * 2;\n\t\tret = min(ret,add);\n\t}\n\treturn memo[start][flag] = ret;\n}\n\nint main(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tsplitstr(s,a);\n\t\tint n = a[0];\n\t\ta.erase(a.begin());\n\t\tint m = sz(a);\n\n\t\tdouble mn = INF;\n\t\tFOR(i,m){\n\t\t\tFOR(j,m) fill(memo[j],memo[j] + (1 << m),-1.0);\n\t\t\tmn = min(mn,solve(i,1<<i,m-1) + a[i]);\n\t\t}\n\n\t\tcout << (n >= mn ? \"OK\" : \"NA\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define INF 1001000100010001000\n#define INFd 1010001000\n#define MOD 1000000007\n#define EPS 1e-10\n#define int long long\n#define double long double\n#define rep(i, N) for (int i = 0; i < N; i++)\n#define Rep(i, N) for (int i = 1; i < N; i++)\n#define For(i, a, b) for (int i = (a); i < (b); i++)\n#define pb push_back\n#define eb emplece_back\n#define mp make_pair\n#define i_i pair<int, int>\n#define vi vector<int>\n#define vvi vector<vi >\n#define vb vector<bool>\n#define vvb vector<vb >\n#define vp vector< i_i >\n#define Edge pair< i_i, int>\n#define all(a) (a).begin(), (a).end()\n#define Int(x) int x; scanf(\"%lld\", &x);\n#define int2(x, y) int x, y; scanf(\"%lld %lld\", &x, &y);\n#define fir first\n#define sec second\n#define ffir first.first\n#define fsec first.second\n#define sfir second.first\n#define ssec second.second\n#define vd vector<double>\n#define vvd vector<vd>\n\nsigned main()\n{\n    double len;\n    char t;\n    while (scanf(\"%Lf\", &len) != EOF) {\n        vi cake;\n        while (scanf(\"%c\", &t), t != '\\n') {\n            Int(tmp);\n            cake.pb(tmp);\n        }\n        vvd dp(1 << cake.size(), vd(cake.size(), INFd));\n        dp[0][0] = 0.0;\n\n\n        rep(i, cake.size()) {\n            int tmp = 1 << i;\n            dp[tmp][i] = cake[i];\n        }\n\n        rep(i, 1 << cake.size()) {\n            rep(j, cake.size()) {\n                if (i & (1 << j)) {\n                    rep(k, cake.size()) {\n                        if (!(i & (1 << k))) {\n                            dp[i|(1 << k)][k] = min(dp[i|(1 << k)][k],\n                                    dp[i][j] + \n                                    sqrt( (double)((cake[j]+cake[k])*(cake[j]+cake[k]) - \n                                            (cake[k]-cake[j])*(cake[k]-cake[j])) ));\n                        }\n                    }\n                }\n            }\n        }\n        bool ans = false;\n        rep(i, cake.size()) {\n            if (len >= dp[(1 << cake.size())-1][i] + (double)cake[i]) {\n                ans = true;\n                break;\n            }\n        }\n        cout << ( (ans) ? \"OK\" : \"NA\" ) << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 1000;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define X first\n#define Y second\n\nvector<double> data;\npair<double,double> lc;\nvector<bool> done;\n\nint boxSize;\nbool flag;\n\ndouble solve(double x,double a,double b){\n\treturn (2.0*x+sqrt(4*x*x-4*(x*x-4*a*b)) ) / 2.0;\n}\n\nvoid bt(){\n\tif( count(done.begin(),done.end(),true) == done.size() ){\n\t\tif( lc.X + lc.Y<=boxSize){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tfor(int i=0;i<data.size();i++){\n\t\tif(done[i])continue;\n\t\t\n\t\tif(solve(lc.X,lc.Y,data[i]) > boxSize)continue;\n\t\tdone[i] = true;\n\t\tpair<double,double> tmp = lc;\n\t\tlc = make_pair(solve(lc.X,lc.Y,data[i]),data[i]);\n\t\tbt();\n\t\tlc = tmp;\n\t\tdone[i] = false;\n\t}\n}\n\n\nint main(){\n\tint t;\n\tstring s;\n\twhile(getline(cin,s) && s != \"\"){\n\t\tvector<int> input;\n\t\tflag = false;\n\t\tdata.clear();\n\t\t\n\t\tstringstream ss(s);\n\t\twhile(ss >> t)input.push_back(t);\n\t\t\n\t\tboxSize = input[0];\n\t\tfor(int i=1;i<input.size();i++){\n\t\t\tdata.push_back(input[i]);\n\t\t}\n\t\tdone.resize(data.size());\n\t\tfill(done.begin(),done.end(),false);\n\t\tfor(int i=0;i<data.size();i++){\n\t\t\tdone[i] = true;\n\t\t\tlc = make_pair(data[i],data[i]);\n\t\t\tbt();\n\t\t\tdone[i] = false;\n\t\t}\n\t\tcout << (flag?\"OK\":\"NG\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <cstdlib>\n#include <ctime>\n#include <stdio.h>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n        int a = rand() % N;\n        int b = rand() % N;\n        swap(r[a],r[b]);\n        if(Evaluate(r) <= mi) mi = Evaluate(r);\n        else\n        {\n            if(Changes(cnt)) mi = Evaluate(r);\n            else swap(r[a],r[b]);\n        }\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 10000000\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    vector<double> vec;\n    stringstream ss(str);\n    int wid,n=0;\n    ss >> wid;\n    while(!ss.eof()){\n      double s;\n      ss >> s;\n      vec.push_back(s);\n      n++;\n    }\n    double dp[1<<n][n];\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tdp[i][j] = INF;\n      }\n    }\n    for(int i=0;i<n;i++){\n      dp[(1<<n)-1-(1<<i)][i] = vec[i];\n    }\n    for(int i=(1<<n)-2;i>-1;i--){\n      for(int j=0;j<n;j++){\n\tif(!(i & (1<<j))){\n\t  for(int k=0;k<n;k++){\n\t    dp[i][j] = min(dp[i][j],dp[i | (1<<j)][k] + 2*sqrt(vec[j]*vec[k]));\n\t  }\n\t}\n      }\n    }\n    double ans = INF;\n    for(int i=0;i<n;i++){\n      ans = min(ans,dp[0][i]+vec[i]);\n    }\n    if(ans <= wid) cout << \"OK\" << endl;\n    else cout << \"NG\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<cassert>\n#include<algorithm>\n\n#define MAX 12\n\nusing namespace std;\n\ntypedef unsigned int set;\n\ntypedef struct tagcombstruct{\n\tset K,N,x,overx;\n} combStruct;\n\nint g_cnt;\n\n/* gencomb1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy */\nset nextset(set x){\n\tset smallest, ripple, new_smallest, ones;\n\n\tsmallest = x & (~x+1);\n\tripple = x + smallest;\n\tnew_smallest = ripple & (~ripple+1);\n\tones = ((new_smallest / smallest) >> 1) - 1;\n\n\treturn ripple | ones;\n}\nbool subcomb(set p[], combStruct &cmst){\n\tset tj, *tq;\n\tset ts;\n\n\tcmst.x = nextset(cmst.x);\n\n\tif(cmst.x & cmst.overx) return false;\n\tfor(tj = 1, tq = p, ts = cmst.x; tj <= cmst.N; tj++){ if(ts & 1) *tq++ = tj; ts >>= 1; }\n\treturn true;\n}\nvector<pair<int, int> > myunique(const vector<int> &v){\n\tvector<pair<int, int> > vret;\n\tunsigned int now;\n\n\tfor(unsigned int i = 0; i < v.size(); i++) vret.push_back( make_pair(v[i],0) );\n\tnow = 0;\n\twhile( now < vret.size() ){\n\t\tint cnt = 1;\n\t\tfor(unsigned int i = now+1; i < vret.size(); ++i){\n\t\t\tif( vret[i].first != vret[i - 1].first ) break;\n\t\t\telse cnt++;\n\t\t}\n\t\tfor(unsigned int i = now; i < now + cnt; ++i) vret[i].second = cnt;\n\t\tnow += cnt;\n\t}\n\twhile( true ){\n\t\tvector<pair<int, int > >::iterator itV = unique( vret.begin(), vret.end() );\n\t\tif( itV != vret.end() ) vret.erase( itV, vret.end() );\n\t\telse break;\n\t}\n\treturn vret;\n}\nbool Solve3(pair<int, bool> *box, set num, set combn, vector<pair<int,int> > &v, int pos, long double w){\n\tif( pos == v.size() ){\n\t\t/*g_cnt++;\n\t\tif( g_cnt % 5000000 == 0 ){\n\t\t\tcout << g_cnt << endl;\n\t\t}*/\n\t\t/*\n\t\tlong double ret;\n\t\tret = box[0].first + box[num - 1].first;\n\t\tfor(unsigned int i = 0; i < num - 1; ++i){\n\t\t\tret += 2 * sqrt((long double)(box[i].first * box[i+1].first));\n\t\t}\n\t\tif( ret <= w ){\n\t\t\t//cout << ret << endl;\n\t\t\treturn true;\n\t\t}*/\n\t}else{\n\t\tcombStruct cmst;\n\t\tset p[MAX];\n\t\tset j, *q;\n\t\tset s;\n\t\t//int ePlacesNum = 0;\n\t\t//int eplaces[MAX];\n\n\t\t/*for(unsigned int i = 0; i < num; i++) if( !box[i].second ){\n\t\t\teplaces[ePlacesNum] = i;\n\t\t\tePlacesNum++;\n\t\t}*/\n\t\tcmst.N = combn;\n\t\tcmst.K = v[pos].second;\n\t\tcmst.x = ( 1 << cmst.K ) - 1L;\n\t\tcmst.overx = ~( ( 1 << cmst.N ) - 1L );\n\n\t\tfor(j = 1, q = p, s = cmst.x; j <= cmst.N; j++){ if(s & 1) *q++ = j; s >>= 1; }\n\t\tdo{\n\t\t\t// TODO\n\t\t\t/*for(int i = 0; i < cmst.K; i++){\n\t\t\t\tcout << p[i] << ' ';\n\t\t\t}\n\t\t\tcout << endl;*/\n\t\t\t//cout << '(' << cmst.K << ',' << vEmptyPlaces.size() << \")\\n\";\n\t\t\t/*for(unsigned int i = 0; i < cmst.K; ++i){\n\t\t\t\tbox[ eplaces[p[i] - 1] ] = make_pair( v[pos].first, true );\n\t\t\t}*/\n\t\t\t\n\t\t\tif( Solve3( box, num, combn-cmst.K, v, pos+1, w ) ) return true;\n\n\t\t\t/*for(unsigned int i = 0; i < cmst.K; ++i){\n\t\t\t\tbox[ eplaces[p[i] - 1] ] = make_pair( 0, false );\n\t\t\t}*/\n\t\t}while( subcomb( p, cmst ) );\n\t}\n\treturn false;\n}\nint main(void){\n\twhile(true){\n\t\tint num = 0;\n\t\tlong double boxLength;\n\t\tpair<int,bool> box[MAX];\n\t\tvector<pair<int,int> > vRCakes;\n\t\tvector<int> vCakes;\n\t\t\n\t\tcin >> boxLength;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t\tcin >> tmp;\n\t\t\tvCakes.push_back( tmp );\n\t\t\tbox[num].first = 0;\n\t\t\tbox[num].second = false;\n\t\t\tnum++;\n\t\t}\n\n\t\tsort(vCakes.begin(), vCakes.end());\n\n\t\t// unique\n\t\tvRCakes = myunique(vCakes);\n\n\t\tg_cnt = 0;\n\t\tif( Solve3(box,num,num,vRCakes,0,boxLength) ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t\t//cout << g_cnt << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    puts(\"OK\"); continue;\n    \n    sort(temps.begin(), temps.end());\n\n    {\n      for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n        if (lb == ub) {\n          if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n            cakes.push_back(temps[lb]);\n          else\n            inserter(cakes, cakes.begin()) = temps[lb];\n        } else {\n          cakes.push_back(temps[lb]);\n          cakes.push_back(temps[ub]);\n        }\n      }\n    }\n    \n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    sort(r.begin(),r.end());\n\n    if(r.size()<=5){\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    if(r.size()>2)swap(r[1],r[r.size()-1]);\n\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%(r.size()-2)+1;\n            b=rand()%(r.size()-2)+1;\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    if(abs(evaluate(r)-mi)>EPS)puts(\"assert\");\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    // for (int i = 0; i < temps.size(); ++i) cakes.push_back(temps[i]);\n    // for (int i = 0; i < temps.size(); ++i) cakes.insert(cakes.begin(), temps[i]);\n    for( int i = 0; i < temps.size() / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      else cakes.insert(cakes.begin(), e);\n          \n    }\n    \n    // {\n    //   int lb = 0, ub = temps.size() - 1; \n    //   while (lb <= ub) {\n    //     if (lb != ub) {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     } else {\n    //       int df = abs(cakes.front() - temps[lb]), db = abs(cakes.back() - temps[lb]);\n    //       if (df > db) cakes.insert(cakes.begin(), temps[lb]);\n    //       else cakes.push_back(temps[lb]);\n    //     }\n    //     ++lb; --ub;\n    //   }\n    // }\n\n    // {\n    //   for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n    //     if (lb == ub) {\n    //       if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n    //         cakes.push_back(temps[lb]);\n    //       else\n    //         inserter(cakes, cakes.begin()) = temps[lb];\n    //     } else {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     }\n    //   }\n    // }\n\n    // puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nstring s;\nint n;\ndouble a[20],w;\ndouble dp[1<<12][12];\nvoid Input(){\n  int res=0;n=-1;\n  for(int i=0;i<s.size();i++){\n    if(isdigit(s[i]))res=res*10+(s[i]-'0');\n    if(s[i]==' '||i==s.size()-1){\n      if(n==-1)w=res,n++;\n      else a[n++]=res;\n      res=0;\n    }\n  }\n}\nint main(){\n  while(getline(cin,s)){\n    Input();\n    r(i,1<<12)r(j,12)dp[i][j]=1e9;\n    for(int i=0;i<n;i++)dp[1<<i][i]=a[i];\n    for(int i=1;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tif(dp[i][j]!=1e9&&((i>>j)&1)){\n\t  for(int k=0;k<n;k++){\n\t    if(j!=k&&!((i>>k)&1)){\n\t      dp[i|(1<<k)][k]=min(dp[i|(1<<k)][k],dp[i][j]+2.0*sqrt(a[j]*a[k]));\n\t    }\n\t  }\n\t}\n      }\n    }\n    double ans=1e9;\n    for(int i=0;i<n;i++)ans=min(ans,dp[(1<<n)-1][i]+a[i]);\n    if(ans<=w)cout<<\"OK\"<<endl;\n    else cout<<\"NA\"<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <sstream>\n#include <queue>\n\nusing namespace std;\n\ndouble const DOUBLE_MAX = 10000000;\n\ndouble DP[12][10000];\n\n// ?????????????????????????????§????????£???????????????\nvector<string> split(const string &str, char sep)\n{\n    vector<string> v;\n    stringstream ss(str);\n    string buffer;\n\t\n    while(getline(ss, buffer, sep)){\n        v.push_back(buffer);\n    }\n\t\n    return v;\n}\n\nlong long int int_str(string str){\n\tlong long int num = 0;\n\tbool minus = false;\n\tif(str[0] == '-'){\n\t\tstr = str.substr(1);\n\t\tminus = true;\n\t}\n\tfor(int i = 0; i < str.size(); i++){\n\t\tnum *= 10;\n\t\tnum += (str[i] - '0');\n\t}\n\tif(minus){\n\t\tnum = -num;\n\t}\n\treturn num;\n}\n\nint main(){\n\t\n\twhile(true){\n\t\t\n\t\tint w_max;\n\t\t\n\t\tcin >> w_max;\n\t\t\n\t\tif(cin.eof()){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tcin.ignore();\n\t\t\n\t\tstring str;\n\t\t\n\t\tgetline(cin, str);\n\t\t\n\t\tvector<string> v_str = split(str, ' ');\n\t\t\n\t\tvector<int> v_num;\n\t\t\n\t\tfor(int i = 0; i < v_str.size(); i++){\n\t\t\tv_num.push_back(int_str(v_str[i]));\n\t\t}\n\t\t\n\t\tdouble cost[15][15];\n\t\t\n\t\tint n = v_num.size();\n\t\t\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tcost[i][j] = sqrt((double)((v_num[i] + v_num[j]) * (v_num[i] + v_num[j]) - (v_num[i] - v_num[j]) * (v_num[i] - v_num[j])));\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < 12; i++){\n\t\t\tfor(int j = 0; j < 10000; j++){\n\t\t\t\tDP[i][j] = DOUBLE_MAX;\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor(int i = 0; i < (1 << n); i++){\n\t\t\tint hoge = i;\n\t\t\tint comp = 1;\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tif(hoge % 2 == 1){\n\t\t\t\t\tif(i - comp == 0){\n\t\t\t\t\t\tDP[j][i] = v_num[j];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tint hoge2 = i - comp;\n\t\t\t\t\t\tfor(int k = 0; k < n; k++){\n\t\t\t\t\t\t\tif(hoge2 % 2 == 1){\n\t\t\t\t\t\t\t\tDP[j][i] = min(DP[j][i], DP[k][i - comp] + cost[j][k]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\thoge2 /= 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\thoge /= 2;\n\t\t\t\tcomp *= 2;\n\t\t\t}\n\t\t}\n\t\t\n\t\tbool flag = false;\n\t\t\n\t\tfor(int j = 0; j < n; j++){\n\t\t\tif(w_max >= DP[j][(1 << n) - 1] + v_num[j]){\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(flag){\n\t\t\tcout << \"OK\" << endl;\n\t\t}else{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define double float\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tvector<vector<double> > d(13, vector<double>(1 << n, 1e100));\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <map>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<30;\nconst int EPS = 1e-8;\n\ntypedef pair<int, int> pii;\n\nmap<pii, double> mp;\n\ndouble calc(int r1, int r2) {\n  if (mp[pii(r1,r2)]) return mp[pii(r1,r2)];\n  return mp[pii(r1,r2)] = sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main() {\n  string s;\n  while(getline(cin, s)) {\n    stringstream ss(s);\n    double x;\n    ss >> x;\n    int r;\n    vector<int> v;\n    while(ss >> r) {\n      v.push_back(r);\n    }\n    sort(ALL(v));\n    int n = v.size();\n    bool f = false;\n    deque<int> dq;\n    REP(i,n/2) {\n      if (i%2 == 0) {\n        dq.push_front(v[i]);\n        dq.push_back(v[n-i-1]);\n      } else {\n        dq.push_front(v[n-i-1]);\n        dq.push_back(v[i]);\n      }\n    }\n    if (n%2) {\n      if (dq[n-2] + calc(dq[0],v[n/2]) < dq[0] + calc(dq[n-2], v[n/2]))\n        dq.push_front(v[n/2]);\n      else\n        dq.push_back(v[n/2]);\n    }\n    // FOR(it, dq) {\n    //   cout << *it << \" \";\n    // }\n    // cout << endl;\n\n    double xx = dq[0] + dq[n-1];\n    REP(i, n - 1) {\n      xx += calc(dq[i], dq[i+1]);\n    }\n    if (xx <= x)\n      cout << \"OK\";\n    else\n      cout << \"NA\";\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<cstdio>\n\n#define MAX 12\n\nusing namespace std;\n\nlong double CalculateRoleCakesLength(const vector<int> &r){\n\tlong double ret;\n\tret = r[0] + r[r.size() - 1];\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2 * sqrt((long double)(r[i]*r[i+1]));\n\t}\n\treturn ret;\n}\ninline void InternalInsert(vector<int> &v, unsigned int a, unsigned int dest){\n\tif( a > dest ){\n\t\tv.insert( v.begin() + dest, v[a] );\n\t\tv.erase( v.begin() + a + 1);\n\t}else if( dest > a ){\n\t\tv.insert( v.begin() + dest, v[a] );\n\t\tv.erase( v.begin() + a);\n\t}\n}\ntemplate <typename T>\nvoid printVector( vector<T> &v ){\n\tfor(unsigned int i = 0; i < v.size(); ++i) cout << v[i] << ' '; cout << endl;\n}\nint OptimizeArrangeOfRoleCakes(vector<int> &vInBoxCakes, int center){\n\tint ersPoint = -1;\n\tint insPoint = -1;\n\tlong double len;\n\tlong double minlen = CalculateRoleCakesLength( vInBoxCakes );\n\t\n\t// left\n\tfor(int i = center - 2; i >= 0; --i){\n\t\tint tmp = vInBoxCakes[i];\n\t\tInternalInsert( vInBoxCakes, i, center );\n\t\tlen = CalculateRoleCakesLength( vInBoxCakes );\n\t\tif( len < minlen ){ minlen = len; insPoint = center; ersPoint = i; }\n\t\tInternalInsert( vInBoxCakes, center - 1, i );\n\t}\n\t// right\n\tfor(unsigned int i = center + 2; i < vInBoxCakes.size(); ++i){\n\t\tint tmp = vInBoxCakes[i];\n\t\tInternalInsert( vInBoxCakes, i, center + 1 );\n\t\tlen = CalculateRoleCakesLength( vInBoxCakes );\n\t\tif( len < minlen ){ minlen = len; insPoint = center + 1; ersPoint = i; }\n\t\tInternalInsert( vInBoxCakes, center + 1, i + 1 );\n\t}\n\tif( insPoint >= 0 && ersPoint >= 0 ){\n\t\tInternalInsert( vInBoxCakes, ersPoint, insPoint);\n\t}\n\treturn insPoint;\n}\nlong double MinmumLengthArrangeRoleCakes(vector<int> &vInBoxCakes, vector<int> &vCakes){\n\tif( vCakes.size() == 0 ) return 0;\n\telse{\n\t\twhile( vCakes.size() > 0 ){\n\t\t\tlong double minlen = 262144;\n\t\t\tint minins = 0;\n\n\t\t\tfor(unsigned j = 0; j <= vInBoxCakes.size(); ++j){\n\t\t\t\tlong double l;\n\n\t\t\t\tvInBoxCakes.insert( vInBoxCakes.begin() + j, vCakes[0]);\n\t\t\t\tl = CalculateRoleCakesLength( vInBoxCakes );\n\t\t\t\tif( l < minlen ){ minlen = l; minins = j; }\n\t\t\t\tvInBoxCakes.erase( vInBoxCakes.begin() + j );\n\t\t\t}\n\t\t\tvInBoxCakes.insert( vInBoxCakes.begin() + minins, vCakes[0] );\n\n\t\t\t// optimize arrange\n\t\t\twhile( true ){\n\t\t\t\tint insPoint = OptimizeArrangeOfRoleCakes(vInBoxCakes, minins);\n\t\t\t\tif( insPoint < 0 ) break;\n\t\t\t\telse minins = insPoint;\n\t\t\t}\n\n\t\t\tvCakes.erase( vCakes.begin() );\n\t\t}\n\t\treturn CalculateRoleCakesLength( vInBoxCakes );\n\t}\n}\nint main(void){\n\twhile(true){\n\t\tlong double boxLength;\n\t\tlong double length = 0;\n\t\tvector<int> vLeftCakes;\n\t\tvector<int> vInBoxCakes;\n\t\t\n\t\tcin >> boxLength;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t\tcin >> tmp;\n\t\t\tvLeftCakes.push_back(tmp);\n\t\t}\n\n\t\tlength = MinmumLengthArrangeRoleCakes( vInBoxCakes, vLeftCakes );\n\t\t//cout << \"Minmum Length = \" << length << endl;\n\t\tif( length <= boxLength ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <sstream>\n#include <cstring>\n#include <fstream>\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nconst int MAX_N = 12+1;\nconst double INF = 1e+100;\ndouble dist[10+1][10+1]; // ツ板シツ径 a ツづ個ケツーツキツづ個陳心ツづ板シツ径 b ツづ個ケツーツキツづ個陳心ツづづ個仰猟猟」ツ。\ndouble d[MAX_N][MAX_N];\ndouble dp[1<<MAX_N][MAX_N];\nint n, w;\nint a[MAX_N];\n\n// ツケツーツキツ甘板づ個仰猟猟」ツづーツ仰づ淞づゥ\nint calc (void )\n{\n\tfor (int i = 3; i <= 10; i++ )\n\t\tfor (int j = 3; j <= 10; j++ )\n\t\t\tdist[i][j] = 2.0*sqrt ((double)i*j );\n}\n\n// ツ経ツ路ツづ個静堋堕アツづーツ仰づ淞づゥ\nvoid make (void )\n{\n\t// ツ渉可甘コツ可サ\n\trep (i, n+1 )\n\t\trep (j, n+1 )\n\t\t\t\td[i][j] = INF;\n\n\trep (i, n )\n\t\trep (j, n )\n\t\t\td[i][j] = dist[a[i]][a[j]];\n\n\trep (i, n ){\n\t\td[n][i] = a[i]; d[i][n] = a[i];\n\t} // end rep\n\tn++;\n}\n\n// bitDP\ndouble solve (){\n\n\t// ツ渉可甘コツ可サ\n\trep (S, 1<<n ){\n\t\tfill (dp[S], dp[S]+n, INF );\n\t} // end rep\n\n\tdp[(1<<n)-1][0] = 0;\n\tfor (int S = (1 << n ) - 2; S >= 0; S-- ){\n\t\trep (v, n ){\n\t\t\t rep (u, n ){\n\t\t\t\tif (!(S >> u & 1 ) ){\n\t\t\t\t\tdp[S][v] = min (dp[S][v], dp[S | 1 << u][u] + d[v][u] );\n\t\t\t\t} // end if\n\t\t\t} // end rep\n\t\t} // end rep\n\t} // end for\n\n\treturn dp[0][0];\n}\n\nint main()\n{\n\tcalc ();\n\tstring str = \"\";\n\n\twhile (getline (cin, str ) ){\n\t\tvector <int> cake; \n\t\tstringstream ss (str );\n\t\tss >> w;\n\t\tint i = 0, m;\n\t\twhile (ss >> m ){\n\t\t\t a[i++] = m;\n\t\t} // end while\n\t\tn = i;\n\t\tmake ();\n\t\tif ((double)w >= solve () ){\n\t\t\tprintf ( \"OK\\n\" );\n\t\t}else{\n\t\t\tprintf ( \"NA\\n\" );\n\t\t} // end if\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n#define DIST(R1,R2)(2*sqrt((double)(R1)*(R2)))\ndouble dp[1<<12][12];\nint main() {\n\tstring str;\n\twhile(getline(cin,str)) {\n\t\tstringstream sstr(str);\n\t\tint n,m,R[12];\n\t\tsstr>>m;\n\t\tfor(n=0;sstr>>R[n];n++);\n\t\tfill((double*)dp,(double*)(dp+(1<<12)),1<<27);\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tdp[1<<i][i]=R[i];\n\t\t}\n\t\tfor(int i=1;i<(1<<n);i++) {\n\t\t\tfor(int j=0;j<n;j++) {\n\t\t\t\tif(dp[i][j]==(1<<27)) continue;\n\t\t\t\tfor(int k=0;k<n;k++) {\n\t\t\t\t\tif(i&(1<<k)) continue;\n\t\t\t\t\tdp[i|(1<<k)][k]=min(dp[i|(1<<k)][k],dp[i][j]+DIST(R[j],R[k]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool OK=false;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tif((dp[(1<<n)-1][i]+R[i])<=m) {OK=true;break;}\n\t\t}\n\t\tcout<<(OK?\"OK\":\"NA\")<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 10000000\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    vector<int> vec;\n    stringstream ss(str);\n    int wid,n=0;\n    ss >> wid;\n    while(!ss.eof()){\n      int s;\n      ss >> s;\n      vec.push_back(s);\n      n++;\n    }\n    double dp[(1<<n)][n];\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tdp[i][j] = INF;\n      }\n    }\n    for(int i=0;i<n;i++){\n      dp[(1<<n)-1-(1<<i)][i] = vec[i];\n    }\n    for(int i=(1<<n)-2;i>-1;i--){\n      for(int j=0;j<n;j++){\n\tif(!(i & (1<<j))){\n\t  for(int k=0;k<n;k++){\n\t    dp[i][j] = min(dp[i][j],dp[i | (1<<j)][k] + 2*sqrt(vec[j]*vec[k]));\n\t  }\n\t}\n      }\n    }\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tcout << dp[i][j] << \"  \";\n      }\n      cout << endl;\n    }\n    double ans = INF;\n    for(int i=0;i<n;i++){\n      ans = min(ans,dp[0][i]+vec[i]);\n    }\n    cout << ans << endl;\n    if(ans <= wid) cout << \"OK\" << endl;\n    else cout << \"NG\" << endl;\n  }\n  //cout << (1<<3) << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 100; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = 4000.0;\n\n\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\tint next_state;\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tnext_state = pow(2,i);\n\n\t\tdp[0][i][next_state] = info[i].r;\n\t}\n\n\tfor(int i = 1; i <= info_index-1; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\t//Do nothing\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tif(i != info_index-1){\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]+info[a].r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tminimum = min(minimum,dp[info_index-1][i][limit-1]);\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[12];\n\n\tfor(int i = 0; i < 12; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nconst int MAX_N = 12 + 1;\nconst double INF = 1e12;\nint n, W;\ndouble dp[1 << MAX_N][MAX_N];  // DPテーブル\ndouble d[MAX_N][MAX_N];\n\nvector<int> ToRadius(const string &s)\n{\n    vector<int> res;\n\n    for (int i = 0; i < s.size(); i++) {\n        if (isdigit(s[i])) {\n            int r = s[i] - '0';\n\n            while (isdigit(s[i + 1])) {\n                r *= 10;\n                r += s[++i] - '0';\n            }\n            res.push_back(r);\n        }\n    }\n    return res;\n}\n\nvoid solve()\n{\n    for (int S = 0; S < 1 << n; ++S)\n        fill(dp[S], dp[S] + n, INF);\n    dp[(1 << n) - 1][0] = 0;\n\n    for (int S = (1 << n) - 2; S >= 0; --S) \n        for (int v = 0; v < n; ++v) \n            for (int u = 0; u < n; ++u)\n                if (!(S >> u & 1))\n                    dp[S][v] = min(dp[S][v], dp[S | 1 << u][u] + d[v][u]);\n\n    if (W - dp[0][0] >= 0.0)\n        cout << \"OK\\n\";\n    else\n        cout << \"NA\\n\";\n}\n\nint main()\n{\n    string s;\n\n    while (getline(cin, s)) {\n        vector<int> c = ToRadius(s + \" \");\n\n        W = c[0];\n        n = c.size();\n        c[0] = 0;\n\n        for (int i = 0; i < n; i++)\n            d[0][i] = d[i][0] = (double)c[i];\n\n        for (int i = 1; i < n; i++) \n            for (int j = 1; j < n; j++) \n                d[i][j] = d[j][i] = 2 * sqrt((double)c[i] * c[j]);\n\n        solve();\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 200; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <sstream>\n#include <cstring>\nusing namespace std;\n\n#define Sq(c) ((c)*(c))\n\nconst int MAX_N = 12;\nconst int INF = 1<<27;\n\nint n;\ndouble dp[(1<<MAX_N)+1][MAX_N];\ndouble dist[MAX_N][MAX_N];\n\ndouble rec(int S, int v) {\n  if(dp[S][v] >= 0) return dp[S][v];\n  \n  if(S == (1<<n)-1 && v==0) return dp[S][v]=0;\n  \n  double res = INF;\n  for(int u=0; u<n; u++) {\n    if(!(S >> u & 1)) res = min(res, rec(S | 1 << u, u) + dist[v][u]);\n  }\n  return dp[S][v] = res;\n}\n\nint main() {\n  \n  int width;\n  double r[MAX_N];\n  string str;\n\n  while(getline(cin, str)) {\n    stringstream ss(str);\n    \n    ss >> width;\n    n = 0;\n    while( ss >> r[n] ) n++;\n    \n    memset(dp, -1, sizeof(dp));\n\n    for(int i=0; i<n; i++) {\n      for(int j=0; j<n; j++) {\n\tif(i == j) dist[i][j] = INF;\n\telse {\n\t  dist[i][j] = sqrt( Sq( r[i]+r[j] ) - Sq( r[i]-r[j] ) );\n\t}\n      }\n    }\n    \n    if( rec(0, 0) <= (double)width ) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECURE_NO_WARNINGS 1\n# include <iostream>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <map>\n# include <stack>\nusing namespace std;\n//# define M_PI 3.141592\n# define FOR(i,n) for(int i=0;i<(int)n;i++)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define toRad 2.0*M_PI/360.0\n# define inin(x) int x;cin>>x;\n# define all(x) x.begin(),x.end()\n# define debug(x) cout<<#x<<\" :\"<<x<<endl;\n# define rep(i,n) for(int i=0;i<(int)n;i++)\n# define EPS 1e-12\n# define CHECK(i,a) FOR(i,a.size())cout<<#a<<\"[\"<<i<<\"] : \"<<a[i]<<endl; \ndouble calc(vector<double> a)\n{\n\tdouble ans = 0;\n\tfor (int i = 0; i < a.size()-1; i++)\n\t{\n\t\tdouble t = a[i] + a[i + 1];\n\t\tdouble r = abs(a[i] - a[i + 1]);\n\t\tans += sqrt(t*t - r*r);\n\t}\n\tans += a.front()+a.back();\n\treturn ans;\n}\n\nint main()\n{\n\tstring s;\n\twhile (getline(cin,s))\n\t{\n\t\tstringstream ss(s);\n\t\tdouble n;\n\t\tvector<double>a,A;\n\t\tss >> n;\n\t\tdouble temp;\n\t\twhile (ss >> temp)\n\t\t{\n\t\t\ta.push_back(temp);\n\t\t}\n\t\tbool ok = false;\n\t\tsort(all(a));\n\t\tA = a;\n\t\tvector<double> b,c;\n\t\tint iii = 0;\n\t\twhile (a.size())\n\t\t{\n\t\t\tauto it = (iii ? a.begin() : a.end() - 1);\n\t\t\tb.push_back(*it);\n\t\t\ta.erase(it);\n\t\t\tiii++;\n\t\t\tiii %= 2;\n\t\t}\n\t\ta = A;\n\t\tiii = 1;\n\t\twhile (a.size())\n\t\t{\n\t\t\tauto it = (iii ? a.begin() : a.end() - 1);\n\t\t\tc.push_back(*it);\n\t\t\ta.erase(it);\n\t\t\tiii++;\n\t\t\tiii %= 2;\n\t\t}\n\t\tdouble ans = min(calc(b), calc(c));\n\t\tok = (ans <= n);\n\n\t\tif (ok)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-6 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\ndouble add(double a, double b){\n  if(abs(a+b) < eps* (abs(a) + abs(b))) return 0;\n  return a+b;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,0));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw = add(bw,v[nxt]);\n            }\n            if(bfr != 0){\n              ll h = v[bn]+v[nxt],s = v[bn] - v[nxt];\n              bw = add(bw , sqrt(h*h - s*s));\n            }\n            if(dp[bfr|( 1 << nxt)][nxt] != 0)\n              dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            else\n              dp[bfr|( 1 << nxt)][nxt] = bw;\n            if((bfr|(1 << nxt)) == (1 << n)-1){\n              ans = min(ans,bw);\n            }\n          }\n        }\n      }\n    }\n    if(w - ans+ eps > 0){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECURE_NO_WARNINGS 1\n# include <iostream>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <map>\n# include <stack>\nusing namespace std;\n# define M_PI 3.141592\n# define FOR(i,n) for(int i=0;i<(int)n;i++)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define toRad 2.0*M_PI/360.0\n# define inin(x) int x;cin>>x;\n# define all(x) x.begin(),x.end()\n# define debug(x) cout<<#x<<\" :\"<<x<<endl;\n# define rep(i,n) for(int i=0;i<(int)n;i++)\n# define EPS 1e-12\n# define CHECK(i,a) FOR(i,a.size())cout<<#a<<\"[\"<<i<<\"] : \"<<a[i]<<endl; \ndouble calc(vector<double> a)\n{\n\tdouble ans = 0;\n\tfor (int i = 0; i < a.size()-1; i++)\n\t{\n\t\tdouble t = a[i] + a[i + 1];\n\t\tdouble r = abs(a[i] - a[i + 1]);\n\t\tans += sqrt(t*t - r*r);\n\t}\n\tans += a.front()+a.back();\n\treturn ans;\n}\n\nint main()\n{\n\tstring s;\n\twhile (getline(cin,s))\n\t{\n\t\tstringstream ss(s);\n\t\tdouble n;\n\t\tvector<double>a,A;\n\t\tss >> n;\n\t\tdouble temp;\n\t\twhile (ss >> temp)\n\t\t{\n\t\t\ta.push_back(temp);\n\t\t}\n\t\tbool ok = false;\n\t\tsort(all(a));\n\t\tA = a;\n\t\tvector<double> b,c;\n\t\tint iii = 0;\n\t\twhile (a.size())\n\t\t{\n\t\t\tauto it = (iii ? a.begin() : a.end() - 1);\n\t\t\tb.push_back(*it);\n\t\t\ta.erase(it);\n\t\t\tiii++;\n\t\t\tiii %= 2;\n\t\t}\n\t\ta = A;\n\t\tiii = 1;\n\t\twhile (a.size())\n\t\t{\n\t\t\tauto it = (iii ? a.begin() : a.end() - 1);\n\t\t\tc.push_back(*it);\n\t\t\ta.erase(it);\n\t\t\tiii++;\n\t\t\tiii %= 2;\n\t\t}\n\t\tdouble ans = min(calc(b), calc(c));\n\t\tok = (ans <= n);\n\n\t\tif (ok)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define add(i,j) (sqrt(cakes[i]*cakes[j]) * 2 - cakes[i] + cakes[j])\nvector< string > split( const string& str, string del){\n  char *p,  *str_buff = new char[str.size() + 1], first = 0;\n  vector< string > ret;\n  strcpy( str_buff, str.c_str());\n  while(p = strtok((first++ ? NULL : str_buff), del.c_str())){\n    ret.push_back(p);\n  }\n  delete str_buff;\n  return ret;\n}\nint main(){\n  string strb;\n  while(getline(cin, strb)){\n    vector< string > strs = split( strb, \" \");\n    int box = atoi(strs[0].c_str());\n    vector< int > cakes(strs.size() - 1);\n    for(int i = 0; i < strs.size() - 1; i++){\n      cakes[i] = atoi(strs[i + 1].c_str());\n    }\n\n    const int INF = 1 << 30;\n    double dp[12][1 << 12];\n    fill_n( *dp, 12 * (1 << 12), INF);\n\n    for(int i = 0; i < cakes.size(); i++){\n      dp[i][1 << i] = cakes[i] * 2;\n    }\n\n    for(int j = 0; j < 1 << cakes.size(); j++){\n      for(int i = 0; i < cakes.size(); i++){\n        if(dp[i][j] == INF) continue;\n        for(int k = 0; k < cakes.size(); k++){\n          if(j >> k & 1) continue;\n          dp[k][j|(1 << k)] = min( dp[k][j|(1 << k)], dp[i][j] + add(i,k));\n        }\n      }\n    }\n    bool judge = false;\n    for(int i = 0; i < cakes.size(); i++){\n      judge |= dp[i][(1 << cakes.size()) - 1] <= box;\n    }\n    if(judge) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\n\nconst long double PI = acos(-1);\nconstexpr long double EPS = 1e-15;\nconstexpr int inf = 2e9;\nconstexpr ll INF = 2e18;\nconstexpr ll MOD = 1e9+7;\nconstexpr ll MOD1 = 998244353;\ntypedef pair<ll,ll> P;\n\n//#define all(v) (v).begin(), (v).end()\n#define rep(i,a,b) for (int i = (a); i < (b); i++)\n#define REP(i,n) rep(i,0,n)\n#define sz(s) (s).size()\n#define pb push_back\n#define fi first\n#define se second\n//#define mp make_pair\n\nint main(){\n    string s;\n    while (getline(cin,s)) {\n        double w = 0;\n        int i = 0;\n        while (i < sz(s) && s[i] != ' ') {\n            w *= 10;\n            w += s[i] - '0';\n            i++;\n        }\n        i++;\n        vector<double> v;\n        while (i < sz(s)) {\n            int k = 0;\n            while (i < sz(s) && s[i] != ' ') {\n                k *= 10;\n                k += s[i] - '0';\n                i++;\n            }\n            i++;\n            v.pb(k);\n        }\n        sort(v.begin(),v.end());\n        deque<double> dq;\n        for (int i = 0; i < sz(v); i++) {\n            dq.pb(v[i]);\n        }\n        deque<double> dq1;\n        dq1.pb(dq.back());\n        dq.pop_back();\n        while (!dq.empty()) {\n            bool f2f = 0;\n            bool f2b = 0;\n            bool b2f = 0;\n            bool b2b = 0;\n            double front = dq.front();\n            double back = dq.back();\n            double k = abs(front - dq1.front());\n            f2f = 1;\n            double kk = abs(front - dq1.back());\n            if (kk > k) {\n                k = kk;\n                f2f = 0;\n                f2b = 1;\n            }\n            kk = abs(back - dq1.front());\n            if (kk > k) {\n                k = kk;\n                f2f = 0;\n                f2b = 0;\n                b2f = 1;\n            }\n            kk = abs(back - dq1.back());\n            if (kk > k) {\n                k = kk;\n                f2f = 0;\n                f2b = 0;\n                b2f = 0;\n                b2b = 1;\n            }\n            if (f2f) {\n                dq1.push_front(dq.front());\n                dq.pop_front();\n            } else if (f2b) {\n                dq1.push_back(dq.front());\n                dq.pop_front();\n            } else if (b2f) {\n                dq1.push_front(dq.back());\n                dq.pop_back();\n            } else if (b2b) {\n                dq1.push_back(dq.back());\n                dq.pop_back();\n            }\n        }\n        double ans = dq1.front() + dq1.back();\n        double before = dq1.front();\n        dq1.pop_front();\n        while (!dq1.empty()) {\n            int tp = dq1.front();\n//            cout << before << \" \";\n            dq1.pop_front();\n            ans += 2 * sqrt(before * tp);\n            before = tp;\n        }\n//        cout << before << endl;\n        cout << (ans <= w? \"OK\":\"NA\") << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div; //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\tif(i == info_index && state == limit-1 && a == 0){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\t//printf(\"OK %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\t//printf(\"NA %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 10000; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tfor(int i = 0 ;i < N ; i++){\n\t\t\tscore = Evaluate(r);\n\t\t}\n\t\tif(score < mi){\n\t\t\tmi = score;\n\t\t}\n\t\telse {\n\t\t\tif(Changes(cnt)){\n\t\t\t\tif(mi > score){\n\t\t\t\t\tmi = score;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswap(r[rand()%N],r[rand()%N]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//===============================================\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <sstream>\n#include <vector>\n\nusing namespace std;\n\ndouble getPackWidth(vector<int> &v) {\n    int n = v.size();\n    double ret = v[0] + v[n-1];\n    for (int i=0; i+1<n; ++i) {\n        ret += sqrt(pow(v[i] + v[i+1], 2) - pow(v[i] - v[i+1], 2));\n    }\n    return ret;\n}\n\nint main() {\n    string s;\n    while (getline(cin,s)) {\n        stringstream ss(s);\n        int w;\n        ss >> w;\n        int r;\n        vector<int> cake;\n        while (ss >> r) cake.push_back(r);\n\n        sort(cake.begin(), cake.end());\n\n        vector<int> v1, v2;\n        int n = cake.size();\n        for (int i=0; i<=n-1-i; ++i) {\n            if (i == n-1-i) {\n                v1.push_back(cake[i]);\n                v2.push_back(cake[i]);\n            } else {\n                v1.push_back(cake[i]);\n                v1.push_back(cake[n-1-i]);\n                v2.push_back(cake[n-1-i]);\n                v2.push_back(cake[i]);\n            }\n        }\n\n        bool ok = getPackWidth(v1) <= w || getPackWidth(v2) <= w;\n        cout << (ok ? \"OK\" : \"NA\") << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <fstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nstatic const double EPS = 1e-5;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n\nint main(void){\n  string in;\n  while(getline(cin,in)){\n    if(in==\"\") break;\n    stringstream ss;\n    ss<<in;\n    int l,tmp;\n    vector<int> r;\n    ss>>l;\n    while(ss>>tmp)r.push_back(tmp);\n    bool able = false;\n    REP(i,r.size()){\n      vector<int> tmp = r;\n      int prev = r[i];\n      double alen = r[i];\n      tmp.erase(tmp.begin()+i);\n      while(!tmp.empty()){\n        PII maxp = PII(-1,0);\n        REP(i,tmp.size()){\n          if(abs(prev-tmp[i])>maxp.first){\n            maxp = PII(abs(prev-tmp[i]),i);\n          }\n        }\n        int next = tmp[maxp.second];\n        alen += 2*sqrt(next*prev);\n        prev = next;\n        tmp.erase(tmp.begin()+maxp.second);\n      }\n      alen += prev;\n      if(alen<=(double)l){\n        able = true;\n        break;\n      }\n    }\n    if(able) cout<<\"OK\"<<endl;\n    else cout<<\"NA\"<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<vector>\ndouble F(double r,double s)\n{\n\treturn (r+s)*::cos(asin((r-s)/(r+s)));\n}\nint main()\n{\n\tint l,a[12],n,i,j,k;\n\tchar*p,s[256];\n\twhile(fgets(s,256,stdin))\n\t{\n\t\tp=strtok(s,\" \");\n\t\tl=atoi(p);\n\t\tfor(n=0;p;)\n\t\t{\n\t\t\tp=strtok(0,\" \");\n\t\t\tif(p)a[n++]=atoi(p);\n\t\t}\n\t\tstd::vector<int>u,v;\n\t\tdouble dp[1<<12][12];\n\t\tstd::fill(dp[0],dp[1<<12],1e10);\n\t\tfor(i=0;i<n;++i)dp[1<<i][i]=a[i];\n\t\tfor(i=1;i<(1<<n);++i)\n\t\t{\n\t\t\tu.clear();\n\t\t\tv.clear();\n\t\t\tfor(j=0;j<n;++j)\n\t\t\t{\n\t\t\t\tif(i&(1<<j))u.push_back(j);\n\t\t\t\telse v.push_back(j);\n\t\t\t}\n\t\t\tfor(j=0;j<u.size();++j)\n\t\t\t{\n\t\t\t\tfor(k=0;k<v.size();++k)\n\t\t\t\t{\n\t\t\t\t\tdouble&r=dp[i|(1<<v[k])][v[k]];\n\t\t\t\t\tr=std::min(r,dp[i][u[j]]+F(a[u[j]],a[v[k]]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tk=(1<<n)-1;\n\t\tfor(i=0;i<n;++i)dp[k][i]+=a[i];\n\t\tputs(*std::min_element(dp[k],dp[k]+n)-1e-7<l?\"OK\":\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <cmath>\n#include <queue>\n#include <cstdio>\n#include <sstream>\n#include <vector>\nusing namespace std;\nint W,R[12],n;\nint bit[12]={1,2,4,8,16,32,64,128,256,512,1024,2048};\n\n\ndouble cal_r(int a,int b){\n\treturn sqrt((double)(a+b)*(a+b)-(a-b)*(a-b));\n}\n\n\nint main(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\t\n\t\tvector <int>v;\n\t\tstringstream am;\n\t\tam<<s;\n\t\tn=0;\n\t\tam>>W;\n\t\twhile(!am.eof()){\n\t\t\tint y;\n\t\t\tam>>y;\n\t\t\tv.push_back(y);\n\t\t\tn++;\n\t\t}\n\t\t//n=v.size();\n\t\tfor(int i=0;i<v.size();i++)R[i]=v[i];\n\t\t\n\t\t\n\t\tdouble dp[4096][12];\n\t\tbool flag[4096][12]={0};\n\t\tfor(int i=0;i<4096;i++){\n\t\t\tfor(int j=0;j<12;j++){\n\t\t\t\tdp[i][j]=200.0;\n\t\t\t}\n\t\t}\n\t\tqueue <int>first;\n\t\tqueue <int>second;\n\t\tfirst.push(0);\n\t\tsecond.push(-1);\n\t\tdouble ans=200.0;\n\t\tfor(int P,L;!first.empty();first.pop(),second.pop()){\n\t\t\tP=first.front();\n\t\t\tL=second.front();\n\t\t\tif(L<0){\n\t\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\t\tdp[bit[i]][i]=R[i];\n\t\t\t\t\tif(!flag[bit[i]][i]){\n\t\t\t\t\t\tfirst.push(bit[i]);\n\t\t\t\t\t\tsecond.push(i);\n\t\t\t\t\t\tflag[bit[i]][i]=1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\t\n\t\t\t\t//for(int i=0;i<3;i++)cout<<((P&bit[i])?\"1\":\"0\");\n\t\t\t\t//cout<<\" \"<<L<<\" \"<<dp[P][L]<<endl;\n\t\t\t\t\n\t\t\t\tint f=1;\n\t\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\t\tif((~P)&bit[i]){\n\t\t\t\t\t\tf=0;\n\t\t\t\t\t\tint tmp=P|bit[i];\n\t\t\t\t\t\tif(!flag[tmp][i]){\n\t\t\t\t\t\t\tflag[tmp][i]=1;\n\t\t\t\t\t\t\tfirst.push(tmp);\n\t\t\t\t\t\t\tsecond.push(i);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdp[tmp][i]=min(dp[tmp][i],dp[P][L]+cal_r(R[L],R[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif(f){\n\t\t\t\t\tans=min(ans,dp[P][L]+R[L]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t//cout<<ans<<endl;\n\t\tif(ans<=W)cout<<\"OK\\n\";\n\t\telse cout<<\"NA\\n\";\n\t}\n\t\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <cmath>\n\n#define rep(i,n) for(int i=0; i<(n); i++)\n\nusing namespace std;\n\ndouble dp[1<<12][12][12];\nconst double eps = 1e-8;\n\nint main() {\n    string line;\n    while(getline(cin, line)) {\n        stringstream ss;\n        double width;\n        vector<double> cake;\n        int tmp;\n        ss << line;\n        ss >> width;\n        while(ss >> tmp) {\n            cake.push_back(tmp);\n        }\n        const int n = cake.size();\n\n        rep(i,1<<n) {\n            rep(j,n) {\n                rep(k,n) {\n                    dp[i][j][k] = 1000;\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            dp[1<<i][i][i] = 2 * cake[i];\n        }\n        for (int i = 1; i < (1 << n) - 1; i++) {\n            rep(j, n) {\n                if (!(i & (1 << j)))continue;\n                rep(k, n) {\n                    if (!(i & (1 << k)))continue;\n                    rep(l, n) {\n                        if (i & (1 << l))continue;\n                        //cout << i << \",\" << j << \",\" << k << \",\" << l << endl;\n                        double d = abs(cake[l] - cake[j]);\n                        double dif = cos(asin(d / (cake[l]+cake[j]))) * (cake[l] + cake[j]) - cake[j] + cake[l];\n\n                        dp[i | (1 << l)][l][k] = min(dp[i | (1 << l)][l][k], dp[i][j][k] + dif);\n                        d = abs(cake[l] - cake[k]);\n                        dif = cos(asin(d / (cake[l]+cake[k]))) * (cake[l] + cake[k]) - cake[k] + cake[l];\n                        dp[i | (1 << l)][j][l] = min(dp[i | (1 << l)][j][l], dp[i][j][k] + dif);\n                    }\n                }\n            }\n        }\n        double ans = 1000;\n        rep(i,n)rep(j,n) {\n            ans = min(ans, dp[(1 << n) - 1][i][j]);\n        }\n        cout << (width - ans + eps > 0 ? \"OK\" : \"NA\") << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\ndouble dp[1<<13][13];\nint n;\n\n\nint main(){\n\n    \n    \n    \n    \n\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[13]={0};\n        n=0;\n        cake[n]=0;\n        n++;\n        while(ss>>cake[n]){\n            n++;\n        }\n        \n        double v[13][13]={0};\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(i==j){\n                    v[i][j]=0;\n                    v[j][i]=v[i][j];\n                }else{\n                    double x = (cake[i]+cake[j])*(cake[i]+cake[j])-(cake[i]-cake[j])*(cake[i]-cake[j]);\n                    v[i][j]=sqrt((fabs(x)));\n                    //cout<<i<<\" \"<<j<<\" \"<<v[i][j]<<endl;\n                    v[j][i]=v[i][j];\n                }\n                \n            }\n        }\n        \n        \n       \n        //memset(dp, 999999.9999, sizeof(dp));\n        for(int i=0; i<(1<<12); i++){\n            for(int j=0; j<12; j++){\n                dp[i][j]=100000000;\n            }\n        }\n        \n        \n        dp[(1<<n) - 1][0] = 0;\n\n        \n        for(int i=(1<<n)-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                \n                for(int k=0; k<n; k++){\n                    if(!((i >> k) & 1)){\n                        if(j==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[k]);\n                        }else if(k==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[j]);\n                        }else{\n                            /*\n                            int m=i;\n                            for(int l=0; l<n; l++){\n                                cout<<m%2;\n                                m/=2;\n                            }\n                            cout<<endl;\n                            cout<<\"j  \"<<j<<endl;\n                            cout<<\"k  \"<<k<<endl;\n                             */\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + v[j][k]);\n                            /*\n                            cout<<\"dp \"<<dp[i][j]<<endl;\n                            cout<<\"v  \"<<v[j][k]<<endl;\n                            cout<<\"-----------\"<<endl;\n                             */\n                        }\n                    }\n                }\n            }\n        }\n        \n        //cout<<dp[0][0]<<endl;\n        if(dp[0][0]<=box)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n\n        \n        \n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <sstream>\nusing namespace std;\nconst double EPS = 1e-10;\nconst double INF = 1e10;\n\nint main(){\n    string s;\n    while(getline(cin, s)){\n        stringstream buf(s);\n        double w;\n        buf >> w;\n        vector<double> r;\n        double in;\n        while(buf >> in){\n            r.push_back(in);\n        }\n        int n = r.size();\n\n        vector<vector<double> > dp(n, vector<double>(1<<n, INF));\n        for(int i=0; i<n; i++){\n            dp[i][1<<i] = r[i];\n        }\n        for(int i=0; i<(1<<n); i++){\n            for(int j=0; j<n; j++){\n                if((1<<j & i) == 0) continue;\n                for(int k=0; k<n; k++){\n                    if((1<<k & i) != 0) continue;\n                    double x = sqrt((r[j]+r[k]) *(r[j]+r[k]) - (r[j]-r[k]) *(r[j]-r[k]));\n                    dp[k][i | 1<<k] = min(dp[k][i | 1<<k], dp[j][i] +x);\n                }\n            }\n        }\n\n        double MIN = INF;\n        for(int i=0; i<n; i++){\n            MIN = min(MIN, dp[i][(1<<n)-1] +r[i]);\n        }\n        if(MIN < w +EPS){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NA\" << endl;\n        }\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nbool f;\ndouble w;\nvector<double> v;\nint n;\ndouble calc(int i,int j){\n  return sqrt((v[i]+v[j])*(v[i]+v[j])-(v[i]-v[j])*(v[i]-v[j]));\n}\nvoid dfs(double l,int b,int p){\n  if(b==(1<<n)-1){\n    f|=l+v[p]<=w;\n    return;\n  }\n  if(p<0) for(int i=0;i<n;i++) dfs(v[i],b+(1<<i),i);\n  else for(int i=0;i<n;i++) if(!((b>>i)&1)) dfs(l+calc(p,i),b+(1<<i),i);\n}\nint main(){\n  string s;\n  while(getline(cin,s)){\n    v.clear();\n    stringstream ss(s);\n    ss>>w;\n    double t;\n    while(ss>>t) v.push_back(t);\n    n=v.size();\n    f=0;\n    dfs(0,0,-1);\n    cout<<(f?\"OK\":\"NG\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\nconst double EPS = 1e-8;\n\ndouble dist(double p, double q) {\n    return sqrt((p+q)*(p+q) - (p-q)*(p-q));\n}\n\nint main() {\n    double box_len;\n    vector<double> rs;\n    string s;\n    while (getline(cin, s)) {\n        // 入力\n        rs.clear();\n        istringstream iss(s);\n        iss >> box_len;\n        double r;\n        while (iss >> r) rs.push_back(r);\n        \n        // 解く\n        sort(rs.begin(), rs.end());\n        rotate(rs.begin()+1, rs.begin()+2, rs.end());\n        box_len -= rs[0];\n        box_len -= rs.back();\n\n        do {\n//            for (int i = 0; i < rs.size(); i++) cout << rs[i] << ' ';\n//            cout << endl;\n            bool possible = true;\n            double l = box_len;\n            for (int i = 0; i < rs.size()-1; i++) {\n                l -= dist(rs[i], rs[i+1]);\n                if (l < -EPS) {\n                    possible = false;\n                    break;\n                }\n            }\n            if (possible) {\n                cout << \"OK\" << endl;\n                goto next_dataset;\n            }\n        } while (next_permutation(rs.begin()+1, rs.end()-1));\n\n        cout << \"NA\" << endl;\nnext_dataset:\n        continue;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdlib>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n\nint l,r[12],n;\nstring in,tmp;\nvector<int> dp[1<<12];\ndouble dpv[1<<12];\n\ndouble cal(vector<int> v){\n  double res = 0;\n  int i;\n  if(v.size()){\n    res += r[v[0]];\n    for(i=0;i<(int)v.size()-1;i++)res += sqrt( pow(r[v[i]]+r[v[i+1]],2) - pow(r[v[i]]-r[v[i+1]],2));\n    res += r[v[i]];\n  }\n  return res;\n}\n\nint main(){\n  while(getline(cin,in)){\n    int pos = 0;\n    bool f = false;\n    n = 0;\n    while(1){\n      if(pos>=(int)in.size() || in[pos]==' '){\n\tif(!f){\n\t  l = atoi(tmp.c_str());\n\t  f = true;\n\t}else{\n\t  r[n] = atoi(tmp.c_str());\n\t  n++;\n\t}\n\ttmp.clear();\n\tif(pos>=(int)in.size())break;\n      }else{\n\ttmp.push_back(in[pos]);\n      }\n      pos++;\n    }\n    sort(r,r+n);\n    for(int i=0;i<(1<<n);i++){\n      dp[i].clear();\n      dpv[i] = 1000.0;\n    } \n    \n    for(int i=1;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tif(i&(1<<j)){\n\t  int g = i-(1<<j);\n\t  vector<int> hoge = dp[g];\n\t  hoge.push_back(j);\n\t  dp[i] = hoge;\n\t  dpv[i] = cal(hoge);\n\t  \n\t  for(int k=(int)hoge.size()-1;k>=1;k--){\n\t    swap(hoge[k],hoge[k-1]);\n\t    double s = cal(hoge);\n\t    \n\t    if(s<dpv[i]){\n\t      dp[i] = hoge;\n\t      dpv[i] = s;\n\t    }\n\t    \n\t  }\n\t}\n      }\n    }\n    /*\n    cout << dpv[(1<<n)-1] << endl;\n    for(int i=0;i<n;i++)cout << r[dp[(1<<n)-1][i]] << \" \";\n    cout << endl;\n    */\n    if(dpv[(1<<n)-1]>l)cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define double float\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tvector<vector<double> > d(13, vector<double>(1 << n, 1e25));\n\t\t//cout << (float)1e25 << endl;\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<cassert>\n#include<cstdio>\n\n#define MAX 12\n\nusing namespace std;\nlong double minimumLength;\nlong double boxLength;\n\nlong double CalculateRoleCakesLength(const vector<int> &r){\n\tlong double ret;\n\tret = r[0] + r[r.size() - 1];\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2 * sqrt((long double)(r[i]*r[i+1]));\n\t}\n\treturn ret;\n}\ninline void InternalInsert(vector<int> &v, unsigned int a, unsigned int dest){\n\tif( a > dest ){\n\t\tv.insert( v.begin() + dest, v[a] );\n\t\tv.erase( v.begin() + a + 1);\n\t}else if( dest > a ){\n\t\tv.insert( v.begin() + dest, v[a] );\n\t\tv.erase( v.begin() + a);\n\t}\n}\ntemplate <typename T>\nvoid printVector( vector<T> &v ){\n\tfor(unsigned int i = 0; i < v.size(); ++i) cout << v[i] << ' '; cout << endl;\n}\nlong double OptimizeArrangeOfRoleCakes(const long double target, vector<int> &vInBoxCakes){\n\tlong double len;\n\tlong double minlen;\n\tconst long double nowlen = CalculateRoleCakesLength( vInBoxCakes );\n\tvector<pair<int,int> > vCands;\n\n\tminlen = target;\n\tfor(unsigned int i = 0; i < vInBoxCakes.size(); ++i){\n\t\tfor(unsigned int j = 0; j <= vInBoxCakes.size(); ++j){\n\t\t\tif( j >= i + 2 || j <= i - 1 ){\n\t\t\t\tInternalInsert( vInBoxCakes, i, j );\n\t\t\t\tlen = CalculateRoleCakesLength( vInBoxCakes );\n\t\t\t\tif( len < minlen ){\n\t\t\t\t\tminlen = len;\n\t\t\t\t\tvCands.push_back( make_pair(i, j) );\n\t\t\t\t}\n\t\t\t\tif( i < j ) InternalInsert( vInBoxCakes, j - 1, i );\n\t\t\t\telse InternalInsert( vInBoxCakes, j, i + 1 );\n\t\t\t}\n\t\t}\n\t}\n\tif( vCands.size() > 0 ){\n\t\tlong double retminlen = nowlen;\n\t\tint retminlenind = -1;\n\n\t\tfor(unsigned int i = 0; i < vCands.size(); ++i){\n\t\t\tlong double t;\n\t\t\tInternalInsert( vInBoxCakes, vCands[i].first, vCands[i].second );\n\n\t\t\tt = OptimizeArrangeOfRoleCakes(minlen, vInBoxCakes );\n\t\t\tif( t < retminlen ){\n\t\t\t\tretminlen = t;\n\t\t\t\tminimumLength = min(minimumLength, retminlen);\n\t\t\t\tretminlenind = i;\n\t\t\t}\n\t\t\t\n\t\t\tif( vCands[i].first < vCands[i].second ){\n\t\t\t\tInternalInsert( vInBoxCakes, vCands[i].second - 1, vCands[i].first);\n\t\t\t}else{\n\t\t\t\tInternalInsert( vInBoxCakes, vCands[i].second, vCands[i].first + 1 );\n\t\t\t}\n\t\t}\n\t\treturn retminlen;\n\t}\n\treturn nowlen;\n}\nint main(void){\n\twhile(true){\n\n\t\tlong double length = 0;\n\t\tvector<int> vInBoxCakes;\n\t\t\n\t\tcin >> boxLength;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t\tcin >> tmp;\n\t\t\tvInBoxCakes.push_back(tmp);\n\t\t}\n\n\t\tminimumLength = CalculateRoleCakesLength( vInBoxCakes );\n\t\tOptimizeArrangeOfRoleCakes( minimumLength, vInBoxCakes);\n\n\t\t//cout << \"Minmum Length = \" << minimumLength << endl;\n\t\tif( minimumLength <= boxLength ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-6 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\n\ndouble calc(int r1,int r2){\n  return sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,1e9));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    REP(bfr,1,(1 << n)){\n      REP(nxt,0,n){\n        if((bfr & (1 << nxt))) continue;\n        REP(now,0,n){\n          if((bfr & (1 << now)) == 0) continue;\n            double bw = dp[bfr][now];\n            int bn = now;\n            if((bfr|(1 << nxt)) == (1 << n)-1){\n              bw +=v[nxt];\n            }\n            bw += calc(v[bn],v[nxt]);\n            dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            if((bfr|(1 << nxt)) == (1 << n)-1){\n              ans = min(ans,bw);\n            }\n        }\n      }\n    }\n    if(ans <= w){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint main()\n{\n\tint L,r[15];\n\tstring s;\n\twhile (cin >> L)\n\t{\n\t\tgetline(cin,s);\n\t\tstringstream ss(s);\n\t\tint n=0;\n\t\twhile (!ss.eof())\n\t\t{\n\t\t\tss >> r[n++];\n\t\t}\n\t\tdouble dp[1<<n];\n\t\tint last[1<<n];\n\n\t\tfor (int i=0; i<(1<<n); i++)\n\t\t\tdp[i] = 10000.0;\n\n\t\tfor (int i=0; i<n; i++)\n\t\t{\n\t\t\tdp[1<<i] = 2*r[i];\n\t\t\tlast[1<<i] = i;\n\t\t}\n\n\t\tfor (int i=1; i<(1<<n); i++)\n\t\t{\n\t\t\tfor (int k=0; k<n; k++)\n\t\t\t{\n\t\t\t\tif (i&(1<<k)) continue;\n\t\t\t\tint a=r[last[i]],b=r[k];\n\t\t\t\tdouble x = sqrt((a+b)*(a+b)-(a-b)*(a-b));\n\t\t\t\tdouble diff = a+b - x;\n\t\t\t\tif (dp[i]+2*b-diff < dp[i|(1<<k)])\n\t\t\t\t{\n\t\t\t\t\tdp[i|(1<<k)] = dp[i]+2*b-diff;\n\t\t\t\t\tlast[i|(1<<k)] = k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << (dp[(1<<n)-1] <= L ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define INF 1001000100010001000\n#define INFd 1010001000\n#define MOD 1000000007\n#define EPS 1e-10\n#define int long long\n#define double long double\n#define rep(i, N) for (int i = 0; i < N; i++)\n#define Rep(i, N) for (int i = 1; i < N; i++)\n#define For(i, a, b) for (int i = (a); i < (b); i++)\n#define pb push_back\n#define eb emplece_back\n#define mp make_pair\n#define i_i pair<int, int>\n#define vi vector<int>\n#define vvi vector<vi >\n#define vb vector<bool>\n#define vvb vector<vb >\n#define vp vector< i_i >\n#define Edge pair< i_i, int>\n#define all(a) (a).begin(), (a).end()\n#define Int(x) int x; scanf(\"%lld\", &x);\n#define int2(x, y) int x, y; scanf(\"%lld %lld\", &x, &y);\n#define fir first\n#define sec second\n#define ffir first.first\n#define fsec first.second\n#define sfir second.first\n#define ssec second.second\n#define vd vector<double>\n#define vvd vector<vd>\n\n \n//int dxy[5] = {0, 1, 0, -1, 0};\n// assign\n\n\nvoid mmprint(int a)\n{\n    string st;\n    if (!a) cout << 0 << \" \";\n    else {\n        while (a) {\n            st.pb((a&1)+'0');\n            a >>= 1;\n        }\n        reverse(all(st));\n        cout << st << \" \";\n    }\n}\n \nsigned main()\n{\n    double len;\n    char t;\n    while (scanf(\"%Lf\", &len) != EOF) {\n        vi cake;\n        while (scanf(\"%c\", &t), t != '\\n') {\n            Int(tmp);\n            cake.pb(tmp);\n        }\n        if (!cake.size()) {\n            cout << \"OK\" << endl;\n            continue;\n        }\n        vvd dp(1 << cake.size(), vd(cake.size(), INFd));\n        dp[0][0] = 0.0;\n \n        \n        rep(i, cake.size()) {\n            int tmp = 1 << i;\n            dp[tmp][i] = cake[i];\n        }\n        \n        rep(i, 1 << cake.size()) {\n           // mmprint(i);\n            rep(j, cake.size()) {\n                if (i & (1 << j)) {\n                    //cout << \"sento:\" << j << \" \";\n                    rep(k, cake.size()) {\n                        if (!(i & (1 << k))) {\n                            //cout << \"tsuika\" << k << \" \";\n                            //cout << \"tsuikasaki\" << (i|(1 << k)) << \" \";\n                            dp[i|(1 << k)][k] = min(dp[i|(1 << k)][k],\n                                    dp[i][j] + \n        sqrt( (double)((cake[j]+cake[k])*(cake[j]+cake[k])-\n                (cake[k]-cake[j])*(cake[k]-cake[j])) ));\n                        }\n                    }\n                }\n            }\n            //cout << endl;\n        }\n        rep(i, 1 << cake.size()) {\n            //mmprint(i);\n            rep(j, cake.size()) {\n                //cout << dp[i][j] << \" \";\n            }\n            //cout << endl;\n        }\n        bool ans = false;\n        rep(i, cake.size()) {\n            if (len >= dp[(1 << cake.size())-1][i] + (double)cake[i]) {\n                ans = true;\n                break;\n            }\n        }\n        cout << ( (ans) ? \"OK\" : \"NA\" ) << endl;\n    }\n\n\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <sstream>\n#include <cstring>\nusing namespace std;\n\n#define Sq(c) ((c)*(c))\n\nconst int MAX_N = 13;\nconst int INF = 1<<27;\n\nint n;\ndouble r[MAX_N];\ndouble dp[(1<<MAX_N)][MAX_N];\ndouble dist[MAX_N][MAX_N];\n\ndouble rec(int S, int v) {\n  if(dp[S][v] >= 0) return dp[S][v];\n  \n  if(S == (1<<n)-1 && v==0) return dp[S][v]=0;\n  \n  double res = INF;\n  for(int u=0; u<n; u++) {\n    if(!(S >> u & 1)) res = min(res, rec(S | 1 << u, u) + dist[v][u]);\n  }\n  return dp[S][v] = res;\n}\n\nint main() {\n  \n  double width;\n  string str;\n\n  while(getline(cin, str)) {\n    stringstream ss(str);\n    \n    ss >> width;\n    n = 0;\n    while( ss >> r[n] ) n++;\n    \n    memset(dp, -1, sizeof(dp));\n\n    for(int i=0; i<n; i++) {\n      for(int j=0; j<n; j++) {\n\tdist[i][j] = sqrt( Sq( r[i]+r[j] ) - Sq( r[i]-r[j] ) );\n      }\n    }\n    // テ・ツキツヲテ・ツ渉ウテ、ツクツ。テァツォツッテ」ツ?ォテヲツウツィテヲツ??\n    for(int i=0; i<n; i++) {\n      dist[i][n] = dist[n][i] = r[i];\n    }\n    n ++;\n    \n    if( rec(0, 0) <= width ) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n    \n    // printf(\"%lf\\n\", dp[0][0]);\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECURE_NO_WARNINGS 1\n# include <iostream>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <map>\n# include <stack>\nusing namespace std;\n//# define M_PI 3.141592\n# define FOR(i,n) for(int i=0;i<(int)n;i++)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define toRad 2.0*M_PI/360.0\n# define inin(x) int x;cin>>x;\n# define all(x) x.begin(),x.end()\n# define debug(x) cout<<#x<<\" :\"<<x<<endl;\n# define rep(i,n) for(int i=0;i<(int)n;i++)\n# define EPS 1e-12\n# define CHECK(i,a) FOR(i,a.size())cout<<#a<<\"[\"<<i<<\"] : \"<<a[i]<<endl; \ndouble calc(vector<double> a)\n{\n\tdouble ans = 0;\n\tfor (int i = 0; i < a.size()-1; i++)\n\t{\n\t\tdouble t = a[i] + a[i + 1];\n\t\tdouble r = abs(a[i] - a[i + 1]);\n\t\tans += sqrt(t*t - r*r);\n\t}\n\tans += a.front()+a.back();\n\treturn ans;\n}\n\nint main()\n{\n\tstring s;\n\twhile (getline(cin,s))\n\t{\n\t\tstringstream ss(s);\n\t\tdouble n;\n\t\tvector<double>a,A;\n\t\tss >> n;\n\t\tdouble temp;\n\t\twhile (ss >> temp)\n\t\t{\n\t\t\ta.push_back(temp);\n\t\t}\n\t\tbool ok = false;\n\t\tsort(all(a));\n\t\tdouble ans = n*n;\n\t\tdo\n\t\t{\n\t\t\tans = min(ans, calc(a));\n\t\t} while (next_permutation(all(a)));\n\n\t\tok = (ans <= n);\n\n\t\tif (ok)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <cstdlib>\n#include <ctime>\n#include <stdio.h>\nusing namespace std;\n\nconst int LOOP = 100000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n        int a = rand() % N;\n        int b = rand() % N;\n        swap(r[a],r[b]);\n        if(Evaluate(r) <= mi) mi = Evaluate(r);\n        else\n        {\n            if(Changes(cnt)) mi = Evaluate(r);\n            else swap(r[a],r[b]);\n        }\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n#define DBL(x) ((x)*(x))\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\ndouble dp[1<<12][12];\nint r[12];\nint n;\nint len;\n\ndouble length(int flag, int last){\n  if(last != -1 && dp[flag][last] != 0) return dp[flag][last];\n  if(flag == 0) return r[last];\n\n  double ret = 1e10;\n  for(int i=0; i<n; i++){\n    if(flag & (1 << i)){\n      int r2 = r[i];\n      double r3;\n      if(last == -1)\n        r3 = r2;\n      else{\n        int r1 = r[last];\n        r3 = sqrt(DBL(r1+r2) - DBL(r1-r2));\n      }\n      double tmp = r3 + length(flag ^ (1<<i), i);\n      ret = min(ret, tmp);\n    }\n  }\n  if(last != -1) dp[flag][last] = ret;\n  return ret;\n}\n\nint main(){\n  string str;\n  while(getline(cin, str)){\n    stringstream ss(str);\n    int i;\n    ss>>len;\n    for(i=0; ss>>r[i]; n=++i);\n    memset(dp, 0, sizeof(dp));\n    double l = length((1<<n)-1,-1);\n    //printf(\"n=%d %f\\n\",n,l);\n    puts(l <= len + 1e-10 ? \"OK\" : \"NG\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nconst double EPS = 1e-10;\n\nmain(){\n  int L;\n  int data[12];\n  int num[12];\n  for(int i=0;i<12;i++){\n    num[i] = i;\n  }\n  while(cin >> L){\n    int size;\n    for(size=0;;size++){\n      char c;\n      scanf(\"%d%c\", &data[size], &c);\n      if(c == '\\n'){\n\tsize++;\n\tbreak;\n      }\n    }\n    double data2[12][12];\n    for(int i=0;i<size;i++){\n      for(int j=0;j<size;j++){\n\tint a = abs(data[i] - data[j]);\n\tint b = data[i] + data[j];\n\tdata2[i][j] = sqrt((double)(b*b) - (double)(a*a));\n      }\n    }\n    sort(num, num+size);\n    bool f = false;\n    do{\n      double length = data2[num[0]][num[size-1]];\n      for(int i=0;i<size-1;i++){\n\tlength += data2[num[i]][num[i+1]];\n      }\n      if(length < L || abs(length - L) < EPS){\n\tf = true;\n\tbreak;\n      }\n      //cout << length << ' ' << L << endl;\n    }while(next_permutation(num, num+size));\n    if(f) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[p[0]-1];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0*sqs[r[p[i]-1]][r[p[i+1]-1]];\n\t}\n\ttw += r[p[n-1]-1];\n\tif( tw <= w ){\n\t\t//for(int i = 0; i < n; i++) cout << p[i] << ' ';\n\t\t//cout << \": \" << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif( solve( p, num, w, r) ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "# include <iostream>\n# include <sstream>\n# include <string>\n# include <cmath>\n# include <algorithm>\nconst int MAX_N = 12;\nconst int INF = (1 << 16);\n\nint n, l;\nint r[MAX_N];\ndouble memo[1 << MAX_N][MAX_N];\n\ndouble solve(int s, int v) {\n\tif (s == (1 << n) - 1)\n\t\treturn r[v];\n\tif (memo[s][v] != -1)\n\t\treturn memo[s][v];\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (!((s >> i) & 1))\n\t\t\tres = std::min(res, solve(s | (1<<i), i) + sqrt(pow(r[i] + r[v], 2) - pow(r[i] - r[v], 2)));\n\t}\n\treturn memo[s][v] = res;\n}\n\nint main() {\n\twhile (1) {\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tstd::string str;\n\t\tstd::getline(std::cin, str);\n\t\tstd::stringstream s(str);\n\t\ts >> l;\n\t\ts.ignore();\n\t\twhile (!s.eof()) {\n\t\t\tint a;\n\t\t\ts >> a;\n\t\t\tr[n] = a;\n\t\t\t++n;\n\t\t\ts.ignore();\n\t\t}\n\t\tfor (int i = 0; i < (1 << n); ++i) {\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tmemo[i][j] = -1.0;\n\t\t}\n\t\tdouble ans = INF;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tans = std::min(ans, solve((1 << i), i) + r[i]);\n\t\t}\n\t\tif (ans <= l)\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\telse\n\t\t\tstd::cout << \"NA\" << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <list>\n#include <map>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define SUPrl 13\n#define UNDEFCHAN 1145\n\nint rl;\nint rs[SUPrl];\nint L;\ndouble memf[1<<SUPrl][SUPrl];\n\nvoid resetf(){\n\tFOR(s,0,1<<rl) FOR(ri,0,rl) memf[s][ri]=UNDEFCHAN;\n}\n\ndouble f(int s, int ri){\t\t\t//min_({a0,a1,..ri}=s) (sqrt(a0)-sqrt(a1))^2 + (sqrt(a1)-sqrt(a2))^2 + ..ri))^2\n\tif(memf[s][ri]!=UNDEFCHAN) return memf[s][ri];\n\tdouble re=0;\n\t\n\tint a=0;\n\tFOR(ari,0,rl) if((s>>ari&1)==1) a++;\n\t\n\tif(a==1) re=0;\n\telse{\n\t\tFOR(bri,0,rl){\n\t\t\tif((s>>bri&1)==0) continue;\n\t\t\tif(bri==ri) continue;\n\t\t\tre = max(re, f(s-(1<<ri),bri) + pow(sqrt(rs[bri])-sqrt(rs[ri]), 2) );\n\t\t}\n\t}\n\n\tmemf[s][ri]=re;\n\treturn re;\n}\n\nvoid showf(){\n\tFOR(s,0,1<<rl) FOR(ri,0,rl) cout << s <<\" \"<< ri <<\" \"<< memf[s][ri]<<endl;\n}\n\ndouble solve(){\n\tdouble re=0;\n\tFOR(ri,0,rl) re = max(re,f((1<<rl)-1,ri));\n\tre = -re;\n\tFOR(ri,0,rl) re += 2*rs[ri];\n\treturn re;\n}\n\nint main(){\n\twhile(cin>>L){//if(!L) return 0;\n\t\trl=0;\n\t\twhile(cin.peek()!='\\n'){\n\t\t\tcin >> rs[rl++];\n\t\t}\n\t\tresetf();\n\t\tdouble re = solve();\n\t\t//showf();\n\t\tif(re<=L) cout<<\"OK\"<<endl; else cout<<\"NA\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = (double)BIG_NUM;\n\n\tfor(int start_town = 0; start_town < info_index;start_town++){\n\n\t\tfor(int i = 0; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index;k++){\n\t\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t\t}\n\t\t}\n\n\t\tint next_state;\n\n\t\tnext_state = pow(2,start_town);\n\n\t\tdp[0][start_town][next_state] = info[start_town].r;\n\n\t\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\t\tif(i == info_index && a == start_town && state == limit-1 && k != start_town){\n\t\t\t\t\t\t\t\t\tdp[i][start_town][limit-1] = min(dp[i][start_town][limit-1],dp[i-1][k][state]+info[k].r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tminimum = min(minimum,dp[info_index][start_town][limit-1]);\n\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n\n    if(r.size()<=5){\n        sort(r.begin(),r.end());\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.000001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cmath>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint main()\n{\n\tdouble tbl_sqrt[101];\n\tfor(int i=1;i<=100;i++)\ttbl_sqrt[i]=sqrt(i);\n\n\tint box;\n\twhile(~scanf(\"%d \",&box)){\n\t\tint r[12],n;\n\t\tfor(n=1;;n++){\n\t\t\tscanf(\"%d\",r+n-1);\n\t\t\tif(getchar()=='\\n')\tbreak;\n\t\t}\n\n\t\tdouble wmin=2*box;\n\t\tsort(r,r+(n+1)/2);\n\t\tdo{\n\t\t\tsort(r+(n+1)/2,r+n);\n\t\t\tdo{\n\t\t\t\tint xr[12];\n\t\t\t\tfor(int i=0;i<=n/2;i++){\n\t\t\t\t\txr[2*i+0]=r[i];\n\t\t\t\t\txr[2*i+1]=r[n-1-i];\n\t\t\t\t}\n\n\t\t\t\tdouble w=xr[0]+xr[n-1];\n\t\t\t\tfor(int i=0;i<n-1;i++)\tw+=2*tbl_sqrt[xr[i]*xr[i+1]];\n\t\t\t\twmin=min(wmin,w);\n\t\t\t}while(next_permutation(r+(n+1)/2,r+n));\n\t\t}while(next_permutation(r,r+(n+1)/2));\n\n\t\tputs(wmin<=box?\"OK\":\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<sstream>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint w,n; int c[12];\nstring s;\n\ndouble calc(int *c){\n\tdouble r=c[0]+c[n-1];\n\tfor(int i=0;i<n-1;i++)r+=2*sqrt(c[i]*c[i+1]);\n\treturn r;\n}\nint main(){\n\twhile(getline(cin,s)){\n\t\tstringstream ss; ss<<s;\n\t\tss>>w;\n\t\tfor(n=0;ss>>c[n];n++);\n\t\tdo{\n\t\t\tif(calc(c)<=w){\n\t\t\t\tcout<<\"OK\"<<endl;\n\t\t\t\tgoto NEXT;\n\t\t\t}\n\t\t}while(next_permutation(c,c+n));\n\t\tcout<<\"NA\"<<endl;\n\t\tNEXT:;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\ndouble dp[13][11][1<<13];\ndouble calc(vector<int>&v, int s, int n, int p, int b)\n{\n  if(n == 0) return p;\n  if(dp[n][p][b] != 0) return dp[n][p][b];\n  double m = 300.0;\n  for(int i=0; i<s; i++){\n    if(!(b & (1 << i))){\n      double d;\n      if(p == 0) d = v[i];\n      else {\n\tdouble q = p - v[i];\n\tdouble r = p + v[i];\n\tdouble cos = sqrt(1.0 - q * q / (r * r));\n\td = r * cos;\n      }\n      d += calc(v,s,n-1,v[i],(b | (1 << i)));\n      m = min(m, d);\n    }\n  }\n  dp[n][p][b] = m;\n  return m;\n}\nint main()\n{\n  string s;\n  while(getline(cin, s)){\n    istringstream in(s);\n    int n=0, i;\n    double w;\n    vector<int> v;\n    in >> w;\n    while(in >> i){\n      v.push_back(i);\n      n++;\n    }\n    memset(dp,0,sizeof(dp));\n    double r = calc(v,n,n,0,0);\n    if(w < r) cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <cmath>\nusing namespace std;\n\nint main(){\n\tdouble dp[12][1<<12] = {};\n\tstring ln;\n\twhile( getline(cin,ln) ){\n\t\tfor(int i = 0 ; i < 12 ; i++)\n\t\t\tfor(int j = 0 ; j < 1<<12 ; j++)\n\t\t\t\tdp[i][j] = 1e9;\n\t\tstringstream ss(ln);\n\t\tvector<int> item;\n\t\t\n\t\tint w,t;\n\t\tss >> w;\n\t\twhile(ss >> t)item.push_back(t);\n\t\tfor(int i = 0 ; i < item.size() ; i++){\n\t\t\tdp[i][1<<i] = item[i];\n\t\t}\n\t\tfor(int i = 0 ; i < (1<<item.size()) ; i++){\n\t\t\tfor(int j = 0 ; j < item.size() ; j++){\n\t\t\t\tfor(int k = 0 ; k < item.size() ; k++){\n\t\t\t\t\tdp[k][i|(1<<k)] = min( dp[k][i|(1<<k)] , dp[j][i] + sqrt( (item[j]+item[k])*(item[j]+item[k])-(item[j]-item[k])*(item[j]-item[k]) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tdouble ans = 1e9;\n\t\tfor(int i = 0 ; i < item.size() ; i++){\n\t\t\tans = min( ans , dp[i][(1<<item.size())-1] + item[i]);\n\t\t}\n\t\tif( ans <= w + 1e-9 ){\n\t\t\tcout << \"OK\" << endl;\n\t\t}else{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div; //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = 0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\tif(i == info_index && a == 0 && state == limit-1 && k != 0){\n\t\t\t\t\t\t\t\tdp[i][0][limit-1] = min(dp[i][0][limit-1],dp[i-1][k][state]+distance[k][0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\tprintf(\"OK %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <sstream>\n#define MAX_N 12\n#define INF 10000\nusing namespace std;\nvector<int> cakes;\nint n;\ndouble d[MAX_N][MAX_N];\ndouble dp[1 << MAX_N][MAX_N];\n\nvoid calc_dist(){\n    int n = cakes.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = 0;  j < n; j++) {\n            if (i == j) {\n                d[i][j] = 0;\n            }else{\n                double dist = sqrt(pow(cakes[i] + cakes[j], 2) - pow(cakes[i] - cakes[j], 2));\n                d[i][j] = dist;\n            }\n        }\n    }\n}\n\ndouble solve(){\n    n = cakes.size();\n    for (int s = 0; s < 1 << n; s++) {\n        for (int j = 0; j < n; j++) {\n            dp[s][j] = INF;\n        }\n    }\n    \n    dp[(1 << n) - 1][0] = 0;\n    \n    for (int s = (1 << n) - 2; s >= 0; s--) {\n        for (int v = 0; v < n; v++) {\n            for (int u = 0; u < n; u++) {\n                if (!(s >> u & 1)) {\n                    dp[s][v] = min(dp[s][v], dp[s | 1 << u][u] + d[v][u]);\n                }\n            }\n        }\n    }\n    return dp[0][0];\n}\n\n\nint main()\n{\n    int len;\n\n    while (cin >> len) {\n        cakes.clear();\n        string str;\n        getline(cin, str);\n        stringstream ss(str);\n        while (!ss.eof()) {\n            int r;\n            ss >> r;\n            cakes.push_back(r);\n        }\n        calc_dist();\n        double ans = solve();\n        if (ans <= len){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NA\" << endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <list>\n#include <iostream>\n#include <sstream>\n#include <climits>\n#include <cfloat>\n\ntypedef long long ll;\n\nusing namespace std;\n\n\nint main()\n{\n\twhile (true)\n\t{\n\t\tchar buf[256];\n\t\tcin.getline(buf, sizeof(buf));\n\t\tif (strlen(buf) == 0)\n\t\t\tbreak;\n\n\t\tistringstream is(buf);\n\t\tint len, r[16], n;\n\t\tis >> len;\n\t\tfor (n = 0; is >> r[n]; ++n)\n\t\t\t;\n\n\t\tsort(r, r + n);\n\t\tint s[16];\n\t\tfor (int i = 0; i < n / 2; ++i)\n\t\t\ts[i*2 + 1] = r[n-i-1];\n\t\t\n\t\tdouble ans = 1e6;\n\t\tdo\n\t\t{\n\t\t\tfor (int i = 0; i < (n+1)/2; ++i)\n\t\t\t\ts[i*2] = r[i];\n\t\t\tdouble res = 0;\n\t\t\tres += s[0] + s[n-1];\n\t\t\tfor (int i = 1; i < n; ++i)\n\t\t\t\tres += sqrt((double)(((s[i-1]+s[i])*(s[i-1]+s[i]) - (s[i-1]-s[i])*(s[i-1]-s[i]))));\n\n\t\t\tans = min(ans, res);\n\t\t} while (next_permutation(r, r+n/2));\n\t\tprintf(\"%f\\n\", ans);\n\t\tif (ans <= len + 1e-4)\n\t\t\tprintf(\"OK\\n\");\n\t\telse\n\t\t\tprintf(\"NA\\n\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n#include <iomanip>\n#include <iterator>\n#include <cassert>\n\nusing namespace std;\ntypedef long long ll;\nconst int MODULO = 1000000007;\nconst int INF = 100000000; //1e8\n\ntypedef long long ll;\ntypedef pair<int,int> Pii;\ntypedef pair<ll,ll> Pll;\ntypedef complex<double> Cd;\n\n#define FOR(i,n) for(int i = 0; i < (n); i++)\n#define sz(c) ((int)(c).size())\n\ntemplate<class T>\nvoid splitstr(const string &s, vector<T> &out)\n{\n    istringstream in(s);\n    out.clear();\n    copy(istream_iterator<T>(in), istream_iterator<T>(), back_inserter(out));\n}\n\nvector<int> a;\ndouble memo[12][1 << 12];\n\ndouble solve(int start,int flag,int rest){\n\tif(memo[start][flag] > 0) return memo[start][flag];\n\tif(rest == 0)\n\t\treturn memo[start][flag] = a[start];\n\tdouble ret = INF;\n\tFOR(i,sz(a)){\n\t\tif((1<<i)&flag) continue;\n\t\tdouble add = solve(i,flag|(1<<i),rest - 1) + sqrt((double)a[start] * a[i]) * 2;\n\t\tret = min(ret,add);\n\t}\n\treturn memo[start][flag] = ret;\n}\n\nint main(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tsplitstr(s,a);\n\t\tint n = a[0];\n\t\ta.erase(a.begin());\n\t\tint m = sz(a);\n\n\t\tdouble mn = INF;\n\t\tFOR(j,m) fill(memo[j],memo[j] + (1 << m),-1.0);\n\t\tFOR(i,m){\n\t\t\tmn = min(mn,solve(i,1<<i,m-1) + a[i]);\n\t\t}\n\n\t\tcout << (n >= mn ? \"OK\" : \"NA\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    sort(temps.begin(), temps.end());\n\n    {\n      for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n        if (lb == ub) {\n          if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n            cakes.push_back(temps[lb]);\n          else\n            inserter(cakes, cakes.begin()) = temps[lb];\n        } else {\n          cakes.push_back(temps[lb]);\n          cakes.push_back(temps[ub]);\n        }\n      }\n    }\n    \n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    for( int i = 0; i < N / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      else {\n        // cakes.push_back(0);\n        // for (int i = cakes.size()-2; i >= 0; --i) cakes[i+1] = cakes[i];\n        // cakes[0] = e;\n        cakes.push_back(e);\n      }\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 1e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n/*\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}*/\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\t//if(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\tif(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        /*if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }*/\n    }\n    bs.push_back(right);\n    double req = bs[0] + bs[size-1];\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    deque<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    sort(temps.begin(), temps.end(), greater<int>());\n    for (;temps.size();) {\n      int front = temps.front();\n      temps.pop_front();\n      if (temps.size() == 0) {\n        if (abs(front - *cakes.begin()) > abs(front - *cakes.rbegin())) {\n          // inserter(temps, temps.begin()) = front;\n          inserter(cakes, cakes.begin()) = front;\n        } else {\n          cakes.push_back(front);\n        }\n        break;\n      }\n      int back = temps.back();\n      temps.pop_back();\n      cakes.push_back(front);\n      cakes.push_back(back);\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes[0];\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      if (cakes[i] == cakes[i+1]) {\n        current_length += 2 * cakes[i];\n      } else {\n        int larger = max(cakes[i], cakes[i+1]);\n        int smaller = min(cakes[i], cakes[i+1]);\n        double height = larger - smaller;\n        double naname = larger + smaller;\n        double width = sqrt(pow(naname, 2) - pow(height, 2));\n        current_length += width;\n      }\n    }\n    current_length += cakes[cakes.size() - 1];\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nvoid update(double& a, double b){\n    a = min(a, b);\n}\n\nint main()\n{\n    vector<vector<double> > x(11, vector<double>(11));\n    for(int i=3; i<=10; ++i){\n        for(int j=3; j<=i; ++j){\n            x[i][j] = x[j][i] = sqrt(pow(i+j, 2.0) - pow(i-j, 2.0)); \n        }\n    }\n\n    for(;;){\n        string s;\n        if(!getline(cin, s))\n            return 0;\n        istringstream iss(s);\n        int w;\n        iss >> w;\n        vector<int> r;\n        for(;;){\n            int a;\n            if(!(iss >> a))\n                break;\n            r.push_back(a);\n        }\n        int n = r.size();\n\n        vector<vector<double> > dp(1<<n, vector<double>(11, w+1));\n        for(int i=0; i<n; ++i)\n            dp[1<<i][r[i]] = r[i];\n\n        for(int i=0; i<(1<<n); ++i){\n            bitset<12> bs(i);\n            for(int j=0; j<n; ++j){\n                if(bs[j])\n                    continue;\n                bitset<12> bs1 = bs;\n                bs1[j] = true;\n                for(int k=3; k<=10; ++k)\n                    update(dp[bs1.to_ulong()][r[j]], dp[bs.to_ulong()][k] + x[k][r[j]]);\n            }\n        }\n\n        bool ok = false;\n        for(int i=3; i<=10; ++i){\n            if(dp[(1<<n)-1][i] + i <= w)\n                ok = true;\n        }\n        if(ok)\n            cout << \"OK\" << endl;\n        else\n            cout << \"NA\" << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define REP(i, a, b) for (int i = (a); i < (b); ++i)\n#define rep(i, n) REP(i, 0, n)\nint main()\n{\n    int a[12];\n    char b[256];\n    while (fgets(b, 256, stdin)) {\n        char* p = strtok(b, \" \");\n        int L = atoi(p);\n        int n = 0;\n        while (p = strtok(NULL, \" \")) a[n++] = atoi(p);\n\n        bool ok = false;\n        std::sort(a, a+n);\n        do {\n            double t = a[0];\n            REP(i, 1, n) {\n                int r1 = a[i-1];\n                int r2 = a[i];\n                if (r1 < r2) std::swap(r1, r2);\n                t += 2 * sqrt(r1 * r2);\n            }\n            t += a[n-1];\n            if (!(t > L)) { ok = true; break; }\n        } while (std::next_permutation(a, a+n));\n\n        puts(ok ? \"OK\" : \"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <sstream>\n#include <cstring>\nusing namespace std;\n\n#define Sq(c) ((c)*(c))\n\nconst int MAX_N = 12;\nconst int INF = 1<<27;\n\nint n;\ndouble r[MAX_N+1];\ndouble dp[(1<<MAX_N)+1][MAX_N+1];\ndouble dist[MAX_N+1][MAX_N+1];\n\ndouble rec(int S, int v) {\n  if(dp[S][v] >= 0) return dp[S][v];\n  \n  if(S == (1<<n)-1 && v==0) return dp[S][v]=0;\n  \n  double res = INF;\n  for(int u=0; u<n; u++) {\n    if(!(S >> u & 1)) res = min(res, rec(S | 1 << u, u) + dist[v][u]);\n  }\n  return dp[S][v] = res;\n}\n\nint main() {\n  \n  double width;\n  string str;\n\n  while(getline(cin, str)) {\n    stringstream ss(str);\n    \n    ss >> width;\n    n = 0;\n    while( ss >> r[n] ) n++;\n    \n    memset(dp, -1, sizeof(dp));\n\n    for(int i=0; i<n; i++) {\n      for(int j=0; j<n; j++) {\n\tdist[i][j] = sqrt( Sq( r[i]+r[j] ) - Sq( r[i]-r[j] ) );\n      }\n    }\n    // テ・ツキツヲテ・ツ渉ウテ、ツクツ。テァツォツッテ」ツ?ォテヲツウツィテヲツ??\n    for(int i=0; i<n; i++) {\n      dist[i][n] = dist[n][i] = r[i];\n    }\n    n ++;\n    \n    if( rec(0, 0) <= width ) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n    \n    // printf(\"%lf\\n\", dp[0][0]);\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <cmath>\nusing namespace std;\n#define rep(i,a) for(int i = 0; i < a; i++)\n#define repd(i,a,b) for(int i = a; i > b; i--)\n#define pb push_back\n#define INF 10000000\n\nint main(){\n    string str;\n    while(getline(cin,str)){\n        vector<int> r;\n        stringstream s(str);\n        int n = 0, w;\n        s >> w;\n        while(!s.eof()){\n            int t;\n            s >> t;\n            r.pb(t);\n            n++;\n        }\n        vector<vector<double> > dp(1<<n,vector<double> (n,INF));\n        rep(i,n) dp[(1<<n)-1-(1<<i)][i] = r[i];\n\n        repd(i,(1<<n)-2,-1) rep(j,n){\n            if(!(i&(1<<j))){\n                rep(k,n) {\n                    dp[i][j] = min(dp[i][j],dp[i|(1<<j)][k]+2*sqrt(r[j]*r[k]));\n                }\n            }\n        }\n        double ans = INF;\n        rep(i,n) ans = min(ans,dp[0][i]+r[i]);\n        cout << ((ans <= w)? \"OK\": \"NA\") << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.0001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    //srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<algorithm>\n#define S(x) ((x)*(x))\nint main()\n{\n\tint m,n,a[13],i;\n\tchar*p,*q,s[64];\n\tdouble c[11][11]={0};\n\tfor(n=3;n<11;++n)for(m=3;m<11;++m)c[n][m]=sqrt((double)S(n+m)-S(n-m));\n\twhile(fgets(s,64,stdin))\n\t{\n\t\tm=strtol(s,&p,10);\n\t\tfor(n=0;a[n]=strtol(p,&q,10),p!=q;++n)p=q;\n\t\tif(!n)continue;\n\t\tstd::sort(a,a+n);\n\t\tdo\n\t\t{\n\t\t\tdouble d=a[0]+a[n-1];\n\t\t\tfor(i=0;i<n-1;++i)d+=c[a[i]][a[i+1]];\n\t\t\tif(m>=d){puts(\"YES\");goto E;}\n\t\t}while(std::next_permutation(a,a+n));\n\t\tputs(\"NO\");\nE:;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <memory>\n#include <string>\n\n#include <algorithm>\n#include <complex>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n#include <bitset>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\n#define strtok_r strtok_s\n#endif\n\n#define ITER(c)             __typeof__((c).begin())\n#define FOREACH(it, c)      for (ITER(c) it=(c).begin(); it != (c).end(); ++it)\n#define RITER(c)            __typeof__((c).rbegin())\n#define RFOREACH(it, c)     for (RITER(c) it=(c).rbegin(); it != (c).rend(); ++it)\n#define REP(i, n)           REPEAT(i, 0, n)\n#define RREP(i, n)          RREPEAT(i, 0, n)\n#define REPEAT(i, k, n)     for(int i = (k); i < (k+n); ++i)\n#define RREPEAT(i, k, n)    for(int i = (k)+(n)-1; i >= (k); --i)\n#define FROMTO(i,f,t)       for(int i = f; i < t; i++)\n#define ALL(c)              (c).begin(), (c).end()\n#define LLPOW(p1,p2)        ((ll)pow((double)(p1), (int)p2))\n#define ESIZEOF(A)          (sizeof(A)/sizeof((A)[0]))\n#define CIN_NO_SYNC         do { cin.tie(0); ios_base::sync_with_stdio(false); } while(0)\n#define GETSTR(p)           fgets((p), sizeof(p), stdin)\n#define CHOMP(p)            do{ char *_q = (p) + strlen(p)-1; if(*_q == '\\n' || *_q == '\\r') *_q = 0; } while(0)\n#define FILL(m,v)           memset(m, v, sizeof(m))\n#define mp                  make_pair\n#define pb                  push_back\ntemplate<class _T> _T MAX(_T p1,_T p2){return (p1>p2)?p1:p2;} \ntemplate<class _T> _T MIN(_T p1,_T p2){return (p1<p2)?p1:p2;} \ntemplate <class _Tv> inline string join(_Tv &v,string sep=\" \"){\n    ostringstream s;FOREACH(it,v){if(it!=v.begin())s<<sep;s<<*it;};return s.str();\n}\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define X real()\n#define Y imag()\ntypedef double D;\ntypedef complex<D> P;\n#define EPS (1e-9)\n\n#ifdef _DEBUG\ntemplate<class _Tv> inline void _prfe(const char *_n,_Tv _c,bool _p=false){\n    ITER(_c) _it=_c.begin();\n    if(_p){cout<<_n<<\" = [\"<<endl;for(;_it!=_c.end();++_it)cout<<\"    \"<<*_it<<endl;cout<<\"]\"<<endl; }\n    else{cout<<_n<<\" = [ \"<<*_it++;for(;_it!=_c.end();++_it)cout<<\", \"<<*_it;cout<<\" ]\"<<endl; }\n}\n#define pf printf\n#define pr(n) do{cout<<#n\" = \"<<(n)<<endl;}while(0)\n#define prfe(n) _prfe(#n, n)\n#define prfep(n) _prfe(#n, n, true)\n#define dbgchk(n) do{if(n)throw;}while(0)\n#else\n#define pf(...) /* */\n#define pr(...) /* */\n#define prfe(...) /* */\n#define prfep(...) /* */\n#define dbgchk(...) /* */\n#endif\n\nbool check(int b, vector<int> &v){\n    int n = v.size();\n    double l = 0;\n    REP(i,n){\n        if(i == 0){ l += v[i]*2; continue; }\n        double r2 = (v[i-1]+v[i])*(v[i-1]+v[i]);\n        double y2 = (v[i-1]-v[i])*(v[i-1]-v[i]);\n        // x^2 + y^2 = (r1+r2)^2\n        double x = sqrt(r2-y2);\n        l = l - v[i-1] + x + v[i];\n    }\n    pf(\"l = %.2f, b = %.0f\\n\", l, (double)b);\n    if(l <= (double)b){\n        return true;\n    }\n    return false;\n}\nvoid solve(int b, vector<int> &v){\n    int n = v.size();\n    vector<int> u;\n\n    REP(i,n){\n        u = v;\n        swap(u[0],u[i]);\n        REP(i,n-1) FROMTO(j,i+1,n)\n            if(abs(u[i]-u[i+1]) < abs(u[i]-u[j])) swap(u[i+1],u[j]);\n        prfe(u);\n        if(check(b, u)){\n            cout << \"OK\" << endl;\n            return;\n        }\n    }\n    cout << \"NA\" << endl;\n}\n\nint main(){\n    string s;\n    while(getline(cin,s)){\n        istringstream ss(s);\n        int b, n;\n        vector<int> v;\n        ss >> b;\n        while(ss >> n) v.pb(n);\n        solve(b, v);\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//38\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<vector>\n#include<cmath>\n \nusing namespace std;\n \nint c[11];\n \nbool dfs(double r,int nr,int p){\n  if(nr==0){\n    return r>=p;\n  }else{\n    for(int i=3;i<=10;i++){\n      if(c[i]){\n\tc[i]--;\n\tif(dfs(r-2*sqrt(i*p),nr-1,i))return true;\n\tc[i]++;\n      }\n    }\n    return false;\n  }\n}\n \nint main(){\n  for(int w;cin>>w;){\n    string s;\n    getline(cin,s);\n    stringstream ss(s);\n    fill(c,c+11,0);\n    int nr=0;\n    for(int r;ss>>r;){\n      c[r]++;\n      nr++;\n    }\n    int i;\n    for(i=3;i<=10;i++){\n      if(c[i]){\n\tc[i]--;\n\tif(dfs(w-i,nr-1,i))break;\n\tc[i]++;\n      }\n    }\n    cout<<((i<=10)?\"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15]={0};\n    double cake_length=0;\n    int last_cake;\n};\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count])cake_count++;\n        \n        queue<some_cake> qu;\n        some_cake temp ={};\n        qu.push(temp);\n        bool ans_flag=true;\n        while(qu.size()!=0){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <cstdlib>\n#include <ctime>\n#include <stdio.h>\nusing namespace std;\n\nconst int LOOP = 100000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n        int a = rand() % N;\n        int b = rand() % N;\n        swap(r[a],r[b]);\n        if(Evaluate(r) <= mi) mi = Evaluate(r);\n        else\n        {\n            if(Changes(cnt)) mi = Evaluate(r);\n            else swap(r[a],r[b]);\n        }\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n \nusing namespace std;\n\n#define MAX 15\n#define INF 1e9\n\ndouble dp[1<<MAX][MAX];\ndouble dist[MAX][MAX];\nint N;\n \ndouble rec(int S, int v)\n{\n    if (dp[S][v] >= 0) return dp[S][v];\n    if (S == (1 << N)-1 && v == 0) return dp[S][v] = 0;\n \n    double res = INF;\n    for (int i = 0; i < N; i++) {\n\tif (!(S >> i & 1)) { \n\t    res = min(res, rec(S | 1 << i, i) + dist[v][i]);\n\t}\n    }\n    return dp[S][v] = res;\n}\n \nint main()\n{\n    string in;\n   \n    while (getline(cin, in)) {\n\tvector<double> v;\n\tstringstream s(in);\n\tint num, box_length;\n \n\ts >> box_length;\n \n\twhile (s >> num) {\n\t    v.push_back(num);\n\t}\n \n\tN = (int)v.size();\n\tmemset(dp, -1, sizeof(dp));\n \n\tfor (int i = 0; i < N; i++) {\n\t    for (int j = 0; j < N; j++) {\n\t\tif (i == j) {\n                    dist[i][j] = 0;\n\t\t} else {\n                    dist[i][j] = sqrt(pow(v[i] + v[j], 2.0) - pow(v[i] - v[j], 2.0));\n                }\n\t    }\n\t}      \n \n\tdist[N][N] = 0;\n\tfor (int i = 0; i < N; i++) {\n\t    dist[i][N] = dist[N][i] = v[i];   \n\t}\n\tN++;\n\tif (rec(0, 0) <= box_length) {\n            cout << \"OK\" << endl;\n\t} else {\n            cout << \"NA\" << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define INF 1001000100010001000\n#define INFd 1010001000\n#define MOD 1000000007\n#define EPS 1e-10\n#define int long long\n#define double long double\n#define rep(i, N) for (int i = 0; i < N; i++)\n#define Rep(i, N) for (int i = 1; i < N; i++)\n#define For(i, a, b) for (int i = (a); i < (b); i++)\n#define pb push_back\n#define eb emplece_back\n#define mp make_pair\n#define i_i pair<int, int>\n#define vi vector<int>\n#define vvi vector<vi >\n#define vb vector<bool>\n#define vvb vector<vb >\n#define vp vector< i_i >\n#define Edge pair< i_i, int>\n#define all(a) (a).begin(), (a).end()\n#define Int(x) int x; scanf(\"%lld\", &x);\n#define int2(x, y) int x, y; scanf(\"%lld %lld\", &x, &y);\n#define fir first\n#define sec second\n#define ffir first.first\n#define fsec first.second\n#define sfir second.first\n#define ssec second.second\n#define vd vector<double>\n#define vvd vector<vd>\n\n \n//int dxy[5] = {0, 1, 0, -1, 0};\n// assign\n\n\nvoid mmprint(int a)\n{\n    string st;\n    if (!a) cout << 0 << \" \";\n    else {\n        while (a) {\n            st.pb((a&1)+'0');\n            a >>= 1;\n        }\n        reverse(all(st));\n        cout << st << \" \";\n    }\n}\n \nsigned main()\n{\n    double len;\n    char t;\n    while (scanf(\"%Lf\", &len) != EOF) {\n        vi cake;\n        while (scanf(\"%c\", &t), t != '\\n') {\n            Int(tmp);\n            cake.pb(tmp);\n        }\n        vvd dp(1 << cake.size(), vd(cake.size(), INFd));\n        dp[0][0] = 0.0;\n \n        \n        rep(i, cake.size()) {\n            int tmp = 1 << i;\n            dp[tmp][i] = cake[i];\n        }\n        \n        rep(i, 1 << cake.size()) {\n           // mmprint(i);\n            rep(j, cake.size()) {\n                if (i & (1 << j)) {\n                    //cout << \"sento:\" << j << \" \";\n                    rep(k, cake.size()) {\n                        if (!(i & (1 << k))) {\n                            //cout << \"tsuika\" << k << \" \";\n                            //cout << \"tsuikasaki\" << (i|(1 << k)) << \" \";\n                            dp[i|(1 << k)][k] = min(dp[i|(1 << k)][k],\n                                    dp[i][j] + \n        sqrt( (double)((cake[j]+cake[k])*(cake[j]+cake[k])-\n                (cake[k]-cake[j])*(cake[k]-cake[j])) ));\n                        }\n                    }\n                }\n            }\n            //cout << endl;\n        }\n        rep(i, 1 << cake.size()) {\n            //mmprint(i);\n            rep(j, cake.size()) {\n                //cout << dp[i][j] << \" \";\n            }\n            //cout << endl;\n        }\n        bool ans = false;\n        rep(i, cake.size()) {\n            if (len >= dp[(1 << cake.size())-1][i] + (double)cake[i]) {\n                ans = true;\n                break;\n            }\n        }\n        cout << ( (ans) ? \"OK\" : \"NG\" ) << endl;\n    }\n\n\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> temps(20, 0), cakes;\n    priority_queue<P> Q;\n    int temp;\n    while (is >> temp) {\n      ++temps[temp];\n    }\n    rep(i,temps.size()) if(temps[i]) Q.push(P(temps[i], i));\n\n    int prev_size = -1;\n    while (!Q.empty()) {\n      P lhs = Q.top(); Q.pop();\n      if (Q.empty()) {\n        rep(i,lhs.first) cakes.push_back(lhs.second);\n        continue;\n      }\n      P rhs = Q.top(); Q.pop();\n      if (prev_size != lhs.second) {\n        cakes.push_back(lhs.second);\n        cakes.push_back(rhs.second);\n        prev_size = rhs.second;\n      } else {\n        cakes.push_back(rhs.second);\n        cakes.push_back(lhs.second);\n        prev_size = lhs.second;\n      }\n      if (lhs.first > 1) {\n        --lhs.first; Q.push(lhs);\n      }\n      if (rhs.first > 1) {\n        --rhs.first; Q.push(rhs);\n      }\n    }\n\n    double current_length = cakes[0];\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      if (cakes[i] == cakes[i+1]) {\n        current_length += 2 * cakes[i];\n      } else {\n        int larger = max(cakes[i], cakes[i+1]);\n        int smaller = min(cakes[i], cakes[i+1]);\n        double height = larger - smaller;\n        double naname = larger + smaller;\n        double width = sqrt(pow(naname, 2) - pow(height, 2));\n        // printf(\"%lf\\n\", width);\n        current_length += width;\n      }\n    }\n    current_length += cakes[cakes.size() - 1];\n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#pragma warning(disable:4996)\nusing namespace std;\n\nvector<string> split(const string &str, char delim) {\n\tvector<string> res;\n\tsize_t current = 0, found;\n\twhile ((found = str.find_first_of(delim, current)) != string::npos) {\n\t\tres.push_back(string(str, current, found - current));\n\t\tcurrent = found + 1;\n\t}\n\tres.push_back(string(str, current, str.size() - current));\n\treturn res;\n}\n\nint dp[40][1 << 20];\ndouble sho[20][20];\nint main() {\n\tstring st;\n\twhile (getline(cin,st)) {\n\t\tmemset(sho, 0, sizeof(sho));\n\t\tvector<string>input(split(st, ' '));\n\t\tint L = stoi(input[0]);\n\t\tvector<int>rads;\n\t\tint sum = 0;\n\t\tfor (int i = 1; i < input.size(); ++i) {\n\t\t\trads.push_back(stoi(input[i]));\n\t\t\tsum += rads.back()*2;\n\t\t}\n\t\tfor (int i = 0; i < rads.size(); ++i) {\n\t\t\tfor (int j = i + 1;  j<rads.size(); ++j) {\n\t\t\t\tsho[i][j] = (rads[i] + rads[j]) - sqrt(double((rads[i] + rads[j])*(rads[i] + rads[j]) - ((rads[i] - rads[j])*(rads[i] - rads[j]))));\n\t\t\t\tsho[j][i] = sho[i][j];\n\t\t\t}\n\t\t}\n\t\tvector<int>perms(rads.size());\n\t\tiota(perms.begin(), perms.end(),0);\n\t\tdouble maxsho = 0;\n\t\tdo {\n\t\t\tdouble nowsho = 0;\n\t\t\tfor (int i = 0; i < perms.size()-1; ++i) {\n\t\t\t\tnowsho += sho[perms[i]][perms[i + 1]];\n\t\t\t}\n\t\t\tmaxsho = max(maxsho, nowsho);\n\t\t} while (next_permutation(perms.begin(), perms.end()));\n\t\tif (L > sum-maxsho  ) {\n\t\t\tcout << \"OK\" << endl;\n\t\t}\n\t\telse {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <sstream>\n#include <cmath>\nusing namespace std;\n#define N_MAX 10\n#define INF 99999999\nint W;\nint N;\nint R[N_MAX];\ndouble D[N_MAX+1][N_MAX+1];\ndouble dp[(1<<N_MAX)][N_MAX+1];\n\n/*\ndouble rec(int s, int u) {\n  if(s == (1<<N) - 1) return 0;\n  double res = INF;\n  for(int v = 0; v < N; ++v) {\n    if((s>>v) & 1) continue;\n    res = min(res, D[u][v] + rec(s | (1<<v), v));\n  }\n  return res;\n}\n*/\n\nvoid make() {\n  for(int i = 0; i <= N; ++i) {\n    for(int j = 0; j < N; ++j) {\n      if(i == j) {\n\tD[i][j] = 0;\n      } else if(i == N || R[i] == R[j]) {\n\tD[i][j] = R[j] * 2;\n      } else {\n\tdouble d = sqrt( pow((double)(R[i]+R[j]), 2.0)\n\t\t\t - pow((double)(R[i]-R[j]), 2.0) );\n\tD[i][j] = d - R[i] + R[j];\n      }\n    }\n  }\n}\n\nvoid solve() {\n  make();\n  for(int i = 0; i < 1<<N; ++i) {\n    if(i == (1<<N)-1) fill(dp[i], dp[i]+N+1, 0);\n    else              fill(dp[i], dp[i]+N+1, INF);\n  }\n\n  for(int s = (1<<N) - 2; s >= 0; s--) {\n    for(int u = 0; u <= N; u++) {\n      for(int v = 0; v < N; v++) {\n\tif((s>>v) & 1) continue;\n\tdp[s][u] = min(dp[s][u], D[u][v] + dp[s|(1<<v)][v]);\n      }\n    }\n  }\n  cout << (dp[0][N] <= W ? \"OK\" : \"NA\") << endl;\n}\n\nmain() {\n  string line;\n  while(getline(cin, line)) {\n    stringstream ss;\n    ss << line;\n    ss >> W;\n    N = 0;\n    int a;\n    while(ss >> a) R[N++] = a;\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <string>\n#include <sstream>\n#include <vector>\n\nusing namespace std;\n\ndouble dp[1 << 12][12];\nint n;\nint c[12];\n\ndouble d(int back, int next){\n  return sqrt(pow(c[back]+c[next],2)-pow(c[back]-c[next],2));\n}\n\ndouble solve(int state, int back){\n  if(dp[state][back] != -1) return dp[state][back];\n  if(state == (1 << n) - 1) return dp[state][back]=c[back];\n\n  double ret=1e+20;\n  double dist;\n  for(int i=0;i<n;i++){\n    if(!((1 << i)&state)){\n      if(state==0){\n\tdist = c[i];\n      }else{\n\tdist = d(back,i);\n      }\n      ret = min(ret, solve(state|1<<i,i) + dist);\n    }\n  }\n  return dp[state][back] = ret;\n}\n\nint main(void){\n  string str;\n\n  while(getline(cin, str)){\n    istringstream iss(str);\n    double l;\n    double ret = 1e+20;\n    fill((double *)dp, (double *)dp+(1<<12)*12, -1);\n    memset(c, 0, sizeof(c));\n    n = 0;\n    iss >> l;\n    while(iss >> c[n]) n++;\n    ret = min(ret, solve(0, 0));\n\n    if(ret <= l){\n      cout << \"OK\" << endl;\n    }else{\n      cout << \"NA\" << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cmath>\n#include <string>\n#include <sstream>\n#include <vector>\nusing namespace std;\n\n#define sqr(x) ((x) * (x))\n#define INF 10000000\n\ndouble dptable[1 << 13][13];\ndouble used[1 << 13][13];\ndouble cost[13][13];\nint vertex;\nint width;\n\ndouble xdistance(double r1, double r2) {\n\tif(r1 == 0 || r2 == 0)\n\t\treturn max(r1, r2);\n\treturn sqrt(sqr(r1 + r2) - sqr(r1 - r2));\n}\n\nvoid pre(string str) {\n\tvector<int> radius;\n\tstringstream sstr(str);\n\tint tmp;\n\n\tradius.push_back(0);\n\tsstr >> width;\n\twhile(sstr >> tmp)\n\t\tradius.push_back(tmp);\n\tvertex = radius.size();\n\n\t/* cost */\n\tfor(int i = 0; i < radius.size(); i++) {\n\t\tfor(int j = 0; j < radius.size(); j++) {\n\t\t\tcost[i][j] = xdistance(radius[i], radius[j]);\n\t\t}\n\t\tcost[i][i] = 0;\n\t}\n\n\t/* dptable */\n\tfor(int i = 0; i < 1 << 13; i++) {\n\t\tfor(int j = 0; j < 13; j++) {\n\t\t\tdptable[i][j] = INF;\n\t\t}\n\t}\n\n\t/* used */\n\tfor(int i = 0; i < 1 << 13; i++) {\n\t\tfor(int j = 0; j < 13; j++) {\n\t\t\tused[i][j] = false;\n\t\t}\n\t}\n\n\tdptable[(1 << vertex) - 1][0] = 0;\n}\n\ndouble solve(int S, int u) {\n\tif(!used[S][u]) {\n\t\tfor(int i = 0; i < vertex; i++) {\n\t\t\tif(!(S & (1 << i))) {\n\t\t\t\tdptable[S][u] = min(dptable[S][u], solve(S | (1 << i), i) + cost[u][i]);\n\t\t\t}\n\t\t}\n\t\tused[S][u] = true;\n\t}\n\n\treturn dptable[S][u];\n}\n\nint main(void) {\n\tstring str;\n\n\twhile(getline(cin, str)) {\n\t\tpre(str);\n\t\tsolve(0,0);\n\n\t\tif(width >= dptable[0][0])\n\t\t\tcout << \"OK\" << endl;\n\t\telse\n\t\t\tcout << \"NA\" << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<bitset>\n#include<cassert>\n#include<cctype>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<functional>\n#include<limits>\n#include<list>\n#include<map>\n#include<numeric>\n#include<set>\n#include<stack>\n#include<string>\n#include<sstream>\n#include<queue>\n#include<vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define MOD 1000000007\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\n\nint main() {\n\tfor (int w; cin >> w;) {\n\t\tstring s; getline(cin, s);\n\t\tvector<int> c;\n\t\tstringstream ss(s);\n\t\twhile (!ss.eof()) {\n\t\t\tint r; ss >> r;\n\t\t\tc.push_back(r);\n\t\t}\n\t\tint bend = 1 << c.size();\n\t\tvector<vector<double> > dp(bend, vector<double>(c.size(), INF));\n\t\tfor (int i = 0; i < c.size(); i++) {\n\t\t\tdp[0][i] = c[i];\n\t\t}\n\t\tfor (int bit = 0; bit < bend; bit++) {//1??±?????\\??????\n\t\t\tfor (int i = 0; i < c.size(); i++) {\n\t\t\t\tif ((bit & (1 << i)) == 0) {//??±?????\\??£??????????????£??????\n\t\t\t\t\tfor (int j = 0; j < c.size(); j++) {\n\t\t\t\t\t\t//cout << bitset<10>(bit) << endl;\n\t\t\t\t\t\t//cout << bitset<10>(1 << i) << endl;\n\t\t\t\t\t\t//cout << bitset<10>(1 << j) << endl;\n\t\t\t\t\t\t//cout << endl;\n\t\t\t\t\t\tif ((bit&(1 << j)) != 0) {//??±?????\\??£????????????\n\t\t\t\t\t\t\tdp[bit][i] = min(\n\t\t\t\t\t\t\t\tdp[bit][i],\n\t\t\t\t\t\t\t\tdp[bit - (1 << j)][j]\n\t\t\t\t\t\t\t\t+ sqrt(\n\t\t\t\t\t\t\t\t(c[j] + c[i])*(c[j] + c[i]) - (c[j] - c[i])*(c[j] - c[i])\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//cout << dp[bit][i] << endl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble m = INF;\n\t\tfor (int i = 0; i < c.size(); i++) {\n\t\t\t//cout << dp[bend - 1 - (1 << i)][i] + c[i] << endl;\n\t\t\tm = min(m, dp[(bend - 1) - (1 << i)][i] + c[i]);\n\t\t}\n\t\tcout << (m <= w ? \"OK\" : \"NA\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tused = false;\n\t\tr = x = -1.0;\n\t}\n\n\tdouble r,x;\n\tbool used;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' '; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define inf (1<<29)\n#define EPS (1e-10)\n#define COUNTER_CLOCKWISE 1\n#define CLOCKWISE -1\n#define ONLINE_BACK 2\n#define ONLINE_FRONT -2\n#define ON_SEGMENT 0\n#define equals(a,b) (fabs((a)-(b)) < EPS)\n\nusing namespace std;\n\n\ndouble L;\n\nvoid split(string s,vector<double> &vec)\n{\n  stringstream ss;\n  ss << s;\n  for(int i=0;!(ss >> s).fail();i++)\n    {\n      if(i == 0)L = (atoi)(s.c_str());\n      else\n\t{\n\t  vec.push_back((atoi)(s.c_str()));\n\t}\n    }\n\n}\n\nint n;\ndouble dp[(1<<12)][12];\n\ndouble getDistance(double r1,double r2)\n{\n  return sqrt(pow(r1+r2,2)-pow(r1-r2,2));\n}\n\nint main()\n{\n\n  string line;\n  while(getline(cin,line))\n    {\n      vector<double> vec;\n      split(line,vec);\n      n = vec.size();\n      rep(i,(1<<n))rep(j,n)dp[i][j] = inf;\n\n      rep(i,(1<<n))//???????????§????????????????????¶???\n\t{\n\t  rep(j,n)//?¬??????????????????????????????????????????????\n\t    {\n\t      rep(k,n)//???????????????????????????????????????\n\t\t{\n\t\t  if(i == 0)//?????????????????????????????????????????????????????????????????????\n\t\t    {\n\t\t      dp[i|(1<<j)][j] = min(dp[i|(1<<j)][j],vec[j]);\n\t\t      continue;\n\t\t    }\n\n\t\t  if(dp[i][k] == inf)continue;\n\t\t  int next = i|(1<<j);\n\n\t\t  if(__builtin_popcount(next) == n)//????????????????????§?????¨???????????¢+??????????????????????????????\n\t\t    {\n\t\t      dp[next][j] = min(dp[next][j],\n\t\t\t\t\tdp[i][k]+getDistance(vec[k],vec[j])+vec[j]);\n\t\t    }\n\t\t  else\n\t\t    {\n\t\t      dp[next][j] = min(dp[next][j],\n\t\t\t\t\tdp[i][k]+getDistance(vec[k],vec[j]));\n\t\t    }\n\t\t}\n\t    }\n\t}\n\n      double ans = inf;\n      rep(i,n)ans = min(ans,dp[(1<<n)-1][i]);\n      if(equals(ans,L) || (!equals(ans,L) && ans < L))cout << \"OK\" << endl;\n      else        cout << \"NA\" << endl;\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n\nconst int LOOP_TIMES = 1e5;\nconst double EPS = 1e-6;\nint L, N;\n\ndouble Evaluate(int *r){\n\tdouble val = r[0] + r[N-1];\n\tfor(int i = 0; i < N - 1; i++){\n\t\tint a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\nbool IsChange(int cnt){\n\treturn cnt < rand()%LOOP_TIMES + 1;\n}\n\ndouble Solve(int *r){\n\tdouble score = Evaluate(r), mi = score;\n\tfor(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n\t\tint *a = r + rand()%N, *b = r + rand()%N;\n\t\tswap(*a, *b);\n\n\t\tdouble next_score = Evaluate(r);\n\t\tif( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n\t\telse score = next_score;\n\t\t\n\t\tmi = min(mi, score);\n\t}\n\treturn mi;\n}\n\nint main(){\n\twhile(cin >> L){\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile( !SS.eof() ){\n\t\t\tSS >> r[N++];\n\t\t}\n\n\t\tdouble ans;\n\t\tif(N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif(L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 1e3;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint iniIncrease = -1;\n\t\tvector< pair<int,int> > vhist;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tif( i > 0 ){\n\t\t\t\tif( r[i] > r[i-1] && iniIncrease < 0 ) iniIncrease = (i - 2 < 0 ? 0 : i - 2);\n\t\t\t}\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( iniIncrease < 0 ) iniIncrease = num - 2;\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tif( num > 2 ){\n\t\t\tbool bFound = false;\n\t\t\tfor(int i = iniIncrease; i < num && !bFound; i++){\n\t\t\t\tfor(int j = i + 1; j < num && !bFound; j++){\n\t\t\t\t\tif( !vhist.empty() && vhist.end() != find(vhist.begin(), vhist.end(), make_pair(i,j)) ) continue;\n\t\t\t\t\tvhist.push_back(make_pair(i,j));\n\t\t\t\t\tswap(r[0],r[i]);\n\t\t\t\t\tswap(r[1],r[j]);\n\t\t\t\t\tif( solve( p, num-2, w, r) ){\n\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t}\n\t\t\t\t\tswap(r[i],r[0]);\n\t\t\t\t\tswap(r[j],r[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( bFound ) cout << \"OK\\n\";\n\t\t\telse cout << \"NA\\n\";\n\t\t}else{\n\t\t\tif( num == 2 ){\n\t\t\t\tcout << (r[0]+r[1]+2.0*sqs[r[0]][r[1]] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}else if( num == 1 ){\n\t\t\t\tcout << (2*r[0] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\ndouble getlen(vi &a){\n\tdouble len=a[0]+a[a.size()-1];\n\tREP(i,a.size()-1){\n\t\tlen+=sqrt(a[i]*a[i+1])*2;\n\t}\n\treturn len;\n}\n\nint n;\ndouble dfs(map<int,int> &m,vi &s){\n\tif(s.size()==n){\n\t\treturn getlen(s);\n\t}\n\tdouble ret=INT_MAX;\n\tbool flag=false;\n\tfor(map<int,int>::iterator it=m.begin();it!=m.end();it++){\n\t\tif(it->second){\n\t\t\tflag=true;\n\t\t\tmap<int,int> nm(m);\n\t\t\tvi ns(s);\n\t\t\tnm[it->first]--;\n\t\t\tns.push_back(it->first);\n\t\t\tret=min(ret,dfs(nm,ns));\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main(){\n\tint l;\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tistringstream iss(s);\n\t\tiss>>l;\n\t\tvi a;\n\t\tint aa;\n\t\twhile(iss>>aa){\n\t\t\ta.push_back(aa);\n\t\t}\n\t\tn=a.size();\n\n\t\tbool ok=false;\n\t\tmap<int,int> m;\n\t\tREP(i,a.size()){\n\t\t\tm[a[i]]++;\n\t\t}\n\t\tvi s;\n\t\tdouble d=dfs(m,s);\n\n\t\tcout<<(d<l+EPS?\"OK\":\"NA\")<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tif (!n){\n\t\t\tputs(\"OK\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tvector<vector<double> > d(15, vector<double>(1 << n, 1e25));\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "# include <iostream>\n# include <sstream>\n# include <string>\n# include <cmath>\n# include <algorithm>\nconst int MAX_N = 12;\nconst double INF = (1 << 20);\n\nint n, l;\nint r[MAX_N];\ndouble memo[1 << MAX_N][MAX_N];\n\ndouble solve(int s, int v) {\n\tif (s == (1 << n) - 1)\n\t\treturn r[v];\n\tif (memo[s][v] >= 0)\n\t\treturn memo[s][v];\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif ((s >> i & 1) == 0)\n\t\t\tres = std::min(res, solve(s | (1 << i), i) + sqrt(pow(r[i] + r[v], 2) - pow(r[i] - r[v], 2)));\n\t}\n\treturn memo[s][v] = res;\n}\n\nint main() {\n\twhile (1) {\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tn = 0;\n\t\tstd::string str;\n\t\tstd::getline(std::cin, str);\n\t\tstd::stringstream s(str);\n\t\ts >> l;\n\t\ts.ignore();\n\t\twhile (!s.eof()) {\n\t\t\tint a;\n\t\t\ts >> a;\n\t\t\tr[n] = a;\n\t\t\t++n;\n\t\t\ts.ignore();\n\t\t}\n\t\tfor (int i = 0; i < (1 << n); ++i) {\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tmemo[i][j] = -1;\n\t\t}\n\t\tdouble ans = INF;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tans = std::min(ans, solve((1 << i), i) + r[i]);\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t\tif (ans <= (double)l)\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\telse\n\t\t\tstd::cout << \"NA\" << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#include <cctype>\n\n#include <iostream>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i, n) for(int i = 0; i < n; i++)\n#define repi(i,l,n) for(int (i)=(int)(l);(i)<(int)(n);(i)++)\n#define d_arr(arr, h, w) rep(i,(h) ){ cout << \"[\"; rep(j,(w) ) { cout << (arr)[i][j] << \", \"; } cout << \"]\" << endl;}\n#define IN(x,s,g) ((x) >= (s) && (x) < (g))\n#define ISIN(x,y,w,h) (IN((x),0,(w)) && IN((y),0,(h)))\n#define print(x) printf(\"%d\\n\",x);\n\n#define max_cakes 12\n#define INF (1<<30)\n\ntypedef pair<int ,int> P;\n\n\ndouble dis( int l, int r){\n    double sq = pow(l+r,2) - pow(fabs(l-r),2);\n    return sqrt(sq);\n}\n\nvector<int> cakes;\nint nCakes;\nmap< P,double> memo;\n\nvoid show(int bit){\n    rep(i,nCakes){\n        if( bit>>i & 1 ) { cout << 1 << \",\"; }\n        else { cout << 0 << \",\"; }\n    }\n    puts(\"\");\n}\n\n\ndouble rec( int left_i, int bit ){\n    //cout << \"rec( left=\" << cakes[left_i] << \", bit=\" << bit << \" )\" << endl;\n    //show(bit);\n    if( (1<<nCakes)-1 == bit ){\n        //cout << \"return!!\" << endl;\n        return cakes[left_i];\n    }\n\n    map< pair<int ,int> ,double>::iterator it = memo.find( make_pair(left_i,bit) );\n    if( it != memo.end() ){ return it->second; }\n    double ret = 1000000.0;\n    rep( i,nCakes ){\n        //cout << \"try to branch off to :\" << i << endl; \n        if( (bit>>i) & 1 ) { continue; }\n        else { \n            //cout << \"next cakes_i:\"<<i<<\",next cake:\"<< cakes[i]<< endl;\n            //cout << \"next bit:\";\n            //show( (1<<i)|bit );\n            //puts(\"\");\n            double mem = rec(i, (1<<i) | bit );\n            memo[ make_pair(i,(1<<i) | bit) ] = mem;\n            double tmp = dis(cakes[left_i], cakes[i]) + mem ;\n            ret = min(ret, tmp);\n        }\n    }\n    return ret;\n}\n\nint main()\n{\n    while(1){\n        cakes.clear();\n        memo.clear();\n        int length;\n        cin >> length; if( length == 0 ) break;\n        int tmp;\n        while(1) { \n            cin >> tmp;\n            cakes.push_back(tmp);\n            if (cin.peek()=='\\n') break;\n        }\n        nCakes = cakes.size();\n\n        int bit = 0;\n        double cap = 10000000.0;\n        rep(i,cakes.size()){\n            double scale = cakes[i] + rec(i, 1<<i );\n            cap = min(cap, scale);\n        }\n\n        //cout << \"length: \" << length << endl;\n        //cout << \"cap : \" << cap << endl;\n        if (cap <= length) { cout << \"OK\" << endl; }\n        else { cout << \"NA\" << endl; }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdlib>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n\nint l,r[12],n;\nstring in,tmp;\nvector<int> dp[1<<12];\ndouble dpv[1<<12];\n\ndouble cal(vector<int> v){\n  double res = 0;\n  int i;\n  if(v.size()){\n    res += r[v[0]];\n    for(i=0;i<(int)v.size()-1;i++)res += sqrt( pow(r[v[i]]+r[v[i+1]],2) - pow(r[v[i]]-r[v[i+1]],2));\n    res += r[v[i]];\n  }\n  return res;\n}\n\nint main(){\n  while(getline(cin,in)){\n    int pos = 0;\n    bool f = false;\n    n = 0;\n    while(1){\n      if(pos>=(int)in.size() || in[pos]==' '){\n\tif(!f){\n\t  l = atoi(tmp.c_str());\n\t  f = true;\n\t}else{\n\t  r[n] = atoi(tmp.c_str());\n\t  n++;\n\t}\n\ttmp.clear();\n\tif(pos>=(int)in.size())break;\n      }else{\n\ttmp.push_back(in[pos]);\n      }\n      pos++;\n    }\n\n    for(int i=0;i<(1<<n);i++){\n      dp[i].clear();\n      dpv[i] = 1000.0;\n    } \n    \n    for(int i=1;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tif(i&(1<<j)){\n\t  int g = i-(1<<j);\n\t  vector<int> hoge = dp[g];\n\t  hoge.push_back(j);\n\n\t  double s = cal(hoge);\n\t  if(s<dpv[i]){\n\t    dp[i] = hoge;\n\t    dpv[i] = cal(hoge);\n\t  }\n\t  /*\n\t  for(int x=0;x<(int)hoge.size();x++)cout << r[hoge[x]] << \" \";\n\t  cout << endl;\n\t  */\n\t  for(int k=(int)hoge.size()-1;k>=1;k--){\n\t    swap(hoge[k],hoge[k-1]);\n\t    /*\n\t    for(int x=0;x<(int)hoge.size();x++)cout << hoge[x] << \" \";\n\t    cout << endl;\n\t    */\n\t    s = cal(hoge);\n\t    \n\t    if(s<dpv[i]){\n\t      dp[i] = hoge;\n\t      dpv[i] = s;\n\t    }\n\t    \n\t  }\n\t  //cout << endl;\n\t}\n      }\n    }\n    /*\n    cout << dpv[(1<<n)-1] << endl;\n    for(int i=0;i<n;i++)cout << r[dp[(1<<n)-1][i]] << \" \";\n    cout << endl;\n    */\n    if(dpv[(1<<n)-1]>l)cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint W, N;\nvector<int> R;\n\ndouble calc(vector<int> v) {\n  vector<int>::iterator it = v.begin();\n  double sum = *it;\n  int bfr = *it;\n  int cnt = 1;\n  v.erase(it);\n\n  while(!v.empty()) {\n    if(cnt == 0) {\n      it = v.begin();\n    } else {\n      it = --v.end();\n    }\n    sum += sqrt(pow((double)(bfr + *it), 2.0) - pow((double)(bfr - *it), 2.0));\n\n    bfr = *it;\n    v.erase(it);\n    cnt = 1 - cnt;\n  }\n  return sum + bfr;\n}\n\nvoid solve() {\n  sort(R.begin(), R.end());\n  double tmp1 = calc(R);\n  reverse(R.begin(), R.end());\n  double tmp2 = calc(R);\n\n  if(min(tmp1, tmp2) <= W) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"NA\" << endl;\n  }\n}\n\nmain() {\n  while(1) {\n    string str;\n    getline(cin, str);\n    if(cin.eof()) break;\n    stringstream ss;\n    ss << str;\n    ss >> W;\n    R.clear();\n    for(int i = 0; ; ++i) {\n      if(ss.eof()) {\n\tN = i;\n\tbreak;\n      }\n      int tmp;\n      ss >> tmp;\n      R.push_back(tmp);\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nstring in;\nint L, temp, N;\nconst int kInf = 1<<30;\nvector<int> v;\ndouble dp[1<<15][15];\n\ndouble rec(int S, int pv) {\n  // printf(\"%d : %d\\n\", S, pv);\n  if (S == (1<<N)-1) return v[pv];\n  double &d= dp[S][pv];\n  if (d >= 0) return d;\n  \n  double ret = kInf;\n  for (int i = 0; i < N; ++i) {\n    if (!(S >> i & 1)) {\n      ret = min(ret, 2 * sqrt(v[pv] * v[i]) + rec(S|1<<i, i));\n    }\n  }\n  return d = ret;\n}\n\nint main() {\n  while (getline(cin, in)) {\n    // input\n    istringstream is(in);\n    is >> L;\n    v.clear();\n    while (is >> temp) v.push_back(temp);\n    N = v.size();\n    double ans = kInf;\n    rep(i,N) {\n      memset(dp, -1, sizeof dp);\n      ans = min(ans, v[i] + rec(1<<i, i));\n    }\n    // printf(\"%lf :\", ans);\n    printf(\"%s\\n\", (L >= ans) ? \"OK\" : \"NA\" );\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = 4000.0;\n\n\tfor(int start_town = 0; start_town < info_index;start_town++){\n\n\t\tfor(int i = 0; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index;k++){\n\t\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t\t}\n\t\t}\n\n\t\tint next_state;\n\n\t\tnext_state = pow(2,start_town);\n\n\t\tdp[0][start_town][next_state] = info[start_town].r;\n\n\t\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\t\tif(i == info_index && a == start_town && state == limit-1){\n\t\t\t\t\t\t\t\t\tdp[i][start_town][limit-1] = min(dp[i][start_town][limit-1],dp[i-1][k][state]+info[k].r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tminimum = min(minimum,dp[info_index][start_town][limit-1]);\n\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define INF (1<<28)\n\ndouble g[13][13];\ndouble dp[1<<13][13];\n\nint main() {\n\tstring str;\n\twhile (getline(cin, str)) {\n\t\tistringstream is(str);\n\t\tint n = count(str.c_str(), str.c_str() + str.size(), ' ');\n\t\tint w, r[12];\n\t\tis >> w;\n\t\tREP(i, n) is >> r[i];\n\t\t\n\t\tREP(i, n) {\n\t\t\tg[0][i + 1] = r[i];\n\t\t\tg[i + 1][0] = r[i];\n\t\t}\n\t\tREP(i, n) REP(j, n) {\n\t\t\tif (i == j) g[i + 1][j + 1] = 0.0;\n\t\t\telse g[i + 1][j + 1] = sqrt(pow(r[i] + r[j], 2) - pow(r[i] - r[j], 2));\n\t\t}\n\t\t\n\t\tn++;\n\t\tfill(dp[0], dp[1<<n], INF);\n\t\tdp[1][0] = 0;\n\t\t\n\t\tREP(i, 1<<n) {\n\t\t\tREP(j, n) {\n\t\t\t\tif (dp[i][j] == INF) continue;\n\t\t\t\t\n\t\t\t\tREP(k, n) {\n\t\t\t\t\tif ((i >> k) & 1) continue;\n\t\t\t\t\tint next = i | (1 << k);\n\t\t\t\t\t\n\t\t\t\t\tdp[next][k] = min(dp[next][k], dp[i][j] + g[j][k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tdouble ans = INF;\n\t\tREP(i, n) if (dp[(1 << n) - 1][i] != INF) ans = min(ans, dp[(1 << n) - 1][i] + g[i][0]);\n\t\t\n\t\tif ((double)w >= ans) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand()%N;\n\t\tint b = rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}else{\n\t\t\t\tswap(r[b],r[a]);\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15];\n    double cake_length;\n    int last_cake;\n};\n\nsome_cake init_some_cake(){\n    some_cake init;\n    for(int i=0; i<15; i++)init.cake_flag[i]=0;\n    init.cake_length=0.0;\n    init.last_cake=0;\n    \n    return init;\n}\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count])cake_count++;\n        \n        queue<some_cake> qu;\n        some_cake temp = init_some_cake();\n        qu.push(temp);\n        bool ans_flag=true;\n        while(qu.size()!=0){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <cstring>\n#include <climits>\n#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\nusing namespace std;\n#define inf INT_MAX/2\nint n, haba;\nstring in;\nint r[13];\ndouble dist[13][13], dp[1<<13][13];\nvoid input(string in) {\n    int i;\n    string x=\"\";\n    for (i=0; i<in.length(); i++) {\n        if (in[i]==' ') {\n            stringstream ss;\n            ss<<x;\n            ss>>haba;\n            x=\"\";\n            break;\n        } else {\n            x+=in[i];\n        }\n    }\n    for (;i<in.length(); i++) {\n        if (in[i]==' ') {\n            stringstream ss;\n            ss<<x;\n            ss>>r[n];\n            x=\"\"; n++;\n        } else {\n            x+=in[i];\n        }\n    }\n    stringstream ss;\n    ss<<x;\n    ss>>r[n]; n++;\n}\ndouble calc(int i, int j) {\n    return sqrt((double)(r[i]+r[j])*(r[i]+r[j])-(double)(r[i]-r[j])*(r[i]-r[j]));\n}\nint main() {\n    while (getline(cin,in)) {\n        n=0; memset(r,0,sizeof(r));\n        input(in);\n        for (int i=1; i<n; i++) {\n            dist[0][i]=dist[i][0]=r[i];\n            for (int j=i+1; j<=n; j++) {\n                dist[i][j]=dist[j][i]=calc(i,j);\n            }\n        }\n        for (int S=0; S< 1<<n; S++) {\n            fill(dp[S], dp[S]+n, inf);\n        }\n        dp[(1<<n)-1][0]=0;\n        for (int S=(1<<n)-2; S>=0; S--) {\n            for (int v=0; v<n; v++) {\n                for (int u=0; u<n; u++) {\n                    if (!(S>>u&1)) {\n                        dp[S][v]=min(dp[S][v],dp[S|1<<u][u]+dist[v][u]);\n                    }\n                }\n            }\n        }\n        if (dp[0][0]>haba) puts(\"NA\");\n        else puts(\"OK\");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15];\n    double cake_length;\n    int last_cake;\n};\n\nsome_cake init_some_cake(){\n    some_cake init;\n    for(int i=0; i<15; i++)init.cake_flag[i]=0;\n    init.cake_length=0.0;\n    init.last_cake=0;\n    \n    return init;\n}\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            //cout<<cake[cake_count]<<endl;\n            cake_count++;\n        }\n        \n        queue<some_cake> qu;\n        some_cake temp = init_some_cake();\n        qu.push(temp);\n        bool ans_flag=true;\n        while(qu.size()!=0){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <complex>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define all(x) (x).begin(),(x).end()\n#define mp make_pair\n#define pb push_back\n#define EPS 1e-8\n#define DEB 0\n\n\nint main(){\n\tint n,a;\n\tstring in;\n\tvector<int> data;\n\t\n\twhile(getline(cin,in)){\n\t\tdata.clear();\n\t\tstringstream ss(in);\n\t\tss>>n;\n\t\twhile(ss>>a){\n\t\t\tdata.push_back(a);\n\t\t}\n\n\t\tsort(all(data));\n\n\t\tint l,r,lr,rr;\n\t\tbool f = false;\n\t\t\n\t\trep(t,2){\n\t\t\tdouble sum = 0.0;\n\t\t\tint sz = 1;\n\t\t\tint r1,r2,a;\n\t\t\tif( t==0 ){\n\t\t\t\tl = 0 , r = data.size()-2;\n\t\t\t\tlr = rr = data[data.size()-1];\n\t\t\t}else{\n\t\t\t\tl = data.size()-1, r = 1;\n\t\t\t\tlr = rr = data[0];\n\t\t\t}\n\t\t\tif( data.size()==1 ){\n\t\t\t\tif( data[0]<=n ){\n\t\t\t\t\tf = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n#if DEB\n\t\t\tprintf(\"t:%d --------------------\\n\",t);\n\t\t\tprintf(\"(l,r)=(%d,%d)   init_r:%d\\n\",l,r,rr);\n#endif\t\t\t\n\t\t\t\n\t\t\tfor(;sz<data.size();){\n\t\t\t\tr1 = data[l]+lr;\n\t\t\t\tr2 = abs(data[l]-lr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\tlr = data[l];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  l:%d  lr:%d  sum:%lf\\n\",sz+1, l, lr, sum);\n#endif\t\t\t\t\n\n\t\t\t\tif( t==0 )l++;\n\t\t\t\telse l--;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t\t\n\t\t\t\tr1 = data[l]+rr;\n\t\t\t\tr2 = abs(data[l]-rr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\trr = data[l];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  l:%d  rr:%d  sum:%lf\\n\",sz+1, l, rr, sum);\n#endif\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif( t==0 )l++;\n\t\t\t\telse l--;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t\t\n\t\t\t\tr1 = data[r]+lr;\n\t\t\t\tr2 = abs(data[r]-lr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\tlr = data[r];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  r:%d  lr:%d  sum:%lf\\n\",sz+1,r,lr,sum);\n#endif\n\t\t\t\t\n\t\t\t\tif( t==0 )r--;\n\t\t\t\telse r++;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t\t\n\t\t\t\tr1 = data[r]+rr;\n\t\t\t\tr2 = abs(data[r]-rr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\trr = data[r];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  r:%d  rr:%d  sum:%lf\\n\",sz+1,r,rr,sum);\n#endif\n\t\t\t\t\n\t\t\t\tif( t==0 )r--;\n\t\t\t\telse r++;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t}\n\t\t\tsum += (double)(lr+rr);\n#if DEB\n\t\t\tprintf(\"sum:%lf\\n\",sum);\n#endif\t\t\t\n\t\t\tif( sum<=(double)n ){\n\t\t\t\tf = true;\n\t\t\t}\n\t\t}\n\t\tputs(f?\"OK\":\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 10000; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tfor(int i = 0 ;i < N ; i++){\n\t\t\tscore = Evaluate(r);\n\t\t}\n\t\tif(score < mi){\n\t\t\tmi = score;\n\t\t}\n\t\telse {\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = score;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswap(r[rand()%N],r[rand()%N]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//===============================================\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n\nconst int LOOP_TIMES = 1e2;\nconst double EPS = 1e-6;\nint L, N;\n\ndouble Evaluate(int *r){\n\tdouble val = r[0] + r[N-1];\n\tfor(int i = 0; i < N - 1; i++){\n\t\tint a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\nbool IsChange(int cnt){\n\treturn cnt < rand()%LOOP_TIMES + 1;\n}\n\ndouble Solve(int *r){\n\tdouble score = Evaluate(r), mi = score;\n\tfor(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n\t\tint *a = r + rand()%N, *b = r + rand()%N;\n\t\tswap(*a, *b);\n\n\t\tdouble next_score = Evaluate(r);\n\t\tif( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n\t\telse score = next_score;\n\t\t\n\t\tmi = min(mi, score);\n\t}\n\treturn mi;\n}\n\nint main(){\n\twhile(cin >> L){\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile( !SS.eof() ){\n\t\t\tSS >> r[N++];\n\t\t}\n\n\t\tdouble ans;\n\t\tif(N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif(L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\ndouble dp[12][1 << 12];\n\nint main(){\n\tint width;\n\twhile(cin >> width){\n\t\tfor(int i = 0; i < 12; ++i){\n\t\t\tfor(int j = 0; j < (1 << 12); ++j){ dp[i][j] = -1.0; }\n\t\t}\n\t\tstring line;\n\t\tgetline(cin, line);\n\t\tstringstream ss(line);\n\t\tvector<int> cakes;\n\t\twhile(!ss.eof()){\n\t\t\tint r;\n\t\t\tss >> r;\n\t\t\tcakes.push_back(r);\n\t\t\tint index = cakes.size() - 1;\n\t\t\tdp[index][1 << index] = static_cast<double>(r * 2);\n\t\t}\n\t\tint n = cakes.size();\n\t\tfor(int j = 0; j < (1 << n); ++j){\n\t\t\tfor(int i = 0; i < n; ++i){\n\t\t\t\tif(!(j & (1 << i))){ continue; }\n\t\t\t\tfor(int k = 0; k < n; ++k){\n\t\t\t\t\tif(j & (1 << k)){ continue; }\n\t\t\t\t\tint mask = j | (1 << k);\n\t\t\t\t\tdouble c = cakes[i] + cakes[k];\n\t\t\t\t\tdouble a = cakes[i] - cakes[k];\n\t\t\t\t\tdouble b = sqrt(c * c - a * a);\n\t\t\t\t\tdouble p = dp[i][j] - cakes[i] + b + cakes[k];\n\t\t\t\t\tdp[k][mask] = (dp[k][mask] < 0.0 ? p : min(dp[k][mask], p));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool flag = false;\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tif(dp[i][(1 << n) - 1] <= width){ flag = true; }\n\t\t}\n\t\tcout << (flag ? \"OK\" : \"NG\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,0));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw += v[nxt];\n            }\n            if(bfr != 0){\n              bw += 2.0 * sqrt(v[bn] * v[nxt]);\n            }\n            if(dp[bfr|( 1 << nxt)][nxt] != 0)\n              dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            else\n              dp[bfr|( 1 << nxt)][nxt] = bw;\n            if((bfr|(1 << nxt)) == (1 << n)-1 && w - bw <= eps){\n              f = true;\n            }\n          }\n        }\n      }\n    }\n    if(f){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 500; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\n#define int long long\nusing namespace std;\nstatic const int MAX_N = 20;\nstatic const double inf = 1ll<<60;\nstatic const double EPS = 0.0000001;\nint N;\ndouble L;\ndouble R[MAX_N];\nint maxbit;\nint s;\ndouble mem[10005][MAX_N];\n\ndouble call(int bit,int p){\n    double res=inf;\n    if(mem[bit][p]!=-1.0d)return mem[bit][p];\n    if(bit==maxbit){\n        return R[p]+R[s];\n    }\n    for(int i=0;i<N;++i){\n        int b=bit;\n        int k=1<<i;\n        if(b&k)continue;\n        double a = abs(R[i] - R[p]), c = R[i] + R[p];\n\t\tdouble val = sqrt(c*c - a*a);\n        res=min(call(b+k,i)+val,res);\n    }\n    return mem[bit][p]=res;\n}\n\nsigned main(){\n    while (cin >> L)\n\t{\n\t\tN = 0;\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> R[N++];\n\t\tfor(int i=0;i<N;++i)maxbit+=pow(2,i);\n\t\tdouble ans=inf;\n\t\tif (N == 1) ans = R[0]*2;\n\t\telse{\n            for(int i=0;i<N;++i){\n                for(int i=0;i<=5000;++i)for(int j=0;j<=12;++j)mem[i][j]=-1.0;\n                s=i;\n                ans = min(ans,call(pow(2,i),i));\n            }\n\t\t}\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t\tmaxbit=0;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <sstream>\n#include <map>\n#include <set>\n#include <cmath>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<30\n#define pb push_back\n#define mp make_pair\n#define EPS 1e-8\n#define equals(a,b) fabs((a) - (b)) < EPS\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\n\nvector<string> split(const string &str, char delim) {\n    vector<string> res;\n    size_t current = 0, found;\n    while((found = str.find_first_of(delim, current)) != string::npos) {\n        res.push_back(string(str, current, found - current));\n        current = found + 1;\n    }\n    res.push_back(string(str, current, str.size() - current));\n    return res;\n}\n\nint stoi(string s) {\n    int ret;\n    stringstream ss;\n    ss << s;\n    ss >> ret;\n    return ret;\n}\n\nint main() {\n    string s;\n    while(getline(cin,s)) {\n        vector<string> t = split(s,' ');\n        int len = stoi(t[0]);\n        vector<int> v;\n        REP(i,1,t.size()) {\n            v.push_back(stoi(t[i]));\n        }\n\n        bool flag = false;\n\n        do {\n            double sum = v[0] + v[v.size()-1];\n\n            rep(i,v.size()-1) {\n                double r = v[i] + v[i+1];\n                double t = abs(v[i] - v[i+1]);\n                sum += sqrt(r*r - t*t);\n            }\n\n            if(sum < len + EPS) {\n                flag = true;\n            }\n\n        }while(next_permutation(v.begin(),v.end()));\n\n        if(flag) cout << \"OK\" << endl;\n        else cout << \"NA\" << endl;\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define repl(i,a,b) for(int i=(int)(a);i<(int)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define mp(a,b) make_pair((a),(b))\n#define pb(a) push_back((a))\n#define all(x) (x).begin(),(x).end()\n#define uniq(x) sort(all(x)),(x).erase(unique(all(x)),end(x))\n#define fi first\n#define se second\n#define dbg(x) cout<<#x\" = \"<<((x))<<endl\ntemplate<class T,class U> ostream& operator<<(ostream& o, const pair<T,U> &p){o<<\"(\"<<p.fi<<\",\"<<p.se<<\")\";return o;}\ntemplate<class T> ostream& operator<<(ostream& o, const vector<T> &v){o<<\"[\";for(T t:v){o<<t<<\",\";}o<<\"]\";return o;}\n\n#define INF 2147483600\n#define long long long // for codeforces\n\ndouble cake[11][11];\n\nbool solve(int w, vector<int> &vec){\n  int n = vec.size();\n  vector<vector<double>> dp(1<<n, vector<double>(n, INF));\n  // dp[mask][n] mask ????????£????????????vec[i]???????°????\n  rep(i,n) dp[1<<i][i] = 2*vec[i];\n  repl(mask,1,1<<n) rep(i,n) if(dp[mask][i]<INF){\n    rep(j,n) if((mask&(1<<j))==0){\n      int nmask = mask | (1<<j);\n      dp[nmask][j] = min(dp[nmask][j], dp[mask][i] + cake[vec[i]][vec[j]] + vec[j] - vec[i]);\n    }\n  }\n  rep(i,n) if(dp[(1<<n)-1][i]<=w) return true;\n  return false;\n}\n\n\nint main(){\n  repl(i,3,11) repl(j,3,11){\n    double c = i+j;\n    double a = i-j;\n    cake[i][j] = sqrt(c*c - a*a);\n  }\n  string str;\n  while(getline(cin, str)){\n    stringstream ss;\n    ss<<str;\n    int w;\n    ss>>w;\n    vector<int> vec;\n    int r;\n    while(ss>>r) vec.pb(r);\n    if(solve(w,vec)) cout<<\"OK\"<<endl;\n    else cout<<\"NA\"<<endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<vector>\n#include<cstring>\n#include<cmath>\nusing namespace std;\n\ndouble INF = 1000.0;\n\nint main(){\n    string s;\n    while(getline(cin, s)){\n        stringstream ss(s);\n        int w;\n        ss >> w;\n\n        vector<double> rad;\n        double next; \n        int n = 0;\n        \n        while(ss >> next){\n            rad.push_back(next);\n            n++;\n        }\n\n        double dp[n][1<<n];\n\n        for(int i = 0; i < n; i++){\n            for(int j = 0; j < 1<<n; j++){\n                dp[i][j] = 10000;\n            }\n        }\n\n        for(int i = 0; i < n; i++){\n            dp[i][1<<i] = rad[i];\n        }\n\n        for(int s = 1; s < 1<<n; s++){\n            for(int i = 0; i < n; i++){\n                if(!((1<<i) & s)) continue;\n                for(int j = 0; j < n; j++){\n                    if((1<<j) & s)  continue;\n                    double tmp = dp[i][s] + 2*sqrt(rad[i]*rad[j]);\n                    if(tmp < dp[j][s | (1<<j)]){\n                        dp[j][s | (1<<j)] = tmp;\n                    }\n                }\n            }\n        }\n\n        double ans = INF;\n        for(int i = 0; i < n; i++){\n            ans = min(ans, dp[i][(1<<n)-1] + rad[i]);\n        }\n\n        cout << (ans <= w ? \"OK\" : \"NA\") << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }\n    }\n    bs.push_back(right);\n    double req = bs[0] + bs[size-1];\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<sstream>\n\nusing namespace std;\n\nconst double INF=1000000000;\ndouble ans;\ndouble l;\nbool flag;\nstring str;\nvector<double> r;\ndouble dp[1<<12][12];\n\nvoid rec(int x,int bit,double nl,double nh){\n\tif(dp[bit][x]<nl)return;\n\tdp[bit][x]=nl;\n\tif(bit==(1<<r.size())-1){\n\t\tif(nl+nh<=l)flag=true;\n\t\tans=min(ans,nl+nh);\n\t\treturn;\n\t}\n\telse{\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\tif(!(bit>>i & 1)){\n\t\t\t\tdouble nnh=r[i];\n\t\t\t\tdouble nnl=nl+sqrt(pow(nh+nnh,2)-pow(fabs(nh-nnh),2));\n\t\t\t\tif(nnl<dp[bit | 1<<i][i]){\n\t\t\t\t\tdp[bit | 1<<i][i]=nnl;\n\t\t\t\t\trec(i,bit | 1<<i,nnl,nnh);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(void){\n\twhile(getline(cin,str)){\n\t\tflag=false;\n\t\tans=INF;\n\t\tr.clear();\n\t\tfor(int i=0;i<(1<<12)-1;i++){\n\t\t\tfor(int j=0;j<12;j++){\n\t\t\t\tdp[i][j]=INF;\n\t\t\t}\n\t\t}\n\t\tstringstream input(str);\n\t\tinput >> l;\n\t\tdouble a;\n\t\twhile(input >> a)r.push_back(a);\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\trec(i,1<<i,r[i],r[i]);\n\t\t}\n\t\tif(flag)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = 4000.0;\n\n\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\tint next_state;\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tnext_state = pow(2,i);\n\n\t\tdp[0][i][next_state] = info[i].r;\n\t}\n\n\tfor(int i = 1; i <= info_index-1; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\t//Do nothing\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tif(i != info_index-1){\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]+info[a].r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tminimum = min(minimum,dp[info_index-1][i][limit-1]);\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> parse(string str) {\n\tvector<int> ret; int t = 0; str += ' ';\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ') ret.push_back(t), t = 0;\n\t\telse t = t * 10 + str[i] - 48;\n\t}\n\treturn ret;\n}\nint bitcount(int x) {\n\tint ret = 0;\n\tfor (int i = 0; i < 31; i++) {\n\t\tif (x & (1 << i)) ret++;\n\t}\n\treturn ret;\n}\nstring s; long double dp[1 << 12][12];\nint main() {\n\twhile (s = \"\", getline(cin, s)) {\n\t\tvector<int> u = parse(s);\n\t\tvector<int> v(u.begin() + 1, u.end());\n\t\tint n = v.size();\n\t\tfor (int i = 0; i < (1 << n); i++) {\n\t\t\tfor (int j = 0; j < n; j++) dp[i][j] = 999999999.9L;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) dp[1 << i][i] = v[i];\n\t\tfor (int i = 1; i < (1 << n); i++) {\n\t\t\tif (bitcount(i) <= 1) continue;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (!(i & (1 << j))) continue;\n\t\t\t\tdp[i][j] = 999999999.9L;\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif ((i & (1 << k)) && (j != k)) {\n\t\t\t\t\t\tlong double d1 = v[j] + v[k], d2 = abs(v[j] - v[k]);\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] + sqrtl(d1 * d1 - d2 * d2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong double ret = 999999999.9L;\n\t\tfor (int i = 0; i < n; i++) ret = min(ret, dp[(1 << n) - 1][i] + v[i]);\n\t\tcout << (ret <= u[0] + 1e-10 ? \"YES\" : \"NO\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nconst double INF = 1e+9;\nconst double EPS = 1e-9;\n\n//string型からint型に変換する\nint s_to_i(string s){\n    bool flag = false;\n    int n = 0;\n    for(unsigned int i=0 ; i < s.size() ; ++i ){\n        if( i == 0 && s[i] == '-' ){\n            flag = true;\n        }else if( s[i] >= '0' && s[i] <= '9' ){\n            n *= 10;\n            n += s[i] - '0';\n        }else{\n            break;\n        }\n    }\n    return (flag)? -n : n ;\n}\n\n// 文字列を半角スペース区切りで単語に分割する\n// s = \"This is a pen.\"\n// vector<string> v = split_words(s); // v = {\"This\", \"is\", \"a\", \"pen.\"}\nvector<string> split_words(string s){\n    bool flag = false;\n    vector<string> vs;\n    string str;\n    s.push_back(' ');\n    for(int i=0 ; i < s.size() ; i++ ){\n        char c = s[i];\n        if( flag == false ){\n            if( c != ' ' ){\n                flag = true;\n                str.clear();\n                str.push_back( c );\n            }\n        }else{\n            if( c != ' ' ){\n                str.push_back( c );\n            }\n            if( c == ' ' ){\n                flag = false;\n                vs.push_back( str );\n                str.clear();\n            }\n        }\n    }\n    return vs;\n}\n\nvector<int> to_vint(vector<string> vs){\n\tvector<int> vi;\n\tfor(int i=0 ; i < vs.size() ; i++ ){\n\t\tvi.push_back( s_to_i( vs[i] ) );\n\t}\n\treturn vi;\n}\n\nint main(){\n\tstring s;\n\twhile( getline(cin,s) ){\n\t\tvector<string> vs = split_words(s);\n\t\tvector<int> v = to_vint( vs );\n\t\tint width = v[0];\n\t\tint N = v.size() - 1;\n\t\tvector<int> v_;\n\t\tfor(int i=1 ; i < v.size() ; i++ ){\n\t\t\tv_.push_back( v[i] );\n\t\t}\n\t\tv = v_;\n\t\t\n\t\t// dp[S][i] := 右端のロールケーキは i， 集合Sのロールケーキを並べた.\n\t\tdouble dp[1<<12][12];\n\t\t// 初期化\n\t\tfor(int i=0 ; i < (1<<N) ; i++ ){\n\t\t\tfill( dp[i] , dp[i]+N , INF );\n\t\t}\n\t\tfor(int i=0 ; i < N ; i++ ){\n\t\t\tdp[1<<i][i] = 2.0 * v[i];\n\t\t}\n\t\tfor(int s=1 ; s < (1<<N) ; s++ ){\n\t\t\tfor(int j=0 ; j < N ; j++ ){\n\t\t\t\tif( (s >> j & 1) == 0 ) continue;\n\t\t\t\t\n\t\t\t\tfor(int i=0 ; i < N ; i++ ){\n\t\t\t\t\tif( (s >> i & 1) == 0 ){\n\t\t\t\t\t\tdouble d = 2.0 * sqrt(v[j] * v[i]) - v[j] + v[i];\n\t\t\t\t\t\tdp[s|1<<i][i] = min( dp[s|1<<i][i], dp[s][j] + d );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble ans = INF;\n\t\tfor(int i=0 ; i < N ; i++ ){\n\t\t\tans = min( ans , dp[(1<<N)-1][i] );\n\t\t}\n\t\tcout << ((ans < width + EPS)? \"OK\" : \"NA\" ) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] + EPS< length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\t//if(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\tif(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\t//cout << t << endl;\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\t//cout << cakes[i].used << endl;\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0]+2.0*sqrt((double)r[0]*r[p[0]+1]);\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0*sqrt((double)r[p[i]+1]*r[p[i+1]+1]);\n\t}\n\ttw += 2.0*sqrt((double)r[1]*r[p[n-1]+1])+r[1];\n\tif( tw <= w ){\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tCake cakes[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> cakes[num].r;\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(cakes,cakes+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\ttmp += cakes[i].r;\n\t\t}\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tp[0] = cakes[0].r;\n\t\tcakes[0].used = true;\n\t\tif( solve2( p, 1, w, cakes, num, true) ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-6 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,1e9));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if((bfr|(1 << nxt)) == (1 << n)-1){\n              bw +=v[nxt];\n            }\n            if(bfr != 0){\n              ll h = v[bn]+v[nxt],s = v[bn] - v[nxt];\n              bw += sqrt(h*h - s*s);\n            }\n            dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            if((bfr|(1 << nxt)) == (1 << n)-1){\n              ans = min(ans,bw);\n            }\n          }\n        }\n      }\n    }\n    if(ans <= w){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <functional>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\nusing namespace std;\n\ntypedef istringstream ISS;\ntypedef ostringstream OSS;\ntypedef vector<string> VS;\ntypedef int INT;\ntypedef vector<INT> VI;\ntypedef vector<VI> VVI;\ntypedef pair <INT, INT> II;\ntypedef vector <II> VII;\n\ntemplate<class T> ostream& operator << ( ostream& os, vector<T> v ) {\n    for ( typename vector<T>::iterator it_i = v.begin(); it_i != v.end(); ++it_i ) {\n        os << *it_i << \", \";\n    }\n    return os;\n}\n\n\nconst string YES = \"OK\";\nconst string NO = \"NA\";\nconst int SIZE = 13;\nconst int BIT_SIZE = 1 << SIZE;\n\ndouble d[SIZE][SIZE];\ndouble memo[SIZE][SIZE][BIT_SIZE];\nVI R;\nint n;\n\ninline double sq( double x ) {\n    return x * x;\n}\n\ninline double getLength( double a, double b ) {\n    return sqrt( sq( a + b ) - sq( a - b ) );\n}\n\ninline bool isValidSub( int a, int left, int right, int s ) {\n    int ba = 1 << a;\n    if ( left == a || right == a ) return false;\n    if ( ( s & ba ) == 0 ) return false;\n    return true;\n}\n\ninline bool isValid( int a, int b, int left, int right, int s ) {\n    int ba = 1 << a;\n    int bb = 1 << b;\n    if ( left == a || right == a ) return false;\n    if ( left == b || right == b ) return false;\n    if ( ( s & ba ) == 0 ) return false;\n    if ( ( s & bb ) == 0 ) return false;\n    return true;\n}\n\ndouble rec( int left, int right, int state ) {\n    double& res = memo[left][right][state];\n    if ( res > 0 ) return res;\n    double cnt = __builtin_popcount( state );\n    if ( cnt == 1 ) {\n        return res = 2 * R[left];\n    }\n    if ( cnt == 2 ) {\n        if ( R[left] == R[right] ) return res = 4 * R[left];\n        return res = R[left] + R[right] + d[left][right];\n    }\n    res = INT_MAX;\n    for ( int i = 0; i < n; ++ i ) {\n        if ( ! isValidSub( i, left, right, state ) ) continue;\n        for ( int j = 0; j < n; ++ j ) {\n            if ( ! isValidSub( j, left, right, state ) ) continue;\n            if ( cnt > 3 && i == j ) continue;\n            double x = R[left] + R[right] - R[i] - R[j]\n                + rec( i, j, ( state ^ ( 1 << left ) ) ^ ( 1 << right ) )\n                + d[left][i] + d[right][j];\n            res = min( res, x );\n        }\n    }\n    return res;\n}\n\nstring solve( int w ) {\n    fill( (double*)memo, (double*)memo+SIZE*SIZE*BIT_SIZE, -1.0 );\n    for ( int i = 0; i < n; ++ i ) {\n        for ( int j = 0; j < n; ++ j ) {\n            if ( R[i] == R[j] ) d[i][j] = 2 * R[i];\n            else d[i][j] = getLength( R[i], R[j] );\n        }\n    }\n    \n    double res = INT_MAX;\n    for ( int i = 0; i < n; ++ i ) {\n        for ( int j = 0; j < n; ++ j ) {\n            if ( n > 1 && i == j ) continue;\n            res = min( res, rec( i, j, (1<<n)-1 ) );\n        }\n    }\n    return (int)ceil( res ) <= w ? YES : NO;\n}\n\nint main() {\n    string line;\n    while ( getline( cin, line ) ) {\n        ISS iss( line );\n        int w;\n        iss >> w;\n        R.clear();\n        int r;\n        while ( iss >> r ) R.push_back( r );\n        n = R.size();\n        cout << solve( w ) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<queue>\nusing namespace std;\n\nconst int nmax=12;\nint l,r[nmax],n;\n\nvoid solve(){\n  sort(r,r+n);\n  deque<int> rr;\n  bool f=true;\n  for(int i=0;i<n/2;i++){\n    if(f){\n      rr.push_front(r[i]);\n      rr.push_back(r[n-i-1]);\n      f=false;\n    }\n    else {\n      rr.push_front(r[n-i-1]);\n      rr.push_back(r[i]);\n      f=true;\n    }\n  }\n  \n  if(n==1){\n    rr.push_front(r[0]);\n  }\n  else if(n%2==1){\n    if(rr[0]>rr[n-2])rr.push_front(r[n/2]);\n    else rr.push_back(r[n/2]);\n  }\n\n  double sum=rr[0]+rr[n-1];\n  for(int i=0;i<n-1;i++){\n    sum+=2*sqrt(rr[i]*rr[i+1]);\n  }\n  if(sum<=l)cout<<\"OK\"<<endl;\n  else cout<<\"NA\"<<endl;\n}\n\nint main(){\n  char c;\n  while(cin>>l){\n    n=0;\n    while(~(c=getchar())){\n      if(c=='\\n')break;\n      else if(c==' ')cin>>r[n++];\n    }\n    solve(); \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<sstream>\n\nusing namespace std;\n\nconst double INF=10000000;\ndouble ans;\ndouble l;\nbool flag;\nstring str;\nvector<double> r;\ndouble dp[1<<12][12];\n\nvoid rec(int x,int bit,double nl,double nh){\n\tif(dp[bit][x]<nl)return;\n\tdp[bit][x]=nl;\n\tif(bit==(1<<r.size())-1){\n\t\tif(nl+nh<=l)flag=true;\n\t\treturn;\n\t}\n\telse{\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\tif(!(bit>>i & 1)){\n\t\t\t\tdouble nnh=r[i];\n\t\t\t\tdouble nnl=nl+sqrt(pow(nh+nnh,2)-pow(fabs(nh-nnh),2));\n\t\t\t\trec(i,bit | 1<<i,nnl,nnh);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(void){\n\twhile(getline(cin,str)){\n\t\tflag=false;\n\t\tr.clear();\n\t\tfor(int i=0;i<(1<<12)-1;i++){\n\t\t\tfor(int j=0;j<12;j++){\n\t\t\t\tdp[i][j]=INF;\n\t\t\t}\n\t\t}\n\t\tstringstream input(str);\n\t\tinput >> l;\n\t\tdouble a;\n\t\twhile(input >> a)r.push_back(a);\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\trec(i,1<<i,r[i],r[i]);\n\t\t}\n\t\tif(flag)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\n#define MAX_N 12\n#define EPS 1e-7\n\ndouble boxlen;\nint n;\ndouble r[MAX_N];\ndouble dp[MAX_N][1 << MAX_N];\n\ndouble sq(double x){\n\treturn x * x;\n}\n\ndouble dist(int i, int j){\n\treturn sqrt(sq(r[i] + r[j]) - sq(r[i] - r[j]));\n}\n\nvoid solve(){\n\tdouble INF = 1e99;\n\n\tfor(int S = 0; S < (1 << n); ++S){\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tdp[i][S] = INF;\n\t\t}\n\t}\n\n\tfor(int i = 0; i < n; ++i){\n\t\tdp[i][1 << i] = r[i];\n\t}\n\n\tfor(int S = 0; S < (1 << n); ++S){\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tif(((S >> i) & 1) != 0){\n\t\t\t\tfor(int j = 0; j < n; ++j){\n\t\t\t\t\tif(((S >> j) & 1) == 0){\n\t\t\t\t\t\tint next = S | (1 << j);\n\t\t\t\t\t\tdp[j][next] = min(dp[j][next], dp[i][S] + dist(i, j));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdouble minlen = INF;\n\tfor(int i = 0; i < n; ++i){\n\t\tminlen = min(minlen, dp[i][(1 << n) - 1] + r[i]);\n\t}\n\n\tif(minlen < boxlen + EPS){\n\t\tprintf(\"OK\\n\");\n\t}\n\telse{\n\t\tprintf(\"NA\\n\");\n\t}\n}\n\nint main(){\n\twhile(scanf(\"%lf\", &boxlen) != EOF){\n\t\tn = 0;\n\t\tchar nextch = ' ';\n\t\twhile(nextch == ' '){\n\t\t\tscanf(\"%lf%c\", &r[n], &nextch);\n\t\t\t++n;\n\t\t}\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <sstream>\n#include <iomanip>\n#include <complex>\n#include <string>\n#include <vector>\n#include <list>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <functional>\n#include <utility>\n#include <algorithm>\n#include <numeric>\n#include <typeinfo>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <ctime>\n\nusing namespace std;\n\n#define dump(n) cout<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define debug(n) cout<<__FILE__<<\",\"<<__LINE__<<\": #\"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define rep(i,n) repi(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();i++)\n#define allof(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\nconst double INFTY=1e10;\nconst double EPS=1e-10;\n\nint main()\n{\n\tfor(string s;getline(cin,s);){\n\t\tistringstream iss(s);\n\t\tint len;\n\t\tiss>>len;\n\t\tvi cakes;\n\t\tfor(int cake;iss>>cake;)\n\t\t\tcakes.push_back(cake);\n\t\t\n\t\tint csize=cakes.size();\n\t\tvvd dp(1<<csize,vd(csize,INFTY));\n\t\trep(i,csize)\n\t\t\tdp[1<<i][i]=cakes[i];\n\t\trepi(i,1,1<<csize){\n\t\t\trep(j,csize)\n\t\t\t\trep(k,csize){\n\t\t\t\t\tif((i&1<<j) && !(i&1<<k)){\n\t\t\t\t\t\tdouble x=sqrt(pow(cakes[j]+cakes[k],2)-pow(abs(cakes[j]-cakes[k]),2));\n\t\t\t\t\t\tdp[i|1<<k][k]=min(dp[i|1<<k][k],dp[i][j]+x);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t}\n\t\t\n\t\tbool ok=false;\n\t\trep(i,csize)\n\t\t\tif(dp[(1<<csize)-1][i]+cakes[i]<=len+EPS)\n\t\t\t\tok=true;\n\t\tcout<<(ok?\"OK\":\"NA\")<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tif (!n){\n\t\t\tputs(\"OK\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tvector<vector<double> > d(15, vector<double>(1 << n, 1e25));\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tif (d[i + 1][ndone] < nlen) continue;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <fstream>\nusing namespace std;\ninline int toInt(string s) { int v; istringstream sin(s); sin >> v; return v;}\ntemplate<class T> inline string toStr(T x) { ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi>  vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define FOR(i,a,b) for(int i=(a);i<=(b);++i)\n#define REP(i,n) FOR(i,0,(n)-1)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst int INF = INT_MAX/10;\n\n#define LE(x,y) ((x)-(y)<EPS)\ntypedef vector<double> vd;\n\nvs split(string str, string delim) {\n\tvs result;\n\tint pos;\n\n\twhile((pos = str.find_first_of(delim)) != str.npos) {\n\t\tif(pos > 0) {\n\t\t\tresult.push_back(str.substr(0, pos));\n\t\t}\n\t\tstr = str.substr(pos+1);\n\t}\n\tif(str.length() > 0) {\n\t\tresult.push_back(str);\n\t}\n\n\treturn result;\n}\n\ndouble diff(int r1, int r2) {\n\treturn 2*sqrt(r1*r2)-r1+r2;\n}\n\nint main() {\n\tstring line;\n\twhile(getline(cin, line)) {\n\t\tvs data = split(line, \" \");\n\t\tdouble size = toInt(data[0]);\n\t\tint n = data.size()-1;\n\t\tvi r(n);\n\t\tREP(i, n) {\n\t\t\tr[i] = toInt(data[i+1]);\n\t\t}\n\n\t\tvector<vd> dp(1<<n, vd(n, INF));\n\t\tREP(i, n) {\n\t\t\tdp[1<<i][i] = 2*r[i];\n\t\t}\n\t\tREP(i, 1<<n) {\n\t\t\tREP(j, n) {\n\t\t\t\tif(i&(1<<j)) {\n\t\t\t\t\tREP(k, n) {\n\t\t\t\t\t\tint ni = i|(1<<k);\n\t\t\t\t\t\tif(i != ni) {\n\t\t\t\t\t\t\tdp[ni][k] = min(dp[ni][k], dp[i][j]+diff(r[j], r[k]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbool ok = false;\n\t\tREP(i, n) {\n\t\t\tif(LE(dp[(1<<n)-1][i], size)) {\n\t\t\t\tok = true;\n\t\t\t}\n\t\t}\n\n\t\tcout << (ok ? \"OK\" : \"NG\") << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<cmath>\n\nconst int INF = 1 << 30;\n\nint l;\nstd::string s;\t\ndouble d[12][12], dp[1 << 12][12];\n\nint main()\n{\n\twhile( std::getline( std::cin, s ) )\n\t{\n\t\tfor( int S = 0; S < 1 << 12; ++S )\n\t\t\t\tstd::fill( dp[S], dp[S] + 12, INF );\n\n\t\tstd::istringstream iss( s );\n\n\t\tiss >> l;\n\n\t\tint r;\n\t\tstd::vector<int> rs;\n\n\t\twhile( iss >> r )\n\t\t\trs.push_back( r );\n\n\t\tint n = rs.size();\n\n\t\tfor( int i = 0; i != n; ++i )\n\t\t\tfor( int j = 0; j != n; ++j )\n\t\t\t\td[i][j] = 2 * sqrt( rs[i] * rs[j] );\n\n\t\tdouble ans = INF;\n\n\t\tfor( int i = 0; i != n; ++i )\n\t\t\tdp[( 1 << n ) - 1 - ( 1 << i )][i] = rs[i];\n\t\t\t\n\t\tfor( int S = ( 1 << n ) - 2; S >= 0; --S )\n\t\t\tfor( int v = 0; v != n; ++v )\n\t\t\t\tif( !( S >> v & 1 ) )\n\t\t\t\t\tfor( int u = 0; u != n; ++u )\n\t\t\t\t\t\tdp[S][v] = std::min( dp[S][v], dp[S | ( 1 << v )][u] + d[v][u] );\n\n\t\tfor( int j = 0; j != n; ++j )\n\t\t\tans = std::min( ans, dp[0][j] + rs[j] );\n\n\t\tif( ans <= l )\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\telse\n\t\t\tstd::cout << \"NA\" << std::endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint W, N, R[12];\nbool isUsed[12];\n\n\nint abs(int x) {\n  return x < 0 ? -x : x;\n}\n\ndouble calc(vector<int> v, int cnt) {\n  int bfr;\n  double sum;\n  if(cnt % 2 == 0) {\n    bfr = *v.begin();\n    sum = *v.begin();\n    v.erase(v.begin());\n  } else {\n    bfr = *(--v.end());\n    sum = *(--v.end());\n    v.erase(--v.end());\n  }\n  while(!v.empty()) {\n    vector<int>::iterator it;\n    if(cnt % 2 == 0) {\n      it = v.end();\n      it--;\n    } else {\n      it = v.begin();\n    }\n\n    sum += sqrt((bfr+*it)*(bfr+*it) - (bfr-*it)*(bfr-*it));\n    bfr = *it;\n    v.erase(it);\n    cnt++;\n  }\n  sum += bfr;\n  return sum;\n}\n\nvoid solve() {\n  sort(R, R+N);\n  vector<int> v;\n  for(int i = 0; i < N; ++i) {\n    v.push_back(R[i]);\n  }\n  if(min(calc(v, 0), calc(v, 1)) <= W) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"NA\" << endl;\n  }\n}\n\nmain() {\n  while(1) {\n    string str;\n    getline(cin, str);\n    if(cin.eof()) break;\n    stringstream ss;\n    ss << str;\n    ss >> W;\n    for(int i = 0; ; ++i) {\n      if(ss.eof()) {\n\tN = i;\n\tbreak;\n      }\n      ss >> R[i];\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\ndouble calc(vector<int>&v, int s, int n, int p,int b)\n{\n  if(n == 0) return p;\n  double m = 100.0;\n  for(int i=0; i<s; i++){\n    if(!(b & (1 << i))){\n\tdouble d = calc(v,s,n-1,v[i],(b | (1 << i)));\n\tif(p == 0) d += v[i];\n\telse {\n\t  double q = p - v[i];\n\t  double r = p + v[i];\n\t  double cos = sqrt(1.0 - q * q / (r * r));\n\t  d += r * cos;\n\t}\n\tm = min(m, d);\n    }\n  }\n  return m;\n}\nint main()\n{\n  string s;\n  while(getline(cin, s)){\n    istringstream in(s);\n    int n=0, i;\n    double w;\n    vector<int> v;\n    in >> w;\n    while(in >> i){\n      v.push_back(i);\n      n++;\n    }\n    double r = calc(v,n,n,0,0);\n    if(w < r) cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <cstdlib>\n#include <ctime>\n#include <stdio.h>\nusing namespace std;\n\nconst int LOOP = 100000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n        int a = rand() % N;\n        int b = rand() % N;\n        swap(r[a],r[b]);\n        if(Evaluate(r) <= mi) mi = Evaluate(r);\n        else\n        {\n            if(Changes(cnt)) mi = Evaluate(r);\n            else swap(r[a],r[b]);\n        }\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<complex>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<ctime>\n#include<vector>\n#include<sstream>\n#include<iostream>\nusing namespace std;\nint main(void){\n\n    int N;\n\n    string s;\n    while(getline(cin,s)){\n    long long int D = 10000;\n    vector<double> A,B;\n        istringstream ss(s);\n        int t;\n        ss >> N;\n        while(ss >> t)A.push_back(t);\n\n        //for(int i = 0;i < A.size();i++)cout<<A[i]<<endl;\n        double best = 1000000;\n        double ans = 1000000;\n        while(D--){\n            vector<double> V1,V2;\n            srand(time(NULL) + D);\n            V1 = A;\n            double sum = 0;\n            int x = rand() % A.size();\n            int y = rand() % A.size();\n            swap(V1[x],V1[y]);\n\n            for(int i = 0;i < V1.size()-1;i++){\n                double R1 = V1[i] + V1[i+1];\n                double R2 = V1[i] - V1[i+1];\n                sum += sqrt((R1 * R1) - (R2 * R2));\n            }\n\n            sum += V1[0] + V1[V1.size()-1];\n            double e = pow((sum/ans), 75);\n            double z = (double)((int)(rand()%1000000))/1000000;\n            if(z>=(1-(1/e)))ans = sum,A = V1;/*\n            if(D%10000 == 0){\n                for(int i = 0;i < A.size();i++){\n                    cout<<A[i]<<\" \";\n                }\n                cout<<\" : \";\n                for(int i = 0;i < B.size();i++){\n                    cout<<B[i]<<\" \";\n                }\n                cout<<endl;\n            }*/\n            if(sum<best)best = sum,B = V1;\n        }\n        int siz = 0;\n        for(int i = 0;i < 1000;i++){\n            if(best <= (double)i){\n                siz = i;\n                //cout<<siz<<endl;\n                break;\n            }\n        }\n        if(siz <= N)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n        }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//38\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<vector>\n#include<cmath>\n \nusing namespace std;\n \nint c[11];\n \nbool dfs(double r,int nr,int p){\n  if(nr==0){\n    return r>=p;\n  }else{\n    for(int i=3;i<=10;i++){\n      if(c[i]){\n\tc[i]--;\n\tif(dfs(r-2*sqrt(i*p),nr-1,i))return true;\n\tc[i]++;\n      }\n    }\n    return false;\n  }\n}\n \nint main(){\n  for(int w;cin>>w;){\n    string s;\n    getline(cin,s);\n    stringstream ss(s);\n    fill(c,c+11,0);\n    int nr=0;\n    for(int r;ss>>r;){\n      c[r]++;\n      nr++;\n    }\n    int i;\n    for(i=3;i<=10;i++){\n      if(c[i]){\n\tc[i]--;\n\tif(dfs(w-i,nr-1,i))break;\n\tc[i]++;\n      }\n    }\n    cout<<((i<v.size())?\"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\ndouble dp[12][1 << 12];\n\nint main(){\n\tint width;\n\twhile(cin >> width){\n\t\tfor(int i = 0; i < 12; ++i){\n\t\t\tfor(int j = 0; j < (1 << 12); ++j){ dp[i][j] = -1.0; }\n\t\t}\n\t\tstring line;\n\t\tgetline(cin, line);\n\t\tstringstream ss(line);\n\t\tvector<int> cakes;\n\t\twhile(!ss.eof()){\n\t\t\tint r;\n\t\t\tss >> r;\n\t\t\tcakes.push_back(r);\n\t\t\tint index = cakes.size() - 1;\n\t\t\tdp[index][1 << index] = static_cast<double>(r * 2);\n\t\t}\n\t\tint n = cakes.size();\n\t\tfor(int j = 0; j < (1 << n); ++j){\n\t\t\tfor(int i = 0; i < n; ++i){\n\t\t\t\tif(!(j & (1 << i))){ continue; }\n\t\t\t\tfor(int k = 0; k < n; ++k){\n\t\t\t\t\tif(j & (1 << k)){ continue; }\n\t\t\t\t\tint mask = j | (1 << k);\n\t\t\t\t\tdouble c = cakes[i] + cakes[k];\n\t\t\t\t\tdouble a = cakes[i] - cakes[k];\n\t\t\t\t\tdouble b = sqrt(c * c - a * a);\n\t\t\t\t\tdouble p = dp[i][j] - cakes[i] + b + cakes[k];\n\t\t\t\t\tdp[k][mask] = (dp[k][mask] < 0.0 ? p : min(dp[k][mask], p));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool flag = false;\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tif(dp[i][(1 << n) - 1] <= width + 1e-6){ flag = true; }\n\t\t}\n\t\tcout << (flag ? \"OK\" : \"NG\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 300; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\n#include<cassert>\n#include<cstdio>\n\n#define MAX 12\n\nusing namespace std;\nlong double minimumLength;\nlong double boxLength;\n\nlong double CalculateRoleCakesLength(const vector<int> &r){\n\tlong double ret;\n\tret = r[0] + r[r.size() - 1];\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2 * sqrt((long double)(r[i]*r[i+1]));\n\t}\n\treturn ret;\n}\ninline void InternalInsert(vector<int> &v, unsigned int a, unsigned int dest){\n\tif( a > dest ){\n\t\tv.insert( v.begin() + dest, v[a] );\n\t\tv.erase( v.begin() + a + 1);\n\t}else if( dest > a ){\n\t\tv.insert( v.begin() + dest, v[a] );\n\t\tv.erase( v.begin() + a);\n\t}\n}\ntemplate <typename T>\nvoid printVector( vector<T> &v ){\n\tfor(unsigned int i = 0; i < v.size(); ++i) cout << v[i] << ' '; cout << endl;\n}\nbool OptimizeArrangeOfRoleCakes(long double *result, const long double target, vector<int> &vInBoxCakes){\n\tlong double len;\n\tlong double minlen;\n\tconst long double nowlen = CalculateRoleCakesLength( vInBoxCakes );\n\tvector<pair<int,int> > vCands;\n\n\tminlen = target;\n\tfor(unsigned int i = 0; i < vInBoxCakes.size(); ++i){\n\t\tfor(unsigned int j = 0; j <= vInBoxCakes.size(); ++j){\n\t\t\tif( j >= i + 2 || j <= i - 1 ){\n\t\t\t\tInternalInsert( vInBoxCakes, i, j );\n\t\t\t\tlen = CalculateRoleCakesLength( vInBoxCakes );\n\t\t\t\tif( len < minlen ){\n\t\t\t\t\tminlen = len;\n\t\t\t\t\tvCands.push_back( make_pair(i, j) );\n\t\t\t\t}\n\t\t\t\tif( i < j ) InternalInsert( vInBoxCakes, j - 1, i );\n\t\t\t\telse InternalInsert( vInBoxCakes, j, i + 1 );\n\t\t\t}\n\t\t}\n\t}\n\tif( vCands.size() > 0 ){\n\t\tlong double retminlen = nowlen;\n\t\tint retminlenind = -1;\n\n\t\tfor(unsigned int i = 0; i < vCands.size(); ++i){\n\t\t\tlong double t;\n\t\t\tInternalInsert( vInBoxCakes, vCands[i].first, vCands[i].second );\n\n\t\t\tif( OptimizeArrangeOfRoleCakes(&t, minlen, vInBoxCakes ) ) return true;\n\t\t\tif( t < retminlen ){\n\t\t\t\tretminlen = t;\n\t\t\t\tminimumLength = min(minimumLength, retminlen);\n\t\t\t\tif( minimumLength <= boxLength ) return true;\n\t\t\t\tretminlenind = i;\n\t\t\t}\n\t\t\t\n\t\t\tif( vCands[i].first < vCands[i].second ){\n\t\t\t\tInternalInsert( vInBoxCakes, vCands[i].second - 1, vCands[i].first);\n\t\t\t}else{\n\t\t\t\tInternalInsert( vInBoxCakes, vCands[i].second, vCands[i].first + 1 );\n\t\t\t}\n\t\t}\n\t\t*result = retminlen;\n\t\treturn false;\n\t}\n\t*result = nowlen;\n\treturn false;\n}\nint main(void){\n\twhile(true){\n\n\t\tlong double length = 0;\n\t\tvector<int> vInBoxCakes;\n\t\t\n\t\tcin >> boxLength;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t\tcin >> tmp;\n\t\t\tvInBoxCakes.push_back(tmp);\n\t\t}\n\n\t\tminimumLength = CalculateRoleCakesLength( vInBoxCakes );\n\t\tOptimizeArrangeOfRoleCakes( &length, minimumLength, vInBoxCakes);\n\n\t\t//cout << \"Minmum Length = \" << minimumLength << endl;\n\t\tif( minimumLength <= boxLength ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <string>\n#include <cmath>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nint length, n;\nvector<int> a;\nmap<pair<int,int>, double> memo;\n\ndouble dist(int i, int j) {\n    return sqrt(4 * a[i] * a[j]);\n}\n\ndouble f(int p, int prev) {\n    if (__builtin_popcount(p) == 0) {\n        return a[prev];\n    }\n    if (memo.count(make_pair(p, prev))) return memo[make_pair(p, prev)];\n    double ret = 1e+300;\n    for (int i = 0; i < n; ++ i) if ((p>>i)&1) {\n        if (prev == -1) {\n            ret = min(ret, f(p&~(1<<i), i) + a[i]);\n        } else {\n            ret = min(ret, f(p&~(1<<i), i) + dist(prev, i));\n        }\n    }\n    return memo[make_pair(p, prev)] = ret;\n}\n\nbool solve() {\n    n = a.size();\n    if (n == 0) return true;\n    if (n == 1) return 2 * a[0] <= length;\n    double len = f((1<<n)-1, -1);\n    return len <= length + 1e-9;\n}\n\nint main() {\n    string buf;\n    while (getline(cin, buf)) {\n        istringstream in(buf);\n        in >> length;\n        a.clear();\n        memo.clear();\n        for (int x; in >> x; ) a.push_back(x);\n        cout << (solve() ? \"OK\" : \"NA\") << endl;\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<sstream>\n\nusing namespace std;\n\nconst double INF=1000000000;\ndouble ans;\ndouble l;\nbool flag;\nstring str;\nvector<double> r;\ndouble dp[1<<12][12];\n\nvoid rec(int x,int bit,double nl,double nh){\n\t//if(dp[bit][x]<nl)return;\n\tdp[bit][x]=nl;\n\tif(bit==(1<<r.size())-1){\n\t\tif(nl+nh<=l)flag=true;\n\t\tans=min(ans,nl+nh);\n\t\treturn;\n\t}\n\telse{\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\tif(!(bit>>i & 1)){\n\t\t\t\tdouble nnh=r[i];\n\t\t\t\tdouble nnl=nl+sqrt(pow(nh+nnh,2)-pow(fabs(nh-nnh),2));\n\t\t//\t\tif(nnl<dp[bit | 1<<i][i]){\n\t\t\t\t\tdp[bit | 1<<i][i]=nnl;\n\t\t\t\t\trec(i,bit | 1<<i,nnl,nnh);\n\t\t\t//\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(void){\n\twhile(getline(cin,str)){\n\t\tflag=false;\n\t\tans=INF;\n\t\tr.clear();\n\t\tfor(int i=0;i<(1<<12)-1;i++){\n\t\t\tfor(int j=0;j<12;j++){\n\t\t\t\tdp[i][j]=INF;\n\t\t\t}\n\t\t}\n\t\tstringstream input(str);\n\t\tinput >> l;\n\t\tdouble a;\n\t\twhile(input >> a)r.push_back(a);\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\trec(i,1<<i,r[i],r[i]);\n\t\t}\n\t\tif(flag)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <cmath>\nusing namespace std;\n\nconst int MAXN = 13;\nconst double inf = 1e10;\nint N;\nint W;\nint R[MAXN];\ndouble dp[1<<MAXN][MAXN];\n\nint main() {\n  string line;\n  while(getline(cin, line)) {\n    stringstream ss(line);\n    ss >> W;\n    N = 0;\n    while(ss >> R[N]) ++N;\n    fill(dp[0], dp[1<<MAXN], inf);\n    for(int i = 0; i < N; ++i) {\n      dp[1<<i][i] = R[i];\n    }\n    for(int b = 0; b < (1<<N); ++b) {\n      for(int i = 0; i < N; ++i) {\n        for(int k = 0; k < N; ++k) {\n          if(b&(1<<k)) continue;\n          int d = (R[i]+R[k])*(R[i]+R[k]) - (R[i]-R[k])*(R[i]-R[k]);\n          dp[b|(1<<k)][k] = min(dp[b|(1<<k)][k], dp[b][i] + sqrt(d));\n        }\n      }\n    }\n    double res = inf;\n    for(int i = 0; i < N; ++i) {\n      res = min(res, dp[(1<<N)-1][i]+R[i]);\n    }\n    if(res <= W) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<cstring>\n#include<cstdlib>\n\nusing namespace std;\n\n#define N 12+1\n#define INF (1e8)\n#define rep(i,j) for(int i=0;i<(j);i++)\n\ndouble dp[1<<N][N];\nint r[N];\n\ndouble diff(int a,int b){\n\tif(a*b)return sqrt((r[a]+r[b])*(r[a]+r[b])-(r[a]-r[b])*(r[a]-r[b]));\n\treturn r[a+b];\n}\n\nint main(){\n\tchar s[1024];\n\tint n,w;\n\twhile(NULL != gets(s)){\n\t\tw = atoi(s);\n\t\tn = 1;\n\t\tchar *p = strchr(s,' ');\n\t\twhile(p != NULL){\n\t\t\tr[n++] = atoi(p+1);\n\t\t\tp = strchr(p+1,' ');\n\t\t}\n\t\trep(i,1<<n)fill(dp[i],dp[i]+n,INF);\n\t\tdp[(1<<n)-1][0] = 0;\n\t\tfor(int i=(1<<n)-2;i>=0;i--){\n\t\t\trep(j,n)rep(k,n)\n\t\t\t\tif(!((i>>k)&1))\n\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i|(1<<k)][k] + diff(j,k));\n\t\t}\n\t\tputs(dp[0][0]>w?\"NA\":\"OK\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    sort(r.begin(),r.end());\n\n    if(r.size()<=5){\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    if(r.size()>2)swap(r[1],r[r.size()-1]);\n\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%(r.size()-2)+1;\n            b=rand()%(r.size()-2)+1;\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    if(abs(evaluate(r)-mi)>EPS)puts(\"assert\");\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-6 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\n\ndouble calc(int r1,int r2){\n  return sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,1e9));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    REP(i,1,(1 << n)){\n      REP(j,0,n){\n        if(i & (1 << j)) continue;\n        ll nxt = i | (1 << j);\n        REP(k,0,n){\n          if((i & (1 << k)) == 0) continue;\n          double bw = 0;\n          if(nxt == (1 << n)-1){\n            bw += v[j];\n          }\n          bw += calc(v[k],v[j]);\n          dp[nxt][j] = min(dp[nxt][j],bw + dp[i][k]);\n        }\n      }\n    }\n    rep(i,n){\n      ans = min(ans,dp[(1 << n)-1][i]);\n    }\n    if(ans <= w){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <climits>\n#include <cstring>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n#define ALL(A)\t\t(A).begin(),(A).end()\n#define DUMP(A)    cout<<#A<<\"=\"<<(A)<< endl\n#define SIZE(A)    (int)((A).size())\n#define SQ(A)   ((A)*(A))\nusing namespace std;\ntypedef long long ll;\n\nint main(){\n    int role[12];\n    char *li;\n    string str;\n    while(getline(cin,str)){\n        li=(char *)str.c_str();\n        int len;\n        char sp[]=\" \";\n        char *res=NULL;\n        sscanf(strtok(li,sp),\"%d\",&len);\n        int n=0;\n        for(;;){\n            res=strtok(NULL,sp);\n            if(res==NULL) break;\n            sscanf(res,\"%d\",&role[n]);\n            n++;\n        }\n        double path[13][13];\n        for(int i=0;i<n;i++){\n            path[0][i]=path[i][0]=role[i];\n        }\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                path[i][j]=sqrt(SQ(role[i]+role[j])-SQ(role[i]-role[j]));\n            }\n        }\n        double dp[1<<n][n];\n        for(int i=0;i<(1<<n);i++){\n            for(int j=0;j<n;j++){\n                dp[i][j]=10000;\n            }\n        }\n        for(int i=0;i<n;i++){\n            dp[1<<i][i]=role[i];\n        }\n        for(int i=1;i<(1<<n);i++){\n            for(int j=0;j<n;j++){\n                if(i&(1<<j)){\n                    int bef=i-(i&(1<<j));\n                    for(int k=0;k<n;k++){\n                        if(bef&(1<<k)){\n                            dp[i][j]=min(dp[i][j],dp[bef][k]+path[k][j]);\n                        }\n                    }\n                }\n            }\n        }\n        double ret=10000;\n        for(int i=0;i<n;i++){\n            ret=min(ret,dp[(1<<n)-1][i]+role[i]);\n        }\n        if(ret<=len) printf(\"OK\\n\");\n        else printf(\"NA\\n\");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<sstream>\n#include<cmath>\n\nusing namespace std;\nconst int MAX = (1<<13);\ntypedef pair<double,double> P; //P(center, radius)\nvector<double> V;\nP dp[MAX];\ndouble box;\n\nvoid init(){\n  V.clear();\n  fill(dp,dp+MAX,P(500,500));\n  dp[0] = P(0,0);\n}\n\nvoid input(string s){\n  stringstream ss(s);\n  ss>>box;\n  double n;\n  while(ss>>n) V.push_back(n);\n}\n\nvoid solve(){\n  for(int i = 0; i < (1<<V.size()); i++)\n    for(int j = 0; j < V.size(); j++)\n      if(i == 0){\n\tint nex = (1<<j);\n\tdp[nex].first = dp[nex].second = V[j];\n\t\n      }else if(!(i&(1<<j))){\n\tint nex = i+(1<<j);\n\tP p = dp[i];\n\tp.first += 2.0*sqrt(dp[i].second*V[j]);\n\tp.second = V[j];\n\tif(p.first + p.second < dp[nex].first+dp[nex].second) dp[i+(1<<j)] = p;\n\telse if(p.first+p.second == dp[nex].first+dp[nex].second &&\n\t\tp.second < dp[nex].second) dp[i+(1<<j)] = p;\n\n      }\n  int last = (1<<V.size())-1;\n  // cout << dp[last].first << \" \" << dp[last].second << endl;\n  if(dp[last].first+dp[last].second <= box) cout << \"OK\" << endl;\n  else cout << \"NA\" << endl;\n}\n\nint main(){\n\n  string s;\n  while(getline(cin,s)){\n    init();\n    input(s);\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tused = false;\n\t\tr = x = -1.0;\n\t}\n\n\tdouble r,x;\n\tbool used;\n};\n\ndouble*** dp;\n\nvoid func(char buf[50]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' '; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[80];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <ctime>\n#include<cstdlib>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div; //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = 0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\tif(i == info_index && a == 0 && state == limit-1 && k != 0){\n\t\t\t\t\t\t\t\tdp[i][0][limit-1] = min(dp[i][0][limit-1],dp[i-1][k][state]+distance[k][0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\t//printf(\"OK %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\t//printf(\"NA %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <sstream>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\n#define OFFSET 2\n\nint box_width;\n\ndouble dist(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nbool solve(vector<int> cakes, LL state)\n{\n\tif (cakes.empty()) {\n\t\t// calculate the length\n\t\tdouble length = 0;\n\t\tint prev = 0;\n\t\tint save_state = state;\n\t\tdo {\n\t\t\tint current = state % 10 + OFFSET;\n\t\t\tstate /= 10;\n\t\t\tif (prev) {\n\t\t\t\tlength -= prev;\n\t\t\t\tlength += dist(prev, current);\n\t\t\t\tlength += current;\n\t\t\t} else {\n\t\t\t\tlength += current * 2;\n\t\t\t}\n\t\t\tprev = current;\n\t\t} while (state);\n\t\t// cout << \"state: \" << save_state << \", length: \" << length << endl;\n\t\tif (length <= box_width) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tint prev_cake = 0;\n\tfor (int i = 0; i < cakes.size(); ++i) {\n\t\tvector<int> next_cakes = cakes;\n\t\tint cake = next_cakes[i];\n\t\tif (cake == prev_cake) {\n\t\t\tcontinue;\n\t\t}\n\t\tLL next_state = state * 10 + (cake - OFFSET);\n\t\tnext_cakes.erase(next_cakes.begin() + i);\n\t\tif (solve(next_cakes, next_state)) {\n\t\t\treturn true;\n\t\t}\n\t\tprev_cake = cake;\n\t}\n\n\treturn false;\n}\n\nint main()\n{\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tvector<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsort(cakes.begin(), cakes.end());\n\n\t\tif (solve(cakes, 0)) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <cmath>\n#define INF 9999999\nusing namespace std;\n\nint W;\nint R[12];\nint N;\n\n\ndouble calcCost(int u, int v) {\n  if(u == N || R[u] == R[v]) return R[v] * 2;\n  double d;\n  d = sqrt((R[u]+R[v])*(R[u]+R[v]) - (R[u]-R[v])*(R[u]-R[v]));\n  return d - R[u] + R[v];\n}\n/*\ndouble rec(int s, int u) {\n  double res = INF;\n  if(s == (1 << N) - 1) return 0;\n  for(int v = 0; v < N; ++v) {\n    if((s >> v) & 1) continue;\n    res = min(res, rec(s | (1 << v), v) + calcCost(u, v));\n  }\n  return res;\n}\n\nvoid solve() {\n  double tmp = rec(0, N);\n  cout << tmp << \" \";\n  if(tmp <= W) cout << \"OK\" << endl;\n  else                cout << \"NA\" << endl;\n}\n*/\ndouble dp[(1 << 12)][13];\n\nvoid solve() {\n  for(int s = 0; s < (1 << N); ++s) {\n    if(s == (1 << N) - 1) fill(dp[s], dp[s] + N+1, 0);\n    else                  fill(dp[s], dp[s] + N+1, INF);\n  }\n\n  for(int s = (1 << N)-2; s >= 0; --s) {\n    for(int u = 0; u <= N; ++u) {\n      for(int v = 0; v < N; ++v) {\n\tdp[s][u] = min(dp[s][u], dp[s | (1 << v)][v] + calcCost(u, v));\n      }\n    }\n  }\n  if(dp[0][N] <= W) cout << \"OK\" << endl;\n  else         cout << \"NA\" << endl;\n}\n\nmain() {\n  string str;\n  while(getline(cin, str) && !cin.eof()) {\n    stringstream ss; ss << str;\n    ss >> W;\n    N = 0;\n    while(!ss.eof()) {\n      int tmp;\n      ss >> tmp;\n      R[N++] = tmp;\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\nint main(){\nlong b,r[12],i,j,n,a[12];\ndouble t;\nstring s;\nstringstream ss;\nwhile(getline(cin,s)){\nss.str(\"\");ss.clear();\nss<<s;\nss>>b;\nfor(i=0;;i++){ss>>r[i];if(ss.eof())break;}\nn=i+1;\nsort(r,r+n);\nfor(i=j=0;j<n;i++,j+=2)a[j]=r[i];\nif(n%2==0){\nfor(j=n-1;j>=0;i++,j-=2)a[j]=r[i];\n}else{\nfor(j=n-2;j>=0;i++,j-=2)a[j]=r[i];\n}\nfor(t=a[0]+a[n-1],i=0;i<n-1;i++)t+=2*sqrt(a[i]*a[i+1]);\nif(b>=t)cout<<\"OK\"<<endl;else cout<<\"NA\"<<endl;\n}\nreturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <sstream>\n#define MAX_N 12\n#define INF 10000\nusing namespace std;\nvector<int> cakes;\nint n;\ndouble d[MAX_N][MAX_N];\ndouble dp[1 << MAX_N][MAX_N];\n\nvoid calc_dist(){\n    for (int i = 0; i < n; i++) {\n        for (int j = 0;  j < n; j++) {\n            double dist = sqrt(pow(cakes[i] + cakes[j], 2) - pow(cakes[i] - cakes[j], 2));\n            d[i][j] = dist;\n        }\n    }\n}\n\ndouble solve(){\n    n = cakes.size();\n    for (int s = 0; s < 1 << n; s++) {\n        for (int j = 0; j < n; j++) {\n            dp[s][j] = INF;\n        }\n    }\n    \n    dp[(1 << n) - 1][0] = 0;\n    \n    for (int s = (1 << n) - 2; s >= 0; s--) {\n        for (int v = 0; v < n; v++) {\n            for (int u = 0; u < n; u++) {\n                if (!(s >> u & 1)) {\n                    dp[s][v] = min(dp[s][v], dp[s | 1 << u][u] + d[v][u]);\n                }\n            }\n        }\n    }\n    return dp[0][0];\n}\n\n\nint main()\n{\n    int len;\n\n    while (cin >> len) {\n        cakes.clear();\n        string str;\n        getline(cin, str);\n        stringstream ss(str);\n        while (!ss.eof()) {\n            int r;\n            ss >> r;\n            cakes.push_back(r);\n        }\n        n = cakes.size();\n        calc_dist();\n        for (int i = 0; i < n; i++) {\n            d[i][i] = 0;\n        }\n\n//        for (int i = 0; i < n; i++) {\n//            for (int j = 0; j < n; j++) {\n//                cout << d[i][j] << \" \";\n//            }\n//            cout << endl;\n//        }\n        if (solve() <= len){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NG\" << endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <list>\n#include <iostream>\n#include <sstream>\n#include <climits>\n#include <cfloat>\n\ntypedef long long ll;\n\nusing namespace std;\n\ndouble calculate_len(int* r, int n)\n{\n\tdouble t = 0;\n\tfor (int i = 1; i < n; ++i)\n\t\tt += sqrt((double)r[i-1] * r[i]);\n\treturn r[0] + r[n-1] + 2*t;\n}\nint main()\n{\n\twhile (true)\n\t{\n\t\tchar buf[256];\n\t\tcin.getline(buf, sizeof(buf));\n\t\tif (strlen(buf) == 0)\n\t\t\tbreak;\n\n\t\tistringstream is(buf);\n\t\tint len, radius[16], n;\n\t\tis >> len;\n\t\tfor (n = 0; is >> radius[n]; ++n)\n\t\t\t;\n\n\n\t\tsort(radius, radius + n);\n\t\tint r[16], rr[16];\n\t\tint i, j, k;\n\t\tfor (i = 0, j = n/2-1, k = 2; j >= 0 && j < n; ++i, j += k, k *= -2)\n\t\t\tr[j] = radius[i];\n\t\tfor (i = n-1, j = n/2, k = -2; j >= 0 && j < n; --i, j += k, k *= -2)\n\t\t\tr[j] = radius[i];\n\t\tdouble ans = calculate_len(r, n);\n\n\t\tif (n & 1)\n\t\t{\n\t\t\tfor (i = n-1, j = n/2-1, k = 2; j >= 0 && j < n; --i, j += k, k *= -2)\n\t\t\t\tr[j] = radius[i];\n\t\t\tfor (i = 0, j = n/2, k = -2; j >= 0 && j < n; ++i, j += k, k *= -2)\n\t\t\t\tr[j] = radius[i];\n\t\t\tans = min(ans, calculate_len(r, n));\n\t\t}\n\n\t\tif (ans <= len+1e-4)\n\t\t\tputs(\"OK\");\n\t\telse\n\t\t\tputs(\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n#define square(X) ((X)*(X))\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nconst int MAX_N = 12;\ndouble DP[1 << MAX_N][MAX_N];\nint CAKE[MAX_N];\nint N,L;\n\n\ndouble rec(int se,int now){\n    if(now != -1 and DP[se][now] >= 0) return DP[se][now];\n    if(se == ((1 << N)-1)){\n        return CAKE[now];\n    }\n    double ret = 10000000;\n    for(int i=0;i<N;i++){\n        if(!((se >> i) & 1)){\n            // no one.\n            if(now == -1){\n                ret = min(ret,rec(se | (1 << i),i)+CAKE[i]);\n            }else{\n                ret = min(ret,rec(se | (1 << i),i)+\n          sqrt(square(CAKE[i]+CAKE[now])-square(CAKE[i]-CAKE[now])));\n            }\n        }\n    }\n    if(now != -1){\n        return (DP[se][now]=ret);\n    }else{\n        return ret;\n    }\n}\n\nint main(){\n    string s;\n    while(getline(cin,s)){\n        for(int i=0;i<(1<<MAX_N);i++){\n            for(int j=0;j<MAX_N;j++){\n                DP[i][j] = -1;\n            }\n        }\n        stringstream ss;\n        ss << s;\n        ss >> L;\n        N = 0;\n        for(int i=0;!ss.eof();i++){\n            ss >> CAKE[i];\n            N++;\n        }\n        if(rec(0,-1) <= L){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NA\" << endl;\n        }\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 10000; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tfor(int i = 0 ;i < N ; i++){\n\t\t\tscore = Evaluate(r);\n\t\t}\n\t\tif(score < mi){\n\t\t\tmi = score;\n\t\t}\n\t\telse {\n\t\t\tif(Changes(cnt) > false){\n\t\t\t\tmi = score;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswap(r[rand()%N],r[rand()%N]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//===============================================\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n#define INF 100000\n\nint n, W;\nint r[12];\ndouble bitDP[12][(1<<12)]; // [??????????????£???] , [?????£?????±?????????bit??§??????]\n\nbool inputData() {\n\tstring str;\n\tgetline(cin, str);\n\tif(cin.eof()) {\n\t\treturn false;\n\t}\n\t\n\tstr += ' ';\n\t\n\tint i, tmp = 0;\n\tfor(i = 0; i < str.size(); i++) {\n\t\tif('0' <= str[i] && str[i] <= '9') {\n\t\t\ttmp  = tmp * 10 + str[i] - '0';\n\t\t} else {\n\t\t\tW = tmp;\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tn = tmp = 0;\n\twhile(i < str.size()) {\n\t\tif('0' <= str[i] && str[i] <= '9') {\n\t\t\ttmp  = tmp * 10 + str[i] - '0';\n\t\t} else {\n\t\t\tr[n++] = tmp;\n\t\t\ttmp = 0;\n\t\t}\n\t\t\n\t\ti++;\n\t}\n\t\n\treturn true;\n}\n\nint main()\n{\n\twhile(inputData()) {\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\t\tbitDP[i][bit] = INF;\n\t\t\t}\n\t\t\tbitDP[i][0] = 0;\n\t\t}\n\t\t\n\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\tfor(int i = 0; i < n ; i++) { // i ????????????????????¨??????????????±??????\n\t\t\t\tif((1 << i) & bit) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tint next = (1 << i) | bit;\n\t\t\t\tfor(int j = 0; j < n; j++) { // ???????????????????????±??????\n\t\t\t\t\tdouble distance_r = r[i] + r[j];\n\t\t\t\t\tdouble distance_y = (r[i] - r[j] >= 0)? r[i] - r[j]: r[j] - r[i];\n\t\t\t\t\tdouble cost = distance_r * cos(asin(distance_y / distance_r));\n\t\t\t\t\tif(bit == 0) {\n\t\t\t\t\t\tcost = r[i];\n\t\t\t\t\t}\n\t\t\t\t\tif(next == (1 << n)-1) {\n\t\t\t\t\t\tcost += r[i];\n\t\t\t\t\t}\n\t\t\t\t\tbitDP[i][next] = min(bitDP[i][next], bitDP[j][bit] + cost);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/*\n\t\tfor(int i = 0; i < n ; i++) {\n\t\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\t\tif(bitDP[i][bit] == INF) cout << -1 << \" \";\n\t\t\t\telse cout << bitDP[i][bit] << \" \";\n\t\t\t}cout << endl;\n\t\t}*/\n\t\t\n\t\tdouble ans = INF;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tans = min(ans, bitDP[i][(1 << n)-1]);\n\t\t}\n\t\t//cout << ans << \" \" << W << endl;\n\t\tcout << ((ans <= W)? \"OK\": \"NA\") << endl;\n\t\t\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15];\n    double cake_length;\n    int last_cake;\n};\n\nsome_cake init_some_cake(){\n    some_cake init;\n    for(int i=0; i<15; i++)init.cake_flag[i]=0;\n    init.cake_length=0.0;\n    init.last_cake=0;\n    \n    return init;\n}\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            //cout<<cake[cake_count]<<endl;\n            cake_count++;\n        }\n        \n        queue<some_cake> qu;\n        some_cake temp = init_some_cake();\n        qu.push(temp);\n        bool ans_flag=true;\n        while(qu.size()!=0){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        if(x<0)x=x*-1;\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <algorithm>\nusing namespace std;\n\ndouble sq(double x) {\n    return x * x;\n}\n\ndouble getWidth(vector<int> &v1, vector<int> &v2) {\n    vector<int> v;\n    int n = v1.size();\n    for (int i=0; i<n; ++i) {\n        v.push_back(v1[i]);\n        if (i < (int)v2.size()) {\n            v.push_back(v2[i]);\n        }\n    }\n    int m = v.size();\n    double sum = v[0] + v[m-1];\n    for (int i=1; i<m; ++i) {\n        sum += sqrt(sq(v[i] + v[i-1]) - sq(abs(v[i] - v[i-1])));\n    }\n    return sum;\n}\n\nbool solve(vector<int> v1, vector<int> v2, double len) {\n    do {\n        sort(v2.begin(), v2.end());\n        do {\n            if (v1.size() < v2.size()) {\n                swap(v1, v2);\n            }\n            if (getWidth(v1, v2) < len + 1e-6) {\n                return true;\n            }\n        } while (next_permutation(v2.begin(), v2.end()));\n    } while (next_permutation(v1.begin(), v1.end()));\n    return false;\n}\n\nint main() {\n    string input;\n    int len, r;\n    while (getline(cin, input)) {\n        stringstream ss(input);\n        ss >> len;\n        vector<int> cake;\n        while (ss >> r) {\n            cake.push_back(r);\n        }\n        sort(cake.begin(), cake.end());\n        int siz = cake.size();\n        int n = siz / 2 + (siz % 2);\n        int m = siz / 2;\n        bool ok = solve(vector<int>(cake.begin(), cake.begin() + n),\n                        vector<int>(cake.end() - m, cake.end()),\n                        len);\n        if ( ! ok) {\n            ok |= solve(vector<int>(cake.end() - n, cake.end()),\n                        vector<int>(cake.begin(), cake.begin() + m),\n                        len);\n        }\n        cout << (ok ? \"OK\" : \"NA\") << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\t// require sort next_permutation count __gcd reverse etc.\n#include <cstdlib>\t// require abs exit\n#include <cstdio>\t// require scanf printf\n#include <functional>\n#include <numeric>\t// require accumulate\n#include <cmath>\n#include <climits>\n#include <limits>\n#include <cfloat>\n#include <iomanip>\t// require setw\n#include <sstream>\t// require stringstream \n#include <cstring>\t// require memset\n#include <cctype>\t// require tolower, toupper\n#include <fstream>\t// require freopen\n#include <ctime>\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define ALL(A) A.begin(), A.end()\n#define DEBUG 1\n#define INF 1e100\n#define EPS 1e-8\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\nstring FILE_NAME = \"testcase.0120_\";\nstring NAME;\nstring itos (int n )\n{\n\tstringstream ss;\n\tss << n;\n\n\treturn ss.str();\n}\n/*\n\tbitDP : dp[S][k]:= k 番目のケーキ (k &#8713; S )をつかった場合、距離が最小になる\n\t\tdp[S | k][k] = min (dp[S][j] + (j,k)の距離 ) (j ∈ S, k &#8713; S )\n*/\n\ndouble dp[1<<12][12];\nvector<int> r;\n\ndouble calc (int i, int j ){\n\tdouble res = (double)((r[i] + r[j] )*(r[i] + r[j] ) - (r[i] - r[j] )*(r[i] - r[j] ) );\n\n\treturn sqrt (res );\n} \n\ndouble dist[11][11];\n// 3 〜 10 までの2つの円の距離を求めておく\nvoid calc_dist (void ){\n\tmemset (dist, 0., sizeof (dist ) );\n\tfor (int i = 3 ;i <= 10; i++ ){\n\t\tfor (int j = 3; j <= 10; j++ ){\n\t\t\tdist[i][j] = 2.*sqrt (i*j );\n\t\t} // end for\n\t} // end for\n}\n\n// 円 i, j の距離を求めておく\ndouble d[12][12];\nvoid calc_d (int n ){\n\tmemset (d, 0., sizeof (d ) );\n\trep (i, n ){\n\t\trep (j, n ){\n\t\t\td[i][j] = dist[r[i]][r[j]];\n\t\t} // end rep\n\t} // end rep\n}\t\n\n\nint main()\n{\n//\tcut here before submit \n#if DEBUG\n\tNAME = FILE_NAME;\n\tint CNT = 1;\n\tNAME += itos (CNT );\n\twhile (freopen (NAME.c_str() , \"r\", stdin ) != NULL ) {\n#endif\n\tios_base::sync_with_stdio(0);\n\tstring str = \"\";\n\tcalc_dist ();\n\tint box;\n\twhile (getline (cin, str ) ){\n\t\tmemset (dp, 0., sizeof (dp ) );\n\t\tr.clear();\n\t\tstringstream ss (str );\n\t\tint in;\n\t\tss >> box;\n\t\twhile (ss >> in ) r.push_back (in );\n\t \tint n = r.size();\n\t\tcalc_d (n );\n\t\trep (i, 1<<n ) rep (j, n ) dp[i][j] = INF;\n\t\trep (j, n ) dp[1<<j][j] = (double)r[j];\n\t\trep (i, 1<<n ){\n\t\t\trep (j, n ){\n\t\t\t\tif (dp[i][j] != INF ){\n\t\t\t\t\trep (k, n ){\n\t\t\t\t\t\tif (k == j ) continue;\n\t\t\t\t\t\tif (i & (1<<k ) ) continue;\n\t\t\t\t\t\tdp[i | (1<<k)][k] = min (dp[i | (1<<k)][k], dp[i][j] + d[j][k] );\n\t\t\t\t\t} // end rep\n\t\t\t\t} // end if\n\t\t\t} // end rep\n\t\t} // end rep\n\n\t\tdouble res = INF;\n\t\trep (j, n ) res = min (res, dp[(1<<n)-1][j] + (double)r[j] );\n\n\t\tif (res > (double)box ){\n\t\t\tcout << \"NA\" << endl;\n\t\t}else{\n\t\t\tcout << \"OK\" << endl;\n\t\t} // end if\n\t} // end while\n\n#if DEBUG\n\tCNT++;\t// cut here before submit\n\tNAME = FILE_NAME;\n\tNAME += itos (CNT );\n\t} // end loop; cut here before submit\n#endif\t\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECURE_NO_WARNINGS 1\n# include <iostream>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <map>\n# include <stack>\nusing namespace std;\n# define M_PI 3.141592\n# define FOR(i,n) for(int i=0;i<(int)n;i++)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define toRad 2.0*M_PI/360.0\n# define inin(x) int x;cin>>x;\n# define all(x) x.begin(),x.end()\n# define debug(x) cout<<#x<<\" :\"<<x<<endl;\n# define rep(i,n) for(int i=0;i<(int)n;i++)\n# define EPS 1e-12\n# define CHECK(i,a) FOR(i,a.size())cout<<#a<<\"[\"<<i<<\"] : \"<<a[i]<<endl; \ndouble calc(vector<double> a)\n{\n\tdouble ans = 0;\n\tfor (int i = 0; i < a.size()-1; i++)\n\t{\n\t\tdouble t = a[i] + a[i + 1];\n\t\tdouble r = abs(a[i] - a[i + 1]);\n\t\tans += sqrt(t*t - r*r);\n\t}\n\tans += a.front()+a.back();\n\treturn ans;\n}\n\nint main()\n{\n\tstring s;\n\twhile (getline(cin,s))\n\t{\n\t\tstringstream ss(s);\n\t\tdouble n;\n\t\tvector<double>a,A;\n\t\tss >> n;\n\t\tdouble temp;\n\t\twhile (ss >> temp)\n\t\t{\n\t\t\ta.push_back(temp);\n\t\t}\n\t\tbool ok = false;\n\t\tsort(all(a));\n\t\tA = a;\n\t\tvector<double> b,c;\n\t\tint iii = 0;\n\t\twhile (a.size())\n\t\t{\n\t\t\tauto it = (iii ? a.begin() : a.end() - 1);\n\t\t\tb.push_back(*it);\n\t\t\ta.erase(it);\n\t\t\tiii++;\n\t\t\tiii %= 2;\n\t\t}\n\t\ta = A;\n\t\tiii = 1;\n\t\twhile (a.size())\n\t\t{\n\t\t\tauto it = (iii ? a.begin() : a.end() - 1);\n\t\t\tc.push_back(*it);\n\t\t\ta.erase(it);\n\t\t\tiii++;\n\t\t\tiii %= 2;\n\t\t}\n\t\tdouble ans = min(calc(b), calc(c));\n\t\tok = (ans <= n);\n\n\t\tif (ok)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <sstream>\n#include <cmath>\nusing namespace std;\n#define N_MAX 10\n#define INF 99999999\nint W;\nint N;\nint R[N_MAX];\ndouble D[N_MAX+1][N_MAX];\ndouble dp[(1<<N_MAX)][N_MAX+1];\n\n/*\ndouble rec(int s, int u) {\n  if(s == (1<<N) - 1) return 0;\n  double res = INF;\n  for(int v = 0; v < N; ++v) {\n    if((s>>v) & 1) continue;\n    res = min(res, D[u][v] + rec(s | (1<<v), v));\n  }\n  return res;\n}\n*/\n\nvoid make() {\n  for(int i = 0; i <= N; ++i) {\n    for(int j = 0; j < N; ++j) {\n      if(i == j) {\n\tD[i][j] = 0;\n      } else if(i == N || R[i] == R[j]) {\n\tD[i][j] = R[j] * 2;\n      } else {\n\tdouble d = sqrt( pow((double)(R[i]+R[j]), 2.0)\n\t\t\t - pow((double)(R[i]-R[j]), 2.0) );\n\tD[i][j] = d - R[i] + R[j];\n      }\n    }\n  }\n}\n\nvoid solve() {\n  make();\n  for(int i = 0; i < 1<<N; ++i) {\n    if(i == (1<<N)-1) fill(dp[i], dp[i]+N+1, 0);\n    else              fill(dp[i], dp[i]+N+1, INF);\n  }\n\n  for(int s = (1<<N) - 2; s >= 0; s--) {\n    for(int u = 0; u <= N; u++) {\n      for(int v = 0; v < N; v++) {\n\tif((s>>v) & 1) continue;\n\tdp[s][u] = min(dp[s][u], D[u][v] + dp[s|(1<<v)][v]);\n      }\n    }\n  }\n  cout << (dp[0][N] <= W ? \"OK\" : \"NA\") << endl;\n}\n\nmain() {\n  string line;\n  while(getline(cin, line)) {\n    stringstream ss;\n    ss << line;\n    ss >> W;\n    N = 0;\n    int a;\n    while(ss >> a) R[N++] = a;\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <sstream>\n#include <cstring>\n#include <fstream>\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nconst int MAX_N = 12+1;\nconst double INF = 1e+100;\ndouble dist[10+1][10+1]; // åå¾ a ã®ã±ã¼ã­ã®ä¸­å¿ã¨åå¾ b ã®ã±ã¼ã­ã®ä¸­å¿ã¨ã®è·é¢ã\ndouble d[MAX_N][MAX_N];\ndouble dp[1<<MAX_N][MAX_N];\nint n, w;\nint a[MAX_N];\n\n// ã±ã¼ã­éã®è·é¢ãæ±ãã\nint calc (void )\n{\n\tfor (int i = 3; i <= 10; i++ )\n\t\tfor (int j = 3; j <= 10; j++ )\n\t\t\tdist[i][j] = 2.0*sqrt ((double)i*j );\n}\n\n// çµè·¯ã®æ¥ç¶ãæ±ãã\nvoid make (void )\n{\n\t// åæå\n\trep (i, n+1 )\n\t\trep (j, n+1 )\n\t\t\t\td[i][j] = INF;\n\n\trep (i, n )\n\t\trep (j, n )\n\t\t\td[i][j] = dist[a[i]][a[j]];\n\n\trep (i, n ){\n\t\td[n][i] = a[i]; d[i][n] = a[i];\n\t} // end rep\n\tn++;\n}\n\n// bitDP\ndouble solve (){\n\n\t// åæå\n\trep (S, 1<<n ){\n\t\tfill (dp[S], dp[S]+n, INF );\n\t} // end rep\n\n\tdp[(1<<n)-1][0] = 0;\n\tfor (int S = (1 << n ) - 2; S >= 0; S-- )\n\t\trep (v, n ) rep (u, n )\n\t\t\tif (!(S >> u & 1 ) )\n\t\t\t\tdp[S][v] = min (dp[S][v], dp[S | 1 << u][u] + d[v][u] );\n\n\treturn dp[0][0];\n}\n\nint main()\n{\n\tcalc ();\n\tstring str = \"\";\n\n\twhile (getline (cin, str ) ){\n\t\tvector <int> cake; \n\t\tstringstream ss (str );\n\t\tss >> w;\n\t\tint i = 0, m;\n\t\twhile (ss >> m ){\n\t\t\t a[i++] = m;\n\t\t} // end while\n\t\tn = i;\n\t\tmake ();\n\t\tif ((double)w >= solve () ){\n\t\t\tprintf ( \"OK\\n\" );\n\t\t}else{\n\t\t\tprintf ( \"NA\\n\" );\n\t\t} // end if\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    sort(temps.begin(), temps.end());\n\n    {\n      int lb = 0, ub = temps.size() - 1; \n      while (lb <= ub) {\n        if (lb != ub) {\n          cakes.push_back(temps[lb]);\n          cakes.push_back(temps[ub]);\n        } else {\n          int df = abs(cakes.front() - temps[lb]), db = abs(cakes.back() - temps[lb]);\n          if (df > db) cakes.insert(cakes.begin(), temps[lb]);\n          else cakes.push_back(temps[lb]);\n        }\n        ++lb; --ub;\n      }\n    }\n\n    // {\n    //   for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n    //     if (lb == ub) {\n    //       if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n    //         cakes.push_back(temps[lb]);\n    //       else\n    //         inserter(cakes, cakes.begin()) = temps[lb];\n    //     } else {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     }\n    //   }\n    // }\n\n    // puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//38\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<vector>\n#include<cmath>\n#include<map>\n \nusing namespace std;\n\nmap<pair<vector<int>,int>,double> memo;\n\nvector<int> c;\n\ndouble dfs(int nr,int p){\n  if(nr==0){\n    return p;\n  }else if(memo.count(make_pair(c,p))){\n    return memo[make_pair(c,p)];\n  }else{\n    double md=1<<30;\n    for(int i=3;i<=10;i++){\n      if(c[i]){\n\tc[i]--;\n\tmd=min(md,dfs(nr-1,i)+2*sqrt(i*p));\n\tc[i]++;\n      }\n    }\n    memo[make_pair(c,p)]=md;\n    return md;\n  }\n}\n \nint main(){\n  for(int w;cin>>w;){\n    string s;\n    getline(cin,s);\n    stringstream ss(s);\n    c=vector<int>(11);\n    memo.clear();\n    int nr=0;\n    for(int r;ss>>r;){\n      c[r]++;\n      nr++;\n    }\n    int i;\n    for(i=3;i<=10;i++){\n      if(c[i]){\n\tc[i]--;\n\tif(dfs(nr-1,i)+i<=w)break;\n\tc[i]++;\n      }\n    }\n    cout<<((i<=10)?\"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    sort(r.begin(),r.end());\n\n    if(r.size()<=5){\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    if(r.size()>2)swap(r[1],r[r.size()-1]);\n\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    sort(temps.begin(), temps.end());\n\n    {\n      for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n        if (lb == ub) {\n          if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n            cakes.push_back(temps[lb]);\n          else\n            inserter(cakes, cakes.begin()) = temps[lb];\n        } else {\n          cakes.push_back(temps[lb]);\n          cakes.push_back(temps[ub]);\n        }\n      }\n    }\n    \n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes[0];\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes[cakes.size() - 1];\n    printf(\"%lf\\n\", current_length);\n    \n    // printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n\nint main(){\n\tstring s;\n\tint size;\n\tint r[12];\n\tint n;\n\twhile(getline(cin,s)){\n\t\tint perm[]={0,1,2,3,4,5,6,7,8,9,10,11};\t\n\t\tstringstream ss;\n\t\tss<<s;\n\t\tss>>size;\n\t\tn=0;\n\t\twhile(ss>>r[n])n++;\n\t\tbool ok=false;\n\t\tdo{\n\t\t\tdouble w;\n\t\t\tw=r[perm[0]];\n\t\t\tfor(int i=1;i<n;i++)w+=2*sqrt(r[perm[i-1]]*r[perm[i]]);\n\t\t\tif(1<n)w+=r[perm[n-1]];\n\t\t\tif(w<=size){\n\t\t\t\tok=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(perm,perm+n));\n\t\tcout<<(ok?\"OK\":\"NA\")<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define pb push_back\n\nusing namespace std;\n\nvector<string> split(string &str,char delim)\n{\n\tvector<string> res;\n\tsize_t current = 0,found;\n\twhile((found = str.find_first_of(delim,current)) != string::npos)\n\t{\n\t\tres.push_back(string(str,current,found  - current));\n\t\tcurrent = found + 1;\n\t}\n\tres.push_back(string(str,current,str.size() - current));\n\treturn res;\n}\n\nint main()\n{\n\tstring s;\n\twhile(getline(cin,s))\n\t{\n\t\tvector<string> _s = split(s,' ');\n\t\tvector<int> a;\n\t\tint n = 0;\n\n\t\trep(i,_s.size())\n\t\t{\n\t\t\ta.pb(atoi(_s[i].c_str()));\n\t\t\tn++;\n\t\t}\n\n\t\tint len = a[0];\n\t\ta.erase(a.begin());\n\t\tint sum = 0;\n\n\t\tREP(i,1,a.size())\n\t\t{\n\t\t\tsum += a[i]*2;\n\t\t}\n\n\t\tif(sum <= len)\n\t\t{\n\t\t\tcout << \"OK\" << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tdouble min_len = 10000000;\n\t\t\tdo\n\t\t\t{\n\t\t\t\tdouble sum = 0;\n\t\t\t\tsum += a[0];\n\n\t\t\t\trep(i,n-2)\n\t\t\t\t{\n\t\t\t\t\tdouble temp = (a[i]+a[i+1])*(a[i]+a[i+1]) - (a[i]-a[i+1])*(a[i]-a[i+1]);\n\t\t\t\t\ttemp = sqrt(abs(temp));\n\t\t\t\t\tsum += temp;\n\t\t\t\t}\n\n\t\t\t\tsum += a[n-2];\n\n\t\t\t\tmin_len = min(min_len,sum);\n\t\t\t}while(next_permutation(a.begin(),a.end()));\n\n\t\t\tif(min_len <= len) cout << \"OK\" << endl;\n\t\t\telse cout << \"NA\" << endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <stack>\n#include <vector>\n#include <queue>\n#include <bitset>\n#include <string>\nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<n; i++)\n#define repa(i,s,e) for(int i=s; i<=e; i++)\n#define repd(i,s,e) for(int i=s; i>=e; i--)\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nstring line;\nint S, r, N;\nvi cakes;\n\nconst int MAX_N = 15;\ndouble edges[MAX_N][MAX_N];\nbitset<15> used;\n\ndouble minval;\n\nvoid dfs(int v, double value) {\n\tif(used.count() == N) {\n\t\tminval = min(minval, value + cakes[v]);\n\t\treturn;\n\t}\n\n\tfor(int i=0; i<N; i++) {\n\t\tif(v != i && !used[i]) {\n\t\t\tvalue += edges[v][i];\n\t\t\tused.set(i);\n\t\t\tdfs(i, value);\n\t\t\tused.reset(i);\n\t\t\tvalue -= edges[v][i];\n\t\t}\n\t}\n}\n\nvoid solve() {\n\tN = cakes.size();\n\tmemset(&edges[0][0], 0, sizeof(double) * MAX_N * MAX_N);\n\tfor(int i=0; i<N; i++) {\n\t\tfor(int j=i+1; j<N; j++) {\n\t\t\tdouble d = 2.0 * sqrt((double)(cakes[i] * cakes[j]));\n\t\t\tedges[i][j] = edges[j][i] = d;\n\t\t}\n\t}\n\n\tminval = 10000.0;\n\tfor(int i=0; i<N; i++) {\n\t\tused.set(i);\n\t\t//dfs(i, cakes[i]);\n\t\tused.reset(i);\n\t}\n\tcout << (minval <= S ? \"OK\" : \"NA\") << endl;\n}\n\nint main() {\n\twhile( 1 ) {\n\t\tgetline(cin, line);\n\t\tif(line == \"\") break;\n\n\t\tstringstream ss;\n\t\tss << line;\n\t\tss >> S;\n\t\tcakes.clear();\n\t\twhile(ss>>r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div; //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = 0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\tif(i == info_index && a == 0 && state == limit-1 && k != 0){\n\t\t\t\t\t\t\t\tdp[i][0][limit-1] = min(dp[i][0][limit-1],dp[i-1][k][state]+distance[k][0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\t//printf(\"OK %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\t//printf(\"NA %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    for( int i = 0; i < N / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      else {\n        cakes.push_back(0);\n        for (int i = cakes.size()-2; i >= 0; --i) cakes[i+1] = cakes[i];\n        cakes[0] = e;\n        // cakes.push_back(e);\n      }\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    //puts(\"OK\"); continue;\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 1e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }\n    }\n    bs.push_back(right);\n    double req = bs.front() + bs.back();\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }\n    return req <= w;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    for( int i = 0; i < N / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      else cakes.push_back(e);\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tvector<vector<double> > d(12, vector<double>(1 << n, 1e100));\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\ndouble dp[1<<12][12];\nint n;\n\n\nint main(){\n\n    \n    \n    \n    \n\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[13]={0};\n        n=0;\n        while(ss>>cake[n]){\n            n++;\n        }\n        \n        double v[12][12]={0};\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(i==j){\n                    v[i][j]=0;\n                    v[j][i]=v[i][j];\n                }else{\n                    double x = (cake[i]+cake[j])*(cake[i]+cake[j])-(cake[i]-cake[j])*(cake[i]-cake[j]);\n                    v[i][j]=sqrt((fabs(x)));\n                    //cout<<i<<\" \"<<j<<\" \"<<v[i][j]<<endl;\n                    v[j][i]=v[i][j];\n                }\n                \n            }\n        }\n        \n        \n       \n        //memset(dp, 999999.9999, sizeof(dp));\n        for(int i=0; i<(1<<12); i++){\n            for(int j=0; j<12; j++){\n                dp[i][j]=100000000;\n            }\n        }\n        \n        \n        dp[(1<<n) - 1][0] = 0;\n\n        \n        for(int i=(1<<n)-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                \n                for(int k=0; k<n; k++){\n                    if(!((i >> k) & 1)){\n                        /*if(j==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[k]);\n                        }else if(k==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[j]);\n                        }else{*/\n                            /*\n                            int m=i;\n                            for(int l=0; l<n; l++){\n                                cout<<m%2;\n                                m/=2;\n                            }\n                            cout<<endl;\n                            cout<<\"j  \"<<j<<endl;\n                            cout<<\"k  \"<<k<<endl;\n                             */\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + v[j][k]);\n                            /*\n                            cout<<\"dp \"<<dp[i][j]<<endl;\n                            cout<<\"v  \"<<v[j][k]<<endl;\n                            cout<<\"-----------\"<<endl;\n                             */\n                        //}\n                    }\n                }\n            }\n        }\n        \n        //cout<<dp[0][0]<<endl;\n        if(dp[0][0]<=box)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n\n        \n        \n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ndouble tri(int a,int b){\n  double c;\n  if(a>b){\n    double tmp=a;\n    a=b;\n    b=tmp;\n  }\n  c=sqrt((((a+b)*(a+b))-((b-a)*(b-a))));\n  return c;\n}\nint main(){\n  double W;\n  vector<int>r;\n  double a;\n  while(cin>>W){\n    while(cin>>a)\n      r.push_back(a);\n    sort(r.begin(),r.end());\n    double ans[r.size()];\n    int s,t;\n    if(r.size()%2==0){\n      s=r.size()/2;t=r.size()/2;\n    }else{\n      s=r.size()/2;t=r.size()/2+1;\n    }\n    for(int i=0;i<s;i++)\n      ans[2*i]=(double)r[i];\n    for(int i=0;i<s;i++)\n      ans[2*i+1]=(double)r[i+t];\n    if(s!=t)\n      ans[r.size()-1]=r[s];\n    double wide=0;\n    for(int i=0;i<r.size()-1;i++){\n      wide+=tri(ans[i],ans[i+1]);\n    }\n    /*for(int i=0;i<r.size();i++)\n      cout<<ans[i]<<\" \";\n      cout<<endl;*/\n    wide+=ans[0];wide+=ans[r.size()-1];\n    //cout<<wide<<endl;\n    if(W>=wide){\n      cout<<\"OK\"<<endl;\n    }else{\n      for(int i=0;i<s;i++)\n\tans[2*i+1]=(double)r[i];\n      for(int i=0;i<s;i++)\n\tans[2*i]=(double)r[i+t];\n      if(s!=t)\n\tans[r.size()-1]=r[s];\n      wide=0;\n      /*for(int i=0;i<r.size();i++)\n\tcout<<ans[i]<<\" \";\n\tcout<<endl;*/\n      for(int i=0;i<r.size()-1;i++){\n\twide+=tri(ans[i],ans[i+1]);\n      }\n      wide+=ans[0];wide+=ans[r.size()-1];\n      \n      //cout<<wide<<endl;\n      if(W>=wide)\n\tcout<<\"OK\"<<endl;\n      else\n\tcout<<\"NO\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nvint x,k;\ndouble n;\nint m;\nstring str;\n\nvoid input(){\n\tint c;\n\tx.clear();\n\tbool first=true;\n\tint num=0;\n\tint i;\n\tfor(i=0;i<str.size();i++){\n\t\tc=str[i];\n\t\tif(c==' '){\n\t\t\tif(first){\n\t\t\t\tn=num;\n\t\t\t\tnum=0;\n\t\t\t\tfirst=false;\n\t\t\t}else{\n\t\t\t\tx.push_back(num);\n\t\t\t\tm++;\n\t\t\t\tnum=0;\n\t\t\t}\n\t\t}else{\n\t\t\tnum=num*10+c-'0';\n\t\t}\n\t}\n\tif(num!=0){x.push_back(num);m++;}\n\treturn;\n}\n\ndouble dis[20][20];\n\ndouble hoge(){\n\tdouble res=x[k[0]]+x[k[m-1]];\n\tint i;\n\tfor(i=0;i<m-1;i++){\n\t\tres+=dis[x[k[i]]][x[k[i+1]]];\n\t}\n\treturn res;\n}\n\nint main() {\n\tdouble ii,jj;\n\tfor(ii=0;ii<20;ii++){\n\t\tfor(jj=0;jj<20;jj++){\n\t\t\tdis[(int)ii][(int)jj]=sqrt((ii+jj)*(ii+jj)-(ii-jj)*(ii-jj));\n\t\t}\n\t}\n\twhile(getline(cin,str)){\n\t\tint i;\n\t\tx.clear();k.clear();m=0;\n\t\tinput();\n\t\tfor(i=0;i<m;i++)k.push_back(i);\n\t\tdouble res=10000;\n\t\tdo{\n\t\t\tchmin(res,hoge());\n\t\t}while(next_permutation(k.begin(),k.end()));\n\t\tcout<<(res<=n?\"OK\":\"NO\")<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define MOD 1000000007\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3f\n#define EPS (1e-10)\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int>P;\n\ndouble dp[1 << 15][15];\nint r[10];\nint main() {\n\tstring s;\n\twhile (getline(cin, s)) {\n\t\tstringstream buf(s);\n\t\tdouble w; buf >> w;\n\t\tint p = 0; while (buf >> r[p++]); p--;\n\t\tfill(dp[0], dp[1 << 15], INF);\n\t\trep(i, p)dp[1 << i][r[i]] = r[i] * 2;\n\t\trep(i, 1 << p) {\n\t\t\trep(k, 11) {\n\t\t\t\trep(j, p) {\n\t\t\t\t\tif (i >> j & 1)continue;\n\t\t\t\t\tdouble d = sqrt((k + r[j])*(k + r[j]) - (k - r[j])*(k - r[j])) - k + r[j];\n\t\t\t\t\tdp[i | 1 << j][r[j]] = min(dp[i | 1 << j][r[j]], dp[i][k] + d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i, 11) {\n\t\t\tif (dp[(1 << p) - 1][i] <= w) {\n\t\t\t\tputs(\"OK\"); goto g;\n\t\t\t}\n\t\t}\n\t\tputs(\"NA\");\n\tg:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <stack>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <cmath>\n#include <cstring>\n#include <cstdio>\n#include <queue>\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define FOR(i, a, n) for(int i = (a); i < (n); i++)\n#define MP make_pair\n#define all(s) (s).begin(), (s).end()\n#define rev(s) (s).rbegin(), (s).rend()\n#define X first\n#define Y second\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int, int> P;\n\nconst double INF = 1e10;\n\ndouble dist(int a, int b){\n\treturn sqrt((double)(a+b)*(a+b) - (a-b)*(a-b));\n}\n\ndouble memo[1<<12][12];\nint r[12];\nint n;\ndouble tsp(int visit, int pos){\n\tif(memo[visit][pos] != INF) return memo[visit][pos];\n\tif(visit == (1<<n)-1) return r[pos];\n\n\tdouble res = 1e10;\n\trep(i, n){\n\t\tint next = (1<<i); \n\t\tif(next&visit) continue;\n\t\tvisit |= next;\n\t\tres = min(res, dist(r[pos], r[i])+tsp(visit, i));\n\t\tvisit &= ~next;\n\t}\n\treturn memo[visit][pos] = res;\n}\n\nint main(){\n\t//freopen(\"test.txt\", \"r\", stdin);\n\tstring s;\n\twhile(getline(cin, s)){\n\t\tstringstream ss;\n\t\tss << s;\n\t\tint len;\n\t\tss >> len;\n\t\tn = 0;\n\t\tint x;\n\t\twhile(ss >> x){\n\t\t\tr[n++] = x;\n\t\t}\n\t\trep(i, 1<<12) rep(j, 12) memo[i][j] = INF;\n\n\t\tdouble ans = INF;\n\t\trep(i, n){\n\t\t\tans = min(ans, r[i]+tsp(1<<i, i));\n\t\t}\n\n\t\tcout << (ans<=len?\"OK\":\"NA\") << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\nconst int LOOP_COUNT=10000;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.0001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score<score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    int l;\n    while(cin>>l){\n        cin.ignore();\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tfor(int i = 0 ;i < N ; i++){\n\t\t\tscore = Evaluate(r);\n\t\t}\n\t\tif(score < mi){\n\t\t\tmi = score;\n\t\t}\n\t\telse {\n\t\t\tif(Changes(cnt)){\n\t\t\t\tif(mi > score){\n\t\t\t\t\tmi = score;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tswap(r[rand()%N],r[rand()%N]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//===============================================\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include<vector>\ndouble F(double r,double s)\n{\n\treturn sqrt((r+s)*(r+s)-(r-s)*(r-s));\n}\nint main()\n{\n\tint l,a[12],n,i,j,k;\n\tchar*p,s[256];\n\twhile(fgets(s,256,stdin))\n\t{\n\t\tp=strtok(s,\" \");\n\t\tl=atoi(p);\n\t\tfor(n=0;p;)\n\t\t{\n\t\t\tp=strtok(0,\" \");\n\t\t\tif(p)a[n++]=atoi(p);\n\t\t}\n\t\tdouble d[12][12];\n\t\tfor(i=0;i<n;++i)for(j=i+1;j<n;++j)d[i][j]=d[j][i]=F(a[i],a[j]);\n\t\tstd::vector<int>u,v;\n\t\tdouble dp[1<<12][12];\n\t\tstd::fill(dp[0],dp[1<<12],1e10);\n\t\tfor(i=0;i<n;++i)dp[1<<i][i]=a[i];\n\t\tfor(i=1;i<(1<<n);++i)\n\t\t{\n\t\t\tu.clear();\n\t\t\tv.clear();\n\t\t\tfor(j=0;j<n;++j)\n\t\t\t{\n\t\t\t\tif(i&(1<<j))u.push_back(j);\n\t\t\t\telse v.push_back(j);\n\t\t\t}\n\t\t\tfor(j=0;j<u.size();++j)\n\t\t\t{\n\t\t\t\tfor(k=0;k<v.size();++k)\n\t\t\t\t{\n\t\t\t\t\tdouble&r=dp[i|(1<<v[k])][v[k]];\n\t\t\t\t\tr=std::min(r,dp[i][u[j]]+d[u[j]][v[k]]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tk=(1<<n)-1;\n\t\tfor(i=0;i<n;++i)dp[k][i]+=a[i];\n\t\tputs(*std::min_element(dp[k],dp[k]+n)-1e-7<l?\"OK\":\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <stack>\n#include <vector>\n#include <queue>\n#include <bitset>\n#include <string>\nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<n; i++)\n#define repa(i,s,e) for(int i=s; i<=e; i++)\n#define repd(i,s,e) for(int i=s; i>=e; i--)\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nstring line;\nint S, r, N;\nvi cakes;\n\nconst int MAX_N = 15;\nconst int TSIZE = (2 << MAX_N) + 1;\ndouble edges[MAX_N][MAX_N];\ndouble dp[TSIZE][MAX_N];\nbitset<15> used;\n\ndouble minval;\n\nvoid dfs(int v, int s, double value) {\n\tif(used.count() == N) {\n\t\tminval = min(minval, value + cakes[s] + cakes[v]);\n\t\treturn;\n\t}\n\n\tint state = used.to_ulong();\n\tif(dp[state][v] <= value) return; \n\t\n\tdp[state][v] = value;\n\tfor(int i=0; i<N; i++) {\n\t\tif(v != i && !used[i]) {\n\t\t\tvalue += edges[v][i];\n\t\t\tused.set(i);\n\t\t\tdfs(i, s, value);\n\t\t\tused.reset(i);\n\t\t\tvalue -= edges[v][i];\n\t\t}\n\t}\n}\n\nvoid solve() {\n\tN = cakes.size();\n\tmemset(&edges[0][0], 0, sizeof(double) * MAX_N * MAX_N);\n\tfor(int i=0; i<TSIZE; i++) for(int j=0; j<MAX_N; j++) dp[i][j] = 10000.0;\n\n\tfor(int i=0; i<N; i++) {\n\t\tfor(int j=i+1; j<N; j++) {\n\t\t\tdouble d = 2.0 * sqrt((double)(cakes[i] * cakes[j]));\n\t\t\tedges[i][j] = edges[j][i] = d;\n\t\t}\n\t}\n\n\tminval = 10000.0;\n\tfor(int i=0; i<N; i++) {\n\t\tused.set(i);\n\t\tdfs(i, i, 0.0);\n\t\tused.reset(i);\n\t}\n\t//cout << minval << endl;\n\tcout << (minval <= S ? \"OK\" : \"NA\") << endl;\n}\n\nint main() {\n\twhile( 1 ) {\n\t\tgetline(cin, line);\n\t\tif(line == \"\") break;\n\n\t\tstringstream ss;\n\t\tss << line;\n\t\tss >> S;\n\t\tcakes.clear();\n\t\twhile(ss>>r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <iomanip>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#include <bitset>\nusing namespace std;\n  \nconst double EPS = 1e-9;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\n\nint main(){\n\tstring s;\n\twhile(getline(cin, s)){\n\t\tstringstream ss;\n\t\tvector<int> r;\n\t\tint boxlen;\n\t\tint n;\n\t\tss << s;\n\t\tss >> boxlen;\n\t\twhile(ss >> n){\n\t\t\tr.push_back(n);\n\t\t}\n\t\tsort(r.begin(), r.end());\n\t\tdouble len = r[0];\n\t\tif(r.size() > 1){\n\t\t\tlen += r[1];\n\t\t}\n\t\tint i = 0, j = r.size()-1;\n\t\tint cnt = 0;\n\t\twhile(i != j){\n\t\t\tlen += 2*sqrt((double)r[i]*r[j]);\n\t\t\tif(cnt%2){\n\t\t\t\tj--;\n\t\t\t}else{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\n\t\tcout << \"len:\" << len << endl;\n\t\tcout << \"boxlen:\" << boxlen << endl;\n\t\tif(len <= boxlen){\n\t\t\tcout << \"OK\" << endl;\n\t\t}else{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n\n  \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define double float\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tvector<vector<double> > d(12, vector<double>(1 << n, 1e100));\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <sstream>\n#include <cassert>\n#include <list>\n#include <ctime>\n#include <numeric>\n#include <fstream>\n#include <valarray>\nusing namespace std;\nstatic const double EPS = 1e-6;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int,int> PI;\n#define rep(i,n) for(int i=0;i<(int)(n);++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define mp(a,b) make_pair(a,b)\n#define pb(a) push_back(a)\n#define SZ(a) (int(a.size()))\n#define F first\n#define S second\nconst long double pi=acos(-1.0);\nint dx[]={0,1,0,-1,1,1,-1,-1,0},dy[]={1,0,-1,0,1,-1,1,-1,0};\n\nstring str;\nvector<int> in;\ndouble dp[1<<12][12];\nbool vis[1<<12][12];\n\ndouble rec(int st,int la){\n  if(st==(1<<la))return in[la];\n  if(vis[st][la])return dp[st][la];\n  vis[st][la]=true;\n  double& ret=dp[st][la]=1<<30;\n\n  rep(i,SZ(in)){\n    if((st&(1<<i))==0 || i==la)continue;\n    double mi=rec(st^(1<<la),i);\n    int l=in[la]+in[i],r=in[i]-in[la];\n    double dist=sqrt(l*l+r*r);\n    ret=min(ret,mi+dist-in[i]+in[la]);\n  }\n  return ret;\n}\n\nvoid solve(){\n  stringstream ss(str);\n  in.clear();\n  int len;\n  ss>>len;\n  int t;\n  while(ss>>t)in.pb(t);\n  memset(vis,0,sizeof(vis));\n  rep(i,SZ(in))\n    if(len+EPS>rec((1<<SZ(in))-1,i)){\n      cout<<\"OK\"<<endl;\n      return;\n    }\n  \n  cout<<\"NA\"<<endl;\n}\n\n\nmain(){\n  while(getline(cin,str))\n    solve();\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define X first\n#define Y second\n\nvector<double> data;\npair<double,double> lc;\nvector<bool> done;\n\nvector<double> memo(1<<12);\nint boxSize;\nbool flag;\n\ndouble solve(double x,double a,double b){\n\treturn (2.0*x+sqrt(4*x*x-4*(x*x-4*a*b)) ) / 2.0;\n}\n\nvoid memo_view()\n{\n\tfor(int i=0;i < ( 1<<done.size() );i++){\n\t\tfor(int j=0; j < done.size() ;j++){\n\t\t\tif(i & (1<<j) )cout << j+1 << \" \";\n\t\t}\n\t\tcout << endl;\n\t\tcout << \"=\" << memo[i] << endl << endl;\n\t}\n}\nvoid bt(){\n\tif( count(done.begin(),done.end(),true) == done.size() ){\n\t\tif( lc.X + lc.Y <= boxSize){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tif(flag || lc.X + lc.Y > boxSize)return;\n\t\n\tint msk = 0;\n\tfor(int i=0;i<done.size();i++){\n\t\tif(done[i])msk += 1<<i;\n\t}\n\tif( lc.X + lc.Y >= memo[msk])return;\n\tmemo[msk] = lc.X + lc.Y;\n\tfor(int i=0;i<data.size();i++){\n\t\tif(done[i])continue;\n\t\t\n\t\tif(solve(lc.X,lc.Y,data[i]) > boxSize)continue;\n\t\tdone[i] = true;\n\t\tpair<double,double> tmp = lc;\n\t\tlc = make_pair(solve(lc.X,lc.Y,data[i]),data[i]);\n\t\tbt();\n\t\tlc = tmp;\n\t\tdone[i] = false;\n\t}\n}\n\n\nint main(){\n\tint t;\n\tstring s;\n\twhile(getline(cin,s) && s != \"\"){\n\t\tvector<int> input;\n\t\tflag = false;\n\t\tdata.clear();\n\t\t\n\t\tstringstream ss(s);\n\t\twhile(ss >> t)input.push_back(t);\n\t\t\n\t\tboxSize = input[0];\n\t\tfor(int i=1;i<input.size();i++){\n\t\t\tdata.push_back(input[i]);\n\t\t}\n\t\tsort( data.begin(),data.end(),greater<int>() );\n\t\tdone.resize(data.size());\n\t\tfill(done.begin(),done.end(),false);\n\t\tfill(memo.begin(),memo.end(),(1<<10));\n\t\t\n\t\tfor(int i=0;i<data.size();i++){\n\t\t\tdone[i] = true;\n\t\t\tlc = make_pair(data[i],data[i]);\n\t\t\tbt();\n\t\t\tdone[i] = false;\n\t\t}\n\n\t\tcout << (flag?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint W, N, R[12];\nbool isUsed[12];\n\n\nint abs(int x) {\n  return x < 0 ? -x : x;\n}\n\ndouble calc(vector<int> v, int cnt) {\n  int bfr;\n  double sum;\n  if(cnt % 2 == 0) {\n    bfr = *v.begin();\n    sum = *v.begin();\n    v.erase(v.begin());\n  } else {\n    bfr = *(--v.end());\n    sum = *(--v.end());\n    v.erase(--v.end());\n  }\n  while(!v.empty()) {\n    vector<int>::iterator it;\n    if(cnt % 2 == 0) {\n      it = v.end();\n      it--;\n    } else {\n      it = v.begin();\n    }\n\n    if(bfr == *it) sum += *it * 2;\n    else     sum += sqrt((bfr+*it)*(bfr+*it) - (bfr-*it)*(bfr-*it));\n    bfr = *it;\n    v.erase(it);\n    cnt++;\n  }\n  sum += bfr;\n  return sum;\n}\n\nvoid solve() {\n  sort(R, R+N);\n  vector<int> v;\n  for(int i = 0; i < N; ++i) {\n    v.push_back(R[i]);\n  }\n  if(min(calc(v, 0), calc(v, 1)) <= W) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"NA\" << endl;\n  }\n}\n\nmain() {\n  while(1) {\n    string str;\n    getline(cin, str);\n    if(cin.eof()) break;\n    stringstream ss;\n    ss << str;\n    ss >> W;\n    for(int i = 0; ; ++i) {\n      if(ss.eof()) {\n\tN = i;\n\tbreak;\n      }\n      ss >> R[i];\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n//#include <utility>\n#include <set>\n#include <iostream>\n//#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n//#include <functional>\n#include <sstream>\n//#include <deque>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n//#include <cctype>\n#include <cstring>\n//#include <ctime>\n#include <iterator>\n#include <bitset>\n//#include <numeric>\n//#include <list>\n//#include <iomanip>\n\n#if __cplusplus >= 201103L\n#include <array>\n#include <tuple>\n#include <initializer_list>\n#include <unordered_set>\n#include <unordered_map>\n#include <forward_list>\n\n#define cauto const auto&\n#else\n\n#endif\n\nusing namespace std;\n\n\nnamespace{\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\ntypedef vector<int> vint;\ntypedef vector<vector<int> > vvint;\ntypedef vector<long long> vll, vLL;\ntypedef vector<vector<long long> > vvll, vvLL;\n\n#define VV(T) vector<vector< T > >\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){\n    v.assign(a, vector<T>(b, t));\n}\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >> t;\n}\n\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\n#define RALL(v) (v).rbegin(),(v).rend()\n\n\n#define MOD 1000000007LL\n#define EPS 1e-8\nstatic const int INF=1<<24;\n\nvint r(11);\nvoid mainmain(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\trep(i,11){\n\t\t\tr[i]=0;\n\t\t}\n\t\tstringstream ss;\n\t\tss<<s;\n\t\tint n;\n\t\tss>>n;\n\t\tvector<double> v;\n\t\tint t;\n\t\tint cnt=0;\n\t\twhile(ss>>t){\n\t\t\tv.PB(t);\n\t\t\tr[t]++;\n\t\t\tcnt++;\n\t\t}\n\t\t// sort(ALL(v));\n\t\tdouble ans=INF;\n\t\trep(i,11){\n\t\t\tif(r[i]){\n\t\t\t\tdouble tans=i;\n\t\t\t\tvint tmp=r;\n\t\t\t\ttmp[i]--;\n\t\t\t\tint c=0;\n\t\t\t\tint a=i;\n\t\t\t\twhile(c!=cnt-1){\n\t\t\t\t\tpii t=mkp(0,-1);\n\t\t\t\t\trep(j,11){\n\t\t\t\t\t\tif(tmp[j]&&abs(j-a)>=t.F){\n\t\t\t\t\t\t\tt=mkp(abs(j-a),j);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttans+=2*sqrt(a*t.S);\n\t\t\t\t\ta=t.S;\n\t\t\t\t\ttmp[t.S]--;\n\t\t\t\t\tc++;\n\t\t\t\t}\n\t\t\t\ttans+=a;\n\t\t\t\tans=min(ans,tans);\n\t\t\t}\n\t\t}\n\t\tif(n>=ans) cout<<\"OK\\n\";\n\t\telse cout<<\"NA\\n\";\n\t}\n}\n\n\n\n}\nmain() try{\n    mainmain();\n}\ncatch(...){\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <cstring>\n#define MAX 15\n#define INF 1e9\n\nusing namespace std;\n\ndouble dp[1 << MAX][MAX];\ndouble dist[MAX][MAX];\nint N;\n\ndouble rec(int S,int v){\n  if(dp[S][v] >= 0) return dp[S][v];\n  if(S == (1 << N)-1 && v == 0) return dp[S][v] = 0;\n\n  double res = INF;\n  for(int i = 0 ; i < N ; i++){\n    if(!(S >> i & 1)){ \n      res = min(res,rec(S | 1 << i, i) + dist[v][i]);\n    }\n  }\n  return dp[S][v] = res;\n}\n\nint main(){\n  string in;\n  \n  while(getline(cin,in)){\n    vector<double> v;\n    stringstream s(in);\n    int num,box_length;\n\n    s >> box_length;\n\n    while(s >> num){\n      v.push_back(num);\n    }\n\n    N = (int)v.size();\n    memset(dp,-1,sizeof(dp));\n\n    for(int i = 0 ; i < N ; i++){\n      for(int j = 0 ; j < N ; j++){\n\tif(i == j) dist[i][j] = 0;\n\telse dist[i][j] = sqrt(pow(v[i]+v[j],2.0)-pow(v[i]-v[j],2.0));\n      }\n    }      \n\n    dist[N][N] = 0;\n\n    for(int i = 0 ; i < N ; i++)\n      dist[i][N] = dist[N][i] = v[i];   \n\n    N++;\n\n    if(rec(0,0) <= box_length) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <cfloat>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n  char buf[200];\n  int r[12];\n  double p[12][12];\n  double dp[1<<12][12];\n  double ans;\n  int w;\n  int n, iread, ibuf;\n  int v;\n  while (fgets(buf, sizeof(buf), stdin)) {\n    n = 0;\n    ibuf = 0;\n    sscanf(buf, \"%d%n\", &w, &iread);\n    ibuf += iread;\n    while (n < 12 && sscanf(buf+ibuf, \"%d%n\", &r[n], &iread) == 1) {\n      n++;\n      ibuf += iread;\n    }\n\n    for (int i=0; i<n; i++) {\n      for (int j=0; j<n; j++) {\n        if (i==j) {\n          p[i][j] = 0.0;\n        } else {\n          p[i][j] = 2.0 * sqrt(r[i] * r[j]);\n        }\n      }\n    }\n    for (int i=0; i<(1<<n); i++) {\n      for (int j=0; j<n; j++) {\n        dp[i][j] = DBL_MAX;\n      }\n    }\n\n    v = (1<<n)-1;\n    for (int i=0; i<n; i++) dp[v][i] = r[i];\n    --v;\n    while (v) {\n      for (int i=0; i<n; i++) {\n        if (!(v & (1<<i))) continue;\n        for (int j=0; j<n; j++) {\n          if (v & (1<<j)) continue;\n          dp[v][i] = min(dp[v][i], dp[v|(1<<j)][j]+p[i][j]);\n        }\n      }\n      --v;\n    }\n    ans = DBL_MAX;\n    for (int i=0; i<n; i++) {\n      ans = min(ans, dp[1<<i][i]+r[i]);\n    }\n    if (ans <= w) {\n      printf(\"OK\\n\");\n    } else {\n      printf(\"NA\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <climits>\n#include <cstring>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n#define ALL(A)\t\t(A).begin(),(A).end()\n#define DUMP(A)    cout<<#A<<\"=\"<<(A)<< endl\n#define SIZE(A)    (int)((A).size())\n#define SQ(A)   ((A)*(A))\nusing namespace std;\ntypedef long long ll;\n\nint main(){\n    int role[12];\n    char li[100];\n    while(gets(li)!=NULL){\n        int len;\n        char sp[]=\" \";\n        char *res=NULL;\n        sscanf(strtok(li,sp),\"%d\",&len);\n        int n=0;\n        for(;;){\n            res=strtok(NULL,sp);\n            if(res==NULL) break;\n            sscanf(res,\"%d\",&role[n]);\n            n++;\n        }\n        double path[13][13];\n        for(int i=0;i<n;i++){\n            path[0][i]=path[i][0]=role[i];\n        }\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                path[i][j]=sqrt(SQ(role[i]+role[j])-SQ(role[i]-role[j]));\n            }\n        }\n        double dp[1<<n][n];\n        for(int i=0;i<n;i++){\n            dp[0][i]=0;\n        }\n        for(int i=1;i<(1<<n);i++){\n            for(int j=0;j<n;j++){\n                dp[i][j]=10000;\n                if(i&(1<<j)){\n                    int bef=i-(i&(1<<j));\n                    for(int k=0;k<n;k++){\n                        if(bef==0){\n                            dp[i][j]=min(dp[i][j],(double)role[j]);\n                        }else if(bef&(1<<k)){\n                            dp[i][j]=min(dp[i][j],dp[bef][k]+path[k][j]);\n                        }\n                    }\n                }\n            }\n        }\n        double ret=10000;\n        for(int i=0;i<n;i++){\n            ret=min(ret,dp[(1<<n)-1][i]+role[i]);\n        }\n        if(ret<=len) printf(\"OK\\n\");\n        else printf(\"NA\\n\");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%12,b=rand()%12;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>=score){\n            mi=score;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<sstream>\n#include<utility>\n#include<map>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>P;\nchar I[300],*p;\nint R[15],N,i,j,k,a[2][15];\ndouble B,EPS=0.0001;\n\ndouble ch(int *r)\n{\n\tint i;\n\tdouble l=0;\n\tfor(i=0;i<N-1;i++)\n\t{\n\t\tdouble a=pow((double)r[i]+r[i+1],2);\n\t\tdouble b=pow((double)abs(r[i]-r[i+1]),2);\n\n\t\tl+=sqrt(a-b);\n\t}\n\treturn pow(l+r[0]+r[N-1],2);\n}\n\nint main()\n{\n\tfor(;gets(I);)\n\t{\n\t\tp=strtok(I,\" \");\n\t\tB=(double)atoi(p);\n\t\tB*=B;\n\t\tfor(N=0;(p=strtok(NULL,\" \"))!=NULL;)\n\t\t\tR[N++]=atoi(p);\n\t\tsort(R,R+N);\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(j%2)a[0][j]=R[i++];\n\t\t\telse a[0][j]=R[k--];\n\t\t}\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(!(j%2))a[1][j]=R[i++];\n\t\t\telse a[1][j]=R[k--];\n\t\t}\n\t\tputs(B-ch(a[0])>EPS||B-ch(a[1])>EPS?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <fstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nstatic const double EPS = 1e-5;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n\nint main(void){\n  string in;\n  while(getline(cin,in)){\n    stringstream ss;\n    ss<<in;\n    int l,tmp;\n    vector<int> r;\n    ss>>l;\n    while(ss>>tmp)r.push_back(tmp);\n    vector<int> perm;\n    REP(i,r.size()){\n      perm.push_back(i);\n    }\n    bool able = false;\n    do{\n      double len = r[perm[0]] + r[perm[r.size()-1]];\n      REP(i,r.size()-1){\n        len += sqrt(4*r[perm[i]]*r[perm[i+1]]);\n      }\n      if(len<=(double)l){\n        able = true;\n        break;\n      }\n    }while(next_permutation(perm.begin(),perm.end()));\n    if(able) cout<<\"OK\"<<endl;\n    else cout<<\"NA\"<<endl;\n\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n\nusing namespace std;\n\n#define DEBUG(x) cerr << #x << \" = \" << x << endl\n\nconst double INF = 1e9;\nconst double EPS = 1e-8;\ninline double SQ(double x) { return x * x; }\ninline bool EQ(double x, double y) {\n    return abs(x - y) < EPS;\n}\n\nstring to_bit(int n) {\n    string s;\n    for(int i = 11; i >= 0; i--) {\n        if(n & (1 << i)) s.push_back('1');\n        else s.push_back('0');\n    }\n    return s;\n}\n\nvector<double> vec;\ninline double D(int f, int t) {\n    double l = vec[f];\n    double r = vec[t];\n    return sqrt(SQ(l + r) - SQ(l - r));\n}\n\nint N;\nconst int MAX_N = 12;\ndouble dp[MAX_N][1 << MAX_N];\n\ndouble tsp(int v, int b) {\n    if(EQ(dp[v][b], -1) == false) return dp[v][b];\n    if(b == (1 << N) - 1) return dp[v][b] = vec[v];\n\n    double s = 0;\n    if(b == 0) s += vec[v];\n\n    double res = INF;\n    for(int i = 0; i < N; i++) {\n        if(b & (1 << i)) continue;\n\n        if(v == i) res = min(res, s + tsp(i, b | (1 << i)));\n        else res = min(res, s + D(v, i) + tsp(i, b | (1 << i)));\n    }\n\n    return dp[v][b] = res;\n}\n\nint main() {\n    for(string line; getline(cin, line); ) {\n        istringstream iss(line);\n        double len; iss >> len;\n        vec.clear();\n        for(double r; iss >> r; ) {\n            vec.push_back(r);\n        }\n        N = vec.size();\n        for(int v = 0; v < N; v++) {\n            for(int b = 0; b < (1 << N); b++) {\n                dp[v][b] = -1;\n            }\n        }\n        double res = INF;\n        for(int i = 0; i < N; i++) {\n            res = min(res, tsp(i, 0));\n        }\n        // DEBUG(res);\n        cout << (res < len + EPS ? \"OK\" : \"NA\") << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <cmath>\nusing namespace std;\n#define DIST(R1,R2)(2*sqrt((double)(R1)*(R2)))\ndouble dp[1<<12][12];\nint main() {\n\tstring str;\n\twhile(getline(cin,str)) {\n\t\tstringstream sstr(str);\n\t\tint n,m,R[12];\n\t\tsstr>>m;\n\t\tfor(n=0;sstr>>R[n];n++);\n\t\tfill((double*)dp,(double*)(dp+(1<<12)),1<<27);\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tdp[1<<i][i]=R[i];\n\t\t}\n\t\tfor(int i=1;i<(1<<n);i++) {\n\t\t\tfor(int j=0;j<n;j++) {\n\t\t\t\tif(dp[i][j]==(1<<27)) continue;\n\t\t\t\tfor(int k=0;k<n;k++) {\n\t\t\t\t\tif(i&(1<<k)) continue;\n\t\t\t\t\tdp[i|(1<<k)][k]=min(dp[i|(1<<k)][k],dp[i][j]+DIST(R[j],R[k]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool OK=false;\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tif((dp[(1<<n)-1][i]+R[i])<=m) {OK=true;break;}\n\t\t}\n\t\tprintf(\"%s\\n\",OK?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.0001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    //srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <cassert>\n#include <iostream>\n#include <cctype>\n#include <sstream>\n#include <string>\n#include <list>\n#include <vector>\n#include <queue>\n#include <set>\n#include <stack>\n#include <map>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <iterator>\n#include <bitset>\n#include <complex>\n#include <fstream>\nusing namespace std;\ntypedef long long ll;\nconst double EPS = 1e-9;\ntypedef vector<int> vint;\ntypedef pair<int, int> pint;\n#define rep(i, n) REP(i, 0, n)\n#define ALL(v) v.begin(), v.end()\n#define MSG(a) cout << #a << \" \" << a << endl;\n#define REP(i, x, n) for(int i = x; i < n; i++)\ntemplate<class T> T RoundOff(T a){ return int(a+.5-(a<0)); }\ntemplate<class T, class C> void chmax(T& a, C b){ if(a < b) a = b; }\ntemplate<class T, class C> void chmin(T& a, C b){ if(b < a) a = b; }\ntemplate<class T, class C> pair<T, C> mp(T a, C b){ return make_pair(a, b); }\n\n#define SQR(x) ((x) * (x))\n\n\ndouble calcDirec(int r, int l)\n{\treturn sqrt(SQR(r + l) - SQR(r - l));\t}\n\ndouble memo[12][1 << 12];\nint n;\n\ndouble rec(vint& rs, int prv, int u)\n{\n\tif(u + 1 == 1 << n)\treturn prv;\n\tif(prv != -1 && memo[prv][u] != -1) return memo[prv][u];\n\t\n\tdouble res = 1 << 20;\n\t\n\trep(i, n) if(!(u & 1 << i)) chmin(res, rec(rs, rs[i], u | 1 << i) + (prv == -1 ? rs[i] : calcDirec(prv, rs[i])));\n\t\n\treturn (prv != -1 ? memo[prv][u] = res : res);\n}\n\nint main()\n{\n    for(string line; getline(cin, line);)\n\t{\n\t\trep(i, 12) rep(j, 1 << 12) memo[i][j] = -1;\n\t\tvint rs;\n\t\t\n\t\tistringstream iss(line);\n\t\t\n\t\tstring str; iss >> str;\n\t\t\n\t\tint H = atoi(str.c_str());\n\t\t\n\t\tfor(n = 0; iss >> str; n++) rs.push_back(atoi(str.c_str()));\n\t\n\t\tcout << (rec(rs, -1, 0) <= H ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + EPS < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = 0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]+distance[k][0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<cmath>\n#include<string>\n#include<sstream>\n#include<iostream>\nusing namespace std;\nint main(){\n    string input;\n    while(getline(cin,input)){\n        stringstream ss(input);\n        double L;ss>>L;\n        int n=0;double r[12];\n        while(ss>>r[n])n++;\n        for(int i=0;i<n;i++)cout<<r[i]<<\" \";cout<<endl;\n        double len[12][12];\n        for(int i=0;i<n;i++){\n            for(int j=0;j<12;j++){\n                len[i][j]=sqrt((r[i]+r[j])*(r[i]+r[j])-(r[i]-r[j])*(r[i]-r[j]));\n            }\n        }\n        int perm[12];for(int i=0;i<n;i++)perm[i]=i;\n        double mi=100000000;\n        do{\n            double sum=0;\n            for(int i=0;i<n-1;i++)sum+=len[perm[i]][perm[i+1]];\n            sum+=r[perm[0]];\n            sum+=r[perm[n-1]];\n            mi=min(mi,sum);\n        }while(next_permutation(perm,perm+n));\n        if(mi<=L)puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n\n    if(r.size()<=5){\n        sort(r.begin(),r.end());\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.000001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    /*while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }\n    }\n    bs.push_back(right);*/\n    double req = bs[0] + bs[size-1];\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 1e2;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cmath>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint main()\n{\n\tint box;\n\twhile(~scanf(\"%d \",&box)){\n\t\tint r[12],n;\n\t\tfor(n=1;;n++){\n\t\t\tscanf(\"%d\",r+n-1);\n\t\t\tif(getchar()=='\\n')\tbreak;\n\t\t}\n\n\t\tsort(r,r+n);\n\n\t\tint xr[12];\n\t\tfor(int i=0;i<=n/2;i++){\n\t\t\txr[2*i+0]=r[i];\n\t\t\txr[2*i+1]=r[n-1-i];\n\t\t}\n\n\t\tdouble w=xr[0]+xr[n-1];\n\t\tfor(int i=0;i<n-1;i++)\tw+=2*sqrt(xr[i]*xr[i+1]);\n\t\tputs(w<=box?\"OK\":\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\nint r[15];\ndouble dp[15][15][100000];\nint main(){\n\tint len;\n\tstring s;\n\twhile(cin>>len){\n\tgetline(cin,s);\n\tint n=0,cnt=0;\n\tfor(int i=1;i<s.size();i++){\n\t\tif(s[i]==' '){\n\t\t\tr[n]=cnt;\n\t\t\tn++;\n\t\t\tcnt=0;\n\t\t}\n\t\telse{\n\t\t\tcnt*=10;\n\t\t\tcnt+=s[i]-'0';\n\t\t}\n\t}\n\tr[n]=cnt;\n\tn++;\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<100000;k++){\n\t\t\t\tdp[i][j][k]=10000.0;\n\t\t\t}\n\t\t}\n\t}\n\tint w=1;\n\tfor(int i=0;i<n;i++){\n\t\tdp[0][i][w]=r[i]+0.0;\n\t\tw*=2;\n\t}\n\tfor(int i=0;i<n-1;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<w;k++){\n\t\t\t\tint h=1;\n\t\t\t\tfor(int e=0;e<n;e++){\n\t\t\t\t\tif(k%(h*2)<h){\n\t\t\t\t\t\tdouble set=dp[i][j][k];\n\t\t\t\t\t\tset+=2*(double)sqrt((double)r[j]*r[e]);\n\t\t\t\t\t\tif(dp[i+1][e][k+h]>set){\n\t\t\t\t\t\t\tdp[i+1][e][k+h]=set;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\th*=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbool ok=false;\n\tfor(int j=0;j<n;j++){\n\t\tfor(int k=0;k<w;k++){\n\t\t\tif(dp[n-1][j][k]+r[j]<=len){\n\t\t\t\tok=true;\n\t\t\t}\n\t\t}\n\t}\n\tif(ok)cout<<\"OK\"<<endl;\n\telse cout<<\"NA\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    //srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <iostream>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\nint n,l;\nchar len[1111];\nint r[22];\n\ndouble dp[22][5555];\n\ndouble sq(int a){return a*a;}\n\ndouble solve(int af,int used){\n  if(dp[af][used] >= 0) return dp[af][used];\n\n  if(used == (1<<n)-1) return 0;\n\n  double ret = 4444;\n  for(int i = 0; i < n; i++){\n    if(af == n) r[af] = r[i];\n    if( (used & (1<<i)) == 0 ){\n      ret = min(ret, solve(i, used | (1<<i)) + sqrt(sq(r[i] + r[af]) - sq(r[i] - r[af])) - r[af] + r[i]);\n    }\n  }\n  return dp[af][used] = ret;\n}\n\n\nint main(void)\n{\n  while( fgets(len, sizeof(len), stdin) != NULL ){\n    n=0;\n\n    vector<char*> d;\n    for(int i = 0; len[i] != '\\0'; i++){\n      if(len[i] == ' '){\n\td.push_back(len+i+1);\n\tn++;\n      }\n    }\n    sscanf(len,\"%d\",&l);\n    for(int i = 0; i < n; i++){\n      sscanf(d[i],\"%d\",&r[i]);\n    }\n\n    for(int i = 0; i <= n; i++){\n      for(int j = 0; j < 5555; j++){\n\tdp[i][j] = -1;\n      }\n    }\n    double ret = solve(n,0);\n    if(ret > l) puts(\"NA\");\n    else puts(\"OK\"); \n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%12,b=rand()%12;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>=score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    sort(temps.begin(), temps.end());\n\n    {\n      for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n        if (lb == ub) {\n          if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n            cakes.push_back(temps[lb]);\n          else\n            inserter(cakes, cakes.begin()) = temps[lb];\n        } else {\n          cakes.push_back(temps[lb]);\n          cakes.push_back(temps[ub]);\n        }\n      }\n    }\n\n    puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\n#define add(i,j) (sqrt(cakes[i]*cakes[j]) * 2 - cakes[i] + cakes[j])\n\nvector< string > split( const string& str, string del){\n  char *p,  *str_buff = new char[str.size() + 1], first = 0;\n  vector< string > ret;\n  strcpy( str_buff, str.c_str());\n  while(p = strtok((first++ ? NULL : str_buff), del.c_str())){\n    ret.push_back(p);\n  }\n  //  delete str_buff;\n  return ret;\n}\nint main(){\n  string strb;\n  while(getline(cin, strb)){\n    vector< string > strs = split( strb, \" \");\n    int box = atoi(strs[0].c_str());\n    vector< int > cakes(strs.size() - 1);\n    for(int i = 0; i < strs.size() - 1; i++){\n      cakes[i] = atoi(strs[i + 1].c_str());\n    }\n\n    const int INF = 1 << 30;\n    double dp[12][1 << 12];\n    fill_n( *dp, 12 * (1 << 12), INF);\n\n    for(int i = 0; i < cakes.size(); i++){\n      dp[i][1 << i] = cakes[i] * 2;\n    }\n\n    for(int j = 0; j < 1 << cakes.size(); j++){\n      for(int i = 0; i < cakes.size(); i++){\n        if(dp[i][j] == INF) continue;\n        for(int k = 0; k < cakes.size(); k++){\n          if(j >> k & 1) continue;\n          dp[k][j|(1 << k)] = min( dp[k][j|(1 << k)], dp[i][j] + add(i,k));\n        }\n      }\n    }\n    bool judge = false;\n    for(int i = 0; i < cakes.size(); i++){\n      judge |= dp[i][(1 << cakes.size()) - 1] <= box;\n    }\n    if(judge) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <bitset>\n#include <algorithm>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <string>\n#include <cstring>\n#include <complex>\n\n#define FOR(i,b,n) for(int i=b;i<n;i++)\n#define RFOR(i,b,n) for(int i=n-1;i>=b;i--)\n#define CLR(mat) memset(mat, 0, sizeof(mat))\n#define NCLR(mat) memset(mat, -1, sizeof(mat))\n#define FILL(mat, x) memset(mat, x, sizeof(mat))\n#define BIT(n, b) (((1<<b) & n)!=0)\n\n#define INF 1<<16\n\nusing namespace std;\n\ntypedef pair<int,int> paii;\ntypedef long long ll;\n\nint n = 0;\ndouble boxsz, rc[16], dp[1<<16][16];\n\ndouble addrad(double r1, double r2){\n\treturn sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\ndouble rec(int stat, int v){\n\t\n\tif( dp[stat][v] >= 0 )\n\t\treturn dp[stat][v];\n\t\n\tif( stat == (1<<n)-1 )\n\t\treturn rc[v];\n\t\t\n\tdouble &res = dp[stat][v];\n\tres = INF;\n\t\n\tfor(int i = 0; i < n; ++i){\n\t\tif( !BIT(stat, i) ){\n\t\t\tres = min(res, rec(stat|(1<<i), i) + addrad(rc[v], rc[i]));\n\t\t}\n\t}\n\t\n\treturn res;\n}\n\nstring solve(){\n\n\tdouble res = INF;\n\n\tfor(int i = 0; i < n; ++i){\n\t\tNCLR(dp);\n\t\tres = min(res, rec(1<<i, i) + rc[i]);\n\t}\n\t\n\treturn res <= boxsz ? \"OK\" : \"NA\";\n}\n\n\nint main(){\n\n\twhile(!cin.eof()){\n\t\t\n\t\tstring str;\n\t\tgetline(cin, str);\n\t\t\n\t\tstringstream ss(str);\n\t\t\n\t\tss >> boxsz;\n\t\t\n\t\tn = 0;\n\t\twhile(!ss.eof()){\n\t\t\tss >> rc[n++];\n\t\t}\n\t\t\n\t\tcout << solve() << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nconst double EPS = 1e-10;\n\nmain(){\n  int L;\n  int data[12];\n  while(cin >> L){\n    int size;\n    for(size=0;;size++){\n      char c;\n      scanf(\"%d%c\", &data[size], &c);\n      if(c == '\\n'){\n\tsize++;\n\tbreak;\n      }\n    }\n    double len[12][12];\n    for(int i=0;i<size;i++){\n      for(int j=0;j<size;j++){\n\tint a = abs(data[i] - data[j]);\n\tint b = data[i] + data[j];\n\tlen[i][j] = sqrt((double)(b*b) - (double)(a*a));\n      }\n    }\n    /*for(int i=0;i<size;i++){\n      for(int j=0;j<size;j++){\n\tcout << len[i][j] << ' ';\n      }\n      cout << endl;\n      }*/\n    double dp[1<<12][12];\n    fill(dp[0], dp[1<<12], 100000.0);\n    for(int i=0;i<size;i++){\n      dp[1<<i][i] = (double)(data[i]*2);\n    }\n    for(int i=0;i<(1<<size);i++){\n      for(int j=0;j<size;j++){\n\tif(dp[i][j]<0.0 || dp[i][j]-EPS > L) continue;\n\tfor(int k=0;k<size;k++){\n\t  if(i & 1<<k) continue;\n\t  dp[i | 1<<k][k] = min(dp[i | 1<<k][k], dp[i][j] - (double)data[j] + (double)len[j][k] + (double)data[k]);\n\t}\n      }\n    }\n    /*for(int i=0;i<(1<<size);i++){\n      for(int j=0;j<size;j++){\n\tcout << dp[i][j] << ' ' ;\n      }\n      cout << endl;\n      }*/\n    bool f = false;\n    for(int i=0;i<size;i++){\n      double tmp = dp[(1<<size)-1][i];\n      if(tmp < 0.0) continue;\n      if(tmp < L || abs(tmp - L) < EPS){\n\tf = true;\n\t//cout << tmp << endl;\n\tbreak;\n      }\n    }\n    if(f) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cmath>\n#include <string>\n#include <sstream>\n#include <vector>\nusing namespace std;\n\n#define sqr(x) ((x) * (x))\n\ndouble xdistance(double r1, double r2) {\n\tif(r1 == 0 || r2 == 0)\n\t\treturn max(r1, r2);\n\treturn sqrt(sqr(r1 + r2) - sqr(r1 - r2));\n}\n\nint main(void) {\n\tstring str;\n\n\twhile(getline(cin, str)) {\n\t\tint width;\n\t\tvector<int> radius;\n\t\tstringstream sstr(str);\n\t\tint tmp;\n\n\t\tsstr >> width;\n\t\twhile(sstr >> tmp)\n\t\t\tradius.push_back(tmp);\n\n\t\tlist<int> lst;\n\t\tlst.push_back(0);\n\t\tfor(int i = 0; i < radius.size(); i++) {\n\t\t\tlist<int>::iterator ins = lst.begin();\n\t\t\tdouble min_plus = 100000;\n\t\t\tint prev_rad = 0;\n\t\t\tfor(list<int>::iterator p = lst.begin(); p != lst.end(); ++p) {\n\t\t\t\tdouble plus;\n\t\t\t\tplus = xdistance(prev_rad, radius[i]) + xdistance(radius[i], *p) - xdistance(prev_rad, *p);\n\t\t\t\t\n\t\t\t\tif(plus < min_plus) {\n\t\t\t\t\tmin_plus = plus;\n\t\t\t\t\tins = p;\n\t\t\t\t}\n\t\t\t\tprev_rad = *p;\n\t\t\t}\n\n\t\t\tlst.insert(ins, radius[i]);\n\t\t}\n\n\t\tint prev_rad = 0;\n\t\tdouble accume = 0;\n\t\tfor(list<int>::iterator p = lst.begin(); p != lst.end(); ++p) {\n\t\t\taccume += xdistance(prev_rad, *p);\n\t\t\tprev_rad = *p;\n\t\t}\n\n\t\tif(accume <= width)\n\t\t\tcout << \"OK\" << endl;\n\t\telse\n\t\t\tcout << \"NA\" << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 300; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <sstream>\n#include <cmath>\nusing namespace std;\n#define N_MAX 13\n#define INF 99999999\nint W;\nint N;\nint R[N_MAX];\ndouble D[N_MAX][N_MAX];\ndouble dp[(1<<N_MAX)][N_MAX];\n\n/*\ndouble rec(int s, int u) {\n  if(s == (1<<N) - 1) return 0;\n  double res = INF;\n  for(int v = 0; v < N; ++v) {\n    if((s>>v) & 1) continue;\n    res = min(res, D[u][v] + rec(s | (1<<v), v));\n  }\n  return res;\n}\n*/\n\nvoid make() {\n  for(int i = 0; i <= N; ++i) {\n    for(int j = 0; j < N; ++j) {\n      if(i == j) {\n\tD[i][j] = 0;\n      } else if(i == N || R[i] == R[j]) {\n\tD[i][j] = R[j] * 2;\n      } else {\n\tdouble d = sqrt( pow((double)(R[i]+R[j]), 2.0)\n\t\t\t - pow((double)(R[i]-R[j]), 2.0) );\n\tD[i][j] = d - R[i] + R[j];\n      }\n    }\n  }\n}\n\nvoid solve() {\n  make();\n  for(int i = 0; i < 1<<N; ++i) {\n    if(i == (1<<N)-1) fill(dp[i], dp[i]+N+1, 0);\n    else              fill(dp[i], dp[i]+N+1, INF);\n  }\n\n  for(int s = (1<<N) - 2; s >= 0; s--) {\n    for(int u = 0; u <= N; u++) {\n      for(int v = 0; v < N; v++) {\n\tif((s>>v) & 1) continue;\n\tdp[s][u] = min(dp[s][u], D[u][v] + dp[s|(1<<v)][v]);\n      }\n    }\n  }\n  cout << (dp[0][N] <= W ? \"OK\" : \"NA\") << endl;\n}\n\nmain() {\n  string line;\n  while(getline(cin, line)) {\n    stringstream ss;\n    ss << line;\n    ss >> W;\n    N = 0;\n    int a;\n    while(ss >> a) R[N++] = a;\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdlib>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\n\nint l,r[12],n;\nstring in,tmp;\nvector<int> dp[1<<12];\ndouble dpv[1<<12];\n\ndouble cal(vector<int> v){\n  double res = 0;\n  int i;\n  if(v.size()){\n    res += r[v[0]];\n    for(i=0;i<(int)v.size()-1;i++)res += sqrt( pow(r[v[i]]+r[v[i+1]],2) - pow(r[v[i]]-r[v[i+1]],2));\n    res += r[v[i]];\n  }\n  return res;\n}\n\nint main(){\n  while(getline(cin,in)){\n    int pos = 0;\n    bool f = false;\n    n = 0;\n    while(1){\n      if(pos>=(int)in.size() || in[pos]==' '){\n\tif(!f){\n\t  l = atoi(tmp.c_str());\n\t  f = true;\n\t}else{\n\t  r[n] = atoi(tmp.c_str());\n\t  n++;\n\t}\n\ttmp.clear();\n\tif(pos>=(int)in.size())break;\n      }else{\n\ttmp.push_back(in[pos]);\n      }\n      pos++;\n    }\n\n    for(int i=0;i<(1<<n);i++){\n      dp[i].clear();\n      dpv[i] = 1000.0;\n    } \n    \n    for(int i=1;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tif(i&(1<<j)){\n\t  int g = i-(1<<j);\n\t  vector<int> hoge = dp[g];\n\t  hoge.push_back(j);\n\t  dp[i] = hoge;\n\t  dpv[i] = cal(hoge);\n\t  \n\t  for(int k=(int)hoge.size()-1;k>=1;k--){\n\t    swap(hoge[k],hoge[k-1]);\n\t    double s = cal(hoge);\n\t    \n\t    if(s<dpv[i]){\n\t      dp[i] = hoge;\n\t      dpv[i] = s;\n\t    }\n\t    \n\t  }\n\t}\n      }\n    }\n    if(dpv[(1<<n)-1]>l)cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef tuple<int, int> duo;\nconst int dx[] = {0, 0, 1, -1, 1, 1, -1, -1};\nconst int dy[] = {1, -1, 0, 0, 1, -1, 1, -1};\nconst int Mod = 1000000000 + 0;\n//{{{ templates\n#define TT_ template<typename T>inline\n#define TTF_ template<typename T,typename F>inline\nTT_ T sq(T x){return x*x;}\nTT_ T In(){T x;cin>>x;return x;}\nTT_ void Out(T&x){cout<<x;}\nTT_ void sort(T&v){sort(begin(v),end(v));}\nTT_ void revs(T&v){reverse(begin(v),end(v));}\nTT_ void uniq(T&v){sort(v);v.erase(unique(begin(v),end(v)),end(v));}\nTT_ int ubnd(T&v,typename T::value_type&x){return upper_bound(begin(v),end(v),x)-begin(v);}\nTT_ int lbnd(T&v,typename T::value_type&x){return lower_bound(begin(v),end(v),x)-begin(v);}\nTTF_ void inpt(T&v,int n,F f){for(v.reserve(n);n--;v.emplace_back(f()));}\nTTF_ void show(T&v,F f,string d=\" \",string e=\"\\n\"){int i=0;for(auto&x:v)i++&&(cout<<d),f(x);cout<<e;}\nTT_ typename T::iterator minel(T&v){return min_element(begin(v),end(v));}\nTT_ typename T::iterator maxel(T&v){return max_element(begin(v),end(v));}\n\ninline void fast_io(){ios::sync_with_stdio(0);cin.tie(0);}\ninline int in(){int x;scanf(\"%d\",&x);return x;}\ninline ll pow_mod(ll a,ll k,ll m){ll r=1;for(;k>0;a=a*a%m,k>>=1)if(k&1)r=r*a%m;return r;}\ninline ll mod_inv(ll a,ll p){return pow_mod(a,p-2,p);}\n//}}} priority_queue queue deque front stringstream max_element min_element insert count make_tuple\n\ndeque<int> split(const string& s)\n{\n  deque<int> r;\n  stringstream ss(s);\n  string token;\n  while (getline(ss, token, ' ')){\n    r.emplace_back(atoi(token.c_str()));\n  }\n  return r;\n}\n\nstruct Solver {\n  Solver(const string& s){\n    R = split(s);\n    L = R[0];\n    R.pop_front();\n    N = R.size();\n  }\n  bool solve(){\n    for (int i = 0; i < (1 << N); i++){\n      for (int j = 0; j < N; j++){\n        dp[i][j] = 1e9;\n      }\n    }\n\n    for (int i = 0; i < N; i++){\n      dp[1 << i][i] = R[i] * 2;\n    }\n    for (int i = 0; i < (1 << N); i++){\n      for (int j = 0; j < N; j++){\n        if (dp[i][j] > 1e8) continue;\n        for (int k = 0; k < N; k++){\n          if ((i >> k) & 1) continue;\n          dp[i | (1 << k)][k] = min(dp[i | (1 << k)][k], dp[i][j] + calc_add_dist(j, k));\n        }\n      }\n    }\n    ld mini = 1e9;\n    for (int i = 0; i < N; i++){\n      mini = min(dp[(1 << N) - 1][i], mini);\n    }\n    printf(\"%Lf\\n\", mini);\n    return (ld)L + 1e-9 > mini;\n  }\n  ld calc_add_dist(int a, int b){\n    ld x = sqrt(sq(R[a] + R[b]) - sq(R[a] - R[b]));\n    return R[b] + x - R[a];\n  }\n  deque<int> R;\n  int L, N;\n  ld dp[1 << 12][12];\n};\n\nint main()\n{\n  string line;\n  while (getline(cin, line)){\n    Solver sol(line);\n    if (sol.solve()) puts(\"OK\");\n    else puts(\"NA\");\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\ndouble dp[1<<12][12];\nint n;\n\n\nint main(){\n\n    \n    \n    \n    \n\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[12]={0};\n        n=0;\n        cake[n]=0;\n        n++;\n        while(ss>>cake[n]){\n            n++;\n        }\n        \n        double v[13][13]={0};\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(i==j){\n                    v[i][j]=0;\n                    v[j][i]=v[i][j];\n                }else{\n                    double x = (cake[i]+cake[j])*(cake[i]+cake[j])-(cake[i]-cake[j])*(cake[i]-cake[j]);\n                    v[i][j]=sqrt((fabs(x)));\n                    //cout<<i<<\" \"<<j<<\" \"<<v[i][j]<<endl;\n                    v[j][i]=v[i][j];\n                }\n                \n            }\n        }\n        \n        \n       \n        //memset(dp, 999999.9999, sizeof(dp));\n        for(int i=0; i<(1<<12); i++){\n            for(int j=0; j<12; j++){\n                dp[i][j]=100000000;\n            }\n        }\n        \n        \n        dp[(1<<n) - 1][0] = 0;\n\n        \n        for(int i=(1<<n)-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                \n                for(int k=0; k<n; k++){\n                    if(!((i >> k) & 1)){\n                        if(j==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[k]);\n                        }else if(k==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[j]);\n                        }else{\n                            /*\n                            int m=i;\n                            for(int l=0; l<n; l++){\n                                cout<<m%2;\n                                m/=2;\n                            }\n                            cout<<endl;\n                            cout<<\"j  \"<<j<<endl;\n                            cout<<\"k  \"<<k<<endl;\n                             */\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + v[j][k]);\n                            /*\n                            cout<<\"dp \"<<dp[i][j]<<endl;\n                            cout<<\"v  \"<<v[j][k]<<endl;\n                            cout<<\"-----------\"<<endl;\n                             */\n                        }\n                    }\n                }\n            }\n        }\n        \n        //cout<<dp[0][0]<<endl;\n        if(dp[0][0]<=box)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n\n        \n        \n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = 0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]+distance[k][0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\n#define REP(i, a, b) for (int i = (a); i < (b); ++i)\n#define rep(i, n) REP(i, 0, n)\nint main()\n{\n    int a[12], b[12];\n    char buf[256];\n    while (fgets(buf, 256, stdin)) {\n        char* p = strtok(buf, \" \");\n        int L = atoi(p);\n        int n = 0;\n        while (p = strtok(NULL, \" \")) a[n++] = atoi(p);\n        std::sort(a, a + n);\n        bool ok = false;\n\n        b[n/2] = a[0];\n        int i = 0, j = 1, k = 1, l = 1;\n        while (i < n) {\n            if (i % 4 == 0) { b[n/2+k] = a[n-l]; l++; }\n            if (i % 4 == 1) { b[n/2-k] = a[n-l]; l++; k++; }\n            if (i % 4 == 2) { b[n/2+k] = a[j]; j++; }\n            if (i % 4 == 3) { b[n/2-k] = a[j]; j++; k++; }\n            i++;\n        }\n        double t = b[0];\n        REP(i, 1, n) t += 2 * sqrt(b[i-1] * b[i]);\n        t += b[n-1];\n        if (!(t > L)) ok = true;\n\n        puts(ok ? \"OK\" : \"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <stack>\n#include <vector>\n#include <queue>\n#include <bitset>\n#include <string>\nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<n; i++)\n#define repa(i,s,e) for(int i=s; i<=e; i++)\n#define repd(i,s,e) for(int i=s; i>=e; i--)\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nstring line;\nint S, r, N;\nvi cakes;\n\nconst int MAX_N = 15;\ndouble edges[MAX_N][MAX_N];\nbitset<15> used;\n\ndouble minval;\n\nvoid dfs(int v, double value) {\n\tif(used.count() == N) {\n\t\tminval = min(minval, value + cakes[v]);\n\t\treturn;\n\t}\n\n\tfor(int i=0; i<N; i++) {\n\t\tif(v != i && !used[i]) {\n\t\t\tvalue += edges[v][i];\n\t\t\tused.set(i);\n\t\t\tdfs(i, value);\n\t\t\tused.reset(i);\n\t\t\tvalue -= edges[v][i];\n\t\t}\n\t}\n}\n\nvoid solve() {\n\tN = cakes.size();\n\tmemset(&edges[0][0], 0, sizeof(double) * MAX_N * MAX_N);\n\tfor(int i=0; i<N; i++) {\n\t\tfor(int j=i+1; j<N; j++) {\n\t\t\tdouble d = 2.0 * sqrt((double)(cakes[i] * cakes[j]));\n\t\t\tedges[i][j] = edges[j][i] = d;\n\t\t}\n\t}\n\n\tminval = 10000.0;\n\tfor(int i=0; i<N; i++) {\n\t\tused.set(i);\n\t\tdfs(i, cakes[i]);\n\t\tused.reset(i);\n\t}\n\tcout << (minval <= S ? \"OK\" : \"NA\") << endl;\n}\n\nint main() {\n\twhile( 1 ) {\n\t\tgetline(cin, line);\n\t\tif(line == \"\") break;\n\n\t\tstringstream ss;\n\t\tss << line;\n\t\tss >> S;\n\t\tcakes.clear();\n\t\twhile(ss>>r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <complex>\n#include <algorithm>\n#include <sstream>\n#include <cstring>\n\nusing namespace std;\n\n#define loop(i,a,b) for(int i=(a); i<int(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define all(c) (c).begin(), (c).end()\n\ntypedef vector<int> vi;\ndouble const eps=1e-8;\ndouble const inf=1e100;\ndouble dp[12][1<<12];\nint w;\nint r[12];\nint n;\n\ndouble hamilton(int v, int S){\n    double& res=dp[v][S];\n    if(res!=0) return res;\n    if(S==(1<<n)-1){\n        res=r[v];\n    }else{\n        res=inf;\n        rep(i,n){\n            if(S>>i&1) continue;\n            double dy=abs(r[v]-r[i]);\n            double a=r[v]+r[i];\n            double dx=sqrt(a*a-dy*dy);\n            res = min(res, dx + hamilton(i,S|(1<<i)));\n        }\n    }\n    return res;\n}\n\nbool solve(){\n    memset(dp,0,sizeof(dp));\n    random_shuffle(r,r+n);\n    rep(i,n){\n        if(r[i]+hamilton(i,1<<i) <= w+eps) return true;\n    }\n    return false;\n}\n\nint main(){\n    string s;\n    while(getline(cin,s)){\n        stringstream ss(s);\n        ss>>w;\n        int t;\n        n=0;\n        while(ss>>t) r[n++]=t;\n        static const char ans[2][3]={\"OK\",\"NA\"};\n        cout << ans[1-solve()] << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> parse(string str) {\n\tvector<int> ret; int t = 0; str += ' ';\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ') ret.push_back(t), t = 0;\n\t\telse t = t * 10 + str[i] - 48;\n\t}\n\treturn ret;\n}\nint bitcount(int x) {\n\tint ret = 0;\n\tfor (int i = 0; i < 31; i++) {\n\t\tif (x & (1 << i)) ret++;\n\t}\n\treturn ret;\n}\nstring s; double dp[4100][12];\nint main() {\n\twhile (s = \"\", getline(cin, s)) {\n\t\tvector<int> u = parse(s);\n\t\tvector<int> v(u.begin() + 1, u.end());\n\t\tint n = v.size();\n\t\tfor (int i = 0; i < (1 << n); i++) {\n\t\t\tfor (int j = 0; j < n; j++) dp[i][j] = 999999999.9;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) dp[1 << i][i] = v[i];\n\t\tfor (int i = 1; i < (1 << n); i++) {\n\t\t\tif (bitcount(i) <= 1) continue;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (!(i & (1 << j))) continue;\n\t\t\t\tdp[i][j] = 999999999.9;\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif ((i & (1 << k)) && (j != k)) {\n\t\t\t\t\t\tdouble d1 = v[j] + v[k], d2 = abs(v[j] - v[k]);\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] + sqrt(d1 * d1 - d2 * d2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble ret = 999999999.9;\n\t\tfor (int i = 0; i < n; i++) ret = min(ret, dp[(1 << n) - 1][i] + v[i]);\n\t\tcout << (ret <= u[0] + 1e-10 ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <deque>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<30;\nconst int EPS = 1e-8;\n\ntypedef pair<int, int> pii;\n\nmap<pii, double> mp;\n\ndouble calc(int r1, int r2) {\n  if (mp[pii(r1,r2)]) return mp[pii(r1,r2)];\n  return mp[pii(r1,r2)] = sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main() {\n  string s;\n  while(getline(cin, s)) {\n    stringstream ss(s);\n    double x;\n    ss >> x;\n    int r;\n    vector<int> v;\n    while(ss >> r) {\n      v.push_back(r);\n    }\n    sort(ALL(v));\n    int n = v.size();\n    if (n == 0) {\n      cout << \"OK\" << endl;\n      continue;\n    }\n    deque<int> dq;\n    REP(i,n/2) {\n      if (i%2 == 0) {\n        dq.push_front(v[i]);\n        dq.push_back(v[n-i-1]);\n      } else {\n        dq.push_front(v[n-i-1]);\n        dq.push_back(v[i]);\n      }\n    }\n    if (n%2) {\n      if (dq[n-2] + calc(dq[0],v[n/2]) < dq[0] + calc(dq[n-2], v[n/2]))\n        dq.push_front(v[n/2]);\n      else\n        dq.push_back(v[n/2]);\n    }\n    FOR(it, dq) {\n      cout << *it << \" \";\n    }\n    cout << endl;\n\n    double xx = dq[0] + dq[n-1];\n    REP(i, n - 1) {\n      xx += calc(dq[i], dq[i+1]);\n    }\n    if (xx <= x)\n      cout << \"OK\";\n    else\n      cout << \"NA\";\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<sstream>\n#include<iostream>\n#include<cmath>\nusing namespace std;\nint w,n; int c[12];\nstring s;\n\ndouble calc(int *c){\n\tdouble r=c[0]+c[n-1];\n\tfor(int i=0;i<n-1;i++)r+=2*sqrt(c[i]*c[i+1]);\n\treturn r;\n}\nint main(){\n\twhile(getline(cin,s)){\n\t\tstringstream ss; ss<<s;\n\t\tss>>w;\n\t\tfor(n=0;ss>>c[n];n++);\n\t\tdo{\n\t\t\tif(calc(c)<=w){\n\t\t\t\tcout<<\"OK\"<<endl;\n\t\t\t\tgoto NEXT;\n\t\t\t}\n\t\t}while(next_permutation(c,c+n));\n\t\tcout<<\"NA\"<<endl;\n\t\tNEXT:;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index && state == limit-1){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<sstream>\n#include<vector>\nusing namespace std;\n\ndouble data[11][11];\ndouble dp[1<<12][12];\nint INF = 1 << 15;\n\nint main(){\n\tfor(int i=3;i<=10;i++){\n\t\tfor(int j=3;j<=10;j++){\n\t\t\tdata[i][j] = sqrt((double)((j+i)*(j+i)-(j-i)*(j-i)));\n\t\t}\n\t}\n\tint len;\n\twhile( cin >> len ){\n\t\tstring s;\n\t\tgetline( cin, s );\n\n\t\tvector<int> cur;\n\t\tstringstream ss( s );\n\t\twhile( !ss.eof() ){\n\t\t\tint r;\n\t\t\tss >> r;\n\t\t\tcur.push_back( r );\n\t\t}\n\t\tint n = cur.size();\n\n\t\tfor(int i=0;i<(1<<12);i++){\n\t\t\tfill(dp[i],dp[i]+12,INF);\n\t\t}\n\t\tfor(int i=0;i<cur.size();i++){\n\t\t\tdp[1<<(i)][i]=cur[i];\n\t\t}\n\n\t\tfor(int i=0;i<(1<<n);i++){\n\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\tif(dp[i][j] != INF){\n\t\t\t\t\tfor(int k=0;k<n;k++){\n\t\t\t\t\t\tif(k==j){\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(!(i&(1<<k))){\n\t\t\t\t\t\t\tif((i|(1<<k)) == ((1<<n)-1)){\n\t\t\t\t\t\t\t\tdp[i|(1<<k)][k] = min( dp[i|(1<<k)][k] , dp[i][j]+data[cur[k]][cur[j]]+cur[k]);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tdp[i|(1<<k)][k] = min( dp[i|(1<<k)][k] , dp[i][j]+data[cur[k]][cur[j]]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool flag = false;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(dp[(1<<n)-1][i] <= len){\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t\tif(flag){\n\t\t\tcout << \"OK\" << endl;\n\t\t}else{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <algorithm>\nusing namespace std;\n\ndouble dist[11][11];\nstring input;\nint len, r;\nvector<int> v;\n\nvoid prepare() {\n    int a, b, n = v.size();\n    for (int i=0; i<n; ++i) {\n        for (int j=0; j<n; ++j) {\n            a = v[i];\n            b = v[j];\n            dist[a][b] = sqrt(pow(b + a, 2) - pow(b - a, 2));\n            dist[b][a] = dist[a][b];\n        }\n    }\n}\n\ndouble getWidth(vector<int> &v1, vector<int> &v2) {\n    int n = v1.size();\n    int m = v2.size();\n    double sum = v1[0] + (n == m ? v2[m-1] : v1[n-1]);\n    for (int i=0; i<n; ++i) {\n        if (i < n && i < m) sum += dist[v1[i]][v2[i]];\n        if (i+1 < n && i < m) sum += dist[v2[i]][v1[i+1]];\n    }\n    return sum;\n}\n\nbool solve(vector<int> v1, vector<int> v2) {\n    if (v1.size() < v2.size()) swap(v1, v2);\n    do {\n        sort(v2.begin(), v2.end());\n        do {\n            if (getWidth(v1, v2) < len + 1e-6) {\n                return true;\n            }\n        } while (next_permutation(v2.begin(), v2.end()));\n    } while (next_permutation(v1.begin(), v1.end()));\n    return false;\n}\n\nint main() {\n    while (getline(cin, input)) {\n        stringstream ss(input);\n        ss >> len;\n        v.clear();\n        while (ss >> r) {\n            v.push_back(r);\n        }\n        sort(v.begin(), v.end());\n        prepare();\n        int siz = v.size();\n        int n = siz / 2 + (siz % 2);\n        int m = siz / 2;\n        bool ok = solve(vector<int>(v.begin(), v.begin() + n),\n                        vector<int>(v.end() - m, v.end()));\n        if ( ! ok) {\n            ok |= solve(vector<int>(v.end() - n, v.end()),\n                        vector<int>(v.begin(), v.begin() + m));\n        }\n        cout << (ok ? \"OK\" : \"NA\") << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nint length;\nvector<int> rn;\ndouble dp[1 << 12 + 1][12];\n\nconst int INF = 1000000;\n\n// nÌrbgª§ÁÄ¢éª»Ý ÉüÁÄ¢é~\n// nÌóÔ©ç½ÇèÂ¯éÅ¬Ì·³ðßé\nvoid solve(){\n\n  for(int i = 0; i < 1 << rn.size(); i++){\n    fill(dp[i],dp[i]+12,INF);\n  }\n\n  for(int i = 0; i < rn.size(); i++){\n    dp[1<<i][i] = 2*rn[i];\n  }\n\n  for(int s = 1; s < 1 << rn.size(); s++){\n    for(int j = 0; j < rn.size(); j++){\n      if((s >> j & 1) == 0){\n\tcontinue;\n      }\n      for(int i = 0; i < rn.size(); i++){\n\tif((s >> i) & 1 == 0){\n\t  dp[s|1<<i][i] = min(dp[s|1<<i][i]\n\t\t\t      ,dp[s][j] + 2*sqrt(rn[j]+rn[i])-rn[j]+rn[i]);\n\t}\n      }\n    }\n  }\n  double minNum = INF;\n  for(int i = 0; i < rn.size(); i++){\n    minNum = min(minNum,dp[(1<<rn.size())-1][i]);\n  }\n  if(minNum < (double)length){\n    cout << \"OK\" << endl;\n  }\n  else\n    cout << \"NA\" << endl;\n}\n\nint main(){\n  int n;\n\n  string str;\n  while(1){\n    //    fill(dp,dp+1<<12,-1);\n    rn.clear();\n    getline(cin,str);\n    if(cin.eof())\n      break;\n    bool flag = true;\n    string s;\n    for(int i = 0; i < str.size(); i++){\n      if(str[i] == ' '){\n\tif(flag){\n\t  length = atoi(s.c_str());\n\t  flag = false;\n\t}\n\telse{\n\t  rn.push_back(atoi(s.c_str()));\n\t}\n\ts = \"\";\n      }\n      else if(i == str.size()-1){\n\ts += str[i];\n\trn.push_back(atoi(s.c_str()));\n      }\n      else\n\ts += str[i];\n    }\n\n    solve();\n    // cout << length << \" \" << flush;\n    // for(int i = 0; i < rn.size(); i++){\n    //   cout << rn[i] << \" \" << flush;\n    // }\n    // cout << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<climits>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<ctime>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\n#include<bitset>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\n\n#define PI 3.141592653589793238462643383279\n#define mod 1000000007LL\n#define rep(i, n) for(i = 0;i < n;++i)\n#define rep1(i, n) for(i = 1;i < n;++i)\n#define per(i, n) for(i = n - 1;i > -1;--i)\n#define int(x) int x; scanf(\"%d\",&x)\n#define int2(x, y) int x, y; scanf(\"%d%d\",&x, &y)\n#define int3(x, y, z) int x, y, z; scanf(\"%d%d%d\",&x, &y, &z)\n#define int4(v, x, y, z) int v, x, y, z; scanf(\"%d%d%d%d\", &v, &x, &y, &z)\n#define int5(v, w, x, y, z) int v, w, x, y, z; scanf(\"%d%d%d%d%d\", &v, &w, &x, &y, &z)\n#define ll2(x, y) ll x, y; cin >> x >> y;\n#define scn(n, a) rep(i, n)cin >> a[i]\n#define sc2n(n, a, b) rep(i, n)cin >> a[i] >> b[i]\n#define pri(x) cout << (x) << \"\\n\"\n#define pri2(x, y) cout << (x) << \" \" << (y) << \"\\n\"\n#define pri3(x, y, z) cout << (x) << \" \" << (y) << \" \" << (z) << \"\\n\"\n#define pb push_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define endl \"\\n\"\n#define kabe puts(\"---------------------------\")\n#define kara puts(\"\")\n#define debug(x) cout << \" --- \" << (x) << \"\\n\"\n#define debug2(x, y) cout << \" --- \" << (x) << \" \" << (y) << \"\\n\"\n#define debug3(x, y, z) cout << \" --- \" << (x) << \" \" << (y) << \" \" << (z) << \"\\n\"\n#define X first\n#define Y second\n#define eps 0.0001\n#define prid(x) printf(\"%.15lf\\n\", x)\n\ndouble w, r[12];\nint hd, dt[12];\nbool used[12];\ndouble o[12];\n\nbool dfs(int cnt){\n  int i, j;\n  if(cnt == hd){\n    rep(i, hd){\n      o[i] = r[dt[i]];\n      rep(j, i)o[i] = max(o[i], o[j] + 2.0 * sqrt(r[dt[i]] * r[dt[j]]));\n      if(o[i] + r[dt[i]] > w)return false;\n    }\n    //rep(i, hd)pri2(i, dt[i]);\n    return true;\n  }\n  rep(i, hd)if(!used[i]){\n    dt[cnt] = i; used[i] = true;\n    if(dfs(cnt + 1))return true;\n    used[i] = false;\n  }\n  return false;\n}\n\nint pt;\nstring s;\n\ndouble nxt(void){\n  int res = 0;\n  for(;;){\n    if(s[pt] == ' ')break;\n    res = (res * 10) + (s[pt++] - '0');\n  }\n  return (double)res;\n}\n\nsigned main(void){\n  int i, j;\n  for(int testcase = 0;testcase >= 0;testcase++){\n    getline(cin, s);\n    if(s.size() == 0)break;\n    s += \" \";\n    hd = 0; pt = 0;\n    w = nxt(); ++pt;\n    for(;pt < s.size();){\n      r[hd++] = nxt();\n      ++pt;\n    }\n    rep(i, hd)used[i] = false;\n\n    //pri(w);rep(i, hd)pri2(i, r[i]);\n\n    //printf(\"== testcase %d ==\\n\", testcase);\n    puts(dfs(0) ? \"OK\" : \"NA\");\n\n//*/\n\n//*/ break;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    sort(temps.begin(), temps.end());\n\n    for (int i = 0; i < temps.size(); ++i) cakes.push_back(temps[i]);\n    \n    // {\n    //   int lb = 0, ub = temps.size() - 1; \n    //   while (lb <= ub) {\n    //     if (lb != ub) {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     } else {\n    //       int df = abs(cakes.front() - temps[lb]), db = abs(cakes.back() - temps[lb]);\n    //       if (df > db) cakes.insert(cakes.begin(), temps[lb]);\n    //       else cakes.push_back(temps[lb]);\n    //     }\n    //     ++lb; --ub;\n    //   }\n    // }\n\n    // {\n    //   for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n    //     if (lb == ub) {\n    //       if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n    //         cakes.push_back(temps[lb]);\n    //       else\n    //         inserter(cakes, cakes.begin()) = temps[lb];\n    //     } else {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     }\n    //   }\n    // }\n\n    // puts(\"OK\"); continue;\n    //  rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = 4000.0;\n\n\tfor(int start_town = 0; start_town < info_index;start_town++){\n\n\t\tfor(int i = 0; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index;k++){\n\t\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t\t}\n\t\t}\n\n\t\tint next_state;\n\n\t\tnext_state = pow(2,start_town);\n\n\t\tdp[0][start_town][next_state] = info[start_town].r;\n\n\t\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\t\tif(i == info_index && a == start_town && state == limit-1 && k != start_town){\n\t\t\t\t\t\t\t\t\tdp[i][start_town][limit-1] = min(dp[i][start_town][limit-1],dp[i-1][k][state]+info[k].r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tminimum = min(minimum,dp[info_index][start_town][limit-1]);\n\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\t//if(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\tif(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define MOD 1000000007\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3f\n#define EPS (1e-10)\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int>P;\n\ndouble dp[1 << 10][11];\nint r[10];\nint main() {\n\tstring s;\n\twhile (getline(cin, s)) {\n\t\tstringstream buf(s);\n\t\tdouble w; buf >> w;\n\t\tint p = 0; while (buf >> r[p++]); p--;\n\t\tfill(dp[0], dp[1 << 10], INF);\n\t\trep(i, p)dp[1 << i][r[i]] = r[i] * 2;\n\t\trep(i, 1 << p) {\n\t\t\trep(k, 11) {\n\t\t\t\trep(j, p) {\n\t\t\t\t\tif (i >> j & 1)continue;\n\t\t\t\t\tdouble d = sqrt((k + r[j])*(k + r[j]) - (k - r[j])*(k - r[j])) - k + r[j];\n\t\t\t\t\tdp[i | 1 << j][r[j]] = min(dp[i | 1 << j][r[j]], dp[i][k] + d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i, 11) {\n\t\t\tif (dp[(1 << p) - 1][i] <= w) {\n\t\t\t\tputs(\"OK\"); goto g;\n\t\t\t}\n\t\t}\n\t\tputs(\"NA\");\n\tg:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <climits>\n#include <cstring>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n#define ALL(A)\t\t(A).begin(),(A).end()\n#define DUMP(A)    cout<<#A<<\"=\"<<(A)<< endl\n#define SIZE(A)    (int)((A).size())\n#define SQ(A)   ((A)*(A))\nusing namespace std;\ntypedef long long ll;\n\nint main(){\n    int role[12];\n    char *li;\n    string str;\n    while(getline(cin,str)){\n        li=(char *)str.c_str();\n        int len;\n        char sp[]=\" \";\n        char *res=NULL;\n        sscanf(strtok(li,sp),\"%d\",&len);\n        int n=0;\n        for(;;){\n            res=strtok(NULL,sp);\n            if(res==NULL) break;\n            sscanf(res,\"%d\",&role[n]);\n            n++;\n        }\n        double path[13][13];\n        for(int i=0;i<n;i++){\n            path[0][i]=path[i][0]=role[i];\n        }\n        for(int i=0;i<n;i++){\n            for(int j=0;j<n;j++){\n                path[i][j]=sqrt(SQ(role[i]+role[j])-SQ(role[i]-role[j]));\n            }\n        }\n        double dp[1<<n][n];\n        for(int i=0;i<n;i++){\n            dp[0][i]=0;\n        }\n        for(int i=1;i<(1<<n);i++){\n            for(int j=0;j<n;j++){\n                dp[i][j]=10000;\n                if(i&(1<<j)){\n                    int bef=i-(i&(1<<j));\n                    for(int k=0;k<n;k++){\n                        if(bef==0){\n                            dp[i][j]=min(dp[i][j],(double)role[j]);\n                        }else if(bef&(1<<k)){\n                            dp[i][j]=min(dp[i][j],dp[bef][k]+path[k][j]);\n                        }\n                    }\n                }\n            }\n        }\n        double ret=10000;\n        for(int i=0;i<n;i++){\n            ret=min(ret,dp[(1<<n)-1][i]+role[i]);\n        }\n        if(ret<=len) printf(\"OK\\n\");\n        else printf(\"NA\\n\");\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <cmath>\n#include <cstdlib>\n#include <string>\n#include <sstream>\n#include <vector>\n\nusing namespace std;\n\ndouble dp[1 << 12][12];\nint n;\nint c[12];\n\ndouble d(int back, int next){\n  return sqrt(pow(c[back]+c[next],2)-pow(c[back]-c[next],2));\n}\n\ndouble solve(int state, int back){\n  if(dp[state][back] != -1) return dp[state][back];\n  if(state == (1 << n) - 1) return dp[state][back]=c[back];\n\n  double ret=1e+20;\n  double dist;\n  for(int i=0;i<n;i++){\n    if(!((1 << i)&state)){\n      if(state==0){\n\tdist = c[i];\n      }else{\n\tdist = d(back,i);\n      }\n      ret = min(ret, solve(state|1<<i,i) + dist);\n    }\n  }\n  return dp[state][back] = ret;\n}\n\nint main(void){\n  string str;\n\n  while(getline(cin, str)){\n    istringstream iss(str);\n    double l;\n    double ret = 1e+20;\n    fill((double *)dp, (double *)dp+(1<<12)*12, -1);\n    memset(c, 0, sizeof(c));\n    n = 0;\n    iss >> l;\n    while(iss >> c[n]) n++;\n    ret = min(ret, solve(0, 0));\n\n    if(ret <= l){\n      cout << \"OK\" << endl;\n    }else{\n      cout << \"NG\" << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<cassert>\n#include<algorithm>\n\n#define MAX 12\n\nusing namespace std;\n\ntypedef unsigned int set;\n\ntypedef struct tagcombstruct{\n\tset K,N,x,overx;\n} combStruct;\n\nint g_cnt;\n\n/* gencomb1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy */\nset nextset(set x){\n\tset smallest, ripple, new_smallest, ones;\n\n\tsmallest = x & (~x+1);\n\tripple = x + smallest;\n\tnew_smallest = ripple & (~ripple+1);\n\tones = ((new_smallest / smallest) >> 1) - 1;\n\n\treturn ripple | ones;\n}\nbool subcomb(set p[], combStruct &cmst){\n\tset tj, *tq;\n\tset ts;\n\n\tcmst.x = nextset(cmst.x);\n\n\tif(cmst.x & cmst.overx) return false;\n\tfor(tj = 1, tq = p, ts = cmst.x; tj <= cmst.N; tj++){ if(ts & 1) *tq++ = tj; ts >>= 1; }\n\treturn true;\n}\nvector<pair<int, int> > myunique(const vector<int> &v){\n\tvector<pair<int, int> > vret;\n\tunsigned int now;\n\n\tfor(unsigned int i = 0; i < v.size(); i++) vret.push_back( make_pair(v[i],0) );\n\tnow = 0;\n\twhile( now < vret.size() ){\n\t\tint cnt = 1;\n\t\tfor(unsigned int i = now+1; i < vret.size(); ++i){\n\t\t\tif( vret[i].first != vret[i - 1].first ) break;\n\t\t\telse cnt++;\n\t\t}\n\t\tfor(unsigned int i = now; i < now + cnt; ++i) vret[i].second = cnt;\n\t\tnow += cnt;\n\t}\n\twhile( true ){\n\t\tvector<pair<int, int > >::iterator itV = unique( vret.begin(), vret.end() );\n\t\tif( itV != vret.end() ) vret.erase( itV, vret.end() );\n\t\telse break;\n\t}\n\treturn vret;\n}\nbool Solve3(pair<int, bool> *box, set num, set combn, vector<pair<int,int> > &v, int pos, long double w){\n\tif( pos == v.size() ){\n\t\tlong double ret;\n\t\tret = box[0].first + box[num - 1].first;\n\t\tfor(unsigned int i = 0; i < num - 1; ++i){\n\t\t\tret += 2 * sqrt((long double)(box[i].first * box[i+1].first));\n\t\t}\n\t\tif( ret <= w ){\n\t\t\t//cout << ret << endl;\n\t\t\treturn true;\n\t\t}\n\t}else{\n\t\tcombStruct cmst;\n\t\tset p[MAX];\n\t\tset j, *q;\n\t\tset s;\n\t\tvector<int> vEmptyPlaces;\n\n\t\tfor(unsigned int i = 0; i < num; i++) if( !box[i].second ){\n\t\t\t//cout << i << ' ';\n\t\t\tvEmptyPlaces.push_back(i);\n\t\t}\n\t\t//cout << endl;\n\t\tcmst.N = vEmptyPlaces.size();\n\t\tcmst.K = v[pos].second;\n\t\tcmst.x = ( 1 << cmst.K ) - 1L;\n\t\tcmst.overx = ~( ( 1 << cmst.N ) - 1L );\n\n\t\tfor(j = 1, q = p, s = cmst.x; j <= cmst.N; j++){ if(s & 1) *q++ = j; s >>= 1; }\n\t\tdo{\n\t\t\t// TODO\n\t\t\t/*for(int i = 0; i < cmst.K; i++){\n\t\t\t\tcout << p[i] << ' ';\n\t\t\t}\n\t\t\tcout << endl;*/\n\t\t\t//cout << '(' << cmst.K << ',' << vEmptyPlaces.size() << \")\\n\";\n\t\t\tfor(unsigned int i = 0; i < cmst.K; ++i){\n\t\t\t\tbox[ vEmptyPlaces[p[i] - 1] ] = make_pair( v[pos].first, true );\n\t\t\t}\n\t\t\t\n\t\t\tif( Solve3( box, num, num-cmst.K, v, pos+1, w ) ) return true;\n\n\t\t\tfor(unsigned int i = 0; i < cmst.K; ++i){\n\t\t\t\tbox[ vEmptyPlaces[p[i] - 1] ] = make_pair( 0, false );\n\t\t\t}\n\t\t}while( subcomb( p, cmst ) );\n\t}\n\treturn false;\n}\nint main(void){\n\twhile(true){\n\t\tint num = 0;\n\t\tlong double boxLength;\n\t\tpair<int,bool> box[MAX];\n\t\tvector<pair<int,int> > vRCakes;\n\t\tvector<int> vCakes;\n\t\t\n\t\tcin >> boxLength;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t\tcin >> tmp;\n\t\t\tvCakes.push_back( tmp );\n\t\t\tbox[num].first = 0;\n\t\t\tbox[num].second = false;\n\t\t\tnum++;\n\t\t}\n\n\t\tsort(vCakes.begin(), vCakes.end());\n\n\t\t// unique\n\t\tvRCakes = myunique(vCakes);\n\n\t\tg_cnt = 0;\n\t\tif( Solve3(box,num,num,vRCakes,0,boxLength) ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t\t//cout << g_cnt << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\nstruct qu_data{\n    double l;\n    double last;\n    int rest_cake_num;\n    int rest_cake[15];\n};\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        //cout<<input;\n        if(input==\"\")break;\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            cake_count++;\n        }\n        \n        \n        qu_data data;\n        data.l=0.0;\n        data.last=0.0;\n        data.rest_cake_num=cake_count;\n        for(int i=0; i<15; i++){\n            data.rest_cake[i]=cake[i];\n        }\n        \n        stack<qu_data> qu;\n        qu.push(data);\n        \n        \n        bool output_flag=true;\n        while(!qu.empty()){\n            qu_data front_data = qu.top();\n            qu.pop();\n            if(front_data.rest_cake_num==0&&front_data.l<=box){\n                cout<<\"OK\"<<endl;\n                output_flag=false;\n                break;\n            }\n            if(front_data.l<box){\n                for(int i=0; i<front_data.rest_cake_num; i++){\n                    qu_data push_data = front_data;\n                    if(push_data.l == 0.0){\n                        push_data.l+=push_data.rest_cake[i];\n                        push_data.last=push_data.rest_cake[i];\n                        push_data.rest_cake_num--;\n                        swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                    }else{\n                        double x = (push_data.last+push_data.rest_cake[i])*(push_data.last+push_data.rest_cake[i])-(push_data.last-push_data.rest_cake[i])*(push_data.last-push_data.rest_cake[i]);\n                        \n                        push_data.l+=sqrt(fabs(x));\n                        push_data.last=push_data.rest_cake[i];\n                        push_data.rest_cake_num--;\n                        swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                        \n                        if(push_data.rest_cake_num==0)push_data.l+=push_data.last;\n                        \n                    }\n                    \n                    qu.push(push_data);\n                }\n\n            }\n                        \n        }\n        if(output_flag)cout<<\"NA\"<<endl;\n\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst double inf = 1<<25;\n\nint n, r[15];\ndouble dp[1<<12][12];\n\ndouble solve(int bit, int l)\n{\n  if(bit == (1<<n)-1) return r[l];\n  double &ret = dp[bit][l];\n  if(ret != -1.0) return ret;\n  ret = inf;\n  for(int i = 0; i < n; i++) {\n    if(((bit >> i) & 1)) continue;\n    ret = min(ret, solve(bit | (1<<i), i) + sqrt((r[l]+r[i])*(r[l]+r[i]) - (r[l]-r[i])*(r[l]-r[i])));\n  }\n  return ret;\n}\n\nsigned main()\n{\n  cin.tie(0);\n  ios_base::sync_with_stdio(0);\n  cout << fixed << setprecision(12);\n\n  int W;\n  while(cin >> W) {\n    string in;\n    cin.ignore();    \n    getline(cin, in);\n    stringstream ss(in);\n    n = 0;\n    while(ss >> r[n]) n++;\n    double mn = inf;\n    for(int i = 0; i < n; i++) {\n      fill(dp[0], dp[1<<12], -1.0);\n      mn = min(mn, solve(1<<i, i) + r[i]);\n    }\n    //cout << mn << endl;    \n    if(mn <= W) puts(\"OK\");\n    else puts(\"NA\");\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint main(){\n  string s;\n  while(getline(cin,s)){\n    double w;\n    vector<double> v;\n    stringstream ss(s);\n    ss>>w;\n    double t;\n    while(ss>>t) v.push_back(t);\n    int n=v.size();\n    double dp[1<<n][n],inf=1<<25;\n    for(int i=0;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tdp[i][j]=inf;\n    for(int i=0;i<n;i++) dp[1<<i][i]=v[i];\n    for(int i=1;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tfor(int k=0;k<n;k++)\n\t  if(((i>>j)&1)&&!((i>>k)&1)) \n\t    dp[i+(1<<k)][k]=min(dp[i+(1<<k)][k],\n\t\t\t\tdp[i][j]+sqrt((v[j]+v[k])*(v[j]+v[k])-(v[j]-v[k])*(v[j]-v[k])));\n    bool f=v.size()==0;\n    for(int i=0;i<n;i++) f|=dp[(1<<n)-1][i]+v[i]<=w+1e-7;\n    cout<<(f?\"OK\":\"NG\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n#include\"bits/stdc++.h\"\n#ifdef _DEBUG\n#define DBG(n) n\n#else\n#define DBG(n)\n#endif\n#define INF            1e9\n#define INFLL          1e18\n#define EPS            1e-9\n#define REP(i,n)       for(ll i=0,i##_len=(n);i<i##_len;++i)\n#define REP1(i,n)      for(ll i=1,i##_len=(n);i<=i##_len;++i)\n#define REPR(i,n)      for(ll i=(n)-1;i>=0;--i)\n#define REPR1(i,n)     for(ll i=(n);i>0;--i)\n#define REPC(i,obj)    for(auto i:obj)\n#define ALL(obj)       (obj).begin(),(obj).end()\n#define SETP(n)        cout<<fixed<<setprecision(n)\n#define VV(T,h,w)      move(vector<vector<T>>(h,vector<T>(w)))\n#define VVI(T,h,w,i)   move(vector<vector<T>>(h,vector<T>(w,i)))\nusing namespace std;\nusing ll = long long;\ntemplate<typename T, ll h, ll w>using vec2 = vector<vector<T>>;\ntemplate<typename T = ll>inline T in() { T ret; cin >> ret; return ret; }\n\nvector<ll>r;\nvector<vector<double>>dp;\nll w;\nunsigned n;\nvoid init(const string&str)\n{\n\tr.clear();\n\tstringstream ss(str);\n\tss >> w;\n\tll foo; while (ss >> foo)r.push_back(foo);\n\tn = r.size();\n\tdp = VVI(double, 1 << n, n, -1);\n}\ndouble pack(unsigned state, ll lastcake)\n{\n\tif (state == (1 << n) - 1) return r[lastcake];\n\telse if (dp[state][lastcake] != -1)return dp[state][lastcake];\n\telse {\n\t\tdouble ret = INFLL;\n\t\tREP(i, n) {\n\t\t\tif ((state >> i & 1) == 0) {\n\t\t\t\tif (state == 0)ret = min(ret, r[i] + pack(state | (1 << i), i));\n\t\t\t\telse ret = min(ret, pack(state | (1 << i), i) + 2 * sqrt(r[lastcake] * r[i]));\n\t\t\t}\n\t\t}\n\t\treturn dp[state][lastcake] = ret;\n\t}\n}\nsigned main()\n{\n\tstring str;\n\twhile (getline(cin, str)) {\n\t\tinit(str);\n\t\tcout << (pack(0, 0) <= w ? \"OK\" : \"NA\") << endl;\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cmath>\n#include <cfloat>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n  char buf[200];\n  int r[12];\n  double p[12][12];\n  double dp[1<<12][12];\n  double ans;\n  int w;\n  int n, iread, ibuf;\n  int v;\n  while (fgets(buf, sizeof(buf), stdin)) {\n    n = 0;\n    ibuf = 0;\n    sscanf(buf, \"%d%n\", &w, &iread);\n    ibuf += iread;\n    while (n < 12 && sscanf(buf+ibuf, \"%d%n\", &r[n], &iread) == 1) {\n      n++;\n      ibuf += iread;\n    }\n\n    for (int i=0; i<n; i++) {\n      for (int j=0; j<n; j++) {\n        if (i==j) {\n          p[i][j] = 0.0;\n        } else {\n          p[i][j] = 2.0 * sqrt(r[i] * r[j]);\n        }\n      }\n    }\n    for (int i=0; i<(1<<n); i++) {\n      for (int j=0; j<n; j++) {\n        dp[i][j] = DBL_MAX;\n      }\n    }\n\n    v = (1<<n)-1;\n    for (int i=0; i<n; i++) dp[v][i] = r[i];\n    --v;\n    while (v) {\n      for (int i=0; i<n; i++) {\n        if (!(v & (1<<i))) continue;\n        for (int j=0; j<n; j++) {\n          if (v & (1<<j)) continue;\n          dp[v][i] = min(dp[v][i], dp[v|(1<<j)][j]+p[i][j]);\n        }\n      }\n      --v;\n    }\n    ans = DBL_MAX;\n    for (int i=0; i<n; i++) {\n      ans = min(ans, dp[1<<i][i]+r[i]);\n    }\n    if (ans <= w) {\n      printf(\"OK\\n\");\n    } else {\n      printf(\"NG\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//Name: Patisserie\n//Level: 3\n//Category: グラフ,Graph,最短経路,動的計画法,DP\n//Note: \n\n/**\n * 半径r1のケーキの右に半径r2のケーキを詰めるとき、中心は sqrt(4*r1*r2) だけずらすことになる。\n * これを利用して、(使ったケーキの集合, 右端の直径)の各状態に対して、右端の中心をおける最小の座標を管理すれば、\n * 最短経路問題（もしくは、DAG性を利用したDP）として解くことが可能である。\n *\n * オーダーは O(N^3 2^N)。\n */\n#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <cassert>\n\nusing namespace std;\n\nvector<int> n_by_popcnt[13];\n\nbool solve() {\n    string line;\n    if(!getline(cin, line)) return false;\n\n    istringstream is(line);\n    int L;\n    is >> L;\n    vector<int> rs;\n    int v;\n    while(is >> v) rs.push_back(v);\n    const int N = rs.size();\n\n    sort(begin(rs), end(rs));\n    vector<vector<double>> memo(N, vector<double>(1<<N, 1.0 / 0.0));\n    for(int i = 0; i < N; ++i) {\n        memo[i][1<<i] = rs[i];\n    }\n\n    for(int i = 1; i < N; ++i) {\n        for (const auto& pat : n_by_popcnt[i]) {\n            if((pat & ((1<<N)-1)) != pat) continue;\n            for(int prev = 0; prev < N; ++prev) {\n                for(int j = 0; j < N; ++j) {\n                    if(pat & (1<<j)) continue;\n                    const double nd = memo[prev][pat] + sqrt(4 * rs[prev] * rs[j]);\n                    const int np = pat | (1<<j);\n                    memo[j][np] = min(memo[j][np], nd);\n                }\n            }\n        }\n    }\n\n    bool res = false;\n    for(int i = 0; i < N; ++i) {\n        if(memo[i][(1<<N)-1] + rs[i] <= L) {\n            res = true;\n            break;\n        }\n    }\n    cout << (res ? \"OK\" : \"NA\") << endl;\n    return true;\n}\n\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(0);\n    cout.setf(ios::fixed);\n    cout.precision(10);\n\n    for(int i = 0; i < (1<<12); ++i) {\n        n_by_popcnt[__builtin_popcount(i)].push_back(i);\n    }\n    while(solve()) ;\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <climits>\n#include <cfloat>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <numeric>\n\nusing namespace std;\n\ntypedef unsigned int UI;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int,int> PII;\ntypedef istringstream ISS;\ntypedef ostringstream OSS;\n\n#define REP( i, m, n ) for ( int i = (int)( m ); i < (int)( n ); ++i )\n#define EACH( v, c ) for ( auto &v : c )\n\n#define ITER( c ) __typeof( (c).begin() )\n#define IREP( c, it ) for ( ITER(c) it = c.begin(); it != c.end(); ++it )\n#define ALL( c ) (c).begin(), (c).end()\n\n#define PB( n ) push_back( n )\n#define MP( a, b ) make_pair( ( a ), ( b ) )\n#define EXIST( c, e ) ( (c).find( e ) != (c).end() )\n\n#define fst first\n#define snd second\n\n#define DUMP( x ) cerr << #x << \" = \" << ( x ) << endl\n#define DEBUG( x ) cerr << __FILE__ << \":\" << __LINE__ << \": \" << #x << \" = \" << ( x ) << endl\n\ntypedef vector< double > VD;\ntypedef vector< VD > VVD;\n\ndouble dist( double r1, double r2 )\n{\n\treturn sqrt( pow( r1 + r2, 2 ) - pow( r1 - r2, 2 ) );\n}\n\nstring solve( int x, int n, VI rs )\n{\n\tVVD dp( 1 << n, VD( n, DBL_MAX ) );\n\tfill( ALL( dp[0] ), 0 );\n\n\tREP( i, 0, 1 << n )\n\t{\n\t\tREP( j, 0, n )\n\t\t{\n\t\t\tif ( !i )\n\t\t\t{\n\t\t\t\tdp[ 1 << i ][j] = rs[j];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tREP( k, 0, n )\n\t\t\t\t{\n\t\t\t\t\tif ( !( i >> k & 1 ) )\n\t\t\t\t\t{\n\t\t\t\t\t\tdp[ i | 1 << k ][k] = min( dp[ i | 1 << k ][k], dp[i][j] + dist( rs[j], rs[k] ) );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tREP( i, 0, n )\n\t{\n\t\tif ( dp[ ( 1 << n ) - 1 ][i] + rs[i] <= x )\n\t\t{\n\t\t\treturn \"OK\";\n\t\t}\n\t}\n\n\treturn \"NA\";\n}\n\nint main()\n{\n\tcin.tie( 0 );\n\tios::sync_with_stdio( false );\n\n\tstring str;\n\n\twhile ( getline( cin, str ) )\n\t{\n\t\tISS iss( str );\n\n\t\tint n;\n\t\tiss >> n;\n\n\t\tVI rs;\n\t\tint tmp;\n\n\t\twhile ( iss >> tmp )\n\t\t{\n\t\t\trs.PB( tmp );\n\t\t}\n\n\t\tcout << solve( n, rs.size(), rs ) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\tcout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tif( num > 2 ){\n\t\t\tbool bFound = false;\n\t\t\tfor(int i = 0; i < num && !bFound; i++){\n\t\t\t\tfor(int j = i + 1; j < num && !bFound; j++){\n\t\t\t\t\tswap(r[0],r[i]);\n\t\t\t\t\tswap(r[1],r[j]);\n\t\t\t\t\tif( solve( p, num-2, w, r) ){\n\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t}\n\t\t\t\t\tswap(r[i],r[0]);\n\t\t\t\t\tswap(r[j],r[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( bFound ) cout << \"OK\\n\";\n\t\t\telse cout << \"NA\\n\";\n\t\t}else{\n\t\t\tif( num == 2 ){\n\t\t\t\tcout << (r[0]+r[1]+2.0*sqs[r[0]][r[1]] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}else if( num == 1 ){\n\t\t\t\tcout << (2*r[0] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <deque>\n\nint main(int argc,char* argv[]){\n  \n  while(true){\n    int length;\n    int cake_array[12];\n    int cakes = 0;\n    char c;\n\n    if(!(std::cin >> length)){\n      break;\n    }\n    \n    while(~(c = std::getchar())){\n      if(c == '\\n'){\n\tbreak;\n      }else if(c == ' '){\n\tstd::cin >> cake_array[cakes];\n\tcakes++;\n      }\n    }\n    \n    std::sort(cake_array,cake_array+cakes);\n    \n    std::deque<int> list;\n    \n    bool flag = true;\n    for(int i = 0; i < (cakes/2); i++){\n      if(flag){\n\tlist.push_front(cake_array[i]);\n\tlist.push_back(cake_array[cakes - i - 1]);\n      }else{\n\tlist.push_front(cake_array[cakes - i - 1]);\n\tlist.push_back(cake_array[i]);\n      }\n\n      flag = !flag;\n    }\n    \n    if(cakes == 1){\n      list.push_front(cake_array[0]);\n    }else if(cakes % 2 == 1){\n      if(list[0] > list[cakes-2]){\n\tlist.push_front(cake_array[cakes/2]);\n      }else{\n\tlist.push_back(cake_array[cakes/2]);\n      }\n    }\n    \n    double sum = list[0] + list[cakes-1];\n    for(int i = 0; i < (cakes - 1); i++){\n      //std::cout << sum << std::endl;\n      sum += 2 * std::sqrt(list[i] * list[i + 1]);\n    }\n\n    //std::cout << sum;\n\n    std::cout << ((sum <= length) ? \"OK\" : \"NG\") << std::endl;\n    \n  }\n  \n  return 0;\n  \n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <cctype>\n#include <sstream>\n#include <cmath>\n#include <climits>\n#include <set>\n#include <iostream>\n#include <map>\n#include <functional>\n#include <cstdlib>\n#include <numeric>\n#include <queue>\n#include <complex>\n#include <sstream>\n#include <stack>\n\nusing namespace std;\n\n#define reep(i,f,n) for(int i=f; i<int(n); ++i)\n#define rep(i,n) reep(i,0,n)\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pii;\ntypedef complex<double> Point;\n\nconst double INF = 1e10;\nconst double EPS = 1e-7;\n\nint main()\n{\n\tint L;\n\twhile(scanf(\"%d\", &L) != EOF){\n\t\tchar c;\n\t\tvi rs;\n\t\twhile(scanf(\"%c\", &c), c==' '){\n\t\t\tint r;\n\t\t\tscanf(\"%d\", &r);\n\t\t\trs.push_back(r);\n\t\t}\n\t\tint n = rs.size();\n\t\t\n\t\tvector<vector<double> > dp(1<<n, vector<double>(n, INF));\n\t\trep(i, n){\n\t\t\tdp[1<<i][i] = rs[i]*2.0;\n\t\t}\n\t\trep(i, 1<<n){\n\t\t\trep(j, n){\n\t\t\t\tif(!(i&(1<<j)))\n\t\t\t\t\tcontinue;\n\t\t\t\trep(k, n){\n\t\t\t\t\tif(j == k || !(i&(1<<k)))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i^(1<<j)][k] + 2.0*sqrt(rs[j]*rs[k])+rs[j]-rs[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tdouble best = INF;\n\t\trep(i, n)\n\t\t\tbest = min(best, dp[(1<<n)-1][i]);\n\t\tputs(best-EPS < L ? \"OK\" : \"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    for(int i=0;i<1000&&T>0.0001;i++){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    int l;\n    while(cin>>l){\n        cin.ignore();\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <sstream>\n#define MAX_N 12\n#define INF 10000\nusing namespace std;\nvector<int> cakes;\nint n;\ndouble d[MAX_N][MAX_N];\ndouble dp[1 << MAX_N][MAX_N];\n\nvoid calc_dist(){\n    int n = cakes.size();\n    for (int i = 0; i < n; i++) {\n        for (int j = 0;  j < n; j++) {\n            if (i == j) {\n                d[i][j] = 0;\n            }else{\n                double dist = sqrt(pow(cakes[i] + cakes[j], 2) - pow(cakes[i] - cakes[j], 2));\n                d[i][j] = dist;\n            }\n        }\n    }\n}\n\nvoid solve(){\n    n = cakes.size();\n    for (int s = 0; s < (1 << n); s++) {\n        for (int j = 0; j < n; j++) {\n            dp[s][j] = INF;\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        dp[1 << i][i] = cakes[i];\n    }\n    \n    for (int s = 0; s < (1 << n); s++) {\n        for (int v = 0; v < n; v++) {\n            for (int u = 0; u < n; u++) {\n                if (!(s >> u & 1)) {\n                    dp[s | (1 << u)][u] = min(dp[s | (1 << u)][u], dp[s][v] + d[v][u]);\n                }\n            }\n        }\n    }\n}\n\n\nint main()\n{\n    int len;\n\n    while (cin >> len) {\n        cakes.clear();\n        string str;\n        getline(cin, str);\n        stringstream ss(str);\n        while (!ss.eof()) {\n            int r;\n            ss >> r;\n            cakes.push_back(r);\n        }\n        calc_dist();\n        solve();\n        bool ok = false;\n        for (int i = 0; i < n; i++) {\n            if (dp[(1 << cakes.size()) - 1][i] + cakes[i] <= len) {\n                ok = true;\n            }\n        }\n        if (ok){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NA\" << endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <cmath>\n\n#define MAX 12\n\nusing namespace std;\n\nvector<int> split(const string &str, char delim){\n    istringstream iss(str); string tmp; vector<int> res;\n    while(getline(iss, tmp, delim)) {\n        int i;\n        std::istringstream iss(tmp);\n        iss >> i;\n        res.push_back(i);\n    }\n    return res;\n}\n\nfloat d[MAX][MAX];\nfloat dp[1 << MAX][MAX];\nint size;\n\nfloat rec(int S, int v) {\n    if (dp[S][v] >= 0) return dp[S][v];\n\n    if (S == (1 << size) -1 && v == 0) {\n        return dp[S][v] = 0;\n    }\n\n    float res = 99999;\n    for (int u = 0; u < size; u++) {\n        if(!(S >> u & 1))\n            res = min(res, rec(S | 1 << u, u) + d[v][u]);\n    }\n\n    return dp[S][v] = res;\n}\n\n\nint main(int argc, char const* argv[])\n{\n    string line;\n    while(getline(cin, line)) {\n\n        vector<int> params = split(line, ' ');\n        vector<int> cakes;\n\n        int weight = params.front();\n        for (vector<int>::iterator it = params.begin(); it != params.end(); it++) {\n            if(it == params.begin()) {weight = *it; continue;}\n            cakes.push_back(*it);\n        }\n\n        size = cakes.size();\n        for (int i = 0; i < size; i++) {\n            for (int j = i; j < size; j++) {\n                int i_r = cakes.at(i);\n                int j_r = cakes.at(j);\n                float sq = sqrt(pow(i_r + j_r, 2.0) - pow(i_r - j_r, 2.0));\n                if (i_r == j_r) sq = i_r + j_r;\n                d[i][j] = sq;\n                d[j][i] = sq;\n            }\n        }\n\n        memset(dp, -1, sizeof(dp));\n\n        float min_val = 99999;\n        for (int i = 0; i < size; i++) {\n            float rec_val = rec(0,i);\n            if (rec_val == 0) continue;\n            min_val = min(rec_val, min_val);\n        }\n\n        if (min_val > weight) {\n            std::cout << \"NA\" << std::endl;\n        } else {\n            std::cout << \"OK\" << std::endl;\n        }\n\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n#include <iomanip>\n#include <iterator>\n#include <cassert>\n\nusing namespace std;\ntypedef long long ll;\nconst int MODULO = 1000000007;\nconst int INF = 100000000; //1e8\n\ntypedef long long ll;\ntypedef pair<int,int> Pii;\ntypedef pair<ll,ll> Pll;\ntypedef complex<double> Cd;\n\n#define FOR(i,n) for(int i = 0; i < (n); i++)\n#define sz(c) ((int)(c).size())\n\ntemplate<class T>\nvoid splitstr(const string &s, vector<T> &out)\n{\n    istringstream in(s);\n    out.clear();\n    copy(istream_iterator<T>(in), istream_iterator<T>(), back_inserter(out));\n}\n\nvector<int> a;\ndouble memo[12][1 << 12];\n\ndouble solve(int start,int flag,int rest){\n\tif(rest == 0)\n\t\treturn memo[start][flag] = a[start];\n\tdouble ret = INF;\n\tFOR(i,sz(a)){\n\t\tif((1<<i)&flag) continue;\n\t\tdouble add = solve(i,flag|(1<<i),rest - 1) + sqrt((double)a[start] * a[i]) * 2;\n\t\tret = min(ret,add);\n\t}\n\treturn memo[start][flag] = ret;\n}\n\nint main(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tsplitstr(s,a);\n\t\tint n = a[0];\n\t\ta.erase(a.begin());\n\t\tint m = sz(a);\n\n\t\tdouble mn = INF;\n\t\tFOR(j,m) fill(memo[j],memo[j] + (1 << m),-1.0);\n\t\tFOR(i,m){\n\t\t\tmn = min(mn,solve(i,1<<i,m-1) + a[i]);\n\t\t}\n\n\t\tcout << (n >= mn ? \"OK\" : \"NA\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <sstream>\n#define MAX_N 12\n#define INF 10000\nusing namespace std;\nvector<int> cakes;\nint n;\ndouble d[MAX_N][MAX_N];\ndouble dp[1 << MAX_N][MAX_N];\n\nvoid calc_dist(){\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = i + 1;  j < n; j++) {\n            double dist = sqrt(pow(cakes[i] + cakes[j], 2) - pow(cakes[i] - cakes[j], 2));\n            d[i][j] = d[j][i] = dist;\n        }\n    }\n}\n\ndouble solve(){\n    n = cakes.size();\n    for (int s = 0; s < 1 << MAX_N; s++) {\n        for (int j = 0; j < MAX_N; j++) {\n            dp[s][j] = INF;\n        }\n    }\n    \n    dp[(1 << n) - 1][0] = 0;\n    \n    for (int s = (1 << n) - 2; s >= 0; s--) {\n        for (int v = 0; v < n; v++) {\n            for (int u = 0; u < n; u++) {\n                if (!(s >> u & 1)) {\n                    dp[s][v] = min(dp[s][v], dp[s | 1 << u][u] + d[u][v]);\n                }\n            }\n        }\n    }\n    return dp[0][0];\n}\n\n\nint main()\n{\n    int len;\n\n    while (cin >> len) {\n        cakes.clear();\n        string str;\n        getline(cin, str);\n        stringstream ss(str);\n        while (!ss.eof()) {\n            int r;\n            ss >> r;\n            cakes.push_back(r);\n        }\n        n = cakes.size();\n        for (int i = 0; i < n; i++) {\n            d[i][i] = 0;\n        }\n        calc_dist();\n        if (solve() <= len){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NG\" << endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <sstream>\n#include <cmath>\nusing namespace std;\n\nint main(){\n\tdouble dp[10][1<<10] = {};\n\tstring ln;\n\twhile( getline(cin,ln) ){\n\t\tfor(int i = 0 ; i < 10 ; i++)\n\t\t\tfor(int j = 0 ; j < 1<<10 ; j++)\n\t\t\t\tdp[i][j] = 1e9;\n\t\tstringstream ss(ln);\n\t\tvector<int> item;\n\t\t\n\t\tint w,t;\n\t\tss >> w;\n\t\twhile(ss >> t)item.push_back(t);\n\t\tfor(int i = 0 ; i < item.size() ; i++){\n\t\t\tdp[i][1<<i] = item[i];\n\t\t}\n\t\tfor(int i = 0 ; i < (1<<item.size()) ; i++){\n\t\t\tfor(int j = 0 ; j < item.size() ; j++){\n\t\t\t\tfor(int k = 0 ; k < item.size() ; k++){\n\t\t\t\t\tdp[k][i|(1<<k)] = min( dp[k][i|(1<<k)] , dp[j][i] + sqrt( (item[j]+item[k])*(item[j]+item[k])-(item[j]-item[k])*(item[j]-item[k]) ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tdouble ans = 1e9;\n\t\tfor(int i = 0 ; i < item.size() ; i++){\n\t\t\tans = min( ans , dp[i][(1<<item.size())-1] + item[i]);\n\t\t}\n\t\tif( ans <= w + 1e-9 ){\n\t\t\tcout << \"OK\" << endl;\n\t\t}else{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nvint x,k;\ndouble n;\nint m;\nstring str;\n\nvoid input(){\n\tint c;\n\tx.clear();\n\tbool first=true;\n\tint num=0;\n\tint i;\n\tfor(i=0;i<str.size();i++){\n\t\tc=str[i];\n\t\tif(c==' '){\n\t\t\tif(first){\n\t\t\t\tn=num;\n\t\t\t\tnum=0;\n\t\t\t\tfirst=false;\n\t\t\t}else{\n\t\t\t\tx.push_back(num);\n\t\t\t\tm++;\n\t\t\t\tnum=0;\n\t\t\t}\n\t\t}else{\n\t\t\tnum=num*10+c-'0';\n\t\t}\n\t}\n\tif(num!=0){x.push_back(num);m++;}\n\treturn;\n}\n\ndouble hoge(){\n\tdouble res=x[k[0]]+x[k[m-1]];\n\tint i;\n\tfor(i=0;i<m-1;i++){\n\t\tres+=sqrt((x[k[i]]+x[k[i+1]])*(x[k[i]]+x[k[i+1]])-(x[k[i]]-x[k[i+1]])*(x[k[i]]-x[k[i+1]]));\n\t}\n\treturn res;\n}\n\nint main() {\n\twhile(getline(cin,str)){\n\t\tx.clear();k.clear();m=0;\n\t\tinput();\n\t\tint i;\n//cout<<n<<endl;\n//for(i=0;i<m;i++)cout<<x[i]<<endl;\n\t\tfor(i=0;i<m;i++)k.push_back(i);\n\t\tdouble res=10000;\n\t\tdo{\n\t\t\tchmin(res,hoge());\n//int j;\n//for(j=0;j<m;j++)cout<<k[j]<<\" \";\n//cout<<hoge()<<endl;\n\t\t}while(next_permutation(k.begin(),k.end()));\n//cout<<res<<\" \"<<n<<endl;\n\t\tcout<<(res<=n?\"OK\":\"NO\")<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\ndouble CalcCirclesLength(vector<int> &r){\n\tdouble ret;\n\tret = r[0];\n\tcout << r[0] << ' ';\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2.0 * sqs[ r[i] ][ r[i+1] ];\n\t\tcout << sqs[ r[i] ][ r[i+1] ] << ' ';\n\t}\n\tcout << r[r.size() - 1] << endl;\n\tret += r[r.size() - 1];\n\treturn ret;\n}\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tdouble length = 0;\n\t\tvector<int> vCandR;\n\t\tvector<int> vR;\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\t\t\tcin >> tmp;\n\t\t\tvCandR.push_back(tmp);\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tvR.push_back(vCandR[0]);\n\t\tvCandR.erase( vCandR.begin()+0 );\n\t\twhile( vCandR.size() > 0 ){\n\n\t\t\tfor(unsigned int i = 0; i < vCandR.size(); ++i){\n\t\t\t\tdouble minlen = 5000;\n\t\t\t\tint minind = 0;\n\t\t\t\tint minins = 0;\n\t\t\t\tdouble l;\n\n\t\t\t\tfor(unsigned j = 0; j <= vR.size(); j++){\n\t\t\t\t\tvR.insert(vR.begin()+j,vCandR[i]);\n\t\t\t\t\tl = CalcCirclesLength( vR );\n\t\t\t\t\tif( l < minlen ){\n\t\t\t\t\t\tminlen = l; minind = i; minins = j;\n\t\t\t\t\t}\n\t\t\t\t\tvR.erase(vR.begin()+j);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvR.insert( vR.begin() + minins, vCandR[minind] );\n\t\t\t/*for(unsigned int i = 0; i < vR.size(); ++i){\n\t\t\t\tcout << vR[i] << ' ';\n\t\t\t}\n\t\t\tcout << endl;*/\n\t\t\tvCandR.erase( vCandR.begin() + minind );\n\t\t}\n\t\tcout << CalcCirclesLength( vR ) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }\n    }\n    bs.push_back(right);\n    double req = bs[0] + bs[size-1];\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tprintf(\"DEBUG\\n\");\n\treturn;\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tif (!n){\n\t\t\tputs(\"OK\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tvector<vector<double> > d(15, vector<double>(1 << n, 1e25));\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "/*{{{*/\n#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <climits>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <iterator>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <sys/time.h>\n#include <vector>\nusing namespace std;\n\n#define INF (1e9)\nstatic const double PI = acos(-1.0);\nstatic const double EPS = 1e-10;\n\ntypedef long long int LL;\ntypedef unsigned long long int ULL;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<double> VD;\ntypedef vector<VD> VVD;\ntypedef vector<bool> VB;\ntypedef vector<VB> VVB;\ntypedef vector<char> VC;\ntypedef vector<VC> VVC;\ntypedef vector<string> VS;\ntypedef pair<int, int> PII;\ntypedef complex<double> P;\n\n#define FOR(i, b, e) for (typeof(e) i = (b); i != (e); i < (e)? ++i : --i)\n#define REP(i, n) FOR(i, 0, n)\n\n#define IFC(c) if(c) continue;\n#define IFB(c) if(c) break;\n#define IFR(c, r) if(c) return r;\n\n#define OPOVER(_op, _type) inline bool operator _op (const _type &t) const\n\n#define arrsz(a) ( sizeof(a) / sizeof(a[0]) )\n\n#define F first\n#define S second\n#define MP(a, b) make_pair(a, b)\n\n#define SZ(a) ((LL)a.size())\n#define PB(e) push_back(e)\n#define SORT(v) sort((v).begin(), (v).end())\n#define RSORT(v) sort((v).rbegin(), (v).rend())\n\n#define ALL(a) (a).begin(), (a).end()\n#define RALL(a) (a).rbegin(), (a).rend()\n#define EACH(c,it) for(__typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n\n#define BIT(n) (1ULL << (n))\n#define BITOF(n, m) ((ULL)(n) >> (m) & 1)\n\n#define RANGE(a, b, c) ((a) <= (b) && (b) <= (c))\n\n#define PQ priority_queue\n#define SC static_cast\n\n#ifdef DEBUG_ON\n\t#define dprt(fmt, ...) if (CONDITION) fprintf(stderr, fmt, ##__VA_ARGS__)\n\t#define darr(a) if (CONDITION) copy( (a), (a) + arrsz(a), ostream_iterator<int>(cerr, \" \") ); cerr << endl\n\t#define darr_range(a, f, t) if (CONDITION) copy( (a) + (f), (a) + (t), ostream_iterator<int>(cerr, \" \") ); cerr << endl\n\t#define dvec(v) if (CONDITION) copy( ALL(v), ostream_iterator<int>(cerr, \" \") ); cerr << endl\n\t#define darr2(a, n, m) if (CONDITION) FOR(i, 0, (n)){ darr_range( (a)[i], 0, (m) ); }\n\t#define dvec2(v) if (CONDITION) FOR(i, 0, SZ(v)){ dvec( (v)[i] ); }\n\t#define WAIT() if (CONDITION) { string _wait_; cerr << \"(hit return to continue)\" << endl; getline(cin, _wait_); }\n\t#define dump(x) if (CONDITION) cerr << \" [L\" << __LINE__ << \"] \" << #x << \" = \" << (x) << endl;\n\t#define dumpf() if (CONDITION) cerr << __PRETTY_FUNCTION__ << endl;\n\t#define dumpv(x) if (CONDITION) cerr << \" [L:\" << __LINE__ << \"] \" << #x << \" = \"; REP(q, (x).size()) cerr << (x)[q] << \" \"; cerr << endl;\n\t#define where() if (CONDITION) cerr << __FILE__ << \": \" << __PRETTY_FUNCTION__ << \" [L: \" << __LINE__ << \"]\" << endl;\n\t#define show_bits(b, s) if(CONDITION) { REP(i, s) { cerr << BITOF(b, s-1-i); if(i%4 == 3) cerr << ' '; } cerr << endl; }\n#else\n\t#define cerr if(0) cerr\n\t#define dprt(fmt, ...)\n\t#define darr(a)\n\t#define darr_range(a, f, t)\n\t#define dvec(v)\n\t#define darr2(a, n, m)\n\t#define dvec2(v)\n\t#define WAIT()\n\t#define dump(x)\n\t#define dumpf()\n\t#define dumpv(x)\n\t#define where()\n\t#define show_bits(b, s)\n#endif\n\n/* Inline functions */\ninline int onbits_count(ULL b) { int c = 0; while(b != 0) { c += (b & 1); b >>= 1; } return c; }\ninline int bits_count(ULL b) { int c = 0; while(b != 0) { ++c; b >>= 1; } return c; }\ninline int toInt(string s) { int v; istringstream sin(s);sin>>v;return v; }\ntemplate<class T> inline string toString(T x) { ostringstream sout;sout<<x;return sout.str(); }\ninline double now(){ struct timeval tv; gettimeofday(&tv, NULL); return (static_cast<double>(tv.tv_sec) + static_cast<double>(tv.tv_usec) * 1e-6); }\ninline VS split(string s, char delimiter) { VS v; string t; REP(i, s.length()) { if(s[i] == delimiter) v.PB(t), t = \"\"; else t += s[i]; } v.PB(t); return v; }\n\n/* Tweaks */\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& s, const pair<T1, T2>& d) {return s << \"(\" << d.first << \", \" << d.second << \")\";}\n\n/* Frequent stuffs */\nint n_dir = 4;\nint dx[] = {0, 1, 0, -1}, dy[] = {-1, 0, 1, 0}; /* CSS order */\nenum direction {\n\tUP, RIGHT, DOWN, LEFT\n};\n// int n_dir = 8;\n// int dx[] = {0, 1, 1, 1, 0, -1, -1, -1}, dy[] = {-1, -1, 0, 1, 1, 1, 0, -1};\n// enum direction {\n\t// UP, UPRIGHT, RIGHT, DOWNRIGHT, DOWN, DOWNLEFT, LEFT, UPLEFT\n// }\n#define FORDIR(d) REP (d, n_dir)\n\n/*}}}*/\n\ndouble distance(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nint main()\n{\n\tint box_width;\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tdeque<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsort(cakes.begin(), cakes.end());\n\t\t// for (int i = 0; i < cakes.size(); ++i) {\n\t\t\t// cout << cakes[i] << endl;\n\t\t// }\n\n\t\tbool ok = false;\n\t\tdeque<int> save = cakes;\n\n\t\tdouble length = cakes.front() * 2;\n\t\tint prev = cakes.front();\n\t\tcakes.pop_front();\n\t\tbool front = false;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += distance(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tcakes = save;\n\t\tlength = cakes.back() * 2;\n\t\tprev = cakes.back();\n\t\tcakes.pop_back();\n\t\tfront = true;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += distance(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tif (ok) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%12,b=rand()%12;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>=score){\n            mi=score;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <complex>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <functional>\n#include <iostream>\n#include <map>\n#include <set>\nusing namespace std;\ntypedef pair<int,int> P;\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vll;\n#define pu push\n#define pb push_back\n#define mp make_pair\n#define eps 1e-9\n#define INF 2000000000\n#define sz(x) ((int)(x).size())\n#define fi first\n#define sec second\n#define SORT(x) sort((x).begin(),(x).end())\n#define all(x) (x).begin(),(x).end()\n#define EQ(a,b) (abs((a)-(b))<EPS)\ndouble dp[1<<12][12];\nint main()\n{\n\tstring s;\n\twhile(getline(cin,s))\n\t{\n\t\tfor(int i=0;i<(1<<12);i++)for(int j=0;j<12;j++)dp[i][j]=INF;\n\t\tint n=0,sum,a[15];\n\t\tstringstream ss;\n\t\tss << s;\n\t\tss >> sum;\n\t\twhile(!ss.eof())ss >> a[n++];\n\t\tfor(int i=0;i<n;i++)dp[1<<i][i]=a[i];\n\t\tfor(int i=0;i<(1<<n);i++)\n\t\t{\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif((i>>j)&1)continue;\n\t\t\t\tfor(int k=0;k<n;k++)\n\t\t\t\t{\n\t\t\t\t\tdp[i|1<<j][j]=min(dp[i|1<<j][j],dp[i][k]+sqrt(((a[k]+a[j])*(a[k]+a[j])-(a[k]-a[j])*(a[k]-a[j]))));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble ans=INF;\n\t\tfor(int i=0;i<n;i++)ans=min(ans,dp[(1<<n)-1][i]+a[i]);\n\t\tif(ans<=sum)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\nstruct qu_data{\n    double l;\n    double last;\n    int rest_cake_num;\n    int rest_cake[15];\n};\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        //cout<<input;\n        if(input==\"\")break;\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            cake_count++;\n        }\n        \n        \n        qu_data data;\n        data.l=0.0;\n        data.last=0.0;\n        data.rest_cake_num=cake_count;\n        for(int i=0; i<15; i++){\n            data.rest_cake[i]=cake[i];\n        }\n        \n        stack<qu_data> qu;\n        qu.push(data);\n        \n        \n        bool output_flag=true;\n        while(!qu.empty()){\n            qu_data front_data = qu.top();\n            qu.pop();\n            if(front_data.rest_cake_num==0&&front_data.l<=box){\n                cout<<\"OK\"<<endl;\n                output_flag=false;\n                break;\n            }\n            \n            for(int i=0; i<front_data.rest_cake_num; i++){\n                qu_data push_data = front_data;\n                if(push_data.l == 0.0){\n                    push_data.l+=push_data.rest_cake[i];\n                    push_data.last=push_data.rest_cake[i];\n                    push_data.rest_cake_num--;\n                    swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                }else{\n                    double x = (push_data.last+push_data.rest_cake[i])*(push_data.last+push_data.rest_cake[i])-(push_data.last-push_data.rest_cake[i])*(push_data.last-push_data.rest_cake[i]);\n                    \n                    push_data.l+=sqrt(fabs(x));\n                    push_data.last=push_data.rest_cake[i];\n                    push_data.rest_cake_num--;\n                    swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                    \n                    if(push_data.rest_cake_num==0)push_data.l+=push_data.last;\n                    \n                }\n                \n                qu.push(push_data);\n            }\n            \n        }\n        if(output_flag)cout<<\"NA\"<<endl;\n\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\nusing namespace std;\n\n#define MAX 12\n\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[p[0]-1];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += (double)2*sqrt((double)r[p[i]-1]*r[p[i+1]-1]);\n\t}\n\ttw += r[p[n-1]-1];\n\tif( tw <= w ){\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\twhile(true){\n\t\tint w;\n\t\tint num = 0;\n\t\tint perm[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){ cin >> r[num]; num++; if( '\\n' == cin.get() ) break; }\n\n\t\tif( solve(perm, num, w, r) ){\n\t\t\tcout << \"OK\\n\";\n\t\t}else{\n\t\t\tcout << \"NA\\n\";\n\t\t}\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = 4000.0;\n\n\tfor(int start_town = 0; start_town < info_index;start_town++){\n\n\t\tfor(int i = 0; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index;k++){\n\t\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t\t}\n\t\t}\n\n\t\tint next_state;\n\n\t\tnext_state = pow(2,start_town);\n\n\t\tdp[0][start_town][next_state] = info[start_town].r;\n\n\t\tfor(int i = 1; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index; k++){\n\t\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\t\tif(i == info_index && a == start_town && state == limit-1){\n\t\t\t\t\t\t\t\t\tdp[i][start_town][limit-1] = min(dp[i][start_town][limit-1],dp[i-1][k][state]+info[k].r);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tminimum = min(minimum,dp[info_index][start_town][limit-1]);\n\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-6 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\n\ndouble calc(int r1,int r2){\n  return sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,1e9));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    REP(i,1,(1 << n)){\n      REP(j,0,n){\n        if(i & (1 << j)) continue;\n        ll nxt = i | (1 << j);\n        REP(k,0,n){\n          if((i & (1 << k)) == 0) continue;\n          double bw = 0;\n          if(nxt == (1 << n)-1){\n            bw += v[j];\n          }\n          bw += calc(v[k],v[j]);\n          dp[nxt][j] = min(dp[nxt][j],bw + dp[i][k]);\n          if(nxt == (1 << n)-1){\n            ans = min(ans,dp[nxt][j]);\n          }\n        }\n      }\n    }\n    if(ans <= w){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15];\n    double cake_length;\n    int last_cake;\n};\n\nsome_cake init_some_cake(){\n    some_cake init;\n    for(int i=0; i<15; i++)init.cake_flag[i]=0;\n    init.cake_length=0.0;\n    init.last_cake=0;\n    \n    return init;\n}\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            //cout<<cake[cake_count]<<endl;\n            cake_count++;\n        }\n        \n        queue<some_cake> qu;\n        some_cake temp = init_some_cake();\n        qu.push(temp);\n        bool ans_flag=true;\n        while(!qu.empty()){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        if(x<0)x=x*-1;\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <list>\n#include <string>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\nusing namespace std;\n\ntypedef istringstream ISS;\ntypedef vector <int> VI;\n\nint calc( int r1, int r2 ) {\n    double a = max( r1, r2 ) - min( r1, r2 );\n    double b = r1 + r2;\n    double c = sqrt( b * b - a * a );\n    return b - c;\n}\n\nbool solve( int W, VI R ) {\n    int n = R.size();\n    do {\n        int w = 2 * accumulate( R.begin(), R.end(), 0 );\n        for ( int i = 0; i + 1 < n; ++ i ) {\n            w -= calc( R[i], R[i+1] );\n        }\n        if ( w <= W ) return true;\n    } while ( next_permutation( R.begin(), R.end() ) );\n    return false;\n}\n\nint main() {\n    string line;\n    while ( getline( cin, line ) ) {\n        ISS iss1( line );\n        int w;\n        iss1 >> w;\n        VI R;\n        int r;\n        while ( iss1 >> r ) R.push_back( r );\n        sort( R.begin(), R.end() );\n        cout << ( solve( w, R ) ? \"OK\" : \"NA\" ) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define MAX_N 12\ndouble dp[MAX_N][1 << MAX_N], p[MAX_N][MAX_N], x[MAX_N]; int N, M, bit[MAX_N]; string S;\nint main() {\n\twhile (S = \"\", getline(cin, S)) {\n\t\tS += ' '; string T; int u = 0;\n\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\tif (S[i] == ' ') { if (u == 0) { M = stoi(T); } else { x[u - 1] = stoi(T); }u++; T = \"\"; }\n\t\t\telse { T += S[i]; }\n\t\t}\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\tif (i == j) { continue; }\n\t\t\t\tp[i][j] = sqrt((x[i] + x[j])*(x[i] + x[j]) - x[i] * x[i]) - x[i] + x[j];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < MAX_N; i++) { for (int j = 0; j < (1 << MAX_N); j++) { dp[i][j] = 1e9; } }\n\t\tfor (int i = 0; i < N; i++) { dp[i][1 << i] = x[i] * 2; }\n\t\tfor (int i = 0; i < (1 << N); i++) {\n\t\t\tfor (int j = 0; j < N; j++) { bit[j] = (i / (1 << j)) % 2; }\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\tif (dp[j][i] >= 1e8) { continue; }\n\t\t\t\tfor (int k = 0; k < N; k++) {\n\t\t\t\t\tif (bit[k] == 0) {\n\t\t\t\t\t\tdp[k][i + (1 << k)] = min(dp[k][i + (1 << k)], dp[j][i] + p[j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble maxn = 1e9;\n\t\tfor (int i = 0; i < N; i++) { maxn = min(maxn, dp[i][(1 << N) - 1]); }\n\t\tif (maxn <= M) { cout << \"OK\" << endl; }\n\t\telse { cout << \"NA\" << endl; }\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define EPS (1e-8)\n\nint main() {\n\tstring str;\n\twhile (getline(cin, str)) {\n\t\tistringstream is(str);\n\t\tint n = count(str.c_str(), str.c_str() + str.size(), ' ');\n\t\tint w, r[10];\n\t\tis >> w;\n\t\tREP(i, n) is >> r[i];\n\t\t\n\t\tsort(r, r + n);\n\t\tdouble sum = r[0] / 2.0 + r[n - 1] / 2.0;\n\t\tFOR(i, 1, n) {\n\t\t\tsum += sqrt(pow(r[i] + r[i - 1], 2) - pow(abs(r[i] - r[i - 1]), 2));\n\t\t}\n\t\tif ((double)w + EPS >= sum) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    // for (int i = 0; i < temps.size(); ++i) cakes.push_back(temps[i]);\n    // for (int i = 0; i < temps.size(); ++i) cakes.insert(cakes.begin(), temps[i]);\n    for( int i = 0; i < temps.size() / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) cakes.push_back(temps[(N-1)/2]);\n    \n    // {\n    //   int lb = 0, ub = temps.size() - 1; \n    //   while (lb <= ub) {\n    //     if (lb != ub) {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     } else {\n    //       int df = abs(cakes.front() - temps[lb]), db = abs(cakes.back() - temps[lb]);\n    //       if (df > db) cakes.insert(cakes.begin(), temps[lb]);\n    //       else cakes.push_back(temps[lb]);\n    //     }\n    //     ++lb; --ub;\n    //   }\n    // }\n\n    // {\n    //   for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n    //     if (lb == ub) {\n    //       if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n    //         cakes.push_back(temps[lb]);\n    //       else\n    //         inserter(cakes, cakes.begin()) = temps[lb];\n    //     } else {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     }\n    //   }\n    // }\n\n    // puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 1e2;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nconst double EPS = 1e-10;\n\nmain(){\n  int L;\n  int data[12];\n  while(cin >> L){\n    int size;\n    for(size=0;;size++){\n      char c;\n      scanf(\"%d%c\", &data[size], &c);\n      if(c == '\\n'){\n\tsize++;\n\tbreak;\n      }\n    }\n    sort(data, data+size);\n    bool f = false;\n    do{\n      double length = (double)(data[0]+data[size-1]);\n      for(int i=0;i<size-1;i++){\n\tint a = abs(data[i] - data[i+1]);\n\tint b = data[i] + data[i+1];\n\tlength += sqrt((double)(b*b) - (double)(a*a));\n      }\n      if(length < L || abs(length - L) < EPS){\n\t/*for(int i=0;i<size;i++){\n\t  cout << data[i] << ' ';\n\t  }cout << endl;*/\n\tf = true;\n\tbreak;\n      }\n      //cout << length << ' ' << L << endl;\n    }while(next_permutation(data, data+size));\n    if(f) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <string>\n#include <sstream>\n#include <cmath>\n\nusing namespace std;\nstring str;\nconst int INF = 1 << 30;\n\ndouble min(double a, double b) {\n    return a > b ? b : a;\n}\nvoid swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\ndouble dist(int a, int b) {\n    return b + sqrt((a + b) * (a + b) - (a - b) * (a - b)) - a;\n}\n\nint main() {\n\n    while(getline(cin, str)) {\n        //begin input\n        stringstream ss(str);\n        int X;\n        ss >> X;\n        int radius[13];\n\n        int i = 0;\n        while(ss >> radius[i]) {\n            i++;\n        }\n        int N = i;\n        //end input\n        \n        vector<vector<double> > dp(1 << N, vector<double>(N, INF));\n        for(int j = 0; j < N; j++) {\n            dp[1 << j][j] = 2 * radius[j];\n        }\n\n        for(int i = 1; i < (1 << N); i++) {\n            for(int j = 0; j < N; j++) {\n                if((i >> j) & 1){\n                    for(int k = 0; k < N; k++) {\n                        if (!((i >> k) & 1)) {\n                            //cout << i << \" to \" << (i | (1 << k)) << \" : \" << j << \", \" << k << \", \" << radius[j] << \", \" << radius[k] << endl;\n                            dp[i | (1 << k)][k] = min(dp[i | (1 << k)][k], dp[i][j] + dist(radius[j], radius[k]));\n                        }\n                    }\n                }\n            }\n        }\n\n        double mini = INF;\n        for(int j = 0; j < N; j++) {\n            mini = min(mini, dp[(1 << N) - 1][j]);\n        }\n        if (mini <= X) {\n            //cout << mini << endl;\n            cout << \"YES\" << endl;\n        } else {\n            //cout << mini << endl;\n            cout << \"NO\" << endl;\n        }\n\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cmath>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint main()\n{\n\tdouble tbl_sqrt[101];\n\tfor(int i=1;i<=100;i++)\ttbl_sqrt[i]=sqrt(i);\n\n\tint box;\n\twhile(~scanf(\"%d \",&box)){\n\t\tint r[12],n;\n\t\tfor(n=1;;n++){\n\t\t\tscanf(\"%d\",r+n-1);\n\t\t\tif(getchar()=='\\n')\tbreak;\n\t\t}\n\n\t\tsort(r,r+n);\n\n\t\tdouble w,wmin=2*box;\n\t\tdo{\n\t\t\tw=r[0]+r[n-1];\n\t\t\tfor(int i=0;i<n-1;i++)\tw+=2*tbl_sqrt[r[i]*r[i+1]];\n\t\t\twmin=min(wmin,w);\n\t\t}while(next_permutation(r,r+n));\n\n\t\tputs(wmin<=box?\"OK\":\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <stack>\n#include <vector>\n#include <queue>\n#include <bitset>\n#include <string>\nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<n; i++)\n#define repa(i,s,e) for(int i=s; i<=e; i++)\n#define repd(i,s,e) for(int i=s; i>=e; i--)\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nstring line;\nint S, r, N;\nvi cakes;\n\nconst int MAX_N = 13;\ndouble edges[MAX_N][MAX_N];\nbitset<15> used;\n\ndouble minval;\n\nvoid dfs(int v, double value) {\n\tif(used.count() == N) {\n\t\tminval = min(minval, value + cakes[v]);\n\t\treturn;\n\t}\n\n\tfor(int i=0; i<N; i++) {\n\t\tif(v != i && !used[i]) {\n\t\t\tvalue += edges[v][i];\n\t\t\tused.set(i);\n\t\t\tdfs(i, value);\n\t\t\tused.reset(i);\n\t\t\tvalue -= edges[v][i];\n\t\t}\n\t}\n}\n\nvoid solve() {\n\tN = cakes.size();\n\tmemset(&edges[0][0], 0, sizeof(double) * MAX_N * MAX_N);\n\tfor(int i=0; i<N; i++) {\n\t\tfor(int j=i+1; j<N; j++) {\n\t\t\tdouble d = 2.0 * sqrt((double)(cakes[i] * cakes[j]));\n\t\t\tedges[i][j] = edges[j][i] = d;\n\t\t}\n\t}\n\n\tminval = 10000.0;\n\tfor(int i=0; i<N; i++) {\n\t\tused.set(i);\n\t\tdfs(i, cakes[i]);\n\t\tused.reset(i);\n\t}\n\tcout << (minval <= S ? \"OK\" : \"NA\") << endl;\n}\n\nint main() {\n\twhile( 1 ) {\n\t\tgetline(cin, line);\n\t\tif(line == \"\") break;\n\n\t\tstringstream ss;\n\t\tss << line;\n\t\tss >> S;\n\t\tcakes.clear();\n\t\twhile(ss>>r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsolve();\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\ndouble dist(double p, double q) {\n    return sqrt((p+q)*(p+q) - (p-q)*(p-q));\n}\n\nint main() {\n    double box_len;\n    vector<double> rs;\n    string s;\n    while (getline(cin, s)) {\n        // 入力\n        rs.clear();\n        istringstream iss(s);\n        iss >> box_len;\n        double r;\n        while (iss >> r) rs.push_back(r);\n        \n        // 解く\n        sort(rs.begin(), rs.end());\n        swap(rs[1], rs[rs.size()-1]);\n        box_len -= rs[0];\n        box_len -= rs.back();\n\n        do {\n            bool possible = true;\n            double l = box_len;\n            for (int i = 0; i < rs.size()-1; i++) {\n                l -= dist(rs[i], rs[i+1]);\n                if (l < 0) {\n                    possible = false;\n                    break;\n                }\n            }\n            if (possible) {\n                cout << \"OK\" << endl;\n                goto next_dataset;\n            }\n        } while (next_permutation(rs.begin()+1, rs.end()-1));\n\n        cout << \"NA\" << endl;\nnext_dataset:\n        continue;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nint length;\nvector<int> rn;\ndouble dp[(1 << 12)][12];\n\nconst int INF = 1000000;\n\nvoid solve(){\n  //  cout << rn.size() << endl;\n  for(int i = 0; i < (1 << rn.size()); i++){\n    fill(dp[i],dp[i]+rn.size(),INF);\n  }\n  \n  for(int i = 0; i < rn.size(); i++){\n    dp[1<<i][i] = 2*rn[i];\n  }\n  \n  for(int s = 1; s < (1 << rn.size()); s++){\n    for(int j = 0; j < rn.size(); j++){\n      if(((s >> j) & 1) == 0){\n\tcontinue;\n      } \n      for(int i = 0; i < rn.size(); i++){\n\tif(((s >> i) & 1) == 0){\n\t  dp[s|1<<i][i] = min(dp[s|1<<i][i]\n\t\t\t      ,dp[s][j] + 2*sqrt(rn[j]*rn[i])-rn[j]+rn[i]);\n\t}\n      }\n    }\n  }\n  double minNum = INF;\n  for(int i = 0; i < rn.size(); i++){\n    minNum = min(minNum,dp[(1<<(rn.size()))-1][i]);\n  }\n  \n  \n  if(minNum <= (double)length){\n    cout << \"OK\" << endl;\n  }\n  else\n    cout << \"NA\" << endl;\n}\n\nint main(){\n\n  string str;\n  while(1){\n    rn.clear();\n    getline(cin,str);\n    if(cin.eof())\n      break;\n    bool flag = true;\n    string s;\n    for(int i = 0; i < str.size(); i++){\n      if(str[i] == ' '){\n\tif(flag){\n\t  length = atoi(s.c_str());\n\t  flag = false;\n\t}\n\telse{\n\t  rn.push_back(atoi(s.c_str()));\n\t}\n\ts = \"\";\n      }\n      else if(i == str.size()-1){\n\ts += str[i];\n\trn.push_back(atoi(s.c_str()));\n      }\n      else\n\ts += str[i];\n    }\n\n    solve();\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\n#define INF 999999.999999\nusing namespace std;\nstring str;\nint cnt;\ndouble r[12],n,ans;\ndouble dp[(1<<12)+1][12];\ndouble t[12][12];\n\nint get_num(string);\nvoid input();\nvoid init();\nvoid make_table();\n\ndouble rec(int S,int pos){\n\n  if(dp[S][pos]!=INF)return dp[S][pos];\n\n  if(S==(1<<(cnt))-1)return r[pos];\n\n  for(int i=0;i<cnt;i++){\n    if(((S>>i)&1)==1)continue;\n    dp[S][pos]=min(dp[S][pos],rec(S+(1<<i),i)+t[pos][i]);\n\n  }\n\n  return dp[S][pos];\n}\n\n\nint main(){\n  while(getline(cin,str)){\n    init();\n    input();\n    make_table();\n    ans=rec(1,0)+r[0];\n    for(int i=1;i<cnt;i++){\n      //cout<<ans<<endl;\n      ans=min(ans , rec((1<<i),i)+r[i]);\n    }\n    if(ans<=n)cout<<\"OK\"<<endl;\n    else cout<<\"NA\"<<endl;\n    \n  }\n  return 0;\n}\n\n\nvoid make_table(){\n  for(int i=1;i<12;i++){\n    for(int j=0;j<i;j++){      \n      t[i][j]=t[j][i]=sqrt(pow(r[i]+r[j],2.0)-pow(r[i]-r[j],2.0));\n    }\n  }\n  \n}\n\nvoid init(){\n  cnt=0;\n  for(int i=0;i<=(1<<12);i++){\n    for(int j=0;j<12;j++){\n      dp[i][j]=INF;\n    }\n  }\n}\n\n\n\nvoid input(){\n  n=get_num(str);\n  for(int i=0;i<(int)str.size();i++)if(str[i]==' ')r[cnt++]=get_num(str.substr(i+1));\n}\n\n\nint get_num(string str){\n  int res=0;\n  for(int i=0;i<(int)str.size();i++){\n    if(str[i]==' ')break;\n    res*=10;\n    res+=(str[i]-'0');\n  }\n  return res;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <string>\n#include <cmath>\n#include <stack>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <list>\n#include <iostream>\n#include <sstream>\n#include <climits>\n#include <cfloat>\n\ntypedef long long ll;\n\nusing namespace std;\n\ndouble calculate_len(int* r, int n)\n{\n\tdouble t = 0;\n\tfor (int i = 1; i < n; ++i)\n\t\tt += sqrt((double)r[i-1] * r[i]);\n\treturn r[0] + r[n-1] + 2*t;\n}\nint main()\n{\n\twhile (true)\n\t{\n\t\tchar buf[256];\n\t\tcin.getline(buf, sizeof(buf));\n\t\tif (strlen(buf) == 0)\n\t\t\tbreak;\n\n\t\tistringstream is(buf);\n\t\tint len, radius[16], n;\n\t\tis >> len;\n\t\tfor (n = 0; is >> radius[n]; ++n)\n\t\t\t;\n\n\t\tsort(radius, radius + n);\n\t\tint r[16];\n\t\tint i, j, k;\n\t\tfor (i = 0, j = n/2-1, k = 2; j >= 0 && j < n; ++i, j += k, k = -k/abs(k)*(abs(k)+2))\n\t\t\tr[j] = radius[i];\n\t\tfor (i = n-1, j = n/2, k = -2; j >= 0 && j < n; --i, j += k, k = -k/abs(k)*(abs(k)+2))\n\t\t\tr[j] = radius[i];\n\t\tdouble ans = calculate_len(r, n);\n\t\tif (n & 1)\n\t\t{\n\t\t\tfor (i = n-1, j = n/2-1, k = 2; j >= 0 && j < n; --i, j += k, k = -k/abs(k)*(abs(k)+2))\n\t\t\t\tr[j] = radius[i];\n\t\t\tfor (i = 0, j = n/2, k = -2; j >= 0 && j < n; ++i, j += k, k = -k/abs(k)*(abs(k)+2))\n\t\t\t\tr[j] = radius[i];\n\t\t\tans = min(ans, calculate_len(r, n));\n\t\t}\n\n\t\tif (ans <= len+1e-4)\n\t\t\tputs(\"OK\");\n\t\telse\n\t\t\tputs(\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <fstream>\nusing namespace std;\ninline int toInt(string s) { int v; istringstream sin(s); sin >> v; return v;}\ntemplate<class T> inline string toStr(T x) { ostringstream sout; sout << x; return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi>  vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define FOR(i,a,b) for(int i=(a);i<=(b);++i)\n#define REP(i,n) FOR(i,0,(n)-1)\nconst double EPS = 1e-10;\nconst double PI = acos(-1.0);\nconst int INF = INT_MAX/10;\n\n#define LE(x,y) ((x)-(y)<EPS)\ntypedef vector<double> vd;\n\nvs split(string str, string delim) {\n\tvs result;\n\tint pos;\n\n\twhile((pos = str.find_first_of(delim)) != str.npos) {\n\t\tif(pos > 0) {\n\t\t\tresult.push_back(str.substr(0, pos));\n\t\t}\n\t\tstr = str.substr(pos+1);\n\t}\n\tif(str.length() > 0) {\n\t\tresult.push_back(str);\n\t}\n\n\treturn result;\n}\n\ndouble diff(int r1, int r2) {\n\treturn 2*sqrt(r1*r2)-r1+r2;\n}\n\nint main() {\n\tstring line;\n\twhile(getline(cin, line)) {\n\t\tvs data = split(line, \" \");\n\t\tdouble size = toInt(data[0]);\n\t\tint n = data.size()-1;\n\t\tvi r(n);\n\t\tREP(i, n) {\n\t\t\tr[i] = toInt(data[i+1]);\n\t\t}\n\n\t\tvector<vd> dp(1<<n, vd(n, INF));\n\t\tREP(i, n) {\n\t\t\tdp[1<<i][i] = 2*r[i];\n\t\t}\n\t\tREP(i, 1<<n) {\n\t\t\tREP(j, n) {\n\t\t\t\tif(i&(1<<j)) {\n\t\t\t\t\tREP(k, n) {\n\t\t\t\t\t\tint ni = i|(1<<k);\n\t\t\t\t\t\tif(i != ni) {\n\t\t\t\t\t\t\tdp[ni][k] = min(dp[ni][k], dp[i][j]+diff(r[j], r[k]));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbool ok = false;\n\t\tREP(i, n) {\n\t\t\tif(LE(dp[(1<<n)-1][i], size)) {\n\t\t\t\tok = true;\n\t\t\t}\n\t\t}\n\n\t\tcout << (ok ? \"OK\" : \"NA\") << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <iostream>\n#include <complex>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <string>\n#include <queue>\n#include <cmath>\n#include <math.h>\n#include <numeric>\n#include <list>\n#include <sstream>\n#include <fstream>\n#include <iomanip>\n#include <climits>\n#include <set>\n#include <memory.h>\n#include <memory>\n#include <cstdio>\n#include <cstdlib>\n#include <cctype>\n#include <cassert>\n#include <map>\n#include <cassert>\n#include <time.h>\n\nusing namespace std;\n\ntypedef complex<double> xy_t;\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int , P> PP;\ntypedef pair<int, string> Ps;\ntypedef vector<int> vec;\ntypedef vector<vec> mat;\nconst int INF= 1 << 30;\nconst double EPS = 1e-9;\nconst double PI = 3.1415926535897932384626433832795;\n\n#define rep(i, n) for(int i = 0; i < n; i++)\ndouble r[12];\ndouble dp[12][1 << 12];\n\nint main(){\n\tint n;\n\tdouble b;\n\tint num;\n\tstring s;\n\twhile(cin >> b){\n\t\tn = 0;\n\t\tfill(&dp[0][0], &dp[11][(1 << 12) - 1] + 1, (double)INF);\n\t\tgetline(cin , s);\n\t\tistringstream in(s);\n\t\twhile(in >> num) {\n\t\t\tr[n++] = num;\n\t\t}\n\t\trep(i, n) dp[i][1 << i] = r[i] * 2;\n\t\trep(i, 1 << n){\n\t\t\trep(j, n){\n\t\t\t\tif(i & (1 << j)){\n\t\t\t\t\trep(k, n){\n\t\t\t\t\t\tif(!(i & (1 << k))){\n\t\t\t\t\t\t\tdp[k][i | (1 << k)] = min(dp[k][i | (1 << k)],\n\t\t\t\t\t\t\t\tdp[j][i] + r[k] - r[j] + sqrt((r[k] + r[j]) * (r[k] + r[j]) - \n\t\t\t\t\t\t\t\t(r[k] - r[j]) * (r[k] - r[j])));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble res = 1e10;\n\t\trep(i, n) res = min(dp[i][(1 << n) - 1], res);\n\t\t//cout << n << \" \" << res  << endl;\n\t\tif(res < b + EPS) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <cmath>\n\n#define MAX 12\n\nusing namespace std;\n\nvector<int> split(const string &str, char delim){\n    istringstream iss(str); string tmp; vector<int> res;\n    while(getline(iss, tmp, delim)) {\n        int i;\n        std::istringstream iss(tmp);\n        iss >> i;\n        res.push_back(i);\n    }\n    return res;\n}\n\nfloat d[MAX][MAX];\nfloat dp[1 << MAX][MAX];\nint size;\n\nfloat rec(int S, int v) {\n    if (dp[S][v] >= 0) return dp[S][v];\n\n    if (S == (1 << size) -1 && v == 0) {\n        return dp[S][v] = 0;\n    }\n\n    float res = 99999;\n    for (int u = 0; u < size; u++) {\n        if(!(S >> u & 1))\n            res = min(res, rec(S | 1 << u, u) + d[v][u]);\n    }\n\n    return dp[S][v] = res;\n}\n\n\nint main(int argc, char const* argv[])\n{\n    string line;\n    while(getline(cin, line)) {\n\n        vector<int> params = split(line, ' ');\n        vector<int> cakes;\n\n        int weight = params.front();\n        for (vector<int>::iterator it = params.begin(); it != params.end(); it++) {\n            if(it == params.begin()) {weight = *it; continue;}\n            cakes.push_back(*it);\n        }\n\n        size = cakes.size();\n        for (int i = 0; i < size; i++) {\n            for (int j = i; j < size; j++) {\n                int i_r = cakes.at(i);\n                int j_r = cakes.at(j);\n                float sq = sqrt(pow(i_r + j_r, 2.0) - pow(i_r - j_r, 2.0));\n                if (i_r == j_r) sq = i_r + j_r;\n                d[i][j] = sq;\n                d[j][i] = sq;\n            }\n        }\n\n        memset(dp, -1, sizeof(dp));\n\n        float min_val = 99999;\n        for (int i = 0; i < size; i++) {\n            float rec_val = rec(0,i);\n            if (rec_val == 0) continue;\n            min_val = min(rec_val, min_val);\n        }\n\n        if (min_val > weight) {\n            std::cout << \"NA\" << std::endl;\n        } else {\n            std::cout << \"OK\" << std::endl;\n        }\n\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }\n    }\n    bs.push_back(right);\n    double req = bs[0] + bs[size-1];\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      //cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <cmath>\n#include <climits>\nusing namespace std;\n#define rep2(x,from,to) for(int x=(from);x<(to);++(x))\n#define rep(x,to) rep2(x,0,to)\n\nint main() {\n\tdouble dp[1<<12][12];\n\tdouble calc[16][32];\n\trep(i,16) {\n\t\trep2(j,i,32) {\n\t\t\tcalc[i][j] = sqrt(j*j-i*i);\n\t\t}\n\t}\n\tint len, tmp;\n\tstring s;\n\twhile(getline(cin, s)) {\n\t\tstringstream ss(s);\t\t\n\t\tvector<int> v;\n\t\tss >> len;\n\t\twhile(ss >> tmp) v.push_back(tmp);\n\t\tint n = v.size();\n\t\trep(i,1<<12) {\n\t\t\trep(j,12) {\n\t\t\t\tdp[i][j] = INT_MAX;\n\t\t\t}\n\t\t}\n\t\trep(i,n) {\n\t\t\tdp[1<<i][i] = v[i];\n\t\t}\n\t\trep(i,(1<<n)) {\n\t\t\trep(j,n) {\n\t\t\t\tif(!(i&(1<<j))) continue;\n\t\t\t\trep(k,n) {\n\t\t\t\t\tif(i&(1<<k)) continue;\n\t\t\t\t\tint a = abs(v[k]-v[j]);\n\t\t\t\t\tdp[i|1<<k][k] = min(dp[i|1<<k][k], dp[i][j]+calc[a][v[k]+v[j]]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool f = 1;\n\t\trep(i,n) {\n\t\t\tif(dp[(1<<n)-1][i] + v[i] <= len) {\n\t\t\t\tcout << \"OK\" << endl;\n\t\t\t\tf = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f) cout << \"NA\" << endl;\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.0000000001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.0000000001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.0000000001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.0000000001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] + 0.0000000001 < length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int,int> PII;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define REP( i, m, n ) for ( int i = (int)( m ); i < (int)( n ); i++ )\n#define UREP( i, m, n ) for ( unsigned int i = (unsigned int)( m ); i < (unsigned int)( n ); i++ )\n\n#define ITER( c ) __typeof( (c).begin() )\n#define IREP( c, it ) for ( ITER(c) it = c.begin(); it != c.end(); ++it )\n#define ALL( c ) (c).begin(), (c).end()\n#define RALL( c ) (c).rbegin(), (c).rend()\n\n#define PB( n ) push_back( n )\n#define MP( a, b ) make_pair( ( a ), ( b ) )\n#define EXIST( c, e ) ( (c).find( e ) != (c).end() )\n\n#define fst first\n#define snd second\n\n#define DUMP( x ) cerr << #x << \" = \" << ( x ) << endl\n#define DEBUG( x ) cerr << __FILE__ << \":\" << __LINE__ << \": \" << #x << \" = \" << ( x ) << endl\n\nint main()\n{\n\tstring line;\n\n\twhile ( getline( cin, line ) )\n\t{\n\t\tistringstream iss( line );\n\n\t\tint l;\n\t\tiss >> l;\n\n\t\tVI r;\n\t\tint in;\n\n\t\twhile ( iss >> in )\n\t\t{\n\t\t\tr.PB( in );\n\t\t}\n\n\t\tbool able = false;\n\t\tsort( ALL( r ) );\n\n\t\tdo\n\t\t{\n\t\t\tdouble curr = r.front() + r.back();\n\n\t\t\tREP( i, 0, r.size() - 1 )\n\t\t\t{\n\t\t\t\tcurr += sqrt( pow( r[i] + r[i+1], 2 ) - pow( abs( r[i] - r[i+1] ), 2 ) );\n\t\t\t}\n\n\t\t\tif ( curr <= l )\n\t\t\t{\n\t\t\t\table = true;\n\t\t\t}\n\t\t} while ( next_permutation( ALL( r ) ) );\n\n\t\tif ( able )\n\t\t{\n\t\t\tcout << \"OK\" << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n#include <string>\n#include <cctype>\n#include <sstream>\n#include <cmath>\n#include <climits>\n#include <set>\n#include <iostream>\n#include <map>\n#include <functional>\n#include <cstdlib>\n#include <numeric>\n#include <queue>\n#include <complex>\n#include <sstream>\n#include <stack>\n\nusing namespace std;\n\n#define reep(i,f,n) for(int i=f; i<int(n); ++i)\n#define rep(i,n) reep(i,0,n)\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int, int> pii;\ntypedef complex<double> Point;\n\nconst float INF = 1e7;\nconst float EPS = 1e-7;\n\nint main()\n{\n\tint L;\n\tfloat dp[1<<12][12];\n\twhile(scanf(\"%d\", &L) != EOF){\n\t\tchar c;\n\t\tvi rs;\n\t\twhile(scanf(\"%c\", &c), c==' '){\n\t\t\tint r;\n\t\t\tscanf(\"%d\", &r);\n\t\t\trs.push_back(r);\n\t\t}\n\t\tint n = rs.size();\n\t\t\n\t\trep(i, 1<<n) rep(j, n)\n\t\t\tdp[i][j] = INF;\n\t\trep(i, n){\n\t\t\tdp[1<<i][i] = rs[i]*2.0f;\n\t\t}\n\t\trep(i, 1<<n){\n\t\t\trep(j, n){\n\t\t\t\tif(!(i&(1<<j)))\n\t\t\t\t\tcontinue;\n\t\t\t\trep(k, n){\n\t\t\t\t\tif(j == k || !(i&(1<<k)))\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i^(1<<j)][k] + 2.0f*(float)sqrt(rs[j]*rs[k])+rs[j]-rs[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tfloat best = INF;\n\t\trep(i, n)\n\t\t\tbest = min(best, dp[(1<<n)-1][i]);\n\t\tputs(best-EPS < L ? \"OK\" : \"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<cassert>\n#include<algorithm>\n\n#define MAX 12\n\nusing namespace std;\n\ntypedef unsigned int set;\n\ntypedef struct tagcombstruct{\n\tset K,N,x,overx;\n} combStruct;\n\nint g_cnt;\n\n/* gencomb1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy */\nset nextset(set x){\n\tset smallest, ripple, new_smallest, ones;\n\n\tsmallest = x & (~x+1);\n\tripple = x + smallest;\n\tnew_smallest = ripple & (~ripple+1);\n\tones = ((new_smallest / smallest) >> 1) - 1;\n\n\treturn ripple | ones;\n}\nbool subcomb(set p[], combStruct &cmst){\n\tset tj, *tq;\n\tset ts;\n\n\tcmst.x = nextset(cmst.x);\n\n\tif(cmst.x & cmst.overx) return false;\n\tfor(tj = 1, tq = p, ts = cmst.x; tj <= cmst.N; tj++){ if(ts & 1) *tq++ = tj; ts >>= 1; }\n\treturn true;\n}\ntemplate<typename T>\nvector<pair<T, int> > unique(const vector<T> &v){\n\tvector<pair<T, int> > vret;\n\tunsigned int now;\n\n\tfor(unsigned int i = 0; i < v.size(); i++) vret.push_back( make_pair(v[i],0) );\n\tnow = 0;\n\twhile( now < vret.size() ){\n\t\tint cnt = 1;\n\t\tfor(unsigned int i = now+1; i < vret.size(); ++i){\n\t\t\tif( vret[i].first != vret[i - 1].first ) break;\n\t\t\telse cnt++;\n\t\t}\n\t\tfor(unsigned int i = now; i < now + cnt; ++i) vret[i].second = cnt;\n\t\tnow += cnt;\n\t}\n\twhile( true ){\n\t\tvector<pair<T, int > >::iterator itV = unique( vret.begin(), vret.end() );\n\t\tif( itV != vret.end() ) vret.erase( itV, vret.end() );\n\t\telse break;\n\t}\n\treturn vret;\n}\nbool Solve3(pair<int, bool> *box, set num, set combn, vector<pair<int,int> > &v, int pos, long double w){\n\tif( pos == v.size() ){\n\t\tlong double ret;\n\t\tret = box[0].first + box[num - 1].first;\n\t\tfor(unsigned int i = 0; i < num - 1; ++i){\n\t\t\tret += 2 * sqrt((long double)(box[i].first * box[i+1].first));\n\t\t}\n\t\tif( ret <= w ){\n\t\t\t//cout << ret << endl;\n\t\t\treturn true;\n\t\t}\n\t}else{\n\t\tcombStruct cmst;\n\t\tset p[MAX];\n\t\tset j, *q;\n\t\tset s;\n\t\tvector<int> vEmptyPlaces;\n\n\t\tfor(unsigned int i = 0; i < num; i++) if( !box[i].second ){\n\t\t\t//cout << i << ' ';\n\t\t\tvEmptyPlaces.push_back(i);\n\t\t}\n\t\t//cout << endl;\n\t\tcmst.N = vEmptyPlaces.size();\n\t\tcmst.K = v[pos].second;\n\t\tcmst.x = ( 1 << cmst.K ) - 1L;\n\t\tcmst.overx = ~( ( 1 << cmst.N ) - 1L );\n\n\t\tfor(j = 1, q = p, s = cmst.x; j <= cmst.N; j++){ if(s & 1) *q++ = j; s >>= 1; }\n\t\tdo{\n\t\t\t// TODO\n\t\t\t/*for(int i = 0; i < cmst.K; i++){\n\t\t\t\tcout << p[i] << ' ';\n\t\t\t}\n\t\t\tcout << endl;*/\n\t\t\t//cout << '(' << cmst.K << ',' << vEmptyPlaces.size() << \")\\n\";\n\t\t\tfor(unsigned int i = 0; i < cmst.K; ++i){\n\t\t\t\tbox[ vEmptyPlaces[p[i] - 1] ] = make_pair( v[pos].first, true );\n\t\t\t}\n\t\t\t\n\t\t\tif( Solve3( box, num, num-cmst.K, v, pos+1, w ) ) return true;\n\n\t\t\tfor(unsigned int i = 0; i < cmst.K; ++i){\n\t\t\t\tbox[ vEmptyPlaces[p[i] - 1] ] = make_pair( 0, false );\n\t\t\t}\n\t\t}while( subcomb( p, cmst ) );\n\t}\n\treturn false;\n}\nint main(void){\n\twhile(true){\n\t\tint num = 0;\n\t\tlong double boxLength;\n\t\tpair<int,bool> box[MAX];\n\t\tvector<pair<int,int> > vRCakes;\n\t\tvector<int> vCakes;\n\t\t\n\t\tcin >> boxLength;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t\tcin >> tmp;\n\t\t\tvCakes.push_back( tmp );\n\t\t\tbox[num].first = 0;\n\t\t\tbox[num].second = false;\n\t\t\tnum++;\n\t\t}\n\n\t\tsort(vCakes.begin(), vCakes.end());\n\n\t\t// unique\n\t\tvRCakes = unique(vCakes);\n\n\t\tg_cnt = 0;\n\t\tif( Solve3(box,num,num,vRCakes,0,boxLength) ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t\t//cout << g_cnt << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<cmath>\nusing namespace std;\n#define rep(i, n) for ( int i = 0; i < (int)n; i++)\n#define MAX 12\n#define INFTY (1<<21)\nint W, L[MAX], n;\n\ndouble getL(int r1, int r2){\n    double d = r1 - r2;\n    return sqrt((r1+r2)*(r1+r2)-d*d);\n}\n\nvoid compute(){\n    double T[1<<MAX][MAX];\n    rep(i, 1<<n) rep(j, n) T[i][j] = INFTY;\n    rep(i, n) T[1<<i][i] = L[i]*2;\n    for ( int k = 1; k < n; k++ ){\n\trep(i, 1<<n) rep(j, n){\n\t    if ( T[i][j] == INFTY ) continue;\n\t    rep(l, n){\n\t\tif ( j == l || (1<<l) & i ) continue;\n\t\tint v = ((1<<l) | i);\n\t\tT[v][l] = min(T[v][l], T[i][j] - L[j] + L[l] + getL(L[j], L[l]));\n\t    }\n\t}\n    }\n    double minv = INFTY;\n    rep(i, n) minv = min(minv, T[(1<<n)-1][i]);\n    if ( minv > W ) cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n}\n\nmain(){\n    string line;\n    int l;\n    while( getline(cin, line) && !cin.eof() ){\n\tstringstream sin(line);\n\tn = 0;\n\tsin >> W; \n\twhile( sin >> l ) L[n++] = l;\n\tcompute();\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,1,0,-1,1,-1,-1,1};\nconst int dy[]={-1,0,1,0,1,1,-1,-1};\nconst int INF = 1<<30;\nconst int EPS = 1e-15;\n#define PB push_back\n#define mk make_pair\n#define fi first\n#define se second\n#define ll long long\n#define reps(i,j,k) for(int i = (j); i < (k); i++)\n#define rep(i,j) reps(i,0,j)\n#define MOD 1000000007\ntypedef pair<int,int> Pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ndouble memo[1<<12][12];\ndouble dist(double a,double b){\n    if(a<b)swap(a,b);\n    return sqrt(((a+b)*(a+b))-((a-b)*(a-b)));\n}\ndouble search(int bit,int dep,int prev,vi cake){\n    if(dep == cake.size()){\n        return (double)cake[prev];\n    }\n    if(memo[bit][dep]){\n        return memo[bit][dep];\n    }\n    double ret = INF;\n    rep(i,cake.size()){\n        if(!(bit>>i & 1)){\n            if(bit == 0){\n                ret = min(ret,search(bit|1<<i,dep+1,i,cake)+cake[i]);\n            }\n            else{\n                ret = min(ret,search(bit|1<<i,dep+1,i,cake)+dist(cake[prev],cake[i]));        \n            }\n        }\n    }\n    return memo[bit][dep] = ret;\n}\nint main(){\n    string str;\n    while(getline(cin,str)){\n        memset(memo,0,sizeof(memo));\n        stringstream ss(str);\n        vi cake;\n        int tmp;\n        double len;\n        bool f=false;\n        while(ss >> tmp){\n            if(!f)len = (double)tmp;\n            else cake.PB(tmp);\n            f = true;\n        }\n        double ret = search(0,0,-1,cake);\n        //printf(\"%lf \\n\",ret);\n        if(len-ret>=0.0)puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 10000000\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    vector<int> vec;\n    stringstream ss(str);\n    int wid,n=0;\n    ss >> wid;\n    while(!ss.eof()){\n      int s;\n      ss >> s;\n      vec.push_back(s);\n      n++;\n    }\n    double dp[(1<<n)][n];\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tdp[i][j] = INF;\n      }\n    }\n    for(int i=0;i<n;i++){\n      dp[(1<<n)-1-(1<<i)][i] = vec[i];\n    }\n    for(int i=(1<<n)-2;i>-1;i--){\n      for(int j=0;j<n;j++){\n\tif(!(i & (1<<j))){\n\t  for(int k=0;k<n;k++){\n\t    dp[i][j] = min(dp[i][j],dp[i | (1<<j)][k] + 2*sqrt(vec[j]*vec[k]));\n\t  }\n\t}\n      }\n    }\n    double ans = INF;\n    for(int i=0;i<n;i++){\n      ans = min(ans,dp[0][i]+vec[i]);\n    }\n    if(ans <= wid) cout << \"OK\" << endl;\n    else cout << \"NG\" << endl;\n  }\n  //cout << (1<<3) << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAX_LEN 256\n#define MAX_NUM 12\n#define MAX_SQRT 100\n\nvoid init_map(int num);\nvoid init_sqrt(void);\n\ndouble getmin(int pat,int r,int ad,int num);\ndouble getmin2(int pat,int ad,int num);\ndouble getmin3(int num);\n\nint cake[MAX_NUM]; /* P[LTCY */\ndouble min; /* ÅKð */\n\ndouble sq[MAX_SQRT+1];/* [gvZÊ */\n\ndouble map[1<<MAX_NUM][MAX_NUM];\n\nint main(){\n\tchar buf[MAX_LEN];\n\tint num; /* P[LÂ */\n\tint width; /*  Ì·³ */\n\tint offset; /* obt@àùÇÊu */\n\tint oftmp;\n\t\n\tinit_sqrt();\n\t\n\twhile(fgets(buf,MAX_LEN,stdin)!=NULL){\n\t\t/* Âæ¾ */\n\t\tsscanf(buf,\"%d%n\",&width,&oftmp);\n\t\toffset = oftmp;\n\t\t/* TCYæ¾ */\n\t\tnum = 0;\n\t\twhile(sscanf(buf+offset,\"%d%n\",&cake[num],&oftmp) > 0){\n\t\t\toffset+=oftmp;\n\t\t\tnum++;\n\t\t}\n\t\t\n\t\t/* èvZ */\n\t\tinit_map(num);\n\t\t\n\t\tmin = getmin3(num);\n\t\t//printf(\"%d %.5f\\n\",width,min);\n\t\tprintf(min<=width?\"OK\\n\":\"NG\\n\");\n\t}\n\treturn 0;\n}\n\nvoid init_sqrt(void){\n\tint i;\n\tfor(i=0;i<MAX_SQRT+1;i++){\n\t\tsq[i] = 2*sqrt(i);\n\t}\n}\n\nvoid init_map(int num){\n\tint i,j;\n\tfor(i=0;i<(1<<num);i++){\n\t\tfor(j=0;j<num;j++){\n\t\t\tmap[i][j]=0;\n\t\t}\n\t}\n\tfor(i=0;i<num;i++){\n\t\tmap[1<<i][i] = 2*cake[i];\n\t}\n}\n\ndouble getmin(int pat,int r,int ad,int num){\n\tdouble min; /* ¡ñßéÅ¬lißèlj */\n\tdouble premin; /* patÆrÅÌÅ¬l */\n\tdouble premintmp;\n\tint i,bit;\n\tint prepat;/* pat©çrð²¢½p^[ */\n\t\n\tpremin = map[pat][r];\n\tif(premin==0){\n\t\tpremin = 99999;\n\t\tprepat = pat - (1<<r);\n\t\tfor(i=0;i<num;i++){\n\t\t\tbit = 1<<i;\n\t\t\tif((bit&prepat)!=0){\n\t\t\t\tpremintmp = getmin(prepat,i,r,num);\n\t\t\t\tif(premintmp<premin){\n\t\t\t\t\tpremin=premintmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmap[pat][r] = premin;\n\t}\n\tpat += (1<<ad);\n\tmin = premin - cake[r] + sq[cake[r]*cake[ad]] + cake[ad];\n\tmap[pat][ad] = min;\n\treturn min;\n}\n\ndouble getmin2(int pat,int ad,int num){\n\tint i,bit;\n\tdouble min,ret;\n\tmin = 99999;\n\tfor(i=0;i<num;i++){\n\t\tbit = 1<<i;\n\t\tif((bit&pat)!=0){\n\t\t\tret = getmin(pat,i,ad,num);\n\t\t\tif(ret<min)min=ret;\n\t\t}\n\t}\n\treturn min;\n}\n\ndouble getmin3(int num){\n\tint i,bit,pat;\n\tdouble min,ret;\n\tmin = 99999;\n\tpat = (1<<num)-1;\n\tfor(i=0;i<num;i++){\n\t\tbit = 1<<i;\n\t\tret = getmin2(pat-bit,i,num);\n\t\tif(ret<min)min=ret;\n\t}\n\treturn min;\n}"
  },
  {
    "language": "C++",
    "code": "/*\n  bit DP\n    refer to http://d.hatena.ne.jp/iakasT/20091030/1256898765\n*/\n\n#include<cmath>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint r[12],n;\ndouble memo[1<<12][12];\n\ndouble solve(int stat,int last)\n{\n\tif(memo[stat][last]>1e-6)\treturn memo[stat][last];\n\n\tif(stat==0)\treturn memo[stat][last]=r[last];\n\n\tdouble wmin=10000;\n\tfor(int i=0;i<n;i++){\n\t\tif((stat&(1<<i))==0)\tcontinue;\n\t\tstat&=~(1<<i);\n\t\twmin=min(wmin,2*sqrt(r[last]*r[i])+solve(stat,i));\n\t\tstat|=(1<<i);\n\t}\n\treturn memo[stat][last]=wmin;\n}\n\nint main()\n{\n\tint box;\n\n\twhile(~scanf(\"%d \",&box)){\n\t\tfor(n=1;;n++){\n\t\t\tscanf(\"%d\",r+n-1);\n\t\t\tif(getchar()=='\\n')\tbreak;\n\t\t}\n\n\t\tfor(int i=0;i<n;i++)\n\t\t\tfor(int j=0;j<(1<<n);j++)\n\t\t\t\tmemo[j][i]=0;\n\n\t\tdouble ans=10000;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tint stat=((1<<n)-1)&~(1<<i);\n\t\t\tans=min(ans,r[i]+solve(stat,i));\n\t\t}\n\t\tputs(ans<=box?\"OK\":\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <sstream>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\ndouble dist(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nint main()\n{\n\tint box_width;\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tdeque<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsort(cakes.begin(), cakes.end());\n\t\t// for (int i = 0; i < cakes.size(); ++i) {\n\t\t\t// cout << cakes[i] << endl;\n\t\t// }\n\n\t\tbool ok = false;\n\t\tdeque<int> save = cakes;\n\n\t\tdouble length = cakes.front() * 2;\n\t\tint prev = cakes.front();\n\t\tcakes.pop_front();\n\t\tbool front = false;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += dist(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tcakes = save;\n\t\tlength = cakes.back() * 2;\n\t\tprev = cakes.back();\n\t\tcakes.pop_back();\n\t\tfront = true;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += dist(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tif (ok) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n\ndouble dp[1<<12][12];\n\nint main(){\n\tstring s;\n\tint size;\n\tint r[12];\n\tint n;\n\twhile(getline(cin,s)){\n\t\tstringstream ss(s);\n\t\tss>>size;\n\t\tn=0;\n\t\twhile(ss>>r[n])n++;\n\t\tfor(int i=0;i<(1<<n);i++)for(int j=0;j<n;j++)dp[i][j]=1e10;\n\t\tfor(int j=0;j<n;j++)dp[1<<j][j]=r[j];\n\t\tfor(int i=0;i<(1<<n);i++){\n\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\tif(!(i>>j&1))continue;\n\t\t\t\tfor(int k=0;k<n;k++){\n\t\t\t\t\tif(i>>k&1)continue;\n\t\t\t\t\tdp[i|1<<k][k]=min(dp[i|1<<k][k],dp[i][j]+2*sqrt(r[j]*r[k]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool ok=false;\n\t\tfor(int j=0;j<n;j++){\n\t\t\tif(dp[(1<<n)-1][j]+r[j]<=size)ok=true;\n\t\t}\n\t\tcout<<(ok?\"OK\":\"NA\")<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nint length;\nvector<int> rn;\ndouble dp[1 << 12 + 1][12];\n\nconst int INF = 1000000;\n\n// nÌrbgª§ÁÄ¢éª»Ý ÉüÁÄ¢é~\n// nÌóÔ©ç½ÇèÂ¯éÅ¬Ì·³ðßé\nvoid solve(){\n\n  for(int i = 0; i < 1 << rn.size(); i++){\n    fill(dp[i],dp[i]+12,INF);\n  }\n\n  for(int i = 0; i < rn.size(); i++){\n    dp[1<<i][i] = 2*rn[i];\n  }\n\n  for(int s = 1; s < 1 << rn.size(); s++){\n    for(int j = 0; j < rn.size(); j++){\n      if((s >> j & 1) == 0){\n\tcontinue;\n      }\n      for(int i = 0; i < rn.size(); i++){\n\tif((s >> i) & 1 == 0){\n\t  dp[s|1<<i][i] = min(dp[s|1<<i][i]\n\t\t\t      ,dp[s][j] + 2*sqrt(rn[j]+rn[i])-rn[j]+rn[i]);\n\t}\n      }\n    }\n  }\n  double minNum = INF;\n  for(int i = 0; i < rn.size(); i++){\n    minNum = min(minNum,dp[(1<<rn.size())-1][i]);\n  }\n  if(minNum < (double)length){\n    cout << \"OK\" << endl;\n  }\n  else\n    cout << \"NA\" << endl;\n}\n\nint main(){\n  int n;\n\n  string str;\n  while(1){\n    //    fill(dp,dp+1<<12,-1);\n    rn.clear();\n    getline(cin,str);\n    if(cin.eof())\n      break;\n    bool flag = true;\n    string s;\n    for(int i = 0; i < str.size(); i++){\n      if(str[i] == ' '){\n\tif(flag){\n\t  length = atoi(s.c_str());\n\t  flag = false;\n\t}\n\telse{\n\t  rn.push_back(atoi(s.c_str()));\n\t}\n\ts = \"\";\n      }\n      else if(i == str.size()-1){\n\ts += str[i];\n\trn.push_back(atoi(s.c_str()));\n      }\n      else\n\ts += str[i];\n    }\n\n    solve();\n    // cout << length << \" \" << flush;\n    // for(int i = 0; i < rn.size(); i++){\n    //   cout << rn[i] << \" \" << flush;\n    // }\n    // cout << endl;\n  }\n  \n  return 0;\n}\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0006\u0000\u0000\u0000PA\u001aA\b\u001d=\u001d\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' '; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[14];\n\n\tfor(int i = 0; i < 14; i++){\n\t\tdp[i] = new double*[13];\n\t\tfor(int k = 0; k < 13; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = 4000.0;\n\n\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\tint next_state;\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tnext_state = pow(2,i);\n\n\t\tdp[0][i][next_state] = info[i].r;\n\t}\n\n\tfor(int i = 1; i <= info_index-1; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\t//Do nothing\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tif(i != index-1){\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]);\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]+info[a].r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tminimum = min(minimum,dp[info_index-1][i][limit-1]);\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <map>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<30;\nconst int EPS = 1e-8;\n\ntypedef pair<int, int> pii;\n\nmap<pii, double> mp;\n\ndouble calc(int r1, int r2) {\n  if (mp[pii(r1,r2)]) return mp[pii(r1,r2)];\n  return mp[pii(r1,r2)] = sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main() {\n  string s;\n  while(getline(cin, s)) {\n    stringstream ss(s);\n    double x;\n    ss >> x;\n    int r;\n    vector<int> v;\n    while(ss >> r) {\n      v.push_back(r);\n    }\n    sort(ALL(v));\n    int n = v.size();\n    if (n == 0) {\n      cout << \"OK\" << endl;\n      continue;\n    }\n    deque<int> dq;\n    REP(i,n/2) {\n      if (i%2 == 0) {\n        dq.push_front(v[i]);\n        dq.push_back(v[n-i-1]);\n      } else {\n        dq.push_front(v[n-i-1]);\n        dq.push_back(v[i]);\n      }\n    }\n    if (n%2) {\n      if (dq[n-2] + calc(dq[0],v[n/2]) < dq[0] + calc(dq[n-2], v[n/2]))\n        dq.push_front(v[n/2]);\n      else\n        dq.push_back(v[n/2]);\n    }\n    FOR(it, dq) {\n      cout << *it << \" \";\n    }\n    cout << endl;\n\n    double xx = dq[0] + dq[n-1];\n    REP(i, n - 1) {\n      xx += calc(dq[i], dq[i+1]);\n    }\n    if (xx <= x)\n      cout << \"OK\";\n    else\n      cout << \"NA\";\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<cstdlib>\n#include<iomanip>\n#include<queue>\n#include<set>\n#include <valarray>\n#include<stack>\n#include<sstream>\nusing namespace std;\n\ndouble Solution2( int a, int b )  //pythagoras\n{\n    return 2 * sqrt( (double)( a * b ) );\n}\n\nvoid Solution()\n{\n    int length;\n    \n    while(cin>>length)\n    {\n        string s;\n        \n        getline(cin, s);\n        \n        vector<int> curcles;\n        \n        stringstream ss(s);\n        \n        while(!ss.eof())\n        {\n            int r;\n            ss>>r;  //<< で書き込んだデータを >> で読み出す事も出来ますので、文字列バッファとして利用できます。\n            curcles.push_back(r);\n        }\n        \n        sort(curcles.begin(), curcles.end());\n        \n        double width = 0.f;\n        \n        int f = 0;\n        int b = curcles.size() - 1;\n        \n        int minR = 0, maxR = 0;\n        \n        int edge1 = curcles[ f++ ];\n        int edge2 = edge1;\n        \n        for( int i = 0; i < (int)curcles.size() - 1; ++i )\n        {\n            minR = curcles[f];\n            maxR = curcles[b];\n            \n            if( maxR - edge1 > edge2 - minR )\n            {\n                width += Solution2( edge1, maxR );\n                edge1 = maxR;\n                --b;\n            }\n            else\n            {\n                width += Solution2( edge2, minR );\n                edge2 = minR;\n                ++f;\n            }\n            \n            if( edge1 > edge2 )\n            {\n                swap(edge1, edge2);\n            }\n        }\n        \n        width += edge1 + edge2;\n        \n        cout<<(width <= length ? \"OK\" : \"NA\" ) << endl;\n    }\n    \n}\n\nint main()\n{\n    Solution();\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,0));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw += v[nxt]*v[nxt];\n            }\n            if(bfr != 0){\n              bw += 2.0 * sqrt(v[bn] * v[nxt]);\n            }\n            if(dp[bfr|( 1 << nxt)][nxt] != 0)\n              dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            else\n              dp[bfr|( 1 << nxt)][nxt] = bw;\n            if((bfr|(1 << nxt)) == (1 << n)-1 && abs(w - bw)<= eps){\n              f = true;\n            }\n          }\n        }\n      }\n    }\n    if(f){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<cmath>\n#include<cstdio>\n\nconst int MAX_N = 12, INF = 1 << 16;\ndouble dp[1 << MAX_N][MAX_N], rs[MAX_N];\nint n;\n\ninline double square(double d){\n\treturn d * d;\n}\n\ndouble rec(int S, int v){\n\tif(dp[S][v] >= 0){\n\t\treturn dp[S][v];\n\t}\n\n\tif(S == (1 << n) - 1){\n\t\treturn rs[v];\n\t}\n\n\tdouble res = INF;\n\tfor(int u=0;u<n;u++){\n\t\tif(!(S >> u & 1)){//未使用\n\t\t\tres = std::min(res, rec(S | (1 << u), u) + sqrt(square(rs[v]+rs[u]) - square(rs[v]-rs[u])));\n\t\t}\n\t}\n\n\treturn dp[S][v] = res;\n}\n\nint main(){\n\tdouble box_l, min_l;\n\twhile(std::cin >> box_l){\n\t\tif(std::cin.eof()){\n\t\t\treturn 0;\n\t\t}\n\n\t\tmin_l = INF;\n\t\tn = 0;\n\n\t\tstd::string str;\n\t\tstd::getline(std::cin, str);\n\n\t\tstd::stringstream ss(str);\n\t\twhile(!ss.eof()){\n\t\t\tint _i;\n\t\t\tss >> _i;\n\t\t\trs[n++] = _i;\n\t\t\tss.ignore();\n\t\t}\n\n\t\tfor(int i=0;i<n;i++){//iを始めにした最小幅をもとめる\n\t\t\tfor(int j=0;j<(1<<MAX_N);j++){\n\t\t\t\tfor(int k=0;k<MAX_N;k++){\n\t\t\t\t\tdp[j][k] = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmin_l = std::min(min_l, rec(1 << i, i) + rs[i]);\n\t\t}\n\n\t\tif(min_l <= box_l){\n\t\t\tputs(\"OK\");\n\t\t}else{\n\t\t\tputs(\"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n#define rep2(x,from,to) for(int x=(from);x<(to);++(x))\n#define rep(x,to) rep2(x,0,to)\ndouble dist[16][32] = {};\nint main() {\n\trep(i,16) {\n\t\trep2(j,i,32) {\n\t\t\tdouble res = sqrt(pow(j,2.0)-pow(i,2.0));\n\t\t\tdist[i][j] = res;\n\t\t}\n\t}\n\tint len, tmp;\n\tstring s;\n\twhile(getline(cin, s)) {\n\t\tstringstream ss(s);\t\t\n\t\tvector<int> v;\n\t\tss >> len;\n\t\twhile(ss >> tmp) v.push_back(tmp);\n\t\tsort(v.begin(),v.end());\n\t\tint i=1,j=v.size()-1;\n\t\twhile(i < j) {\n\t\t\tswap(v[i],v[j]);\n\t\t\ti+=2,j-=2;\n\t\t}\n\t\tdouble ret = 0;\n\t\trep2(i,1,v.size()) {\n\t\t\tret += dist[abs(v[i]-v[i-1])][v[i]+v[i-1]];\n\t\t}\n\t\tret += v[0] + v[v.size()-1];\n\t\tif(len < ret) cout << \"NA\" << endl;\n\t\telse cout << \"OK\" << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n#include <iomanip>\n#include <iterator>\n\nusing namespace std;\ntypedef long long ll;\nconst int MODULO = 1000000007;\nconst int INF = 100000000; //1e8\n\ntypedef long long ll;\ntypedef pair<int,int> Pii;\ntypedef pair<ll,ll> Pll;\ntypedef complex<double> Cd;\n\n#define FOR(i,n) for(int i = 0; i < (n); i++)\n#define sz(c) ((int)(c).size())\n\ntemplate<class T>\nvoid splitstr(const string &s, vector<T> &out)\n{\n    istringstream in(s);\n    out.clear();\n    copy(istream_iterator<T>(in), istream_iterator<T>(), back_inserter(out));\n}\n\ndouble C(vector<int> &a){\n\tdouble ret = a[0] + a[sz(a) - 1];\n\tFOR(i,sz(a)-1) ret += sqrt((double)a[i] * a[i+1]) * 2;\n\treturn ret;\n}\n\nint main(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tvector<int> a;\n\t\tsplitstr(s,a);\n\t\tint n = a[0];\n\t\ta.erase(a.begin());\n\t\tsort(a.begin(),a.end());\n\t\tbool ok = false;\n\t\tdo{\n\t\t\tif(C(a) <= n){\n\t\t\t\tok = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(a.begin(),a.end()));\n\n\t\tcout << (ok ? \"OK\" : \"NA\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\ndouble r[14];  // r[0]が箱の大きさ\nint n;\n\nint to_number(const string &s)\n{\n    int index = 0;\n\n    for (int i = 0; i < s.size(); i++) {\n        if ('0' <= s[i] && s[i] <= '9') {\n            int tmp = s[i] - '0';\n\n            while (i < s.size() && ('0' <= s[i + 1] && s[i + 1] <= '9')) {\n                tmp *= 10;\n                tmp += (s[++i] - '0');\n            }\n            r[index++] = tmp;\n        }\n    }\n    return index;\n}\n\nint main()\n{\n    string s;\n\n    while (getline(cin, s)) {\n        bool flag = false;\n\n        s += \" \";\n        n = to_number(s);\n\n        do {\n            double w = 0.0;\n\n            for (int i = 1; i < n; i++)\n                w +=  2.0 * sqrt((double)r[i] * r[i + 1]);\n            w += r[1] + r[n - 1];\n\n            if (w <= r[0]) {\n                flag = true;\n                break;\n            }\n        } while (next_permutation(r + 1, r + n));\n\n        if (flag)\n            cout << \"OK\\n\";\n        else\n            cout << \"NA\\n\";\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[-2]+2.0*sqrt((double)r[-2]*r[p[0]-1]);\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += (double)2*sqrt((double)r[p[i]-1]*r[p[i+1]-1]);\n\t}\n\ttw += 2.0*sqrt((double)r[-1]*r[p[n-1]-1])+r[-1];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\twhile(true){\n\t\tint w;\n\t\tint num = 0;\n\t\tint perm[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){ cin >> r[num]; num++; if( '\\n' == cin.get() ) break; }\n\n\t\tsort(r,r+num);\n\n\t\tif( solve(perm, num-2, w, r+2) ){\n\t\t\tcout << \"OK\\n\";\n\t\t}else{\n\t\t\tcout << \"NA\\n\";\n\t\t}\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0]+2.0*sqrt((double)r[0]*r[p[0]+1]);\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0*sqrt((double)r[p[i]+1]*r[p[i+1]+1]);\n\t}\n\ttw += 2.0*sqrt((double)r[1]*r[p[n-1]+1])+r[1];\n\tif( tw <= w ){\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\twhile(true){\n\t\tint w;\n\t\tint j = 0;\n\t\tdouble sum = 0;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint perm[MAX];\n\t\tint r[MAX];\n\t\tint rt[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){ cin >> r[num]; num++; if( '\\n' == cin.get() ) break; }\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++) tmp += r[i];\t\t\t\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(int i = 0; i < num; i+=2){\n\t\t\trt[i] = r[j];\n\t\t\trt[i+1] = r[num - j - 1];\n\t\t\tj++;\n\t\t}\n\t\t/*for(int i = 0; i < num; i++){\n\t\t\tcout << rt[i] << ' ';\n\t\t}cout << '\\n';*/\n\n\t\tsum += rt[0];\n\t\tfor(int i = 0; i < num-1; i++){\n\t\t\tsum += 2.0*sqrt((double)rt[i]*rt[i+1]);\n\t\t}\n\t\tsum += rt[num-1];\n\t\t\n\t\tif( sum <= w ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<bitset>\nusing namespace std;\nint r[15];\nint L;\nint N;\nvector<string> ny;\nint bita;\ndouble GetLarge(int r1,int r2){\n  return sqrt((r1+r2)*(r1+r2)-abs(r1-r2)*abs(r1-r2))-r1+r2;\n}\nbool solve(int no,double x,int zen){\n  //   printf(\"%d %lf %d\\n\",no,x,zen);\n  if(x>(double)L) return false;\n  if(no==bita){\n    return true;\n  }\n  for(int i=0;i<N;i++){\n    if(no & (1<<i) != 0) continue;\n    if(zen==-1){\n      if(solve((no | (1<<i)),(double)(r[i]*2),i)) return true;\n      continue;\n    }\n    double ad;\n    ad = GetLarge(r[zen],r[i]);\n    if(solve(no | (1<<i),x+ad,i))\n      return true;    \n  }\n  return false;\n}\nmain(){\n  char buf[256];\n  int co;\n  while(fgets(buf,sizeof(buf),stdin)!=NULL){\n    string str=buf;\n    co=0;\n    for(int i=0;i<(int)str.size();i++){\n      if(str[i]==' '){\n\tny.push_back(str.substr(co,i-co+1));\n\tco=i+1;\n      }\n    }\n    ny.push_back(str.substr(co,(int)str.size()-co));\n    sscanf(ny[0].c_str(),\"%d\",&L);\n    N=0;\n    for(int i=0;i<(int)ny.size()-1;i++){\n      N++;\n      sscanf(ny[i+1].c_str(),\"%d\",&r[i]);\n    }\n    bita = (1<<N)-1;\n    //   printf(\"%d %d\\n\",N,bita);\n    if(solve(0,0,-1))\n      printf(\"OK\\n\");\n    else\n      printf(\"NA\\n\");\n    ny.clear();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<sstream>\n#include<utility>\n#include<map>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>P;\nchar I[300],*p;\nint R[15],B,N,i,f;\ndouble l;\nint main()\n{\n\tfor(;gets(I);)\n\t{\n\t\tp=strtok(I,\" \");\n\t\tB=atoi(p);\n\t\tfor(N=0;(p=strtok(NULL,\" \"))!=NULL;)\n\t\t\tR[N++]=atoi(p);\n\t\tf=0;\n\t\tdo\n\t\t{\n\t\t\tl=0;\n\t\t\tfor(i=0;i<N-1;i++)\n\t\t\t{\n\t\t\t\tint a=pow((double)R[i]+R[i+1],2);\n\t\t\t\tint b=pow((double)abs(R[i]-R[i+1]),2);\n\n\t\t\t\tl+=sqrt((double)(a-b));\n\t\t\t}\n\t\t\tif(B*B>=pow(l+R[0]+R[N-1],2))\n\t\t\t{\n\t\t\t\tf=1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(R,R+N));\n\t\tputs(f?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n\n    if(r.size()<=5){\n        sort(r.begin(),r.end());\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.000001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\ndouble calcMin(int n, int *r)\n{\n\tstatic double dp[1 << 12][12] = {0};\n\tstatic double dist[12][12];\n\tconst double MAX = 1000000;\n\t\n\tfor(int i = 0; i < n; ++i) {\n\t\tfor(int j = 0; j < n; ++j) {\n\t\t\tdouble dx = r[i] + r[j], dy = abs(r[i] - r[j]);\n\t\t\tdist[i][j] = sqrt(dx * dx - dy * dy);\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < (1 << n); ++i)\n\t\tfor(int j = 0; j < n; ++j)\n\t\t\tdp[i][j] = MAX;\n\tfor(int i = 0; i < n; ++i)\n\t\tdp[1 << i][i] = r[i];\n\t\n\tfor(int i = 0; i < (1 << n); ++i) {\n\t\tfor(int j = 0; j < n; ++j) {\n\t\t\t\n\t\t\tif(!(i & (1 << j)))\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\tint prev = i & (~(1 << j));\n\t\t\t\n\t\t\tfor(int k = 0; k < n; ++k) {\n\t\t\t\t\n\t\t\t\tif(!(prev & (1 << k)))\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\tdp[i][j] = min(dp[i][j], dp[prev][k] + dist[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tdouble ans = MAX;\n\t\n\tfor(int i = 0; i < n; ++i)\n\t\tans = min(ans, dp[(1 << n) - 1][i] + r[i]);\n\t\t\n\treturn ans;\n}\n\nint main()\n{\n\twhile(true) {\n\t\t\n\t\tint s, n = 0;\n\t\tint r[12];\n\t\tchar c = 0;\n\t\t\n\t\tif(scanf(\"%d \", &s) == EOF)\n\t\t\tbreak;\n\t\t\t\n\t\twhile(c != '\\n')\n\t\t\tscanf(\"%d%c\", &r[n++], &c);\n\t\t\n\t\t/*printf(\"[Debug] %d :\", s);\n\t\tfor(int i = 0; i < n; ++i)\n\t\t\tprintf(\" %d\", r[i]);\n\t\tprintf(\" : %d\\n\", n);*/\n\t\t\t\n\t\tprintf(\"%s\\n\", calcMin(n, r) <= s ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<double> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip\t;\nconst double PI=acos(-1);\nconst double EPS=1e-8;\nconst int inf=1<<30;\nint l;\nvi split(string s){\n\tstringstream ss(s);//ss<<s;\n\tvi vec;\n\tfor(int i=0;!ss.eof();i++){\n\t\tint t;ss>>t;\n\t\tif(i==0)l=t;\n\t\telse vec.pb(t);\n\t}\n\treturn vec;\n}\ndouble f(double a,double b){\n\treturn sqrt(a*a-b*b);\n}\nint main(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tvi in=split(s);\n\t\tint n=in.size();\n\t\tint N=1<<n;\n\t\tvector<vector<double> >dp(N,vector<double>(n,inf));\n\t\trep(i,n)dp[1<<i][i]=in[i];\n\t\tvvi cost(n,vi(n));\n\t\trep(i,n)rep(j,n)cost[i][j]=f(in[i]+in[j],in[i]-in[j]);\n\t\trep(i,N)rep(j,n)if(i&1<<j){\n\t\t\trep(k,n)if(!(i&1<<k)){\n\t\t\t\tdp[i|1<<k][k]=min(dp[i|1<<k][k],dp[i][j]+cost[j][k]);\n\t\t\t}\n\t\t}\n\t\tdouble mi=inf;\n\t\trep(i,n)mi=min(mi,dp[N-1][i]+in[i]);\n\t\tif(mi<EPS+l)cout<<\"OK\"<<endl;\n\t\telse cout<<\"NA\"<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0]+2.0*sqrt((double)r[0]*r[p[0]+1]);\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0*sqrt((double)r[p[i]+1]*r[p[i+1]+1]);\n\t}\n\ttw += 2.0*sqrt((double)r[1]*r[p[n-1]+1])+r[1];\n\tif( tw <= w ){\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint perm[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){ cin >> r[num]; num++; if( '\\n' == cin.get() ) break; }\n\n\t\tfor(int i = 0; i < num; i++) tmp += r[i];\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\n\t\tsort(r,r+num);\n\n\t\tif( num > 2 && solve(perm, num-2, w, r) ){\n\t\t\tcout << \"OK\\n\";\n\t\t}else if( num <= 2 && w >= r[0]+2.0*sqrt((double)r[0]*r[1])+r[1] ){\n\t\t\tcout << \"OK\\n\";\n\t\t}else{\n\t\t\tcout << \"NA\\n\";\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint W, N, R[12];\n\nint abs(int x) {\n  return x < 0 ? -x : x;\n}\n\ndouble calc(vector<int> v, int cnt) {\n  int bfr;\n  double sum;\n  int s;\n  int lim = v.size() % 2;\n\n  if(cnt % 2 == 0) {\n    bfr = *v.begin();\n    s = *v.begin();\n    v.erase(v.begin());\n  } else {\n    bfr = *(--v.end());\n    s = *(--v.end());\n    v.erase(--v.end());\n  }\n  sum = 0;\n\n  while(v.size() > lim) {\n    vector<int>::iterator it;\n    if(cnt % 2 == 0) {\n      it = v.end();\n      it--;\n    } else {\n      it = v.begin();\n    }\n\n    if(bfr == *it) sum += *it * 2;\n    else     sum += sqrt((bfr+*it)*(bfr+*it) - (bfr-*it)*(bfr-*it));\n    bfr = *it;\n    v.erase(it);\n    cnt++;\n  }\n\n  if(lim == 0) return s + sum + bfr;\n  else {\n    double tmp1 = sqrt((s+v[0])*(s+v[0]) - (s-v[0])*(s-v[0]));\n    double tmp2 = sqrt((bfr+v[0])*(bfr+v[0]) - (bfr-v[0])*(bfr-v[0]));\n    return min(v[0] + tmp1 + sum + bfr, s + sum + tmp2 + bfr);\n  }\n}\n\nvoid solve() {\n  sort(R, R+N);\n  vector<int> v;\n  for(int i = 0; i < N; ++i) {\n    v.push_back(R[i]);\n  }\n  if(min(calc(v, 0), calc(v, 1)) <= W) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"NA\" << endl;\n  }\n}\n\nmain() {\n  while(1) {\n    string str;\n    getline(cin, str);\n    if(cin.eof()) break;\n    stringstream ss;\n    ss << str;\n    ss >> W;\n    for(int i = 0; ; ++i) {\n      if(ss.eof()) {\n\tN = i;\n\tbreak;\n      }\n      ss >> R[i];\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    /*while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }\n    }\n    bs.push_back(right);\n    double req = bs[0] + bs[size-1];\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }*/\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<stdlib.h>\n#include<math.h>\n#include<algorithm>\n#define S(x) ((x)*(x))\nint main()\n{\n\tint m,n,a[13],i;\n\tchar*p,*q,s[64];\n\twhile(fgets(s,64,stdin))\n\t{\n\t\tm=strtol(s,&p,10);\n\t\tfor(n=0;a[n]=strtol(p,&q,10),p!=q;++n)p=q;\n\t\tif(!n)continue;\n\t\tstd::sort(a,a+n);\n\t\tdo\n\t\t{\n\t\t\tdouble d=a[0]+a[n-1];\n\t\t\tfor(i=0;i<n;++i)d+=sqrt((double)S(a[i]+a[i+1])-S(a[i]-a[i+1]));\n\t\t\tif(m>=d){puts(\"YES\");goto E;}\n\t\t}while(std::next_permutation(a,a+n));\n\t\tputs(\"NO\");\nE:;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\ndouble rdata[12][12];\nconst double eps = 1e-10;\n\nvoid pre_calc(int n,double *r){\n  rep(i,n){\n    rep(j,n){\n      double A=r[i]+r[j],B=r[i]-r[j];\n      rdata[i][j]=sqrt(A*A-B*B);\n    }\n    rdata[i][i]=0;\n  }\n}\n\n\nbool solve(double total,double limit,int now,int n,bool *used,double *r,\n\t   int last){\n  if ( total > limit)return false;\n  if ( now == n){\n    if ( total+r[last] <limit+1e-10)return true;\n    return false;\n  }\n  \n  rep(i,n){\n    if ( used[i] ==true)continue;\n    used[i]=true;\n    if ( solve(total+rdata[last][i],limit,now+1,n,used,r,i))return true;\n    used[i]=false;\n  }\n  \n  return false;\n}\n\nmain(){\n  double in;\n  while(cin>>in ){\n    string t;getline(cin,t);stringstream sin(t);\n    int n=0;\n    double r[12];\n    while(sin>>r[n])n++;\n    bool used[12]={false};\n    sort(r,r+n);\n    pre_calc(n,r);\n\n    bool flag=false;\n    rep(i,n){\n      used[i]=true;\n      if(solve(r[i],in,1,n,used,r,i)){flag=true;break;}\n      used[i]=false;\n    }\n    \n    if (flag)puts(\"OK\");\n    else puts(\"NA\");\n    \n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, vector<Cake> &cakes, int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint p[MAX];\n\t\tvector<Cake> vCakes;\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tCake tmp;\n\t\t\tcin >> tmp.r;\n\t\t\tvCakes.push_back(tmp);\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tfor(unsigned int i = 0; i < vCakes.size(); i++){ tmp += vCakes[i].r; }\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\n\t\tsort(vCakes.begin(), vCakes.end());\n\t\t\n\t\tp[0] = vCakes[0].r;\n\t\tvCakes[0].used = true;\n\t\tif( solve2(p, 1, w, vCakes, vCakes.size(), true) ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    sort(r.begin(),r.end());\n\n    if(r.size()<=5){\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    if(r.size()>2)swap(r[1],r[r.size()-1]);\n\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%(r.size()-2)+1;\n            b=rand()%(r.size()-2)+1;\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    if(abs(evaluate(r)-mi)>EPS)puts(\"assert\");\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <list>\n#include <cctype>\n#include <string>\n#include <vector>\nusing namespace std;\n\ndouble index(char c){\n\treturn (double)((int)c - '0');\n}\n\nvector<string> split(string &s){\n\tvector<string> vs;\n\tstring::iterator i = s.begin(), j;\n\twhile(i != s.end()){\n\t\tj = i;\n\t\twhile(j != s.end() && !isspace(*j)) j++;\n\t\tstring t(i, j);\n\t\tvs.push_back(t);\n\t\ti = j;\n\t\twhile(i != s.end() && isspace(*i)) i++;\n\t}\n\treturn vs;\n}\n\ndouble get_num(const string &s){\n\tint n = 1;\n\tdouble num = 0.0;\n\tfor(string::const_reverse_iterator cri = s.rbegin();\n\t\tcri != s.rend(); cri++)\n\t{\n\t\tnum += n * index(*cri);\n\t\tn = n * 10;\n\t}\n\treturn num;\n}\n\ndouble gap(double x, double y){\n\treturn (y - x) * (y - x);\n}\n\nvoid swap(vector<double> &vd, int i , int j){\n\tdouble t = vd[i];\n\tvd[i] = vd[j];\n\tvd[j] = t;\n}\n\ndouble sqrt(double x){\n\tdouble e = 0.00000001;\n\tdouble a = x, b = 0;\n\twhile(a - b > e){\n\t\tdouble c = (a + b) / 2;\n\t\tif(c * c < x) b = c;\n\t\telse a = c;\n\t}\n\treturn b;\n}\n\nint main(){\n\tint length;\n\tstring s;\n\twhile(getline(cin, s)){\n\t\tvector<string> vs;\n\t\tlist<double> cakes;\n\t\tvs = split(s);\n\t\tvector<double> vd;\n\t\tdouble length = get_num(vs[0]);\n\t\tfor(int i = 1; i < vs.size(); i++){\n\t\t\tvd.push_back(get_num(vs[i]));\n\t\t}\n\t\tcakes.push_back(vd[vd.size() - 1]);\n\t\tvd.pop_back();\n\t\tint n = vd.size();\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tdouble mcake = 0;\n\t\t\tint p = 1;\n\t\t\tint jmax = 0;\n\t\t\tfor(int j = 0; j < vd.size(); j++){\n\t\t\t\tif(gap(*(cakes.begin()), vd[j]) > mcake){\n\t\t\t\t\tmcake = gap(*(cakes.begin()), vd[j]);\n\t\t\t\t\tjmax = j;\n\t\t\t\t\tp = 1;\n\t\t\t\t}\n\t\t\t\tif(gap(*(cakes.rbegin()), vd[j]) > mcake){\n\t\t\t\t\tmcake = gap(*(cakes.rbegin()), vd[j]);\n\t\t\t\t\tjmax = j;\n\t\t\t\t\tp = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(p){\n\t\t\t\tcakes.push_front(vd[jmax]);\n\t\t\t\tswap(vd, jmax, vd.size()-1);\n\t\t\t\tvd.pop_back();\n\t\t\t}else{\n\t\t\t\tcakes.push_back(vd[jmax]);\n\t\t\t\tswap(vd, jmax, vd.size() - 1);\n\t\t\t\tvd.pop_back();\n\t\t\t}\n\t\t}\n\t\tfor(list<double>::iterator iter = cakes.begin(); \n\t\t\titer != cakes.end(); iter++)\n\t\t\tvd.push_back(*iter);\n\t\tdouble size = 0;\n\t\tfor(int i = 0; i+1 < vd.size(); i++){\n\t\t\tcout << size << endl;\n\t\t\tsize += sqrt((vd[i] + vd[i+1]) * (vd[i] + vd[i+1]) - gap(vd[i],vd[i+1]));\n\t\t}\n\t\tsize += vd[0]+vd[vd.size()-1];\n\t\tif(size <= length) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cmath>\n#include <sstream>\nusing namespace std;\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF (1<<10)\ndouble solve(double &x,int &a,int &b){\n\treturn x + sqrt(4*a*b);\n}\n\n#define shift(n) (1<<n)\n\nstring solve(int &capacity,vector<int> &item){\n\tint n = item.size();\n\tdouble dp[1<<n][n];\n\t\n\trep(i,1<<n)rep(j,n)dp[i][j] = INF;\n\t\n\trep(i,n)dp[1<<i][i] = item[i];\n\t\n\trep(bit,1<<n){\n\t\trep(rmost,n){\n\t\t\tif( (shift(rmost) & bit) == 0 )continue;\n\t\t\trep(cur,n){\n\t\t\t\tif(shift(cur) & bit)continue;\n\t\t\t\tint nextBit = bit | shift(cur);\n\t\t\t\tdp[nextBit][cur] = min(dp[nextBit][cur],solve(dp[bit][rmost],item[rmost],item[cur]) );\n\t\t\t}\n\t\t}\n\t}\n\trep(i,n){\n\t\tif(dp[(1<<n)-1][i] + item[i]<= capacity)return \"OK\";\n\t}\n\treturn \"NA\";\n}\nint main(){\n\tstring line;\n\tint tmp;\n\twhile(getline(cin,line)){\n\t\twhile(~line.find(\",\"))line[line.find(\",\")] = ' ';\n\t\tstringstream input(line);\n\t\tint capacity;\n\t\tvector<int> item;\n\t\t\n\t\tinput >> capacity;\n\t\twhile(input >> tmp)item.push_back(tmp);\n\t\tcout << solve(capacity,item) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    for( int i = 0; i < N / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      else cakes.insert(cakes.begin(), e); //cakes.push_back(e); c\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15];\n    double cake_length;\n    int last_cake;\n};\n\nsome_cake init_some_cake(){\n    some_cake init;\n    for(int i=0; i<15; i++)init.cake_flag[i]=0;\n    init.cake_length=0.0;\n    init.last_cake=0;\n    \n    return init;\n}\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            //cout<<cake[cake_count]<<endl;\n            cake_count++;\n        }\n        \n        \n        \n        /*\n        queue<some_cake> qu;\n        some_cake temp = init_some_cake();\n        qu.push(temp);\n        bool ans_flag=true;\n        while(!qu.empty()){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        if(x<0)x=x*-1;\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n         */\n        bool na_flag=true;\n        do{\n            double l=0.0;\n            l+=cake[0]+cake[cake_count-1];\n            for(int i=1; i<cake_count; i++){\n                double x = (cake[i-1]+cake[i])*(cake[i-1]+cake[i])-(cake[i-1]-cake[i])*(cake[i-1]-cake[i]);\n                l+=sqrt(x);\n            }\n            \n            if(l<=box){\n                na_flag=false;\n                cout<<\"OK\"<<endl;\n                break;\n            }\n            \n        }while(next_permutation(cake, cake+cake_count));\n        \n        if(na_flag)cout<<\"NA\"<<endl;\n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n#include <complex>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n \n\nstatic const int tx[] = {0,1,0,-1};\nstatic const int ty[] = {-1,0,1,0};\n \nstatic const double EPS = 1e-10;\n\ndouble dp[1<<12][12];\n\ndouble compute_distance(int prev,int next,\n                        const vector<int>& boxes){\n  double h = abs(boxes[prev] - boxes[next]);\n  double r = abs(boxes[prev] + boxes[next]);\n  double w = sqrt(r * r - h * h);\n  return w - (double)boxes[prev] + (double)boxes[next];\n}\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    stringstream ss;\n    ss << str;\n    int box_width;\n    ss >> box_width;\n\n    int box;\n    vector<int> boxes;\n    while(ss >> box){\n      boxes.push_back(box);\n    }\n\n    for(int S=0;S<=(1<<12)-1;S++){\n      for(int i=0;i<12;i++){\n        dp[S][i] = (double)box_width + 10.0;\n      }\n    }\n\n    for(int i=0;i<boxes.size();i++){\n      dp[(1<<i)][i] = 2 * boxes[i];\n    }\n\n    for(int S = 0; S <= (1<<boxes.size()) - 1;S++){\n      for(int prev = 0; prev < boxes.size(); prev++){\n        if(!(S & (1<<prev))) continue;\n        for(int next = 0; next<boxes.size();next++){\n          if(S & (1<<next)) continue;\n          dp[S | (1<<next)][next] = min(dp[S | (1<<next)][next],\n                                        dp[S][prev] + compute_distance(prev,next,boxes));\n        }\n      }\n    }\n\n    //OK,NA\n\n    bool isok = false;\n    for(int i = 0; i < boxes.size(); i++){\n      if(dp[(1<<boxes.size())-1][i] <= (double)box_width + EPS){\n        isok = true;\n      }\n    }\n    printf(\"%s\\n\",isok ? \"OK\" : \"NA\");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<ll, ll> P;\n\n#define EACH(i,a) for (auto& i : a)\n#define FOR(i,a,b) for (ll i=(a);i<(b);i++)\n#define RFOR(i,a,b) for (ll i=(b)-1;i>=(a);i--)\n#define REP(i,n) for (ll i=0;i<(n);i++)\n#define RREP(i,n) for (ll i=(n)-1;i>=0;i--)\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define pb push_back\n#define ALL(a) (a).begin(),(a).end()\n\nconst ll linf = 1e18;\nconst int inf = 1e9;\nconst double eps = 1e-12;\nconst double pi = acos(-1);\n\ntemplate<typename T>\nistream& operator>>(istream& is, vector<T>& vec) {\n\tEACH(x,vec) is >> x;\n\treturn is;\n}\n/*\ntemplate<class... T>\nostream& operator<<(ostream& os, tuple<T...>& t) {\n\tfor (size_t i = 0; i < tuple_size< tuple<T...> >::value; ++i) {\n\t\tif (i) os << \" \";\n\t\tos << get<0>(t);\n\t}\n\treturn os;\n}\n*/\ntemplate<typename T>\nostream& operator<<(ostream& os, vector<T>& vec) {\n\tREP(i,vec.size()) {\n\t\tif (i) os << \" \";\n\t\tos << vec[i];\n\t}\n\treturn os;\n}\ntemplate<typename T>\nostream& operator<<(ostream& os, vector< vector<T> >& vec) {\n\tREP(i,vec.size()) {\n\t\tif (i) os << endl;\n\t\tos << vec[i];\n\t}\n\treturn os;\n}\n\nint main() {\n\tstd::ios::sync_with_stdio(false);\n\tstd::cin.tie(0);\n\tll L;\n\twhile (cin >> L) {\n\t\tvector<int> r;\n\t\t{\n\t\t\tstring str; getline(cin, str);\n\t\t\tstringstream ss; ss << str;\n\t\t\tint val;\n\t\t\twhile ( ss >> val ) {\n\t\t\t\tr.pb(val);\n\t\t\t}\n\t\t}\n\t\tint N = r.size();\n\t\tvector< vector< vector<ld> > > dp;\n\t\tvector< vector<ld> > dp0(N+1, vector<ld>((1 << N), linf)); dp0[0][0] = 0;\n\t\tREP(t, N) {\n\t\t\tdp = vector< vector< vector<ld> > >(N+1, vector< vector<ld> >(N+1, vector<ld>((1 << N), linf)));\n\t\t\tdp[0] = dp0;\n\t\t\tREP(i, N) {\n\t\t\t\tREP(j, N+1) {\n\t\t\t\t\tREP(k, (1 << N)) {\n\t\t\t\t\t\tif (dp[i][j][k] >= linf-eps) continue;\n\t\t\t\t\t\tdp[i+1][j][k] = min(dp[i+1][j][k], dp[i][j][k]);\n\t\t\t\t\t\tif ((k & (1 << i)) == 0) {\n\t\t\t\t\t\t\tint nk = k | (1 << i);\n\t\t\t\t\t\t\tint nj = i+1;\n\t\t\t\t\t\t\tld nv = linf;\n\t\t\t\t\t\t\tif (j == 0) {\n//\t\t\t\t\t\t\t\tif (dp[i][j][k] > eps) cout << i << \" \" << j << \" \" << k << \" \" << dp[i][j][k] << endl;\n\t\t\t\t\t\t\t\tassert(dp[i][j][k] < eps);\n\t\t\t\t\t\t\t\tnv = min(nv, (ld)2*r[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tint prev = j-1;\n\t\t\t\t\t\t\t\tint r1 = r[prev], r2 = r[i];\n\t\t\t\t\t\t\t\tld dx = sqrt((r1+r2)*(r1+r2) - abs(r1-r2)*abs(r1-r2));\n\t\t\t\t\t\t\t\tnv = min(nv, dp[i][j][k]-r[prev]+dx+r[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdp[i+1][nj][nk] = min(dp[i+1][nj][nk], nv);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp0 = dp[N];\n\t\t}\n\t\tld ans = linf;\n\t\tREP(i, N+1) ans = min(ans, dp0[i][(1<<N)-1]);\n//\t\tcout << fixed << setprecision(10) << ans << endl;\n\t\tif (ans <= L+eps) {\n\t\t\tcout << \"OK\" << endl;\n\t\t}\n\t\telse {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n//#include <utility>\n#include <set>\n#include <iostream>\n//#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n//#include <functional>\n#include <sstream>\n//#include <deque>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstdio>\n//#include <cctype>\n#include <cstring>\n//#include <ctime>\n#include <iterator>\n#include <bitset>\n//#include <numeric>\n//#include <list>\n//#include <iomanip>\n\n#if __cplusplus >= 201103L\n#include <array>\n#include <tuple>\n#include <initializer_list>\n#include <unordered_set>\n#include <unordered_map>\n#include <forward_list>\n\n#define cauto const auto&\n#else\n\n#endif\n\nusing namespace std;\n\n\nnamespace{\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\n\ntypedef vector<int> vint;\ntypedef vector<vector<int> > vvint;\ntypedef vector<long long> vll, vLL;\ntypedef vector<vector<long long> > vvll, vvLL;\n\n#define VV(T) vector<vector< T > >\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v, int a, int b, const T &t = T()){\n    v.assign(a, vector<T>(b, t));\n}\n\ntemplate <class F, class T>\nvoid convert(const F &f, T &t){\n    stringstream ss;\n    ss << f;\n    ss >> t;\n}\n\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define F first\n#define S second\n#define mkp make_pair\n#define RALL(v) (v).rbegin(),(v).rend()\n\n\n#define MOD 1000000007LL\n#define EPS 1e-8\nstatic const int INF=1<<24;\n\nvoid mainmain(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tstringstream ss;\n\t\tss<<s;\n\t\tint n;\n\t\tss>>n;\n\t\tvector<double> v;\n\t\tint t;\n\t\twhile(ss>>t){\n\t\t\tv.PB(t);\n\t\t}\n\t\tsort(ALL(v));\n\t\tdouble ans=INF;\n\t\tdo{\n\t\t\tdouble tmp=0;\n\t\t\trep(i,v.size()-1){\n\t\t\t\ttmp+=sqrt(4*v[i]*v[i+1]);\n\t\t\t}\n\t\t\ttmp+=v[0]+v.back();\n\t\t\t// rep(i,v.size()){\n\t\t\t\t// cout<<v[i]<<\" \";\n\t\t\t// }\n\t\t\t// cout<<endl;\n\t\t\t// cout<<tmp<<endl;\n\t\t\tans=min(ans,tmp);\n\t\t}while(next_permutation(ALL(v)));\n\t\tif(n>=ans) cout<<\"OK\\n\";\n\t\telse cout<<\"NA\\n\";\n\t}\n}\n\n\n\n}\nmain() try{\n    mainmain();\n}\ncatch(...){\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand()%N;\n\t\tint b = rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}else{\n\t\t\t\tswap(r[b],r[a]);\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <memory>\n#include <string>\n\n#include <algorithm>\n#include <complex>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n#include <bitset>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\n#define strtok_r strtok_s\n#endif\n\n#define ITER(c)             __typeof__((c).begin())\n#define FOREACH(it, c)      for (ITER(c) it=(c).begin(); it != (c).end(); ++it)\n#define RITER(c)            __typeof__((c).rbegin())\n#define RFOREACH(it, c)     for (RITER(c) it=(c).rbegin(); it != (c).rend(); ++it)\n#define REP(i, n)           REPEAT(i, 0, n)\n#define RREP(i, n)          RREPEAT(i, 0, n)\n#define REPEAT(i, k, n)     for(int i = (k); i < (k+n); ++i)\n#define RREPEAT(i, k, n)    for(int i = (k)+(n)-1; i >= (k); --i)\n#define FROMTO(i,f,t)       for(int i = f; i < t; i++)\n#define ALL(c)              (c).begin(), (c).end()\n#define LLPOW(p1,p2)        ((ll)pow((double)(p1), (int)p2))\n#define ESIZEOF(A)          (sizeof(A)/sizeof((A)[0]))\n#define CIN_NO_SYNC         do { cin.tie(0); ios_base::sync_with_stdio(false); } while(0)\n#define GETSTR(p)           fgets((p), sizeof(p), stdin)\n#define CHOMP(p)            do{ char *_q = (p) + strlen(p)-1; if(*_q == '\\n' || *_q == '\\r') *_q = 0; } while(0)\n#define FILL(m,v)           memset(m, v, sizeof(m))\n#define mp                  make_pair\n#define pb                  push_back\ntemplate<class _T> _T MAX(_T p1,_T p2){return (p1>p2)?p1:p2;} \ntemplate<class _T> _T MIN(_T p1,_T p2){return (p1<p2)?p1:p2;} \ntemplate <class _Tv> inline string join(_Tv &v,string sep=\" \"){\n    ostringstream s;FOREACH(it,v){if(it!=v.begin())s<<sep;s<<*it;};return s.str();\n}\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define X real()\n#define Y imag()\ntypedef double D;\ntypedef complex<D> P;\n#define EPS (1e-9)\n\n#ifdef _DEBUG\ntemplate<class _Tv> inline void _prfe(const char *_n,_Tv _c,bool _p=false){\n    ITER(_c) _it=_c.begin();\n    if(_p){cout<<_n<<\" = [\"<<endl;for(;_it!=_c.end();++_it)cout<<\"    \"<<*_it<<endl;cout<<\"]\"<<endl; }\n    else{cout<<_n<<\" = [ \"<<*_it++;for(;_it!=_c.end();++_it)cout<<\", \"<<*_it;cout<<\" ]\"<<endl; }\n}\n#define pf printf\n#define pr(n) do{cout<<#n\" = \"<<(n)<<endl;}while(0)\n#define prfe(n) _prfe(#n, n)\n#define prfep(n) _prfe(#n, n, true)\n#define dbgchk(n) do{if(n)throw;}while(0)\n#else\n#define pf(...) /* */\n#define pr(...) /* */\n#define prfe(...) /* */\n#define prfep(...) /* */\n#define dbgchk(...) /* */\n#endif\n\nbool check(int b, vector<int> &v){\n    int n = v.size();\n    double l = 0;\n    REP(i,n){\n        if(i == 0){ l += v[i]*2; continue; }\n        double r2 = (v[i-1]+v[i])*(v[i-1]+v[i]);\n        double y2 = (v[i-1]-v[i])*(v[i-1]-v[i]);\n        // x^2 + y^2 = (r1+r2)^2\n        double x = sqrt(r2-y2);\n        l = l - v[i-1] + x + v[i];\n    }\n    if(l <= (double)b){\n        pr(l);\n        return true;\n    }\n    return false;\n}\nvoid solve(int b, vector<int> &v){\n    int n = v.size();\n    bool f = false;\n\n    sort(ALL(v));\n    REP(i,n-1) FROMTO(j,i+1,n)\n        if(abs(v[i]-v[i+1]) < abs(v[i]-v[j])) swap(v[i+1],v[j]);\n    prfe(v);\n    if(check(b, v)){\n        cout << \"OK\" << endl;\n        return;\n    }\n\n    sort(ALL(v),greater<int>());\n    REP(i,n-1) FROMTO(j,i+1,n)\n        if(abs(v[i]-v[i+1]) < abs(v[i]-v[j])) swap(v[i+1],v[j]);\n    prfe(v);\n    if(check(b, v)){\n        cout << \"OK\" << endl;\n        return;\n    }\n\n    cout << \"NA\" << endl;\n}\n\nint main(){\n    string s;\n    while(getline(cin,s)){\n        istringstream ss(s);\n        int b, n;\n        vector<int> v;\n        ss >> b;\n        while(ss >> n) v.pb(n);\n        solve(b, v);\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <sstream>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\ndouble getPackWidth(vector<int> &v) {\n    int n = v.size();\n    double ret = v[0] + v[n-1];\n    for (int i=0; i+1<n; ++i) {\n        ret += sqrt(pow(v[i] + v[i+1], 2) - pow(v[i] - v[i+1], 2));\n    }\n    return ret;\n}\n\nint main() {\n    string s;\n    while (getline(cin,s)) {\n        stringstream ss(s);\n        int w;\n        ss >> w;\n        int r;\n        vector<int> cake;\n        while (ss >> r) cake.push_back(r);\n\n        sort(cake.begin(), cake.end());\n\n        vector<int> v1, v2;\n        int n = cake.size();\n        for (int i=0; i<=n-1-i; ++i) {\n            if (i == n-1-i) {\n                v1.push_back(cake[i]);\n                v2.push_back(cake[i]);\n            } else {\n                v1.push_back(cake[i]);\n                v1.push_back(cake[n-1-i]);\n                v2.push_back(cake[n-1-i]);\n                v2.push_back(cake[i]);\n            }\n        }\n\n        bool ok = getPackWidth(v1) <= w || getPackWidth(v2) <= w;\n        cout << (ok ? \"OK\" : \"NA\") << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cmath>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint main()\n{\n\tint box;\n\twhile(~scanf(\"%d \",&box)){\n\t\tint r[12],n;\n\t\tfor(n=1;;n++){\n\t\t\tscanf(\"%d\",r+n-1);\n\t\t\tif(getchar()=='\\n')\tbreak;\n\t\t}\n\n\t\tsort(r,r+n);\n\n\t\tdouble w,wmin=2*box;\n\t\tdo{\n\t\t\tw=r[0]+r[n-1];\n\t\t\tfor(int i=0;i<n-1;i++)\tw+=2*sqrt(r[i]*r[i+1]);\n\t\t\twmin=min(wmin,w);\n\t\t}while(next_permutation(r,r+n));\n\n\t\tputs(wmin<=box?\"OK\":\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <complex>\n#include <algorithm>\n#include <sstream>\n\nusing namespace std;\n\n#define loop(i,a,b) for(int i=(a); i<int(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define all(c) (c).begin(), (c).end()\n\ntypedef vector<int> vi;\n\ndouble width(vi const& rs){\n    double res = rs[0]+rs.back();\n    loop(i,1,rs.size()){\n        double dh=abs(rs[i-1]-rs[i]);\n        double a=rs[i-1]+rs[i];\n        double dy=sqrt(a*a-dh*dh);\n        res+=dy;\n    }\n    return res;\n}\n\nint const fact[]={\n    1,\n    1,\n    2,\n    6,\n    24,\n    120,\n    720,\n    5040,\n    40320,\n    362880,\n    3628800,\n    39916800,\n    479001600\n};\n\nbool solve(vi& rs, int w){\n    sort(all(rs));\n    random_shuffle(all(rs));\n    rep(i,fact[rs.size()]){\n        if(width(rs) <= w) return true;\n        next_permutation(all(rs));\n    }\n    return false;\n}\n\nint main(){\n    string s;\n    while(getline(cin,s)){\n        stringstream ss(s);\n        int w;ss>>w;\n        vi r;\n        int t;\n        while(ss>>t){\n            r.push_back(t);\n        }\n        string const ans[]={\"OK\",\"NA\"};\n        cout << ans[1-solve(r,w)] << endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <bitset>\n#include <algorithm>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <string>\n#include <cstring>\n#include <complex>\n\n#define FOR(i,b,n) for(int i=b;i<n;i++)\n#define RFOR(i,b,n) for(int i=n-1;i>=b;i--)\n#define CLR(mat) memset(mat, 0, sizeof(mat))\n#define NCLR(mat) memset(mat, -1, sizeof(mat))\n#define FILL(mat, x) memset(mat, x, sizeof(mat))\n#define BIT(n, b) ((n>>b) & 1)\n\n#define INF 1e+20\n\nusing namespace std;\n\ntypedef pair<int,int> paii;\ntypedef long long ll;\n\nint n = 0;\ndouble boxsz, rc[16], dp[1<<16][16];\n\ndouble rad2(double r1, double r2){\n\treturn sqrt(pow(r1+r2,2) - pow(r1-r2,2));\n}\n\ndouble rec(int stat, int v){\n\t\n\tif( dp[stat][v] != -1 )\n\t\treturn dp[stat][v];\n\t\n\tif( stat == (1<<n)-1 )\n\t\treturn dp[stat][v] = rc[v];\n\t\t\n\tdouble res = INF;\n\t\n\tfor(int i = 0; i < n; ++i){\n\t\tif( !BIT(stat, i) ){\n\t\t\tif(stat==0)\n\t\t\t\tres = min(res, rec(stat|(1<<i), i) + rc[i]);\n\t\t\telse \n\t\t\t\tres = min(res, rec(stat|(1<<i), i) + rad2(rc[v], rc[i])); \n\t\t}\n\t}\n\t\n\treturn dp[stat][v] = res;\n}\n\nstring solve(){\n\n\tfor(int i = 0; i < (1<<16); ++i){\n\t\tfor(int j = 0; j < n; ++j){\n\t\t\tdp[i][j] = -1;\n\t\t}\n\t}\n\t\n\treturn (rec(0, 0)<=boxsz?\"OK\":\"NA\");\n}\n\nint main(){\n\n\tstring str;\n\t\n\twhile(getline(cin, str)){\n\t\t\n\t\tstringstream ss(str);\n\t\tss >> boxsz;\n\t\t\n\t\tn = 0;\n\t\twhile(ss >> rc[n]){\n\t\t\tn++;\n\t\t}\n\t\t\n\t\tcout << solve() << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> pii;\n#define rep(i,n) for(ll i=0;i<(ll)(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n#define INF (1e9+1)\n//#define INF (1LL<<59)\n\nvector<string> split(string s,char ch){\n\tvector<string> ret;\n\tstring tmp =\"\";\n\trep(i,s.size()){\n\t\tif(s[i]==ch){\n\t\t\tret.pb(tmp);\n\t\t\ttmp = \"\";\n\t\t}else tmp+=s[i];\n\t}\n\tif(tmp.size())ret.pb(tmp);\n\treturn ret;\n}\n\ndouble calc(int r1,int r2){\n\treturn sqrt((r1+r2)*(r1+r2)-abs(r1-r2)*abs(r1-r2));\n}\n\ndouble solve(vector<int> v){\n\tdouble dp[1<<12][12];\n\trep(i,1<<12)rep(j,12)dp[i][j] = 10000;\n\t\n\trep(i,v.size()){\n\t\tdp[1<<i][i] = v[i];\n\t}\n\t\n\tfor(int bit=1;bit<(1<<v.size());bit++){\n\t\trep(use,v.size()){\n\t\t\tif((bit&(1<<use))!=0)continue;\n\t\t\trep(last,v.size()){\n\t\t\t\tdp[bit | (1<<use)][use] = min( dp[bit | (1<<use)][use] , dp[bit][last] + calc(v[last],v[use]) );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tdouble ret = 100000;\n\trep(i,v.size()){\n\t\tret = min(ret,dp[(1<<v.size())-1][i]+v[i]);\n\t}\n\treturn ret;\n}\n\nint main(){\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tvector<string> vvvvv = split(s,' ');\n\t\tint w = stoi(vvvvv[0]);\n\t\tvector<int> v;\n\t\tfor(int i=1;i<vvvvv.size();i++)v.pb(stoi(vvvvv[i]));\n\t\t\n\t\tdouble res = solve(v);\n\t\t\n\t\tif(res-(1e-9)<=w)cout<<\"OK\"<<endl;\n\t\telse cout<<\"NA\"<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <sstream>\n#define MAX_N 12\n#define INF 10000\nusing namespace std;\nvector<int> cakes;\nint n;\ndouble d[MAX_N][MAX_N];\ndouble dp[1 << MAX_N][MAX_N];\n\nvoid calc_dist(){\n    for (int i = 0; i < n - 1; i++) {\n        for (int j = i + 1;  j < n; j++) {\n            double dist = sqrt(pow(cakes[i] + cakes[j], 2) - pow(cakes[i] - cakes[j], 2));\n            d[i][j] = d[j][i] = dist;\n        }\n    }\n}\n\ndouble solve(){\n    n = cakes.size();\n    for (int s = 0; s < 1 << n; s++) {\n        for (int j = 0; j < n; j++) {\n            dp[s][j] = INF;\n        }\n    }\n    \n    dp[(1 << n) - 1][0] = 0;\n    \n    for (int s = (1 << n) - 2; s >= 0; s--) {\n        for (int v = 0; v < n; v++) {\n            for (int u = 0; u < n; u++) {\n                if (!(s >> u & 1)) {\n                    dp[s][v] = min(dp[s][v], dp[s | 1 << u][u] + d[v][u]);\n                }\n            }\n        }\n    }\n    return dp[0][0];\n}\n\n\nint main()\n{\n    int len;\n\n    while (cin >> len) {\n        cakes.clear();\n        string str;\n        getline(cin, str);\n        stringstream ss(str);\n        while (!ss.eof()) {\n            int r;\n            ss >> r;\n            cakes.push_back(r);\n        }\n        n = cakes.size();\n        for (int i = 0; i < n; i++) {\n            d[i][i] = 0;\n        }\n        calc_dist();\n        if (solve() <= len){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NG\" << endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <deque>\n#include <stack>\n#include <queue>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <complex>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define all(x) (x).begin(),(x).end()\n#define mp make_pair\n#define pb push_back\n#define EPS 1e-8\n#define DEB 0\n\n\nint main(){\n\tint n,a;\n\tstring in;\n\tvector<int> data;\n\t\n\twhile(getline(cin,in)){\n\t\tdata.clear();\n\t\tstringstream ss(in);\n\t\tss>>n;\n\t\twhile(ss>>a){\n\t\t\tdata.push_back(a);\n\t\t}\n\n\t\tsort(all(data));\n\n\t\tint l,r,lr,rr;\n\t\tbool f = false;\n\t\t\n\t\trep(t,2){\n\t\t\tdouble sum = 0.0;\n\t\t\tint sz = 1;\n\t\t\tint r1,r2,a;\n\t\t\tif( t==0 ){\n\t\t\t\tl = 0 , r = data.size()-1;\n\t\t\t\tlr = rr = data[data.size()-1];\n\t\t\t}else{\n\t\t\t\tl = data.size()-1, r = 0;\n\t\t\t\tlr = rr = data[0];\n\t\t\t}\n\t\t\tif( data.size()==1 ){\n\t\t\t\tif( data[0]<=n ){\n\t\t\t\t\tf = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n#if DEB\n\t\t\tprintf(\"t:%d --------------------\\n\",t);\n\t\t\tprintf(\"(l,r)=(%d,%d)   init_r:%d\\n\",l,r,rr);\n#endif\t\t\t\n\t\t\t\n\t\t\tfor(;sz<data.size();){\n\t\t\t\tr1 = data[l]+lr;\n\t\t\t\tr2 = abs(data[l]-lr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\tlr = data[l];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  l:%d  lr:%d  sum:%lf\\n\",sz+1, l, lr, sum);\n#endif\t\t\t\t\n\n\t\t\t\tif( t==0 )l++;\n\t\t\t\telse l--;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t\t\n\t\t\t\tr1 = data[l]+rr;\n\t\t\t\tr2 = abs(data[l]-rr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\trr = data[l];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  l:%d  rr:%d  sum:%lf\\n\",sz+1, l, rr, sum);\n#endif\t\t\t\t\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tif( t==0 )l++;\n\t\t\t\telse l--;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t\t\n\t\t\t\tr1 = data[r]+lr;\n\t\t\t\tr2 = abs(data[r]-lr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\tlr = data[r];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  r:%d  lr:%d  sum:%lf\\n\",sz+1,r,lr,sum);\n#endif\n\t\t\t\t\n\t\t\t\tif( t==0 )r--;\n\t\t\t\telse r++;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t\t\n\t\t\t\tr1 = data[r]+rr;\n\t\t\t\tr2 = abs(data[r]-rr);\n\t\t\t\ta = r1*r1 - r2*r2;\n\t\t\t\tsum += sqrt((double)a);\n\t\t\t\trr = data[r];\n\n#if DEB\n\t\t\t\tprintf(\"sz:%d  r:%d  rr:%d  sum:%lf\\n\",sz+1,r,rr,sum);\n#endif\n\t\t\t\t\n\t\t\t\tif( t==0 )r--;\n\t\t\t\telse r++;\n\t\t\t\tsz++;\n\t\t\t\tif( sz==data.size() ) break;\n\t\t\t}\n\t\t\tsum += (double)(lr+rr);\n#if DEB\n\t\t\tprintf(\"sum:%lf\\n\",sum);\n#endif\t\t\t\n\t\t\tif( sum<=(double)n ){\n\t\t\t\tf = true;\n\t\t\t}\n\t\t}\n\t\tputs(f?\"OK\":\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ndouble RofCake[12];\ndouble Dp[4096][12];\n\nconst double INF = DBL_MAX;\n\nunsigned popcnt(unsigned u)\n{\n\tunsigned ret = 0;\n\twhile (u)\n\t{\n\t\tu = (u & (u - 1));\n\t\tret++;\n\t}\n\treturn ret;\n}\n\ndouble getDistance(double r1, double r2)\n{\n\treturn sqrt(pow(r1 + r2, 2) - pow(r1 - r2, 2));\n}\n\ndouble solve(int index) {\n\tint next;\n\tdouble ans;\n\n\tfor (int i = 0; i < (1<<index); i++) {\n\t\tfor (int j = 0; j < index; j++) {\n\t\t\tfor (int k = 0; k < index; k++) {\n\t\t\t\tnext = i | (1 << j);\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tDp[next][j] = min( Dp[next][j], RofCake[j]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (Dp[i][k] == INF) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (popcnt(next) == index) {\n\t\t\t\t\tDp[next][j] = min(Dp[next][j], Dp[i][k] + getDistance(RofCake[k], RofCake[j]) + RofCake[j]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tDp[next][j] = min(Dp[next][j], Dp[i][k]+getDistance(RofCake[k],RofCake[j]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tans = INF;\n\tfor (int i = 0; i < index; i++) {\n\t\tans = min(ans, Dp[(1 << index) - 1][i]);\n\t}\n\n\treturn ans;\n}\n\n\nint main() {\n\tint w, index;\n\tstring str;\n\tstringstream ss;\n\tdouble ans;\n\n\twhile (getline(cin,str)) {\n\t\tss << str;\n\t\tss >> w;\n\t\tindex = 0;\n\t\tmemset(RofCake, 0, sizeof(RofCake));\n\t\twhile (ss >> RofCake[index]) {\n\t\t\t//cout<<RofCake[index]<<ends;\n\t\t\tindex++;\n\t\t}\n\t\t//cout << index << endl;\n\t\tfor (int i = 0; i < (1 << index); i++) {\n\t\t\tfor (int j = 0; j < index; j++) {\n\t\t\t\tDp[i][j] = INF;\n\t\t\t}\n\t\t}\n\n\t\tans = solve(index);\n\n\t\tif (ans > w) {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t\telse {\n\t\t\tcout << \"OK\" << endl;\n\t\t}\n\n\t\tstr = \"\";\n\t\tss.clear();\n\t}\n\t\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef tuple<int, int> duo;\nconst int dx[] = {0, 0, 1, -1, 1, 1, -1, -1};\nconst int dy[] = {1, -1, 0, 0, 1, -1, 1, -1};\nconst int Mod = 1000000000 + 0;\n//{{{ templates\n#define TT_ template<typename T>inline\n#define TTF_ template<typename T,typename F>inline\nTT_ T sq(T x){return x*x;}\nTT_ T In(){T x;cin>>x;return x;}\nTT_ void Out(T&x){cout<<x;}\nTT_ void sort(T&v){sort(begin(v),end(v));}\nTT_ void revs(T&v){reverse(begin(v),end(v));}\nTT_ void uniq(T&v){sort(v);v.erase(unique(begin(v),end(v)),end(v));}\nTT_ int ubnd(T&v,typename T::value_type&x){return upper_bound(begin(v),end(v),x)-begin(v);}\nTT_ int lbnd(T&v,typename T::value_type&x){return lower_bound(begin(v),end(v),x)-begin(v);}\nTTF_ void inpt(T&v,int n,F f){for(v.reserve(n);n--;v.emplace_back(f()));}\nTTF_ void show(T&v,F f,string d=\" \",string e=\"\\n\"){int i=0;for(auto&x:v)i++&&(cout<<d),f(x);cout<<e;}\nTT_ typename T::iterator minel(T&v){return min_element(begin(v),end(v));}\nTT_ typename T::iterator maxel(T&v){return max_element(begin(v),end(v));}\n\ninline void fast_io(){ios::sync_with_stdio(0);cin.tie(0);}\ninline int in(){int x;scanf(\"%d\",&x);return x;}\ninline ll pow_mod(ll a,ll k,ll m){ll r=1;for(;k>0;a=a*a%m,k>>=1)if(k&1)r=r*a%m;return r;}\ninline ll mod_inv(ll a,ll p){return pow_mod(a,p-2,p);}\n//}}} priority_queue queue deque front stringstream max_element min_element insert count make_tuple\n\ndeque<int> split(const string& s)\n{\n  deque<int> r;\n  stringstream ss(s);\n  string token;\n  while (getline(ss, token, ' ')){\n    r.emplace_back(atoi(token.c_str()));\n  }\n  return r;\n}\n\nstruct Solver {\n  Solver(const string& s){\n    R = split(s);\n    L = R[0];\n    R.pop_front();\n    N = R.size();\n  }\n  bool solve(){\n    for (int i = 0; i < (1 << N); i++){\n      for (int j = 0; j < N; j++){\n        dp[i][j] = 1e9;\n      }\n    }\n\n    for (int i = 0; i < N; i++){\n      dp[1 << i][i] = R[i] * 2;\n    }\n    for (int i = 0; i < (1 << N); i++){\n      for (int j = 0; j < N; j++){\n        if (dp[i][j] > 1e8) continue;\n        for (int k = 0; k < N; k++){\n          if ((i >> k) & 1) continue;\n          dp[i | (1 << k)][k] = min(dp[i | (1 << k)][k], dp[i][j] + calc_add_dist(j, k));\n        }\n      }\n    }\n    ld mini = 1e9;\n    for (int i = 0; i < N; i++){\n      mini = min(dp[(1 << N) - 1][i], mini);\n    }\n    return (ld)L + 1e-9 > mini;\n  }\n  ld calc_add_dist(int a, int b){\n    ld x = sqrt(sq(R[a] + R[b]) - sq(R[a] - R[b]));\n    return R[b] + x - R[a];\n  }\n  deque<int> R;\n  int L, N;\n  ld dp[1 << 12][12];\n};\n\nint main()\n{\n  string line;\n  while (getline(cin, line)){\n    Solver sol(line);\n    if (sol.solve()) puts(\"OK\");\n    else puts(\"NA\");\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <sstream>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\ndouble dist(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nint main()\n{\n\tint box_width;\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tdeque<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsort(cakes.begin(), cakes.end());\n\t\t// for (int i = 0; i < cakes.size(); ++i) {\n\t\t\t// cout << cakes[i] << endl;\n\t\t// }\n\n\t\tbool ok = false;\n\t\tdeque<int> save = cakes;\n\n\t\tdouble length = cakes.front() * 2;\n\t\tint prev = cakes.front();\n\t\tcakes.pop_front();\n\t\tbool front = false;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += dist(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tcakes = save;\n\t\tlength = cakes.back() * 2;\n\t\tprev = cakes.back();\n\t\tcakes.pop_back();\n\t\tfront = true;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += dist(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tif (ok) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<cstdio>\n#include<cmath>\n#include<algorithm>\n#include<climits>\n#include<cfloat>\n#include<sstream>\n#define all(c) (c).begin(),(c).end()\n#define INF (1<<29)\n\nusing namespace std;\n\n\ndouble dist(double p,double q){\n  double a=p+q,b=abs(p-q);\n  return sqrt(a*a-b*b);\n}\n\nint count(int bits){\n  bits = (bits & 0x55555555) + (bits >> 1 & 0x55555555);\n  bits = (bits & 0x33333333) + (bits >> 2 & 0x33333333);\n  bits =(((bits >> 4) + bits) & 0x0f0f0f0f);\n  bits += bits >> 8;\n  return (bits + (bits >> 16)) & 0xff;\n}\n\ndouble dp[(1<<12)][12];\n\nint main(void){\n\n  string str;\n  while(getline(cin,str)){\n    int value;\n    stringstream ss(str);\n    vector<double>in;\n    while(ss >> value)in.push_back(value);\n    if(in.size()<1)break;\n    double L=in[0];\n\n    int m=in.size()-1;\n    vector<double>p(m);\n    for(int i=1;i<in.size();i++)p[i-1]=in[i];\n\n    fill(dp[0],dp[1<<12],INF);\n    for(int i=0;i<m;i++)dp[1<<i][i]=p[i];\n\n    for(int S=0;S<(1<<m);S++){\n      for(int v=0;v<m;v++){\n\tfor(int u=0;u<m;u++){\n\t  if(S>>u&1 || !(S>>v&1))continue;\n\t  int nx=S;\n\t  nx|=(1<<u);\n\t  if(count(S)==m-1)dp[nx][u]=min(dp[nx][u],dp[S][v]+dist(p[v],p[u])+p[u]);\n\t  else dp[nx][u]=min(dp[nx][u],dp[S][v]+dist(p[v],p[u]));\n\t}\n      }\n    }\n    double ans=INF;\n    for(int i=0;i<m;i++)ans=min(ans,dp[(1<<m)-1][i]);\n    if(ans<=L)cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 100; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define MAX_N 12\ndouble dp[MAX_N][1 << MAX_N], p[MAX_N][MAX_N], x[MAX_N]; int N, M, bit[MAX_N]; string S;\nint main() {\n\twhile (S = \"\", getline(cin, S)) {\n\t\tS += ' '; string T; int u = 0;\n\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\tif (S[i] == ' ') { if (u == 0) { M = stoi(T); } else { x[u - 1] = stoi(T); }u++; T = \"\"; }\n\t\t\telse { T += S[i]; }\n\t\t}\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\tif (i == j) { continue; }\n\t\t\t\tp[i][j] = sqrt((x[i] + x[j])*(x[i] + x[j]) - x[i] * x[i]) - x[i] + x[j];\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < MAX_N; i++) { for (int j = 0; j < (1 << MAX_N); j++) { dp[i][j] = 1e9; } }\n\t\tfor (int i = 0; i < N; i++) { dp[i][1 << i] = x[i] * 2; }\n\t\tfor (int i = 0; i < (1 << N); i++) {\n\t\t\tfor (int j = 0; j < N; j++) { bit[j] = (i / (1 << j)) % 2; }\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\tif (dp[j][i] >= 1e8) { continue; }\n\t\t\t\tfor (int k = 0; k < N; k++) {\n\t\t\t\t\tif (bit[k] == 0) {\n\t\t\t\t\t\tdp[k][i + (1 << k)] = min(dp[k][i + (1 << k)], dp[j][i] + p[j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble maxn = 1e9;\n\t\tfor (int i = 0; i < N; i++) { maxn = min(maxn, dp[i][(1 << N) - 1]); }\n\t\tif (maxn <= M) { cout << \"OK\" << endl; }\n\t\telse { cout << \"NA\" << endl; }\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div; //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = (double)BIG_NUM;\n\n\tfor(int start_town = 0; start_town < info_index;start_town++){\n\n\t\tfor(int i = 0; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index;k++){\n\t\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t\t}\n\t\t}\n\n\t\tint next_state;\n\n\t\tnext_state = pow(2,start_town);\n\n\t\tdp[0][start_town][next_state] = info[start_town].r*2.0;\n\n\t\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\t\tif(i == info_index && a == start_town && state == limit-1 && k != start_town){\n\t\t\t\t\t\t\t\t\tdp[i][0][limit-1] = min(dp[i][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tminimum = min(minimum,dp[info_index][start_town][limit-1]);\n\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nbool f;\ndouble w;\nvector<double> v;\nint n;\ndouble calc(int i,int j){\n  return sqrt((v[i]+v[j])*(v[i]+v[j])-(v[i]-v[j])*(v[i]-v[j]));\n}\ndouble memo[1<<12][12];\nvoid dfs(double l,int b,int p){\n  if(~p){\n    if(memo[b][p]<=l) return;\n    memo[b][p]=l;\n  }\n  if(b==(1<<n)-1){\n    f|=l+v[p]<=w;\n    return;\n  }\n  if(p<0) for(int i=0;i<n;i++) dfs(v[i],b+(1<<i),i);\n  else for(int i=0;i<n;i++) if(!((b>>i)&1)) dfs(l+calc(p,i),b+(1<<i),i);\n}\nint main(){\n  string s;\n  while(getline(cin,s)){\n    v.clear();\n    stringstream ss(s);\n    ss>>w;\n    double t;\n    while(ss>>t) v.push_back(t);\n    n=v.size();\n    f=0;\n    \n    for(int i=0;i<(1<<n);i++) \n      for(int j=0;j<n;j++)\n\tmemo[i][j]=1e9;\n    \n    dfs(0,0,-1);\n    cout<<(f?\"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\ndouble dp[1<<12][12];\nint n;\n\n\nint main(){\n\n    \n    \n    \n    \n\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[12]={0};\n        n=0;\n        cake[n]=0;\n        n++;\n        while(ss>>cake[n]){\n            n++;\n        }\n        \n        double v[12][12]={0};\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(i==j){\n                    v[i][j]=0;\n                    v[j][i]=v[i][j];\n                }else{\n                    double x = (cake[i]+cake[j])*(cake[i]+cake[j])-(cake[i]-cake[j])*(cake[i]-cake[j]);\n                    v[i][j]=sqrt((fabs(x)));\n                    //cout<<i<<\" \"<<j<<\" \"<<v[i][j]<<endl;\n                    v[j][i]=v[i][j];\n                }\n                \n            }\n        }\n        \n        \n       \n        //memset(dp, 999999.9999, sizeof(dp));\n        for(int i=0; i<(1<<12); i++){\n            for(int j=0; j<12; j++){\n                dp[i][j]=100000000;\n            }\n        }\n        \n        \n        dp[(1<<n) - 1][0] = 0;\n\n        \n        for(int i=(1<<n)-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                for(int k=0; k<n; k++){\n                    if(!(i >> k & 1)){\n                        if(j==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[k]);\n                        }else if(k==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[j]);\n                        }else{\n                            int m=i;\n                            /*\n                            for(int l=0; l<n; l++){\n                                cout<<m%2;\n                                m/=2;\n                            }\n                            cout<<endl;\n                            cout<<\"j  \"<<j<<endl;\n                            cout<<\"k  \"<<k<<endl;\n                             */\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + v[j][k]);\n                            /*\n                            cout<<\"dp \"<<dp[i][j]<<endl;\n                            cout<<\"v  \"<<v[j][k]<<endl;\n                            cout<<\"-----------\"<<endl;\n                             */\n                        }\n                    }\n                }\n            }\n        }\n        \n        //cout<<dp[0][0]<<endl;\n        if(dp[0][0]<=box)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n\n        \n        \n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.0001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\n#include <memory>\n#include<time.h>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\nconst double EPS = 1e-9;\nconst double PI  = acos(-1.0);\n\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\n\nint n;\ndouble dfs(int mask,int pos,int last, vvd &dp,vi &r){\n\tif(pos==n){\n\t\treturn r[last];\n\t}\n\tif(dp[mask][last]){\n\t\treturn dp[mask][last];\n\t}\n\tdouble ret=INT_MAX;\n\tREP(i,n){\n\t\tif(!((1<<i)&mask)){\n\t\t\tret=min(ret,dfs(mask|(1<<i),pos+1,i,dp,r)+sqrt(r[last]*r[i])*2);\n\t\t}\n\t}\n\treturn dp[mask][last]=ret;\n}\n\nint main(){\n\tstring line;\n\twhile(getline(cin,line)){\n\t\tistringstream iss(line);\n\t\tint l;\n\t\tiss>>l;\n\t\tvi r;\n\t\tint rr;\n\t\twhile(iss>>rr){\n\t\t\tr.push_back(rr);\n\t\t}\n\t\tn=r.size();\n\n\t\tdouble ans=INT_MAX;\n\t\tREP(i,n){\n\t\t\tvvd dp(1<<n,vd(n));\n\t\t\tans=min(ans,dfs(1<<i,1,i,dp,r)+r[i]);\n\t\t}\n\t\tcout<<(ans<l+EPS?\"OK\":\"NA\")<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "\n#define _CRT_SECURE_NO_WARNINGS\n#define _USE_MATH_DEFINES\n#include <cfloat>\n#include <climits>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <iostream>\n#include <memory>\n#include <string>\n\n#include <algorithm>\n#include <complex>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <vector>\n#include <bitset>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\n#define strtok_r strtok_s\n#endif\n\n#define ITER(c)             __typeof__((c).begin())\n#define FOREACH(it, c)      for (ITER(c) it=(c).begin(); it != (c).end(); ++it)\n#define RITER(c)            __typeof__((c).rbegin())\n#define RFOREACH(it, c)     for (RITER(c) it=(c).rbegin(); it != (c).rend(); ++it)\n#define REP(i, n)           REPEAT(i, 0, n)\n#define RREP(i, n)          RREPEAT(i, 0, n)\n#define REPEAT(i, k, n)     for(int i = (k); i < (k+n); ++i)\n#define RREPEAT(i, k, n)    for(int i = (k)+(n)-1; i >= (k); --i)\n#define FROMTO(i,f,t)       for(int i = f; i < t; i++)\n#define ALL(c)              (c).begin(), (c).end()\n#define LLPOW(p1,p2)        ((ll)pow((double)(p1), (int)p2))\n#define ESIZEOF(A)          (sizeof(A)/sizeof((A)[0]))\n#define CIN_NO_SYNC         do { cin.tie(0); ios_base::sync_with_stdio(false); } while(0)\n#define GETSTR(p)           fgets((p), sizeof(p), stdin)\n#define CHOMP(p)            do{ char *_q = (p) + strlen(p)-1; if(*_q == '\\n' || *_q == '\\r') *_q = 0; } while(0)\n#define FILL(m,v)           memset(m, v, sizeof(m))\n#define mp                  make_pair\n#define pb                  push_back\ntemplate<class _T> _T MAX(_T p1,_T p2){return (p1>p2)?p1:p2;} \ntemplate<class _T> _T MIN(_T p1,_T p2){return (p1<p2)?p1:p2;} \ntemplate <class _Tv> inline string join(_Tv &v,string sep=\" \"){\n    ostringstream s;FOREACH(it,v){if(it!=v.begin())s<<sep;s<<*it;};return s.str();\n}\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define X real()\n#define Y imag()\ntypedef double D;\ntypedef complex<D> P;\n#define EPS (1e-9)\n\n#ifdef _DEBUG\ntemplate<class _Tv> inline void _prfe(const char *_n,_Tv _c,bool _p=false){\n    ITER(_c) _it=_c.begin();\n    if(_p){cout<<_n<<\" = [\"<<endl;for(;_it!=_c.end();++_it)cout<<\"    \"<<*_it<<endl;cout<<\"]\"<<endl; }\n    else{cout<<_n<<\" = [ \"<<*_it++;for(;_it!=_c.end();++_it)cout<<\", \"<<*_it;cout<<\" ]\"<<endl; }\n}\n#define pf printf\n#define pr(n) do{cout<<#n\" = \"<<(n)<<endl;}while(0)\n#define prfe(n) _prfe(#n, n)\n#define prfep(n) _prfe(#n, n, true)\n#define dbgchk(n) do{if(n)throw;}while(0)\n#else\n#define pf(...) /* */\n#define pr(...) /* */\n#define prfe(...) /* */\n#define prfep(...) /* */\n#define dbgchk(...) /* */\n#endif\n\nvoid solve(int b, vector<int> &v){\n    int n = v.size();\n    bool f = false;\n    sort(ALL(v));\n    do {\n        double l = 0;\n\n        REP(i,n){\n            if(i == 0){ l += v[i]*2; continue; }\n\n            double r2 = (v[i-1]+v[i])*(v[i-1]+v[i]);\n            double y2 = (v[i-1]-v[i])*(v[i-1]-v[i]);\n            // x^2 + y^2 = (r1+r2)^2\n            double x = sqrt(r2-y2);\n            l = l - v[i-1] + x + v[i];\n        }\n\n        if(l <= (double)b){\n            pr(l);\n            f = true;\n            break;\n        }\n    } while(next_permutation(ALL(v)));\n\n    cout << (f?\"OK\":\"NA\") << endl;\n}\n\nint main(){\n    string s;\n    while(getline(cin,s)){\n        istringstream ss(s);\n        int b, n;\n        vector<int> v;\n        ss >> b;\n        while(ss >> n) v.pb(n);\n        solve(b, v);\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <algorithm>\n#include <utility>\n#include <functional>\n#include <sstream>\n#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <cstdlib>\n#include <cctype>\n#include <string>\n#include <cstring>\n#include <ctime>\n#include <climits>\n#include <cassert>\nusing namespace std;\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n#define ALL(a) (a).begin(),(a).end()\n#define RALL(a) (a).rbegin(),(a).rend()\n#define EXIST(s,e) ((s).find(e)!=(s).end())\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n) FOR(i,0,n)\nconst double EPS = 1e-10;\nconst double PI  = acos(-1.0);\n\nint main(){\n\tint l;\n\tstring s;\n\twhile(getline(cin,s)){\n\t\tistringstream iss(s);\n\t\tiss>>l;\n\t\tvi a;\n\t\tint aa;\n\t\twhile(iss>>aa){\n\t\t\ta.push_back(aa);\n\t\t}\n\n\t\tbool ok=false;\n\t\tdo{\n\t\t\tdouble len=a[0]+a[a.size()-1];\n\t\t\tREP(i,a.size()-1){\n\t\t\t\tlen+=sqrt(a[i]*a[i+1])*2;\n\t\t\t}\n\t\t\tif(len<=l+EPS){\n\t\t\t\tok=true;\n\t\t\t}\n\t\t}while(next_permutation(ALL(a)));\n\n\t\tcout<<(ok?\"OK\":\"NA\")<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define INF 1e9\nusing namespace std;\n\nint getNum(string a,int &i){\n  int res=0;\n  while(isdigit(a[i]))res=res*10+a[i++]-'0';\n  return res;\n}\n\ndouble getx(double R,double r){\n  if(R<r) swap(R,r);\n  return sqrt((R+r)*(R+r)-(R-r)*(R-r));\n}\n\nint n;\nvector<double> num;\ndouble mem[11][11][1<<12];\nint used[11][11][1<<12];\ndouble dfs(int l,int r,int sta){\n  if(sta==(1<<n)-1)return 0;\n  if(used[l][r][sta]++)return mem[l][r][sta];\n\n  double res=INF;\n  for(int i=0;i<n;i++){\n    if((sta&(1<<i)))continue;\n    double lcost=num[i]+getx(l,num[i])-l;\n    double rcost=num[i]+getx(num[i],r)-r;\n    res=min(res,lcost+dfs(num[i],r,sta|(1<<i)));\n    res=min(res,rcost+dfs(l,num[i],sta|(1<<i)));\n  }\n  return mem[l][r][sta]=res;\n}\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    int w,idx=0;\n    w = getNum(str,idx);\n    num.clear();\n    while(idx++<str.size())num.push_back(getNum(str,idx));\n    n = num.size();\n    memset(used,0,sizeof(used));\n    double mn=INF;\n    for(int i=0;i<n;i++)mn=min(mn,2*num[i]+dfs(num[i],num[i],1<<i));\n    cout<<(mn<=w? \"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 1e5;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n\tsrand(time(NULL));\n\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\ndouble dp[1<<12][12];\nint n;\n\n\nint main(){\n\n    \n    \n    \n    \n\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[12]={0};\n        n=0;\n        cake[n]=0;\n        n++;\n        while(ss>>cake[n]){\n            n++;\n        }\n        \n        double v[12][12]={0};\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(i==j){\n                    v[i][j]=0;\n                    v[j][i]=v[i][j];\n                }else{\n                    double x = (cake[i]+cake[j])*(cake[i]+cake[j])-(cake[i]-cake[j])*(cake[i]-cake[j]);\n                    v[i][j]=sqrt((fabs(x)));\n                    //cout<<i<<\" \"<<j<<\" \"<<v[i][j]<<endl;\n                    v[j][i]=v[i][j];\n                }\n                \n            }\n        }\n        \n        \n       \n        //memset(dp, 999999.9999, sizeof(dp));\n        for(int i=0; i<(1<<12); i++){\n            for(int j=0; j<12; j++){\n                dp[i][j]=9999.999;\n            }\n        }\n        \n        \n        dp[(1<<n) - 1][0] = 0;\n\n        \n        for(int i=(1<<n)-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                for(int k=0; k<n; k++){\n                    if(!(i >> k & 1)){\n                        if(j==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[k]);\n                        }else if(k==0){\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + cake[j]);\n                        }else{\n                            int m=i;\n                            /*\n                            for(int l=0; l<n; l++){\n                                cout<<m%2;\n                                m/=2;\n                            }\n                            cout<<endl;\n                            cout<<\"j  \"<<j<<endl;\n                            cout<<\"k  \"<<k<<endl;\n                             */\n                            dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + v[j][k]);\n                            /*\n                            cout<<\"dp \"<<dp[i][j]<<endl;\n                            cout<<\"v  \"<<v[j][k]<<endl;\n                            cout<<\"-----------\"<<endl;\n                             */\n                        }\n                    }\n                }\n            }\n        }\n        \n        //cout<<dp[0][0]<<endl;\n        if(dp[0][0]<=box)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n\n        \n        \n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <cmath>\n#define INF 9999999\nusing namespace std;\n\nint W;\nint R[12];\nint N;\ndouble D[13][12];\ndouble dp[(1 << 12)][13];\n\nvoid calcCost() {\n  for(int u = 0; u <= N; ++u) {\n    for(int v = 0; v < N; ++v) {\n      if(u == v) D[u][v] = 0;\n      else if(u == N || R[u] == R[v]) D[u][v] = R[v] * 2;\n      else {\n\tdouble d = sqrt((R[u]+R[v])*(R[u]+R[v]) - (R[u]-R[v])*(R[u]-R[v]));\n\tD[u][v] = d - R[u] + R[v];\n      }\n    }\n  }\n}\n\nvoid solve() {\n  calcCost();\n  for(int s = 0; s < (1 << N); ++s) {\n    if(s == (1 << N) - 1) fill(dp[s], dp[s] + N+1, 0);\n    else                  fill(dp[s], dp[s] + N+1, INF);\n  }\n\n  for(int s = (1 << N)-2; s >= 0; --s) {\n    for(int u = 0; u <= N; ++u) {\n      for(int v = 0; v < N; ++v) {\n\tdp[s][u] = min(dp[s][u], dp[s | (1 << v)][v] + D[u][v]);\n      }\n    }\n  }\n  if(dp[0][N] <= W) cout << \"OK\" << endl;\n  else              cout << \"NA\" << endl;\n}\n\nmain() {\n  string str;\n  while(getline(cin, str) && !cin.eof()) {\n    stringstream ss; ss << str;\n    ss >> W;\n    N = 0;\n    while(!ss.eof()) {\n      int tmp;\n      ss >> tmp;\n      R[N++] = tmp;\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <sstream>\n#include <cstring>\n#include <fstream>\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nconst int MAX_N = 12+1;\nconst double INF = 1e+100;\ndouble dist[10+1][10+1]; // åå¾ a ã®ã±ã¼ã­ã®ä¸­å¿ã¨åå¾ b ã®ã±ã¼ã­ã®ä¸­å¿ã¨ã®è·é¢ã\ndouble d[MAX_N][MAX_N];\ndouble dp[1<<MAX_N][MAX_N];\nint n, w;\nint a[MAX_N];\n\n// ã±ã¼ã­éã®è·é¢ãæ±ãã\nint calc (void )\n{\n\tfor (int i = 3; i <= 10; i++ )\n\t\tfor (int j = 3; j <= 10; j++ )\n\t\t\tdist[i][j] = 2.0*sqrt ((double)i*j );\n}\n\n// çµè·¯ã®æ¥ç¶ãæ±ãã\nvoid make (void )\n{\n\t// åæå\n\trep (i, n+1 )\n\t\trep (j, n+1 )\n\t\t\t\td[i][j] = INF;\n\n\trep (i, n )\n\t\trep (j, n )\n\t\t\td[i][j] = dist[a[i]][a[j]];\n\n\trep (i, n ){\n\t\td[n][i] = a[i]; d[i][n] = a[i];\n\t} // end rep\n\tn++;\n}\n\n// bitDP\ndouble solve (){\n\n\t// åæå\n\trep (S, 1<<n ){\n\t\tfill (dp[S], dp[S]+n, INF );\n\t} // end rep\n\n\tdp[(1<<n)-1][0] = 0;\n\tfor (int S = (1 << n ) - 2; S >= 0; S-- )\n\t\trep (v, n ) rep (u, n )\n\t\t\tif (!(S >> u & 1 ) )\n\t\t\t\tdp[S][v] = min (dp[S][v], dp[S | 1 << u][u] + d[v][u] );\n\n\treturn dp[0][0];\n}\n\nint main()\n{\n\tcalc ();\n\tstring str = \"\";\n\n\twhile (getline (cin, str ) ){\n\t\tvector <int> cake; \n\t\tstringstream ss (str );\n\t\tss >> w;\n\t\tint i = 0, m;\n\t\twhile (ss >> m ){\n\t\t\t a[i++] = m;\n\t\t} // end while\n\t\tn = i;\n\t\tmake ();\n\t\tif ((double)w >= solve () ){\n\t\t\tprintf ( \"OK\\n\" );\n\t\t}else{\n\t\t\tprintf ( \"NA\\n\" );\n\t\t} // end if\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 100; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> parse(string str) {\n\tvector<int> ret; int t = 0; str += ' ';\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ') ret.push_back(t), t = 0;\n\t\telse t = t * 10 + str[i] - 48;\n\t}\n\treturn ret;\n}\nint bitcount(int x) {\n\tint ret = 0;\n\tfor (int i = 0; i < 31; i++) {\n\t\tif (x & (1 << i)) ret++;\n\t}\n\treturn ret;\n}\nstring s; double dp[65536][16];\nint main() {\n\twhile (s = \"\", getline(cin, s)) {\n\t\tvector<int> u = parse(s);\n\t\tvector<int> v(u.begin() + 1, u.end());\n\t\tint n = v.size();\n\t\tfor (int i = 0; i < (1 << n); i++) {\n\t\t\tfor (int j = 0; j < n; j++) dp[i][j] = 999999999.9L;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) dp[1 << i][i] = v[i];\n\t\tfor (int i = 1; i < (1 << n); i++) {\n\t\t\tif (bitcount(i) <= 1) continue;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (!(i & (1 << j))) continue;\n\t\t\t\tdp[i][j] = 999999999.9L;\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif ((i & (1 << k)) && (j != k)) {\n\t\t\t\t\t\tdouble d1 = v[j] + v[k], d2 = abs(v[j] - v[k]);\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] + sqrt(d1 * d1 - d2 * d2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble ret = 999999999.9L;\n\t\tfor (int i = 0; i < n; i++) ret = min(ret, dp[(1 << n) - 1][i] + v[i]);\n\t\tcout << (ret <= u[0] + 1e-10 ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <vector>\n#include <deque>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void) {\n    int size;\n    while (scanf(\"%d\", &size) != EOF) {\n        deque<int> r;\n        char c;\n        int x;\n        while (1) {\n            scanf(\"%d%c\", &x, &c);\n            r.push_back(x);\n            if (c == '\\n') break;\n        }\n        sort(r.begin(), r.end());\n        bool f = true;\n        vector<int> r2;\n        while (!r.empty()) {\n            if (f) {\n                r2.push_back(r.front());\n                r.pop_front();\n            } else {\n                r2.push_back(r.back());\n                r.pop_back();\n            }\n            f = !f;\n        }\n        double t = 0.0;\n        for (int i = 0; i < r2.size(); i++) {\n            if (i == 0 || i == r2.size() - 1) {\n                t += (double)r2[i];\n            }\n            if (i > 0) {\n                t += 2 * sqrt((double)r2[i] * r2[i - 1]);\n            }\n        }\n        if (t <= (double)size) {\n            printf(\"OK\\n\");\n        } else {\n            printf(\"NA\\n\");\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    while (is >> temp) {\n      cakes.push_back(temp);\n    }\n\n    sort(cakes.begin(), cakes.end());\n    bool ok = false;\n    do {\n      double current_length = cakes[0];\n      for (int i = 0; i < cakes.size() - 1; ++i) {\n        if (cakes[i] == cakes[i+1]) {\n          current_length += 2 * cakes[i];\n        } else {\n          int larger = max(cakes[i], cakes[i+1]);\n          int smaller = min(cakes[i], cakes[i+1]);\n          double height = larger - smaller;\n          double naname = larger + smaller;\n          double width = sqrt(pow(naname, 2) - pow(height, 2));\n          current_length += width;\n        }\n      }\n      current_length += cakes[cakes.size() - 1];\n      if (L >= current_length) { ok = true; break; }\n    } while (next_permutation(cakes.begin(), cakes.end()));\n    printf(\"%s\\n\", (ok) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[12][12] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0]+2.0*sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0*sqs[r[p[i]+1]][r[p[i+1]+1]];\n\t}\n\ttw += 2.0*sqs[r[1]][r[p[n-1]+1]]+r[1];\n\tif( tw <= w ){\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tif( num > 2 ){\n\t\t\tif( solve( p, num-2, w, r) ) cout << \"OK\\n\";\n\t\t\telse cout << \"NA\\n\";\n\t\t}else if( num <= 2 ){\n\t\t\tif( num == 2 ){\n\t\t\t\tdouble t = 0;\n\t\t\t\tt = r[0]+r[1]+2.0*sqs[r[0]][r[1]];\n\t\t\t\tif(t <= w ) cout << \"OK\\n\";\n\t\t\t\telse cout << \"NA\\n\";\n\t\t\t}else if(num == 1){\n\t\t\t\tif( r[0] * 2 <= w ) cout << \"OK\\n\";\n\t\t\t\telse cout << \"NA\\n\";\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<sstream>\n\nusing namespace std;\n\nconst double INF=10000000;\ndouble l;\nbool flag;\nstring str;\nvector<double> r;\ndouble dp[1<<12][12];\n\nvoid rec(int x,int bit,double nl,double nh){\n\tif(dp[bit][x]<nl)return;\n\tdp[bit][x]=nl;\n\tif(bit==(1<<r.size())-1){\n\t\tif(nl+nh<=l)flag=true;\n\t\treturn;\n\t}\n\telse{\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\tif(!(bit>>i & 1)){\n\t\t\t\tdouble nnh=r[i];\n\t\t\t\tdouble nnl=nl+sqrt(pow(nh+nnh,2)-pow(fabs(nh-nnh),2));\n\t\t\t\tif(nnl<dp[bit | 1<<i][i]){\n\t\t\t\t\tdp[bit | 1<<i][i]=nnl;\n\t\t\t\t\trec(i,bit | 1<<i,nnl,nnh);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(void){\n\twhile(getline(cin,str)){\n\t\tflag=false;\n\t\tr.clear();\n\t\tfor(int i=0;i<(1<<12);i++){\n\t\t\tfor(int j=0;j<12;j++){\n\t\t\t\tdp[i][j]=INF;\n\t\t\t}\n\t\t}\n\t\tstringstream input(str);\n\t\tinput >> l;\n\t\tdouble a;\n\t\twhile(input >> a)r.push_back(a);\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\trec(i,1<<i,r[i],r[i]);\n\t\t}\n\t\tif(flag)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <map>\n\nusing namespace std;\n\n#define INF 1 << 24\n\nint d(int n) {\n\treturn n * n;\n}\n\ntypedef pair< vector<bool>, pair<int, double> > P;\n\nint main() {\n\tint L;\n\twhile ( scanf(\"%d\", &L) != EOF ) {\n\t\tvector<int> v;\n\n\t\tchar c;\n\t\twhile ( c = getchar(), c != '\\n' && c != '\\r' && c != EOF ) {\n\t\t\tint a; scanf(\"%d\", &a);\n\t\t\tv.push_back(a);\n\t\t}\n\n/*\n\t\tsort( v.begin(), v.end() );\n\n\t\tint n = v.size();\n\t\tvector<int> v1, v2;\n\t\tfor (int i = 0; i < n/2; ++i)\n\t\t\tv1.push_back(v[i]);\n\n\t\tfor (int i = n/2; i < n; ++i)\n\t\t\tv2.push_back(v[i]);\n*/\n\n\t\tint n = v.size();\n\t\tvector< vector<double> > len(n, vector<double>(n, INF));\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tlen[i][j] = sqrt( d(v[i]+v[j]) - d( abs(v[i]-v[j]) ) );\n\n\t\tqueue<P> Q;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tvector<bool> V(n); V[i] = true;\n\t\t\tQ.push( P( V, make_pair(i, v[i]) ) );\n\t\t}\n\n\t\tdouble ans = INF;\n\t\tdouble cost[12][12]; fill(&cost[0][0], &cost[0][0]+12*12, INF);\n\t\twhile ( !Q.empty() ) {\n\t\t\tP p = Q.front(); Q.pop();\n\t\t\tint head = p.second.first;\n\t\t\tdouble length = p.second.second;\n\n\t\t\tint sz = 0;\n\t\t\tfor (int i = 0; i < n; ++i)\n\t\t\t\tsz += p.first[i];\n\n\t\t\tif (sz >= n) {\n\t\t\t\tif (length + v[head] < ans)\n\t\t\t\t\tans = length + v[head];\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif (p.first[i]) continue;\n\n\t\t\t\tvector<bool> v2 = p.first; v2[i] = true;\n\t\t\t\tQ.push( P(v2, make_pair(i, length + len[head][i])) );\n\t\t\t}\n\t\t}\n\n\t\tif (ans <= L) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div; //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = (double)BIG_NUM;\n\n\tfor(int start_town = 0; start_town < info_index;start_town++){\n\n\t\tfor(int i = 0; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index;k++){\n\t\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t\t}\n\t\t}\n\n\t\tint next_state;\n\n\t\tnext_state = pow(2,start_town);\n\n\t\tdp[0][start_town][next_state] = info[start_town].r*2.0;\n\n\t\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\t\tif(i == info_index && a == start_town && state == limit-1 && k != start_town){\n\t\t\t\t\t\t\t\t\tdp[i][start_town][limit-1] = min(dp[i][start_town][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tminimum = min(minimum,dp[info_index][start_town][limit-1]);\n\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0]+2.0*sqrt((double)r[0]*r[p[0]+1]);\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += (double)2*sqrt((double)r[p[i]+1]*r[p[i+1]+1]);\n\t}\n\ttw += 2.0*sqrt((double)r[1]*r[p[n-1]+1])+r[1];\n\tif( tw <= w ){\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\twhile(true){\n\t\tint w;\n\t\tint num = 0;\n\t\tint perm[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){ cin >> r[num]; num++; if( '\\n' == cin.get() ) break; }\n\n\t\tsort(r,r+num);\n\n\t\tif( solve(perm, num-2, w, r) ){\n\t\t\tcout << \"OK\\n\";\n\t\t}else{\n\t\t\tcout << \"NA\\n\";\n\t\t}\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <set>\n#include <map>\n#include <algorithm>\t// require sort next_permutation count __gcd reverse etc.\n#include <cstdlib>\t// require abs exit\n#include <cstdio>\t// require scanf printf\n#include <functional>\n#include <numeric>\t// require accumulate\n#include <cmath>\n#include <climits>\n#include <limits>\n#include <cfloat>\n#include <iomanip>\t// require setw\n#include <sstream>\t// require stringstream \n#include <cstring>\t// require memset\n#include <cctype>\t// require tolower, toupper\n#include <fstream>\t// require freopen\n#include <ctime>\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define ALL(A) A.begin(), A.end()\n#define DEBUG 0\n#define INF 1e100\n#define EPS 1e-8\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\nstring FILE_NAME = \"testcase.0120_\";\nstring NAME;\nstring itos (int n )\n{\n\tstringstream ss;\n\tss << n;\n\n\treturn ss.str();\n}\n/*\n\tbitDP : dp[S][k]:= k 番目のケーキ (k &#8713; S )をつかった場合、距離が最小になる\n\t\tdp[S | k][k] = min (dp[S][j] + (j,k)の距離 ) (j ∈ S, k &#8713; S )\n*/\n\ndouble dp[1<<12][12];\nvector<int> r;\n\ndouble calc (int i, int j ){\n\tdouble res = (double)((r[i] + r[j] )*(r[i] + r[j] ) - (r[i] - r[j] )*(r[i] - r[j] ) );\n\n\treturn sqrt (res );\n} \n\ndouble dist[11][11];\n// 3 〜 10 までの2つの円の距離を求めておく\nvoid calc_dist (void ){\n\tmemset (dist, 0., sizeof (dist ) );\n\tfor (int i = 3 ;i <= 10; i++ ){\n\t\tfor (int j = 3; j <= 10; j++ ){\n\t\t\tdist[i][j] = 2.*sqrt (i*j );\n\t\t} // end for\n\t} // end for\n}\n\n// 円 i, j の距離を求めておく\ndouble d[12][12];\nvoid calc_d (int n ){\n\tmemset (d, 0., sizeof (d ) );\n\trep (i, n ){\n\t\trep (j, n ){\n\t\t\td[i][j] = dist[r[i]][r[j]];\n\t\t} // end rep\n\t} // end rep\n}\t\n\n\nint main()\n{\n//\tcut here before submit \n#if DEBUG\n\tNAME = FILE_NAME;\n\tint CNT = 1;\n\tNAME += itos (CNT );\n\twhile (freopen (NAME.c_str() , \"r\", stdin ) != NULL ) {\n#endif\n\tios_base::sync_with_stdio(0);\n\tstring str = \"\";\n\tcalc_dist ();\n\tint box;\n\twhile (getline (cin, str ) ){\n\t\tmemset (dp, 0., sizeof (dp ) );\n\t\tr.clear();\n\t\tstringstream ss (str );\n\t\tint in;\n\t\tss >> box;\n\t\twhile (ss >> in ) r.push_back (in );\n\t \tint n = r.size();\n\t\tcalc_d (n );\n\t\trep (i, 1<<n ) rep (j, n ) dp[i][j] = INF;\n\t\trep (j, n ) dp[1<<j][j] = (double)r[j];\n\t\trep (i, 1<<n ){\n\t\t\trep (j, n ){\n\t\t\t\tif (dp[i][j] != INF ){\n\t\t\t\t\trep (k, n ){\n\t\t\t\t\t\tif (k == j ) continue;\n\t\t\t\t\t\tif (i & (1<<k ) ) continue;\n\t\t\t\t\t\tdp[i | (1<<k)][k] = min (dp[i | (1<<k)][k], dp[i][j] + d[j][k] );\n\t\t\t\t\t} // end rep\n\t\t\t\t} // end if\n\t\t\t} // end rep\n\t\t} // end rep\n\n\t\tdouble res = INF;\n\t\trep (j, n ) res = min (res, dp[(1<<n)-1][j] + (double)r[j] );\n\n\t\tif (res > (double)box ){\n\t\t\tcout << \"NA\" << endl;\n\t\t}else{\n\t\t\tcout << \"OK\" << endl;\n\t\t} // end if\n\t} // end while\n\n#if DEBUG\n\tCNT++;\t// cut here before submit\n\tNAME = FILE_NAME;\n\tNAME += itos (CNT );\n\t} // end loop; cut here before submit\n#endif\t\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n  string s;\n  while(getline(cin,s)) {\n    stringstream ss;\n    int w,x;\n    vector<int> v;\n    ss << s;\n    ss >> w;\n    while(ss >> x) v.push_back(x);\n    int n=v.size();\n    double dp[1<<n][n];\n    for(int i=0; i<(1<<n); i++)for(int j=0;j<n;j++)dp[i][j]=1<<30;\n    for(int i=0; i<n; i++) dp[1<<i][i]=v[i];\n    for(int t=1; t<(1<<n); t++) {\n      for(int i=0; i<n; i++) {\n        if(dp[t][i]==1<<30) continue;\n        for(int j=0; j<n; j++) {\n          if(t&(1<<j)) continue;\n          dp[t|(1<<j)][j]=min(dp[t|(1<<j)][j],dp[t][i]+sqrt((v[i]+v[j])*(v[i]+v[j])-(v[i]-v[j])*(v[i]-v[j])));\n        }\n      }\n    }\n    double ans=1<<30;\n    for(int i=0; i<n; i++) ans=min(ans,dp[(1<<n)-1][i]+v[i]);\n    if(ans<=w) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> parse(string str) {\n\tvector<int> ret; int t = 0; str += ' ';\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ') ret.push_back(t), t = 0;\n\t\telse t = t * 10 + str[i] - 48;\n\t}\n\treturn ret;\n}\nint bitcount(int x) {\n\tint ret = 0;\n\tfor (int i = 0; i < 31; i++) {\n\t\tif (x & (1 << i)) ret++;\n\t}\n\treturn ret;\n}\nstring s; long double dp[65536][16];\nint main() {\n\twhile (s = \"\", getline(cin, s)) {\n\t\tvector<int> u = parse(s);\n\t\tvector<int> v(u.begin() + 1, u.end());\n\t\tint n = v.size();\n\t\tfor (int i = 0; i < (1 << n); i++) {\n\t\t\tfor (int j = 0; j < n; j++) dp[i][j] = 999999999.9L;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) dp[1 << i][i] = v[i];\n\t\tfor (int i = 1; i < (1 << n); i++) {\n\t\t\tif (bitcount(i) <= 1) continue;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (!(i & (1 << j))) continue;\n\t\t\t\tdp[i][j] = 999999999.9L;\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif ((i & (1 << k)) && (j != k)) {\n\t\t\t\t\t\tlong double d1 = v[j] + v[k], d2 = abs(v[j] - v[k]);\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] + sqrtl(d1 * d1 - d2 * d2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong double ret = 999999999.9L;\n\t\tfor (int i = 0; i < n; i++) ret = min(ret, dp[(1 << n) - 1][i] + v[i]);\n\t\tcout << (ret <= u[0] + 1e-10 ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint iniIncrease = -1;\n\t\tvector< pair<int,int> > vhist;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tif( i > 0 ){\n\t\t\t\tif( r[i] > r[i-1] && iniIncrease < 0 ) iniIncrease = (i - 2 < 0 ? 0 : i - 2);\n\t\t\t}\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( iniIncrease < 0 ) iniIncrease = num - 2;\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tif( num > 2 ){\n\t\t\tbool bFound = false;\n\t\t\t/*for(int i = iniIncrease; i < num && !bFound; i++){\n\t\t\t\tfor(int j = i + 1; j < num && !bFound; j++){\n\t\t\t\t\tif( !vhist.empty() && vhist.end() != find(vhist.begin(), vhist.end(), make_pair(i,j)) ) continue;\n\t\t\t\t\tvhist.push_back(make_pair(i,j));*/\n\t\t\t\t\tif( solve( p, num-2, w, r) ){\n\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t}\n\t\t\t\t\tswap(r[0],r[num-1]);\n\t\t\t\t\tswap(r[1],r[num-2]);\n\t\t\t\t\tif( solve( p, num-2, w, r) ){\n\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t}\n\t\t\t\t\t//swap(r[i],r[0]);\n\t\t\t\t\t//swap(r[j],r[1]);\n\t\t\t/*\t}\n\t\t\t}*/\n\t\t\tif( bFound ) cout << \"OK\\n\";\n\t\t\telse cout << \"NA\\n\";\n\t\t}else{\n\t\t\tif( num == 2 ){\n\t\t\t\tcout << (r[0]+r[1]+2.0*sqs[r[0]][r[1]] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}else if( num == 1 ){\n\t\t\t\tcout << (2*r[0] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\nstruct qu_data{\n    double l;\n    double last;\n    int rest_cake_num;\n    int rest_cake[15];\n};\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        //cout<<input;\n        if(input==\"\")break;\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            cake_count++;\n        }\n        \n        \n        qu_data data;\n        data.l=0.0;\n        data.last=0.0;\n        data.rest_cake_num=cake_count;\n        for(int i=0; i<15; i++){\n            data.rest_cake[i]=cake[i];\n        }\n        \n        queue<qu_data> qu;\n        qu.push(data);\n        \n        \n        bool output_flag=true;\n        while(!qu.empty()){\n            qu_data front_data = qu.front();\n            qu.pop();\n            if(front_data.rest_cake_num==0&&front_data.l<=box){\n                cout<<\"OK\"<<endl;\n                output_flag=false;\n                break;\n            }\n            \n            for(int i=0; i<front_data.rest_cake_num; i++){\n                qu_data push_data = front_data;\n                if(push_data.l == 0.0){\n                    push_data.l+=push_data.rest_cake[i];\n                    push_data.last=push_data.rest_cake[i];\n                    push_data.rest_cake_num--;\n                    swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                }else{\n                    double x = (push_data.last+push_data.rest_cake[i])*(push_data.last+push_data.rest_cake[i])-(push_data.last-push_data.rest_cake[i])*(push_data.last-push_data.rest_cake[i]);\n                    \n                    push_data.l+=sqrt(fabs(x));\n                    push_data.last=push_data.rest_cake[i];\n                    push_data.rest_cake_num--;\n                    swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                    \n                    if(push_data.rest_cake_num==0)push_data.l+=push_data.last;\n                    \n                }\n                \n                qu.push(push_data);\n            }\n            \n        }\n        if(output_flag)cout<<\"NA\"<<endl;\n\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define X first\n#define Y second\n#define rep(i,n) for(int i=0;i<n;i++)\nvector<double> data;\npair<double,double> lc;\nvector<bool> done;\n\ndouble memo[1<<12][11];\n\nint boxSize;\nbool flag;\n\ndouble solve(double x,double a,double b){\n\treturn (2.0*x+sqrt(4*x*x-4*(x*x-4*a*b)) ) / 2.0;\n}\n\nvoid memo_view()\n{\n\tfor(int i=0;i < ( 1<<done.size() );i++){\n\t\tfor(int j=0; j < done.size() ;j++){\n\t\t\tif(i & (1<<j) )cout << j+1 << \" \";\n\t\t}\n\t\tcout << endl;\n\t\tcout << \"=\" << memo[i] << endl << endl;\n\t}\n}\nvoid bt(){\n\tif( count(done.begin(),done.end(),true) == done.size() ){\n\t\tif( lc.X + lc.Y <= boxSize){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tif(flag || lc.X + lc.Y > boxSize - 1.0e-07)return;\n\t\n\tint msk = 0;\n\tfor(int i=0;i<done.size();i++){\n\t\tif(done[i])msk += 1<<i;\n\t}\n\tif( lc.X + lc.Y >= memo[msk][(int)lc.first])return;\n\tmemo[msk][(int)lc.first] = lc.X + lc.Y;\n\tfor(int i=0;i<data.size();i++){\n\t\tif(done[i])continue;\n\t\t\n\t\tif(solve(lc.X,lc.Y,data[i]) > boxSize)continue;\n\t\tdone[i] = true;\n\t\tpair<double,double> tmp = lc;\n\t\tlc = make_pair(solve(lc.X,lc.Y,data[i]),data[i]);\n\t\tbt();\n\t\tlc = tmp;\n\t\tdone[i] = false;\n\t}\n}\n\n\nint main(){\n\tint t;\n\tstring s;\n\twhile(getline(cin,s) && s != \"\"){\n\t\tvector<int> input;\n\t\tflag = false;\n\t\tdata.clear();\n\t\t\n\t\tstringstream ss(s);\n\t\twhile(ss >> t)input.push_back(t);\n\t\t\n\t\tboxSize = input[0];\n\t\tfor(int i=1;i<input.size();i++){\n\t\t\tdata.push_back(input[i]);\n\t\t}\n\t\tsort( data.begin(),data.end(),greater<int>() );\n\t\tdone.resize(data.size());\n\t\tfill(done.begin(),done.end(),false);\n\t\trep(i,1<<12)rep(j,11)memo[i][j] = (1<<12);\n\t\t\n\t\tfor(int i=0;i<data.size();i++){\n\t\t\tdone[i] = true;\n\t\t\tlc = make_pair(data[i],data[i]);\n\t\t\tbt();\n\t\t\tdone[i] = false;\n\t\t}\n\n\t\tcout << (flag?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define X first\n#define Y second\n\nvector<double> data;\npair<double,double> lc;\nvector<bool> done;\n\nvector<double> memo(1<<12);\nint boxSize;\nbool flag;\n\ndouble solve(double x,double a,double b){\n\treturn (2.0*x+sqrt(4*x*x-4*(x*x-4*a*b)) ) / 2.0;\n}\n\nvoid memo_view()\n{\n\tfor(int i=0;i < ( 1<<done.size() );i++){\n\t\tfor(int j=0; j < done.size() ;j++){\n\t\t\tif(i & (1<<j) )cout << j+1 << \" \";\n\t\t}\n\t\tcout << endl;\n\t\tcout << \"=\" << memo[i] << endl << endl;\n\t}\n}\nvoid bt(){\n\tif( count(done.begin(),done.end(),true) == done.size() ){\n\t\tif( lc.X + lc.Y <= boxSize){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tif(flag || lc.X + lc.Y > boxSize)return;\n\t\n\tint msk = 0;\n\tfor(int i=0;i<done.size();i++){\n\t\tif(done[i])msk += 1<<i;\n\t}\n\tif( lc.X + lc.Y >= memo[msk])return;\n\tmemo[msk] = lc.X + lc.Y;\n\tfor(int i=0;i<data.size();i++){\n\t\tif(done[i])continue;\n\t\t\n\t\tif(solve(lc.X,lc.Y,data[i]) > boxSize)continue;\n\t\tdone[i] = true;\n\t\tpair<double,double> tmp = lc;\n\t\tlc = make_pair(solve(lc.X,lc.Y,data[i]),data[i]);\n\t\tbt();\n\t\tlc = tmp;\n\t\tdone[i] = false;\n\t}\n}\n\n\nint main(){\n\tint t;\n\tstring s;\n\twhile(getline(cin,s) && s != \"\"){\n\t\tvector<int> input;\n\t\tflag = false;\n\t\tdata.clear();\n\t\t\n\t\tstringstream ss(s);\n\t\twhile(ss >> t)input.push_back(t);\n\t\t\n\t\tboxSize = input[0];\n\t\tfor(int i=1;i<input.size();i++){\n\t\t\tdata.push_back(input[i]);\n\t\t}\n\t\t//sort( data.begin(),data.end(),greater<int>() );\n\t\tdone.resize(data.size());\n\t\tfill(done.begin(),done.end(),false);\n\t\tfill(memo.begin(),memo.end(),(1<<10));\n\t\t\n\t\tfor(int i=0;i<data.size();i++){\n\t\t\tdone[i] = true;\n\t\t\tlc = make_pair(data[i],data[i]);\n\t\t\tbt();\n\t\t\tdone[i] = false;\n\t\t}\n\t\tcout << (flag?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <map>\n#include <deque>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<30;\nconst int EPS = 1e-8;\n\ntypedef pair<int, int> pii;\n\nmap<pii, double> mp;\n\ndouble calc(int r1, int r2) {\n  if (mp[pii(r1,r2)]) return mp[pii(r1,r2)];\n  return mp[pii(r1,r2)] = sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main() {\n  string s;\n  while(getline(cin, s)) {\n    stringstream ss(s);\n    double x;\n    ss >> x;\n    int r;\n    vector<int> v;\n    while(ss >> r) {\n      v.push_back(r);\n    }\n    sort(ALL(v));\n    int n = v.size();\n    if (n == 0) {\n      cout << \"OK\" << endl;\n      continue;\n    }\n    deque<int> dq;\n    REP(i,n/2) {\n      if (i%2 == 0) {\n        dq.push_front(v[i]);\n        dq.push_back(v[n-i-1]);\n      } else {\n        dq.push_front(v[n-i-1]);\n        dq.push_back(v[i]);\n      }\n    }\n    if (n%2) {\n      if (n==1)\n        dq.push_back(v[0]);\n      else if (dq[n-2] + calc(dq[0],v[n/2]) < dq[0] + calc(dq[n-2], v[n/2]))\n        dq.push_front(v[n/2]);\n      else\n        dq.push_back(v[n/2]);\n    }\n    // FOR(it, dq) {\n    //   cout << *it << \" \";\n    // }\n    // cout << endl;\n\n    double xx = dq[0] + dq[n-1];\n    REP(i, n - 1) {\n      xx += calc(dq[i], dq[i+1]);\n    }\n    if (xx <= x)\n      cout << \"OK\";\n    else\n      cout << \"NA\";\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-6 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\ndouble add(double a, double b){\n  if(abs(a+b) < eps* (abs(a) + abs(b))) return 0;\n  return a+b;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,1e9));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw = add(bw,v[nxt]);\n            }\n            if(bfr != 0){\n              ll h = v[bn]+v[nxt],s = v[bn] - v[nxt];\n              bw = add(bw , sqrt(h*h - s*s));\n            }\n            dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            if((bfr|(1 << nxt)) == (1 << n)-1){\n              ans = min(ans,bw);\n            }\n          }\n        }\n      }\n    }\n    if(ans <= w){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <iterator>\n#include <sstream>\nusing namespace std;\n\nbool input(){\n\tcin.peek();\n\tif(cin.eof()){ return false; }\n\tstring s;\n\tgetline(cin, s);\n\tif(!cin){ throw 0; }\n\tstringstream ss1(s), ss2;\n\tistream_iterator<int> beg(ss1), en;\n\tvector<int> ret(beg, en);\n\tfor(size_t i = 0; i < ret.size(); ++i){\n\t\tif(i){ ss2 << ' '; }\n\t\tss2 << ret[i];\n\t}\n\tif(ss2.str() != s){ throw 0; }\n\tif(ret.size() < 2 || ret.size() > 13){ throw 0; }\n\treturn true;\n}\n\nint main(){\n\twhile(input());\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<queue>\n#include<cmath>\n#define rep(i,n)  for(int i=0;i<n;i++)\n#define INF 1<<30\nusing namespace std;\ndouble c[1<<12][12],t,d[11][11]; int n,w,r[12];\nint main(){\n\tstring s; rep(i,11)rep(j,11)d[i][j]=j-i+2*sqrt(i*j);\n\twhile(getline(cin,s)){\n\t\tstringstream ss; ss<<s; ss>>w;\n\t\tfor(n=0;ss>>r[n];n++);\n\t\tqueue<pair<int,int> > F;\n\t\tif(n==1){\n\t\t\tcout<<(r[0]<=w?\"OK\":\"NA\")<<endl;continue;\n\t\t}\n\t\trep(i,1<<n)rep(j,n)c[i][j]=INF;\n\t\trep(i,n)c[((1<<n)-1)^1<<i][i]=2*r[i],\n\t\tF.push(make_pair(((1<<n)-1)^1<<i,i));\n\t\twhile(!F.empty()){\n\t\t\tint cs=F.front().first,k=F.front().second,ns; F.pop();\n\t\t\trep(i,n)if(cs&1<<i){\n\t\t\t\tns=cs^1<<i; t=c[cs][k]+d[r[k]][r[i]];\n\t\t\t\tif(c[ns][i]>t){\n\t\t\t\t\tc[ns][i]=t;\n\t\t\t\t\tif(ns==0&&t<=w){\n\t\t\t\t\t\tcout<<\"OK\"<<endl; goto END;\n\t\t\t\t\t}\n\t\t\t\t\tF.push(make_pair(ns,i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout<<\"NA\"<<endl;\n\t\tEND:;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <map>\n\nusing namespace std;\n\n#define INF (1 << 24)\n\nint d(int n) {\n\treturn n * n;\n}\n\ntypedef pair< double, pair<int, int> > P;\n\nint v_to_int(vector<bool> v) {\n\tint ret = 0;\n\tfor (int i = 0; i < v.size(); ++i) {\n\t\tret <<= 1;\n\t\tret |= v[i];\n\t}\n\treturn ret;\n}\n\ndouble EPS = 1e-9;\n\nint main() {\n\tint L;\n\twhile ( scanf(\"%d\", &L) != EOF ) {\n\t\tvector<int> v;\n\n\t\tchar c;\n\t\twhile ( c = getchar(), c != '\\n' && c != '\\r' && c != EOF ) {\n\t\t\tint a; scanf(\"%d\", &a);\n\t\t\tv.push_back(a);\n\t\t}\n\n/*\n\t\tsort( v.begin(), v.end() );\n\n\t\tint n = v.size();\n\t\tvector<int> v1, v2;\n\t\tfor (int i = 0; i < n/2; ++i)\n\t\t\tv1.push_back(v[i]);\n\n\t\tfor (int i = n/2; i < n; ++i)\n\t\t\tv2.push_back(v[i]);\n*/\n\n\t\tint n = v.size();\n\t\tvector< vector<double> > len(n, vector<double>(n, INF));\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tlen[i][j] = sqrt( d(v[i]+v[j]) - d( abs(v[i]-v[j]) ) );\n\n\t\tpriority_queue<P, vector<P>, greater<P> > Q;\n\t\tfor (int i = 0, k = 1; i < n; ++i, k *= 2) {\n\t\t\tQ.push( P( v[i], make_pair(i, k) ) );\n\t\t}\n\n\t\tdouble ans = INF;\n\t\tdouble cost[1<<12][12]; fill(&cost[0][0], &cost[0][0]+(1<<12)*12, INF);\n\t\twhile ( !Q.empty() ) {\n\t\t\tP p = Q.top(); Q.pop();\n\n\t\t\tdouble length = p.first;\n\t\t\tint head = p.second.first;\n\t\t\tint prev = p.second.second;\n\n\t\t\tint sz = 0;\n\t\t\tfor (int i = 0, k = 1; i < n; ++i, k *= 2)\n\t\t\t\tsz += !!(prev & k);\n\n\t\t\tif (sz >= n) {\n\t\t\t\tif (length + v[head] < ans)\n\t\t\t\t\tans = length + v[head];\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (int i = 0, k = 1; i < n; ++i, k *= 2) {\n\t\t\t\tif (prev & k) continue;\n\n\t\t\t\tint new_prev = prev | k;\n\n\t\t\t\tif (length + len[head][i] + v[i] > cost[new_prev][head] - EPS) continue;\n\t\t\t\tcost[new_prev][head] = length + len[head][i] + v[i];\n\n\t\t\t\tQ.push( P( length + len[head][i], make_pair(i, new_prev) ) );\n\t\t\t}\n\t\t}\n\n//\t\tcout << ans << endl;\n\t\tif (ans <= L) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 100; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n\n    if(r.size()<=5){\n        sort(r.begin(),r.end());\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.000001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tint debug;\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\tdebug = 0;\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tdebug++;\n\t\t\t\t\tif(debug > 1000000){\n\t\t\t\t\t\tprintf(\"BUG\\n\");\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<sstream>\n#include<cmath>\n\nusing namespace std;\n\nconst int MAX = 12;\nvector<double> Cake;\ndouble box;\ndouble dp[(1<<MAX)][MAX];\n\nvoid init(){\n  Cake.clear();\n  fill(dp[0],dp[0]+(1<<MAX)*MAX,100000000);\n  dp[0][0] = 0;\n}\n\nvoid make(){\n  string s;\n  getline(cin,s);\n  stringstream ss(s);\n  double num;\n  while(ss >> num) Cake.push_back(num);\n}\n\nvoid solve(){\n\n\n  for(int i = 0; i < (1<<Cake.size()); i++)\n    for(int j = 0; j < (int)Cake.size(); j++){\n      if(i == 0) {dp[(1<<j)][j] = Cake[j]; continue;}\n      for(int k = 0; k < (int)Cake.size(); k++)\n\tif(!(i&(1<<k)) && j != k)\n\t  dp[i+(1<<k)][k] = min(dp[i+(1<<k)][k],dp[i][j]+2.0*sqrt(Cake[j]*Cake[k]));\n\t\n    }\n\n  for(int i = 0; i < (int)Cake.size(); i++){\n    if(dp[(1<<Cake.size())-1][i]+Cake[i] <= box) {cout << \"OK\" << endl;return;}\n  }\n\n  cout << \"NA\" << endl;\n}\n\nint main(){\n\n  while(cin >> box){\n    init();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\ndouble add(double a, double b){\n  if(abs(a+b) < eps* (abs(a) + abs(b))) return 0;\n  return a+b;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,0));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw = add(bw,v[nxt]);\n            }\n            if(bfr != 0){\n              bw = add(bw , 2.0 * sqrt(v[bn] * v[nxt]));\n            }\n            if(dp[bfr|( 1 << nxt)][nxt] != 0)\n              dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            else\n              dp[bfr|( 1 << nxt)][nxt] = bw;\n            if((bfr|(1 << nxt)) == (1 << n)-1 && w - bw >= 0){\n              f = true;\n            }\n          }\n        }\n      }\n    }\n    if(f){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <stdio.h>\n#include <algorithm>\n#include <list>\nusing namespace std;\n\nint main() {\n int i,n,k,box;\n double s,a,b,da[15];\n list<double> lis;\n list<double>::iterator it;\n while(true) {\n n=0;\n cin >> box;\n while(cin >> da[n++]) if (cin.peek()=='\\n') break;\n sort(da,da+n);\n lis.push_front(da[0]);\n for (i=1;i<(n/2)*2;i++) {\n\t k=(i % 2)==0 ? i/2 : (n-1)-i/2;\n  if ((i % 2==1 && (lis.front()<lis.back())) || (i % 2==0 && (lis.front()>lis.back()))) lis.push_front(da[k]);\n  else lis.push_back(da[k]); }\n if (n>1 && n % 2==1)\n\t if (2*sqrt(da[n/2]*lis.front())-lis.front()<2*sqrt(da[n/2]*lis.back())-lis.back()) lis.push_front(da[n/2]); \n\t else lis.push_back(da[n/2]);   \n s=lis.front();\n for (it=lis.begin(),i=0;i<n-1;i++,it++) { a=*it++; b=*it--; s+=2*sqrt(a*b); }\n s+=lis.back();\n if (s<=box) cout << \"OK\" << endl; else cout << \"NA\" << endl; \n lis.clear();\n }\n return 0;\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <vector>\n#include <string>\n#include <map>\n#include <cmath>\n#include <sstream>\n#include <queue>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <iterator>\n#include <stack>\n#include <list>\nusing namespace std;\ntypedef long long int lli;\ntypedef pair<int,int> P;\n#define F first\n#define S second\nconst int INF=1000000000;\n\nint main(){\n\tstring str;\n\twhile(getline(cin,str)){\n\t\tstringstream s;\n\t\ts << str;\n\t\tint l;\n\t\ts >> l;\n\t\tvector<int> r;\n\t\twhile(!s.eof()){\n\t\t\tint tmp;\n\t\t\ts >> tmp;\n\t\t\tr.push_back(tmp);\n\t\t}\t\n\t\tdouble dp[1<<12][12];\n\t\tdouble d[12][12];\n\t\tint n=(int)r.size();\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tfor(int j=0; j<n; ++j){\n\t\t\t\td[i][j]=2*sqrt(r[i]*r[j]);\n\t\t\t}\n\t\t}\n\t\tfor(int S=0; S<(1<<n); ++S){\n\t\t\tfill(dp[S],dp[S]+n,INF);\n\t\t}\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tdp[(1<<n)-1-(1<<i)][i]=r[i];\n\t\t}\n\t\tfor(int S=(1<<n)-2; S>=0; --S){\n\t\t\tfor(int j=0; j<n; ++j){\n\t\t\t\tif(!(S&(1<<j))){\n\t\t\t\t\tfor(int k=0; k<n; ++k){\n\t\t\t\t\t\tif(S==0) dp[S][j]=min(dp[S][j],dp[S|1<<j][k]+d[j][k]+r[j]);\n\t\t\t\t\t\telse dp[S][j]=min(dp[S][j],dp[S|1<<j][k]+d[j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble res=INF;\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tres=min(res,dp[0][i]);\n\t\t\t//cout << dp[0][i] << \"\\n\";\n\t\t}\n\t\tif(res<=l) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t\t//cout << res << \"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15];\n    double cake_length;\n    int last_cake;\n};\n\nsome_cake init_some_cake(){\n    some_cake init;\n    for(int i=0; i<15; i++)init.cake_flag[i]=0;\n    init.cake_length=0.0;\n    init.last_cake=0;\n    \n    return init;\n}\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count])cake_count++;\n        \n        queue<some_cake> qu;\n        some_cake temp ={};\n        qu.push(temp);\n        bool ans_flag=true;\n        while(qu.size()!=0){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <string>\n#include <cmath>\n#include <queue>\n#include <map>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\nconst int INF = 1<<30;\nconst int EPS = 1e-8;\n\ntypedef pair<int, int> pii;\n\nmap<pii, double> mp;\n\ndouble calc(int r1, int r2) {\n  if (mp[pii(r1,r2)]) return mp[pii(r1,r2)];\n  return mp[pii(r1,r2)] = sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main() {\n  string s;\n  while(getline(cin, s)) {\n    stringstream ss(s);\n    double x;\n    ss >> x;\n    int r;\n    vector<int> v;\n    while(ss >> r) {\n      v.push_back(r);\n    }\n    sort(ALL(v));\n    int n = v.size();\n    bool f = false;\n    // map<vector<int>, bool> mp2;\n    // do {\n    //   if (mp2[v]) continue;\n    //   double xx = v[0] + v[v.size()-1];\n    //   REP(i, v.size() - 1) {\n    //     xx += calc(v[i], v[i+1]);\n    //   }\n    //   FOR(it,v)\n    //     cout << *it << \" \";\n    //   cout << endl;\n    //   cout << xx << endl;\n    //   if (xx <= x + EPS) {\n    //     f = true;\n    //     break;\n    //   }\n    //   mp2[v] = true;\n    // } while(next_permutation(ALL(v)));\n    vector<int> vv[2];\n    for (int i=0, j=n-1; i<=j; i++,j--) {\n      if (i==j) {\n        vv[0].push_back(v[i]);\n        vv[1].push_back(v[i]);\n        break;\n      }\n      vv[0].push_back(v[i]);\n      vv[0].push_back(v[j]);\n      vv[1].push_back(v[j]);\n      vv[1].push_back(v[i]);\n    }\n    REP(k,2) {\n      double xx = vv[k][0] + vv[k][n-1];\n      // FOR(it,vv[k])\n      //   cout << *it << \" \";\n      // cout << endl;\n      REP(i, n-1){\n        xx += calc(vv[k][i], vv[k][i+1]);\n      }\n      // cout << xx << endl;\n      if (xx <= x+EPS) {\n        f = true;\n        break;\n      }\n    }\n    if (f)\n      cout << \"OK\";\n    else\n      cout << \"NA\";\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> parse(string str) {\n\tvector<int> ret; int t = 0; str += ' ';\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ') ret.push_back(t), t = 0;\n\t\telse t = t * 10 + str[i] - 48;\n\t}\n\treturn ret;\n}\nint bitcount(int x) {\n\tint ret = 0;\n\tfor (int i = 0; i < 31; i++) {\n\t\tif (x & (1 << i)) ret++;\n\t}\n\treturn ret;\n}\nstring s; long double dp[65536][16];\nint main() {\n\twhile (s = \"\", getline(cin, s)) {\n\t\tvector<int> u = parse(s);\n\t\tvector<int> v(u.begin() + 1, u.end());\n\t\tint n = v.size();\n\t\tfor (int i = 0; i < (1 << n); i++) {\n\t\t\tfor (int j = 0; j < n; j++) dp[i][j] = 999999999.9L;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) dp[1 << i][i] = v[i];\n\t\tfor (int i = 1; i < (1 << n); i++) {\n\t\t\tif (bitcount(i) <= 1) continue;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (!(i & (1 << j))) continue;\n\t\t\t\tdp[i][j] = 999999999.9L;\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif ((i & (1 << k)) && (j != k)) {\n\t\t\t\t\t\tlong double d1 = v[j] + v[k], d2 = abs(v[j] - v[k]);\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] + sqrtl(d1 * d1 - d2 * d2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong double ret = 999999999.9L;\n\t\tfor (int i = 0; i < n; i++) ret = min(ret, dp[(1 << n) - 1][i] + v[i]);\n\t\tcout << (ret <= u[0] + 1e-10 ? \"YES\" : \"NO\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\nusing ll = long long;\nusing pii = pair<int, int>;\n\nvector<string> split(const string& str, const string& seps) {\n  char *p, *str_buff = new char[str.size() + 1];\n  vector<string> res;\n  strcpy(str_buff, str.c_str());\n  p = strtok(str_buff, seps.c_str());\n  while (p) {\n    res.emplace_back(p);\n    p = strtok(NULL, seps.c_str());\n  }\n  delete str_buff;\n  return res;\n}\n\nconst int INF = 1 << 30;\nint W, n;\nvector<int> r;\ndouble dp[1 << 12][12];\n\nint main() {\n  cin.tie(0);\n  ios_base::sync_with_stdio(false);\n  cout << fixed << setprecision(10);\n  \n  string s;\n  while (getline(cin, s)) {\n    auto v = split(s, \" \");\n    W = stoi(v[0]), n = v.size() - 1;\n    r.clear();\n    for (int i = 1; i < (int)v.size(); i++) {\n      r.emplace_back(stoi(v[i]));\n    }\n    fill_n(*dp, (1 << 12) * 12, INF);\n    for (int i = 0; i < n; i++) {\n      dp[1 << i][i] = 2 * r[i];\n    }\n    for (int i = 0; i < 1 << n; i++) {\n      for (int j = 0; j < n; j++) {\n        if (i >> j & 1) {\n          for (int k = 0; k < n; k++) {\n            dp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] - r[k] + 2 * sqrt(r[k] * r[j]) + r[j]);\n          }\n        }\n      }\n    }\n    auto d = dp[(1 << n) - 1];\n    cout << (W - *min_element(d, d + n) > -1e-10 ? \"OK\" : \"NA\") << endl;\n  }\n\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,1,0,-1,1,-1,-1,1};\nconst int dy[]={-1,0,1,0,1,1,-1,-1};\nconst int INF = 1<<30;\nconst double EPS = 1e-15;\n#define PB push_back\n#define mk make_pair\n#define fi first\n#define se second\n#define ll long long\n#define reps(i,j,k) for(int i = (j); i < (k); i++)\n#define rep(i,j) reps(i,0,j)\n#define MOD 1000000007\ntypedef pair<int,int> Pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ndouble memo[1<<12][12][12];\ndouble dist(double a,double b){\n    if(a<b)swap(a,b);\n    return sqrt(((a+b)*(a+b))-((a-b)*(a-b)));\n}\ndouble search(int bit,int dep,int prev,vi cake){\n    if(dep == cake.size()){\n        return (double)cake[prev];\n    }\n    if(bit != 0 && memo[bit][dep][prev]){\n        return memo[bit][dep][prev];\n    }\n    double ret = INF;\n    rep(i,cake.size()){\n        if(!(bit>>i & 1)){\n            if(bit == 0){\n                ret = min(ret,search(bit|1<<i,dep+1,i,cake)+cake[i]);\n            }\n            else{\n                ret = min(ret,search(bit|1<<i,dep+1,i,cake)+dist(cake[prev],cake[i]));        \n            }\n        }\n    }\n    if(prev != -1)memo[bit][dep][prev] = ret;\n    return ret;\n}\nint main(){\n    string str;\n    while(getline(cin,str)){\n        memset(memo,0,sizeof(memo));\n        stringstream ss(str);\n        vi cake;\n        int tmp;\n        double len;\n        bool f=false;\n        while(ss >> tmp){\n            if(!f)len = (double)tmp;\n            else cake.PB(tmp);\n            f = true;\n        }\n        double ret = search(0,0,-1,cake);\n        //printf(\"%lf \\n\",ret);\n        if(len-ret > -EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <list>\n#include <map>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);++i)\n#define REP(i,n)  FOR(i,0,n)\n#define SUPrl 13\n#define UNDEFCHAN 1145\n\nint rl;\nint rs[SUPrl];\nint L;\ndouble memf[1<<SUPrl][SUPrl];\n\nvoid resetf(){\n\tFOR(s,0,1<<rl) FOR(ri,0,rl) memf[s][ri]=UNDEFCHAN;\n}\n\ndouble f(int s, int ri){\t\t\t//min_({a0,a1,..ri}=s) (sqrt(a0)-sqrt(a1))^2 + (sqrt(a1)-sqrt(a2))^2 + ..ri))^2\n\tif(memf[s][ri]!=UNDEFCHAN) return memf[s][ri];\n\tdouble re=0;\n\t\n\tint a=0;\n\tFOR(ari,0,rl) if((s>>ari&1)==1) a++;\n\t\n\tif(a==1) re=0;\n\telse{\n\t\tFOR(bri,0,rl){\n\t\t\tif((s>>bri&1)==0) continue;\n\t\t\tif(bri==ri) continue;\n\t\t\tre = max(re, f(s-(1<<ri),bri) + pow(sqrt(rs[bri])-sqrt(rs[ri]), 2) );\n\t\t}\n\t}\n\n\tmemf[s][ri]=re;\n\treturn re;\n}\n\nvoid showf(){\n\tFOR(s,0,1<<rl) FOR(ri,0,rl) cout << s <<\" \"<< ri <<\" \"<< memf[s][ri]<<endl;\n}\n\ndouble solve(){\n\tdouble re=0;\n\tFOR(ri,0,rl) re = max(re,f((1<<rl)-1,ri));\n\tre = -re;\n\tFOR(ri,0,rl) re += 2*rs[ri];\n\treturn re;\n}\n\nint main(){\n\twhile(!cin.eof()){\n\t\tcin >> L;\t\t//if(!L) return 0;\n\t\trl=0;\n\t\twhile(cin.peek()!='\\n'){\n\t\t\tcin >> rs[rl++];\n\t\t}\n\t\tresetf();\n\t\tdouble re = solve();\n\t\t//showf();\n\t\tif(re<=L) cout<<\"OK\"<<endl; else cout<<\"NA\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\ndouble dp[12][1 << 12];\n\nint main(){\n\tint width;\n\twhile(cin >> width){\n\t\tfor(int i = 0; i < 12; ++i){\n\t\t\tfor(int j = 0; j < (1 << 12); ++j){ dp[i][j] = -1.0; }\n\t\t}\n\t\tstring line;\n\t\tgetline(cin, line);\n\t\tstringstream ss(line);\n\t\tvector<int> cakes;\n\t\tint r;\n\t\twhile(ss >> r){\n\t\t\tcakes.push_back(r);\n\t\t\tint index = cakes.size() - 1;\n\t\t\tdp[index][1 << index] = static_cast<double>(r * 2);\n\t\t}\n\t\tint n = cakes.size();\n\t\tfor(int j = 0; j < (1 << n); ++j){\n\t\t\tfor(int i = 0; i < n; ++i){\n\t\t\t\tif(!(j & (1 << i))){ continue; }\n\t\t\t\tfor(int k = 0; k < n; ++k){\n\t\t\t\t\tif(j & (1 << k)){ continue; }\n\t\t\t\t\tint mask = j | (1 << k);\n\t\t\t\t\tdouble c = cakes[i] + cakes[k];\n\t\t\t\t\tdouble a = cakes[i] - cakes[k];\n\t\t\t\t\tdouble b = sqrt(c * c - a * a);\n\t\t\t\t\tdouble p = dp[i][j] - cakes[i] + b + cakes[k];\n\t\t\t\t\tdp[k][mask] = (dp[k][mask] < 0.0 ? p : min(dp[k][mask], p));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool flag = (n == 0);\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tif(dp[i][(1 << n) - 1] <= width + 1e-6){ flag = true; }\n\t\t}\n\t\tcout << (flag ? \"OK\" : \"NA\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\ndouble distance(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nint main()\n{\n\tint box_width;\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tdeque<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsort(cakes.begin(), cakes.end());\n\t\t// for (int i = 0; i < cakes.size(); ++i) {\n\t\t\t// cout << cakes[i] << endl;\n\t\t// }\n\n\t\tbool ok = false;\n\t\tdeque<int> save = cakes;\n\n\t\tdouble length = cakes.front() * 2;\n\t\tint prev = cakes.front();\n\t\tcakes.pop_front();\n\t\tbool front = false;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += distance(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tcakes = save;\n\t\tlength = cakes.back() * 2;\n\t\tprev = cakes.back();\n\t\tcakes.pop_back();\n\t\tfront = true;\n\t\twhile (!cakes.empty()) {\n\t\t\tint current;\n\t\t\tif (front) {\n\t\t\t\tcurrent = cakes.front();\n\t\t\t\tcakes.pop_front();\n\t\t\t} else {\n\t\t\t\tcurrent = cakes.back();\n\t\t\t\tcakes.pop_back();\n\t\t\t}\n\t\t\tlength -= prev;\n\t\t\tlength += distance(prev, current);\n\t\t\tlength += current;\n\t\t\tprev = current;\n\t\t\tfront = !front;\n\t\t}\n\t\tif (length <= box_width) {\n\t\t\tok = true;\n\t\t}\n\t\t// cout << length << ' ';\n\n\t\tif (ok) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <numeric>\n\n#define REP(i, a, b) for (int i = int(a); i < int(b); i++)\n#ifdef _DEBUG_\n#define dump(val) cerr << __LINE__ << \":\\t\" << #val << \" = \" << (val) << endl\n#else\n#define dump(val)\n#endif\n\nusing namespace std;\n\ntypedef long long int ll;\n\ntemplate<typename T>\nvector<T> make_v(size_t a, T b) {\n    return vector<T>(a, b);\n}\ntemplate<typename... Ts>\nauto make_v(size_t a, Ts... ts) {\n    return vector<decltype(make_v(ts...))>(a, make_v(ts...));\n}\n\nint string2int(string s) {\n    return atoi(s.c_str());\n}\n\nvector<int> parseInputs(string &s) {\n    vector<int> res;\n    s += \" \";\n    int lst = 0;\n    REP(i, 0, s.size()) {\n        if (s[i] == ' ') {\n            res.push_back(string2int(s.substr(lst, i - lst)));\n            lst = i + 1;\n        }\n    }\n    return res;\n}\n\n#include <cmath>\ndouble calcDist(double r1, double r2) {\n    return sqrt(r1 * r1 - r2 * r2);\n}\n\nint main() {\n    cin.tie(nullptr);\n    ios::sync_with_stdio(false);\n    string s;\n    while (true) {\n        getline(cin, s);\n        if (s.size() == 0) break;\n        auto res = parseInputs(s);\n        int W = res[0];\n        res.erase(res.begin());\n        int n = res.size();\n        auto dp = make_v(1 << n, n, 1e+15);\n        REP(i, 0, n) {\n            dp[1 << i][i] = res[i];\n        }\n        REP(i, 1, 1 << n) {\n            REP(j, 0, n) {\n                if (!((i >> j) & 1)) continue;\n                REP(k, 0, n) {\n                    if ((i >> k) & 1) continue;\n                    double dist = calcDist(res[j] + res[k], abs(res[j] - res[k]));\n                    int nxt = i | (1 << k);\n                    dp[nxt][k] = min(dp[nxt][k], dp[i][j] + dist);\n                }\n            }\n        }\n        double ans = 1e+15;\n        REP(i, 0, n) {\n            ans = min(ans, dp[(1 << n) - 1][i] + res[i]);\n        }\n        ans -= 1e-6;\n        cout << (ans <= W ? \"OK\" : \"NA\") << endl;\n    }\n\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint W, N;\nvector<int> R;\n\nint pow(int x, int n) {\n  return (int)(pow((double)x, (double)n) + 0.5);\n}\n\ndouble calc(vector<int> v) {\n  vector<int>::iterator it = v.begin();\n  double sum = *it;\n  int bfr = *it;\n  int cnt = 1;\n  v.erase(it);\n\n  while(!v.empty()) {\n    if(cnt == 0) {\n      it = v.begin();\n    } else {\n      it = --v.end();\n    }\n    sum += sqrt(pow(bfr + *it, 2) - pow(bfr - *it, 2));\n\n    bfr = *it;\n    v.erase(it);\n    cnt = 1 - cnt;\n  }\n  return sum + bfr;\n}\n\nvoid solve() {\n  sort(R.begin(), R.end());\n  double tmp1 = calc(R);\n  reverse(R.begin(), R.end());\n  double tmp2 = calc(R);\n\n  if(min(tmp1, tmp2) <= W) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"NA\" << endl;\n  }\n}\n\nmain() {\n  while(1) {\n    string str;\n    getline(cin, str);\n    if(cin.eof()) break;\n    stringstream ss;\n    ss << str;\n    ss >> W;\n    R.clear();\n    for(int i = 0; ; ++i) {\n      if(ss.eof()) {\n\tN = i;\n\tbreak;\n      }\n      int tmp;\n      ss >> tmp;\n      R.push_back(tmp);\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tvector<vector<double> > d(13, vector<double>(1 << n, 1e25));\n\t\t//cout << (float)1e25 << endl;\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> parse(string str) {\n\tvector<int> ret; int t = 0; str += ' ';\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ') ret.push_back(t), t = 0;\n\t\telse t = t * 10 + str[i] - 48;\n\t}\n\treturn ret;\n}\nint bitcount(int x) {\n\tint ret = 0;\n\tfor (int i = 0; i < 31; i++) {\n\t\tif (x & (1 << i)) ret++;\n\t}\n\treturn ret;\n}\nstring s; long double dp[1 << 12][12];\nint main() {\n\twhile (s = \"\", getline(cin, s)) {\n\t\tvector<int> u = parse(s);\n\t\tvector<int> v(u.begin() + 1, u.end());\n\t\tint n = v.size();\n\t\tfor (int i = 0; i < (1 << n); i++) {\n\t\t\tfor (int j = 0; j < n; j++) dp[i][j] = 999999999.9L;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) dp[1 << i][i] = v[i];\n\t\tfor (int i = 1; i < (1 << n); i++) {\n\t\t\tif (bitcount(i) <= 1) continue;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (!(i & (1 << j))) continue;\n\t\t\t\tdp[i][j] = 999999999.9L;\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif ((i & (1 << k)) && (j != k)) {\n\t\t\t\t\t\tlong double d1 = v[j] + v[k], d2 = abs(v[j] - v[k]);\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] + sqrtl(d1 * d1 - d2 * d2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlong double ret = 999999999.9L;\n\t\tfor (int i = 0; i < n; i++) ret = min(ret, dp[(1 << n) - 1][i] + v[i]);\n\t\tcout << (ret <= u[0] ? \"YES\" : \"NO\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <sstream>\n#include <cstring>\n#include <fstream>\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nconst int MAX_N = 12+1;\nconst double INF = 1e+100;\ndouble dist[10+1][10+1]; // ツ板シツ径 a ツづ個ケツーツキツづ個陳心ツづ板シツ径 b ツづ個ケツーツキツづ個陳心ツづづ個仰猟猟」ツ。\ndouble d[MAX_N][MAX_N];\ndouble dp[1<<MAX_N][MAX_N];\nint n, w;\nint a[MAX_N];\n\n// ツケツーツキツ甘板づ個仰猟猟」ツづーツ仰づ淞づゥ\nint calc (void )\n{\n\tfor (int i = 3; i <= 10; i++ )\n\t\tfor (int j = 3; j <= 10; j++ )\n\t\t\tdist[i][j] = 2.0*sqrt ((double)i*j );\n}\n\n// ツ経ツ路ツづ個静堋堕アツづーツ仰づ淞づゥ\nvoid make (void )\n{\n\t// ツ渉可甘コツ可サ\n\trep (i, n+1 )\n\t\trep (j, n+1 )\n\t\t\t\td[i][j] = INF;\n\n\trep (i, n )\n\t\trep (j, n )\n\t\t\td[i][j] = dist[a[i]][a[j]];\n\n\trep (i, n ){\n\t\td[n][i] = a[i]; d[i][n] = a[i];\n\t} // end rep\n\tn++;\n}\n\n// bitDP\ndouble solve (){\n\n\t// ツ渉可甘コツ可サ\n\trep (S, 1<<n ){\n\t\tfill (dp[S], dp[S]+n, INF );\n\t} // end rep\n\n\tdp[(1<<n)-1][0] = 0;\n\tfor (int S = (1 << n ) - 2; S >= 0; S-- )\n\t\trep (v, n ) rep (u, n )\n\t\t\tif (!(S >> u & 1 ) )\n\t\t\t\tdp[S][v] = min (dp[S][v], dp[S | 1 << u][u] + d[v][u] );\n\n\treturn dp[0][0];\n}\n\nint main()\n{\n\tcalc ();\n\tstring str = \"\";\n\n\twhile (getline (cin, str ) ){\n\t\tvector <int> cake; \n\t\tstringstream ss (str );\n\t\tss >> w;\n\t\tint i = 0, m;\n\t\twhile (ss >> m ){\n\t\t\t a[i++] = m;\n\t\t} // end while\n\t\tn = i;\n\t\tmake ();\n\t\tif ((double)w >= solve () ){\n\t\t\tprintf ( \"OK\\n\" );\n\t\t}else{\n\t\t\tprintf ( \"NA\\n\" );\n\t\t} // end if\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nbool f;\ndouble w;\nvector<double> v;\nint n;\ndouble calc(int i,int j){\n  return sqrt((v[i]+v[j])*(v[i]+v[j])-(v[i]-v[j])*(v[i]-v[j]));\n}\ndouble memo[1<<12][12];\nvoid dfs(double l,int b,int p){\n  if(~p){\n    if(memo[b][p]<=l) return;\n    memo[b][p]=l;\n  }\n  if(b==(1<<n)-1){\n    f|=l+v[p]<=w;\n    return;\n  }\n  if(p<0) for(int i=0;i<n;i++) dfs(v[i],b+(1<<i),i);\n  else for(int i=0;i<n;i++) if(!((b>>i)&1)) dfs(l+calc(p,i),b+(1<<i),i);\n}\nint main(){\n  string s;\n  while(getline(cin,s)){\n    v.clear();\n    stringstream ss(s);\n    ss>>w;\n    double t;\n    while(ss>>t) v.push_back(t);\n    n=v.size();\n    f=0;\n    \n    for(int i=0;i<(1<<n);i++) \n      for(int j=0;j<n;j++)\n\tmemo[i][j]=1e9;\n    \n    dfs(0,0,-1);\n    cout<<(f?\"OK\":\"NG\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define INF 1e9\nusing namespace std;\n\nint getNum(string a,int &i){\n  int res=0;\n  while(isdigit(a[i]))res=res*10+a[i++]-'0';\n  return res;\n}\n\ndouble getx(double R,double r){return sqrt((R+r)*(R+r)-(R-r)*(R-r));}\n\n\nint n;\nvector<double> num;\ndouble mem[11][11][1<<12];\nint used[11][11][1<<12];\ndouble dfs(int l,int r,int sta){\n  if(sta==(1<<n)-1)return 0;\n  if(used[l][r][sta]++)return mem[l][r][sta];\n\n  double res=INF;\n  for(int i=0;i<n;i++){\n    if((sta&(1<<i)))continue;\n    double lcost=num[i]+getx(l,num[i])-l;\n    double rcost=num[i]+getx(num[i],r)-r;\n    res=min(res,lcost+dfs(num[i],r,sta|(1<<i)));\n    res=min(res,rcost+dfs(l,num[i],sta|(1<<i)));\n  }\n  return mem[l][r][sta]=res;\n}\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    int w,idx=0;\n    w = getNum(str,idx);\n    num.clear();\n    while(idx++<str.size())num.push_back(getNum(str,idx));\n    n = num.size();\n    memset(used,0,sizeof(used));\n    double mn=INF;\n    for(int i=0;i<n;i++)mn=min(mn,2*num[i]+dfs(num[i],num[i],1<<i));\n    cout<<(mn<=w? \"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "import sys\nfrom math import sqrt\n\n\ndef rec(state, v):\n    if state == (1 << N) - 1:\n        return cakes[v]\n    if dp[state][v] != -1:\n        return dp[state][v]\n\n    ret = INF\n    for i in range(N):\n        if not (state >> i & 1):\n            ret = min(ret, rec(state | 1 << i, i) + sqrt(pow(cakes[i] + cakes[v], 2) - pow(cakes[i] - cakes[v], 2)))\n    dp[state][v] = ret\n    return ret\n\n\ntestcases = [[int(x) for x in line.split()] for line in sys.stdin.readlines()]\n\nfor testcase in testcases:\n    box, *cakes = testcase\n    N = len(cakes)\n    INF = box + 1\n    ans = INF\n    for i in range(N):\n        dp = [[-1] * N for _ in range(1 << N)]\n        ans = min(ans, rec(1 << i, i) + cakes[i])\n    print('OK' if ans <= box else 'NA')"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <sstream>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\n#define OFFSET 2\n\nint box_width;\n\ndouble dist(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nbool solve(vector<int> cakes, LL state)\n{\n\tif (cakes.empty()) {\n\t\t// calculate the length\n\t\tdouble length = 0;\n\t\tint prev = 0;\n\t\tint save_state = state;\n\t\tdo {\n\t\t\tint current = state % 10 + OFFSET;\n\t\t\tstate /= 10;\n\t\t\tif (prev) {\n\t\t\t\tlength -= prev;\n\t\t\t\tlength += dist(prev, current);\n\t\t\t\tlength += current;\n\t\t\t} else {\n\t\t\t\tlength += current * 2;\n\t\t\t}\n\t\t\tprev = current;\n\t\t} while (state);\n\t\t// cout << \"state: \" << save_state << \", length: \" << length << endl;\n\t\tif (length <= box_width) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tint prev_cake = 0;\n\tfor (int i = 0; i < cakes.size(); ++i) {\n\t\tvector<int> next_cakes = cakes;\n\t\tint cake = next_cakes[i];\n\t\tif (cake == prev_cake) {\n\t\t\tnext;\n\t\t}\n\t\tLL next_state = state * 10 + (cake - OFFSET);\n\t\tnext_cakes.erase(next_cakes.begin() + i);\n\t\tif (solve(next_cakes, next_state)) {\n\t\t\treturn true;\n\t\t}\n\t\tprev_cake = cake;\n\t}\n\n\treturn false;\n}\n\nint main()\n{\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tvector<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsort(cakes.begin(), cakes.end());\n\n\t\tif (solve(cakes, 0)) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <iomanip>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#include <bitset>\nusing namespace std;\n  \nconst double EPS = 1e-9;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\n\nint main(){\n\tstring s;\n\twhile(getline(cin, s)){\n\t\tstringstream ss;\n\t\tvector<int> r;\n\t\tint boxlen;\n\t\tint n;\n\t\tss << s;\n\t\tss >> boxlen;\n\t\twhile(ss >> n){\n\t\t\tr.push_back(n);\n\t\t}\n\t\tsort(r.begin(), r.end());\n\t\tdouble len = r[0];\n\t\tif(r.size() > 1){\n\t\t\tlen += r[1];\n\t\t}\n\t\tint i = 0, j = r.size()-1;\n\t\tint cnt = 0;\n\t\twhile(i != j){\n\t\t\tlen += 2*sqrt((double)r[i]*r[j]);\n\t\t\tif(cnt%2){\n\t\t\t\tj--;\n\t\t\t}else{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\n\t\tif(len <= boxlen){\n\t\t\tcout << \"OK\" << endl;\n\t\t}else{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n\n  \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <climits>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <stack>\n#include <vector>\n#include <queue>\n#include <bitset>\n#include <string>\nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<n; i++)\n#define repa(i,s,e) for(int i=s; i<=e; i++)\n#define repd(i,s,e) for(int i=s; i>=e; i--)\n \ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef pair<int, int> pii;\n\nstring line;\nint S, r, N;\nvi cakes;\n\nconst int MAX_N = 13;\ndouble edges[MAX_N][MAX_N];\nbitset<15> used;\n\ndouble minval;\n\nvoid dfs(int v, double value) {\n\tif(used.count() == N) {\n\t\tminval = min(minval, value + cakes[v]);\n\t\treturn;\n\t}\n\n\tfor(int i=0; i<N; i++) {\n\t\tif(v != i && !used[i]) {\n\t\t\tvalue += edges[v][i];\n\t\t\tused.set(i);\n\t\t\tdfs(i, value);\n\t\t\tused.reset(i);\n\t\t\tvalue -= edges[v][i];\n\t\t}\n\t}\n}\n\nvoid solve() {\n\tN = cakes.size();\n\tmemset(&edges[0][0], 0, sizeof(double) * MAX_N * MAX_N);\n\tfor(int i=0; i<N; i++) {\n\t\tfor(int j=i+1; j<N; j++) {\n\t\t\tdouble d = 2.0 * sqrt((double)(cakes[i] * cakes[j]));\n\t\t\tedges[i][j] = edges[j][i] = d;\n\t\t}\n\t}\n\n\tminval = 10000.0;\n\tfor(int i=0; i<N; i++) {\n\t\tused.set(i);\n\t\tdfs(i, cakes[i]);\n\t\tused.reset(i);\n\t}\n\tcout << (minval <= S ? \"OK\" : \"NA\") << endl;\n}\n\nint main() {\n\twhile( 1 ) {\n\t\tgetline(cin, line);\n\t\tif(line == \"\") break;\n\n\t\t/*\n\t\tstringstream ss;\n\t\tss << line;\n\t\tss >> S;\n\t\tcakes.clear();\n\t\twhile(ss>>r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\t\tsolve();\n\t\t*/\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,0));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw += v[nxt];\n            }\n            if(bfr != 0){\n              bw += 2.0 * sqrt(v[bn] * v[nxt]);\n            }\n            if(dp[bfr|( 1 << nxt)][nxt] != 0)\n              dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            else\n              dp[bfr|( 1 << nxt)][nxt] = bw;\n            if((bfr|(1 << nxt)) == (1 << n)-1 && bw <= w){\n              f = true;\n            }\n          }\n        }\n      }\n    }\n    if(f){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 100; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<vector>\n#include<string>\n#include <sstream>\n\nusing namespace std;\n\nconst double INF=1000000000;\ndouble ans;\ndouble l;\nbool flag;\nstring str;\nvector<double> r;\ndouble dp[1<<12][12];\n\nvoid rec(int x,int bit,double nl,double nh){\n\tif(dp[bit][x]<nl)return;\n\tdp[bit][x]=nl;\n\tif(bit==(1<<r.size())-1){\n\t\tif(nl+nh<=l)flag=true;\n\t\tans=min(ans,nl+nh);\n\t\treturn;\n\t}\n\telse{\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\tif(!(bit>>i & 1)){\n\t\t\t\tdouble nnh=r[i];\n\t\t\t\tdouble nnl=nl+sqrt(pow(nh+nnh,2)-pow(fabs(nh-nnh),2));\n\t\t\t\tif(nnl<dp[bit | 1<<i][i]){\n\t\t\t\t\tdp[bit | 1<<i][i]=nnl;\n\t\t\t\t\trec(i,bit | 1<<i,nnl,nnh);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(void){\n\twhile(getline(cin,str)){\n\t\tflag=false;\n\t\tans=INF;\n\t\tr.clear();\n\t\tfor(int i=0;i<(1<<12)-1;i++){\n\t\t\tfor(int j=0;j<12;j++){\n\t\t\t\tdp[i][j]=INF;\n\t\t\t}\n\t\t}\n\t\tstringstream input(str);\n\t\tinput >> l;\n\t\tdouble a;\n\t\twhile(input >> a)r.push_back(a);\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\trec(i,1<<i,r[i],r[i]);\n\t\t}\n\t\tif(flag)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "# include <iostream>\n# include <sstream>\n# include <string>\n# include <cmath>\n# include <algorithm>\nconst int MAX_N = 12;\nconst double INF = (1 << 16);\n\nint n, l;\nint r[MAX_N];\ndouble memo[1 << MAX_N][MAX_N];\n\ndouble solve(int s, int v) {\n\tif (s == (1 << n) - 1)\n\t\treturn r[v];\n\tif (memo[s][v] >= 0)\n\t\treturn memo[s][v];\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif ((s >> i & 1) == 0)\n\t\t\tres = std::min(res, solve(s | (1 << i), i) + sqrt(pow(r[i] + r[v], 2) - pow(r[i] - r[v], 2)));\n\t}\n\treturn memo[s][v] = res;\n}\n\nint main() {\n\twhile (1) {\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tn = 0;\n\t\tstd::string str;\n\t\tstd::getline(std::cin, str);\n\t\tstd::stringstream s(str);\n\t\ts >> l;\n\t\ts.ignore();\n\t\twhile (!s.eof()) {\n\t\t\tint a;\n\t\t\ts >> a;\n\t\t\tr[n] = a;\n\t\t\t++n;\n\t\t\ts.ignore();\n\t\t}\n\t\tfor (int i = 0; i < (1 << n); ++i) {\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tmemo[i][j] = -1;\n\t\t}\n\t\tdouble ans = INF;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tans = std::min(ans, solve((1 << i), i) + r[i]);\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t\tif (ans <= (double)l)\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\telse\n\t\t\tstd::cout << \"NA\" << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <algorithm>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n\nusing namespace std;\n\n#define DEBUG(x) cerr << #x << \" = \" << x << endl\n\nconst double INF = 1e9;\nconst double EPS = 1e-8;\ninline double SQ(double x) { return x * x; }\ninline bool EQ(double x, double y) {\n    return abs(x - y) < EPS;\n}\n\nstring to_bit(int n) {\n    string s;\n    for(int i = 11; i >= 0; i--) {\n        if(n & (1 << i)) s.push_back('1');\n        else s.push_back('0');\n    }\n    return s;\n}\n\nvector<double> vec;\ninline double D(int f, int t) {\n    double l = vec[f];\n    double r = vec[t];\n    return sqrt(SQ(l + r) - SQ(l - r));\n}\n\nint N;\nmap<pair<int, int>, double> memo;\n\ndouble tsp(int v, int b) {\n    if(memo.count(make_pair(v, b))) return memo[make_pair(v, b)];\n    if(b == (1 << N) - 1) return memo[make_pair(v, b)] = vec[v];\n\n    double s = 0;\n    if(b == 0) s += vec[v];\n\n    double res = INF;\n    for(int i = 0; i < N; i++) {\n        if(b & (1 << i)) continue;\n\n        if(v == i) res = min(res, s + tsp(i, b | (1 << i)));\n        else res = min(res, s + D(v, i) + tsp(i, b | (1 << i)));\n    }\n\n    return memo[make_pair(v,b)] = res;\n}\n\nint main() {\n    for(string line; getline(cin, line); ) {\n        istringstream iss(line);\n        double len; iss >> len;\n        vec.clear();\n        for(double r; iss >> r; ) {\n            vec.push_back(r);\n        }\n        N = vec.size();\n        memo.clear();\n        double res = INF;\n        for(int i = 0; i < N; i++) {\n            res = min(res, tsp(i, 0));\n        }\n        // DEBUG(res);\n        cout << (res < len + EPS ? \"OK\" : \"NA\") << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<sstream>\n#include<cmath>\n\nusing namespace std;\n\nconst int MAX = 13;\nvector<double> Cake;\ndouble box;\ndouble dp[(1<<MAX)][MAX];\n\nvoid init(){\n  Cake.clear();\n  //dp[0][0] = 0;\n  fill(dp[0],dp[0]+(1<<MAX)*MAX,0);\n}\n\nvoid make(){\n  string s;\n  getline(cin,s);\n  stringstream ss(s);\n  double num;\n  while(ss >> num) Cake.push_back(num);\n}\n\nvoid solve(){\n\n\n  for(int i = 0; i < (1<<Cake.size()); i++)\n    for(int j = 0; j < (int)Cake.size(); j++){\n      if(i == 0) dp[(1<<j)][j] = Cake[j];\n      for(int k = 0; k < (int)Cake.size(); k++)\n\tif(!(i&(1<<k)))\n\t  dp[i+(1<<k)][k] = dp[i+(1<<k)][j]+2*sqrt(Cake[j]*Cake[k]);\n    }\n  for(int i = 0; i < (int)Cake.size(); i++){\n    //  cout << dp[(1<<Cake.size())-1][i]+Cake[i] << endl;\n    if(dp[(1<<Cake.size())-1][i]+Cake[i] <= box) {cout << \"OK\" << endl;return;}\n  }\n  cout << \"NA\" << endl;\n}\n\nint main(){\n\n  while(cin >> box){\n    init();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <algorithm>\n#include <functional>\n\nusing namespace std;\n\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int,int> PII;\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define REP( i, m, n ) for ( int i = (int)( m ); i < (int)( n ); i++ )\n#define UREP( i, m, n ) for ( unsigned int i = (unsigned int)( m ); i < (unsigned int)( n ); i++ )\n\n#define ITER( c ) __typeof( (c).begin() )\n#define IREP( c, it ) for ( ITER(c) it = c.begin(); it != c.end(); ++it )\n#define ALL( c ) (c).begin(), (c).end()\n#define RALL( c ) (c).rbegin(), (c).rend()\n\n#define PB( n ) push_back( n )\n#define MP( a, b ) make_pair( ( a ), ( b ) )\n#define EXIST( c, e ) ( (c).find( e ) != (c).end() )\n\n#define fst first\n#define snd second\n\n#define DUMP( x ) cerr << #x << \" = \" << ( x ) << endl\n#define DEBUG( x ) cerr << __FILE__ << \":\" << __LINE__ << \": \" << #x << \" = \" << ( x ) << endl\n\nint main()\n{\n\tstring line;\n\n\twhile ( getline( cin, line ) )\n\t{\n\t\tistringstream iss( line );\n\n\t\tint l;\n\t\tiss >> l;\n\n\t\tVI r;\n\t\tint in;\n\n\t\twhile ( iss >> in )\n\t\t{\n\t\t\tr.PB( in );\n\t\t}\n\n\t\tbool able = false;\n\t\tsort( ALL( r ) );\n\n\t\tdo\n\t\t{\n\t\t\tdouble curr = r.front() + r.back();\n\n\t\t\tREP( i, 0, r.size() - 1 )\n\t\t\t{\n\t\t\t\tcurr += sqrt( pow( r[i] + r[i+1], 2 ) - pow( abs( r[i] - r[i+1] ), 2 ) );\n\t\t\t}\n\n\t\t\tif ( curr <= l )\n\t\t\t{\n\t\t\t\table = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\twhile ( next_permutation( ALL( r ) ) );\n\n\t\tif ( able )\n\t\t{\n\t\t\tcout << \"OK\" << endl;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\ndouble CalcCirclesLength(vector<int> &r){\n\tdouble ret;\n\tret = r[0];\n\t//cout << r[0] << ' ';\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2.0 * sqs[ r[i] ][ r[i+1] ];\n\t\t//cout << sqs[ r[i] ][ r[i+1] ] << ' ';\n\t}\n\t//cout << r[r.size() - 1] << endl;\n\tret += r[r.size() - 1];\n\treturn ret;\n}\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tdouble length = 0;\n\t\tvector<int> vCandR;\n\t\tvector<int> vR;\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\t\t\tcin >> tmp;\n\t\t\tvCandR.push_back(tmp);\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tvR.push_back(vCandR[0]);\n\t\tvCandR.erase( vCandR.begin()+0 );\n\t\twhile( vCandR.size() > 0 ){\n\t\t\tdouble minlen = 5000;\n\t\t\tint minind = 0;\n\t\t\tint minins = 0;\n\t\t\tfor(unsigned int i = 0; i < vCandR.size(); ++i){\t\n\t\t\t\tdouble l;\n\n\t\t\t\tfor(unsigned j = 0; j <= vR.size(); j++){\n\t\t\t\t\tvR.insert(vR.begin()+j,vCandR[i]);\n\t\t\t\t\tl = CalcCirclesLength( vR );\n\t\t\t\t\tif( l < minlen ){\n\t\t\t\t\t\tminlen = l; minind = i; minins = j;\n\t\t\t\t\t}\n\t\t\t\t\tvR.erase(vR.begin()+j);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvR.insert( vR.begin() + minins, vCandR[minind] );\n\t\t\t/*for(unsigned int i = 0; i < vR.size(); ++i){\n\t\t\t\tcout << vR[i] << ' ';\n\t\t\t}\n\t\t\tcout << endl;*/\n\t\t\tvCandR.erase( vCandR.begin() + minind );\n\t\t}\n\t\tcout << (CalcCirclesLength( vR ) <= w ? \"OK\\n\" : \"NA\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<sstream>\n#include<cmath>\n\nusing namespace std;\nconst int MAX = (1<<13);\nconst double INF = (1<<20);\ntypedef pair<double,double> P; //P(center, radius)\nvector<int> V;\nP dp[MAX];\nint box;\n\nvoid init(){\n  V.clear();\n  fill(dp,dp+MAX,P(INF,INF));\n  dp[0] = P(0,0);\n}\n\nvoid input(string s){\n  stringstream ss(s);\n  ss>>box;\n  int n;\n  while(ss>>n) V.push_back(n);\n}\n\nvoid solve(){\n  for(int i = 0; i < (1<<V.size()); i++)\n    for(int j = 0; j < V.size(); j++)\n      if(i == 0){\n\tint nex = i+(1<<j);\n\tdp[nex].first = dp[nex].second = V[j];\n\t\n      }else if(!(i&(1<<j))){\n\tint nex = i+(1<<j);\n\tP p = dp[i];\n\tp.first += 2*sqrt(dp[i].second*(double)V[j]);\n\tp.second = V[j];\n\tif(p.first + p.second < dp[nex].first+dp[nex].second) dp[i+(1<<j)] = p;\n      }\n  int last = (1<<V.size())-1;\n  if(dp[last].first+dp[last].second <= (double)box) cout << \"OK\" << endl;\n  else cout << \"NA\" << endl;\n}\n\nint main(){\n\n  string s;\n  while(getline(cin,s)){\n    init();\n    input(s);\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint iniIncrease = -1;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tif( i > 0 ){\n\t\t\t\tif( r[i] > r[i-1] && iniIncrease < 0 ) iniIncrease = (i - 2 < 0 ? 0 : i - 2);\n\t\t\t}\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( iniIncrease < 0 ) iniIncrease = num - 2;\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tif( num > 2 ){\n\t\t\tbool bFound = false;\n\t\t\tfor(int i = iniIncrease; i < num && !bFound; i++){\n\t\t\t\tfor(int j = i + 1; j < num && !bFound; j++){\n\t\t\t\t\tswap(r[0],r[i]);\n\t\t\t\t\tswap(r[1],r[j]);\n\t\t\t\t\tif( solve( p, num-2, w, r) ){\n\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t}\n\t\t\t\t\tswap(r[i],r[0]);\n\t\t\t\t\tswap(r[j],r[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( bFound ) cout << \"OK\\n\";\n\t\t\telse cout << \"NA\\n\";\n\t\t}else{\n\t\t\tif( num == 2 ){\n\t\t\t\tcout << (r[0]+r[1]+2.0*sqs[r[0]][r[1]] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}else if( num == 1 ){\n\t\t\t\tcout << (2*r[0] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\ntemplate <class Itr>\nItr get_adv_itr(Itr _itr, int n) {\n  Itr itr(_itr);\n  advance(itr, n);\n  return itr;\n}\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    while (is >> temp) cakes.push_back(temp);\n    N = cakes.size();\n    string ans = \"NA\";\n\n    rep(i,N) {\n      vector<int> cp_cakes(cakes);\n      double cost = cp_cakes[i];\n      cp_cakes.erase(get_adv_itr(cp_cakes.begin(),i));\n      int last = (int)cost;\n      while (cp_cakes.size()) {\n        vector<int> dists;\n        for (int j = 0; j < cp_cakes.size(); ++j)\n          dists.push_back(pow(last - cp_cakes[j],2));\n        int id = distance(dists.begin(),\n                          max_element(dists.begin(), dists.end()));\n        // cost += sqrt(pow(last + cp_cakes[id],2) - pow(last - cp_cakes[id],2));\n        cost += 2 * sqrt(last * cp_cakes[id]);\n        last = cp_cakes[id];\n        cp_cakes.erase(get_adv_itr(cp_cakes.begin(), id));\n      }\n      cost += last;\n      if (L >= cost) {\n        ans = \"OK\";\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstdio>\n#include<algorithm>\n#include<sstream>\n#include<cmath>\nusing namespace std;\n\nint main()\n{\n\tstringstream ss;\n\tdouble box=0;\n\tdouble cakes[12];\n\n\tfor(int i=0;i<12;i++) cakes[i]=0;\n\n\tstring in;\n\twhile(getline(cin,in))\n\t{\n\t\tint i=0,j=0;\n\t\tfor(i=0;in[i]!=' ';i++)\n\t\t{\n\t\t\tss.clear();\n\t\t\tss<<in[i];\n\t\t\tint a;\n\t\t\tss>>a;\n\t\t\tbox*=10;\n\t\t\tbox+=a;\n\t\t}\n\n\t\tfor(j=0;j<12;j++)\n\t\t{\n\t\t\ti++;\n\t\t\tfor(;in[i]!=' '&&i!=in.size();i++)\n\t\t\t{\n\t\t\t\tss.clear();\n\t\t\t\tss<<in[i];\n\t\t\t\tint a;\n\t\t\t\tss>>a;\n\t\t\t\tcakes[j]*=10;\n\t\t\t\tcakes[j]+=a;\t\t\t\t\n\t\t\t}\n\t\t\tif(i==in.size()) break;\n\t\t}\n\t\tj++;\t\n\t\tsort(cakes,cakes+j);\n\n\t\tbool ok=false;\n\n\t\tdo{\n\t\t\tdouble sum=cakes[0]+cakes[1];\n\t\t\tfor(int i=2;i<j;i++){\n\t\t\t\tif(i==2) sum=sum+2*sqrt(cakes[0]*cakes[2]);\n\t\t\t\telse sum=sum+2*sqrt(cakes[i-1]*cakes[i]);\n\n\t\t\t\tif(i==j-1) sum=sum+2*sqrt(cakes[i]*cakes[1]);\n\t\t\t\telse sum=sum+2*sqrt(cakes[i]*cakes[i+1]);\n\n\t\t\t}\n\n\t\t\tif(sum<=box)\n\t\t\t{\n\t\t\t\t//printf(\"%lf\\n\",sum);\n\t\t\t\tok=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}while(next_permutation(cakes+2,cakes+j));\n\t\tif(ok) cout<<\"OK\"<<endl;\n\t\telse cout<<\"NA\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <algorithm>\nusing namespace std;\n\ndouble sq(double x) {\n    return x * x;\n}\n\ndouble getWidth(vector<int> &cake) {\n    int n = cake.size();\n    double sum = cake[0] + cake[n-1];\n    for (int i=1; i<n; ++i) {\n        sum += sqrt(sq(cake[i] + cake[i-1]) - sq(abs(cake[i] - cake[i-1])));\n    }\n    return sum;\n}\n\nint main() {\n    string input;\n    int len, r;\n    while (getline(cin, input)) {\n        stringstream ss(input);\n        ss >> len;\n        vector<int> cake;\n        while (ss >> r) {\n            cake.push_back(r);\n        }\n        bool ok = false;\n        sort(cake.begin(), cake.end());\n        do {\n            if (getWidth(cake) < len + 1e-6) {\n                ok = true;\n                break;\n            }\n        } while (next_permutation(cake.begin(), cake.end()));\n        cout << (ok ? \"OK\" : \"NA\") << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// ?????¬???????????¬??????\n\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <string>\n#include <cstring>\n#include <deque>\n#include <list>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <complex>\n#include <cmath>\n#include <limits>\n#include <cfloat>\n#include <climits>\n#include <ctime>\n#include <cassert>\n#include <numeric>\n#include <fstream>\n#include <functional>\nusing namespace std;\n\n#define rep(i,a,n) for(int (i)=(a); (i)<(n); (i)++)\n#define repq(i,a,n) for(int (i)=(a); (i)<=(n); (i)++)\n#define repr(i,a,n) for(int (i)=(a); (i)>=(n); (i)--)\n#define int long long int\n\ntemplate<typename T> void chmax(T &a, T b) {a = max(a, b);}\ntemplate<typename T> void chmin(T &a, T b) {a = min(a, b);}\ntemplate<typename T> void chadd(T &a, T b) {a = a + b;}\n\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\nconstexpr ll INF = 1001001001001001LL;\nconstexpr ll MOD = 1000000007LL;\nconstexpr double EPS = 1e-8;\n\ndouble dp[1 << 12][12];\n\nsigned main() {\n    string s;\n    while(getline(cin, s)) {\n        double W;\n        stringstream ss(s);\n        ss >> W;\n\n        vector<int> v;\n        int N, val;\n        while(ss >> val) {\n            v.push_back(val);\n        }\n\n        N = v.size();\n        rep(i,0,1<<N) rep(j,0,N) dp[i][j] = INF;\n        dp[0][0] = 0;\n\n        rep(bit,0,1<<N) rep(i,0,N) {\n            if(dp[bit][i] == INF) continue;\n            rep(k,0,N) {\n                if(bit >> k & 1) continue;\n                int nbit = bit | (1 << k);\n                if(__builtin_popcount(nbit) == 1) {\n                    dp[nbit][k] = v[k] * 2;\n                }\n                else {\n                    chmin(dp[nbit][k], dp[bit][i] + 2 * sqrt(v[i] * v[k]) - v[i] + v[k]);\n                }\n            }\n        }\n\n        bool ok = false;\n        rep(i,0,N) {\n            if(dp[(1<<N)-1][i] <= W + EPS) {\n                cout << \"OK\" << endl;\n                ok = true;\n                break;\n            }\n        }\n        if(!ok) cout << \"NA\" << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+0.0000000001;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.0000000001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.0000000001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.0000000001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.0000000001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < 0.0000000001){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define ESP 10e-6\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\ndouble CalcCirclesLength(const vector<int> &r){\n\tdouble ret;\n\tret = r[0];\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2 * sqs[ r[i] ][ r[i+1] ];\n\t}\n\tret += r[r.size() - 1];\n\treturn ret;\n}\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tdouble length = 0;\n\t\tvector<int> vCandR;\n\t\tvector<int> vR;\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\t\t\tcin >> tmp;\n\t\t\tvCandR.push_back(tmp);\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tvR.push_back(vCandR[0]);\n\t\tvCandR.erase( vCandR.begin()+0 );\n\t\twhile( vCandR.size() > 0 ){\n\t\t\tdouble minlen = 0xFFFFFF;\n\t\t\tint minind = 0;\n\t\t\tint minins = 0;\n\n\t\t\tfor(unsigned int i = 0; i < vCandR.size(); ++i){\t\n\t\t\t\tdouble l;\n\n\t\t\t\tfor(unsigned j = 0; j <= vR.size(); ++j){\n\t\t\t\t\tvR.insert(vR.begin() + j,vCandR[i]);\n\t\t\t\t\tl = CalcCirclesLength( vR );\n\t\t\t\t\tif( l < minlen ){ minlen = l; minind = i; minins = j; }\n\t\t\t\t\tvR.erase(vR.begin() + j);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvR.insert( vR.begin() + minins, vCandR[minind] );\n\t\t\t/*for(unsigned int i = 0; i < vR.size(); ++i){\n\t\t\t\tcout << vR[i] << ' ';\n\t\t\t}\n\t\t\tcout << endl;*/\n\t\t\tvCandR.erase( vCandR.begin() + minind );\n\t\t}\n\t\tlength = CalcCirclesLength( vR );\n\t\tif( fabs( length - w ) <= ESP ||length <= w ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tprintf(\"DEBUG\\n\");\n\treturn;\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<cmath>\n#include<algorithm>\n\nconstexpr int MAX_N = 12;\nconstexpr double INF = (int)1e9;\n\nint n, w;\nint a[MAX_N];\ndouble memo[MAX_N][(1 << MAX_N)];\n\ndouble func(int x1, int x2) {\n\treturn sqrt(pow(a[x1] + a[x2], 2) - pow(abs(a[x1] - a[x2]), 2));\n}\n\ndouble solve(int m, int S) {\n\tif (memo[m][S] > 0.0)\n\t\treturn memo[m][S];\n\tif (S == (1 << n) - 1)\n\t\treturn memo[m][S] = a[m];\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (!((S >> i) & 1))\n\t\t\tres = std::min(res, solve(i, S | (1 << i)) + func(m, i));\n\t}\n\treturn memo[m][S] = res;\n}\n\nvoid output() {\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < (1 << n); ++j)\n\t\t\tmemo[i][j] = 0.0;\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (solve(i, (1 << i)) + a[i] <= (double)w) {\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\t\treturn;\n\t\t}\n\t}\n\tstd::cout << \"NA\" << std::endl;\n}\n\nint main() {\n\tstd::string str;\n\twhile (1) {\n\t\tstd::getline(std::cin, str);\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tstd::stringstream ss(str);\n\t\tss >> w;\n\t\tn = 0;\n\t\twhile (!ss.eof()) {\n\t\t\tss >> a[n];\n\t\t\t++n;\n\t\t}\n\t\toutput();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <set>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <numeric>\n#include <functional>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\nusing namespace std;\n\ntypedef istringstream ISS;\ntypedef ostringstream OSS;\ntypedef vector<string> VS;\ntypedef int INT;\ntypedef vector<INT> VI;\ntypedef vector<VI> VVI;\ntypedef pair <INT, INT> II;\ntypedef vector <II> VII;\n\ntemplate<class T> ostream& operator << ( ostream& os, vector<T> v ) {\n    for ( typename vector<T>::iterator it_i = v.begin(); it_i != v.end(); ++it_i ) {\n        os << *it_i << \", \";\n    }\n    return os;\n}\n\n\nconst string YES = \"OK\";\nconst string NO = \"NA\";\n\ndouble sq( double x ) {\n    return x * x;\n}\n\ndouble getLength( double a, double b ) {\n    return fabs( sqrt( sq( a + b ) ) - sq( a - b ) );\n}\n\nconst int SIZE = 13;\nconst int BIT_SIZE = 1 << SIZE;\nconst int NONE = -1.0;\ndouble d[SIZE][SIZE];\ndouble memo[SIZE][SIZE][BIT_SIZE];\nVI R;\nint n;\n\nbool isValid( int a, int b, int left, int right, int s ) {\n    int ba = 1 << a;\n    int bb = 1 << b;\n    if ( left == a || right == a ) return false;\n    if ( left == b || right == b ) return false;\n    if ( ( s & ba ) == 0 ) return false;\n    if ( ( s & bb ) == 0 ) return false;\n    return true;\n}\n\ndouble rec( int left, int right, int state ) {\n    double& res = memo[left][right][state];\n    if ( res > NONE ) return res;\n    double cnt = __builtin_popcount( state );\n    if ( cnt == 1 ) {\n        return res = 2 * R[left];\n    }\n    if ( cnt == 2 ) {\n        if ( R[left] == R[right] ) return res = 4 * R[left];\n        return res = R[left] + R[right] + d[left][right];\n    }\n    res = INT_MAX;\n    for ( int i = 0; i < n; ++ i ) {\n        for ( int j = 0; j < n; ++ j ) {\n            if ( ! isValid( i, j, left, right, state ) ) continue;\n            if ( cnt > 3 && i == j ) continue;\n            double x = R[left] + R[right] - R[i] - R[j]\n                + rec( i, j, state ^ ( 1 << left ) ^ ( 1 << right ) ) + d[left][i] + d[right][i];\n            res = min( res, x );\n        }\n    }\n    return res;\n}\n\nstring solve( int w ) {\n    fill( (double*)memo, (double*)memo+SIZE*SIZE*BIT_SIZE, NONE );\n    double res = INT_MAX;\n    for ( int i = 0; i < n; ++ i ) {\n        for ( int j = 0; j < n; ++ j ) {\n            if ( n > 1 && i == j ) continue;\n            res = min( res, rec( i, j, (1<<n)-1 ) );\n        }\n    }\n    for ( int i = 0; i < n; ++ i ) {\n        for ( int j = 0; j < n; ++ j ) {\n            if ( R[i] == R[j] ) d[i][j] = 2 * R[i];\n            else d[i][j] = getLength( R[i], R[j] );\n        }\n    }\n    return res <= w ? YES : NO;\n}\n\nint main() {\n    string line;\n    while ( getline( cin, line ) ) {\n        ISS iss( line );\n        int w;\n        iss >> w;\n        R.clear();\n        int r;\n        while ( iss >> r ) R.push_back( r );\n        n = R.size();\n        cout << solve( w ) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    string str;\n    while(getline(cin, str)){\n        int W;\n        int N;\n        int r[12];\n        stringstream ss(str);\n        ss >> W;\n        N = 0;\n        while(!ss.eof()){\n            ss >> r[N++];\n        }\n        sort(r, r + N);\n        string result = \"NA\";\n        do{\n            double width = 0;\n            width += r[0] + r[N-1];\n            for(int i = 1; i < N; i++){\n                width += 2 * sqrt(r[i - 1] * r[i]);\n            }\n            if(width <= W){\n                result = \"OK\";\n                break;\n            }\n        }while(next_permutation(r, r + N));\n        cout << result << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <map>\n\nusing namespace std;\n\n#define INF 1 << 24\n\nint d(int n) {\n\treturn n * n;\n}\n\ntypedef pair< vector<bool>, pair<int, double> > P;\n\nint main() {\n\tint L;\n\twhile ( scanf(\"%d\", &L) != EOF ) {\n\t\tvector<int> v;\n\n\t\tchar c;\n\t\twhile ( c = getchar(), c != '\\n' && c != '\\r' && c != EOF ) {\n\t\t\tint a; scanf(\"%d\", &a);\n\t\t\tv.push_back(a);\n\t\t}\n\n/*\n\t\tsort( v.begin(), v.end() );\n\n\t\tint n = v.size();\n\t\tvector<int> v1, v2;\n\t\tfor (int i = 0; i < n/2; ++i)\n\t\t\tv1.push_back(v[i]);\n\n\t\tfor (int i = n/2; i < n; ++i)\n\t\t\tv2.push_back(v[i]);\n*/\n\n\t\tint n = v.size();\n\t\tvector< vector<double> > len(n, vector<double>(n, INF));\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tlen[i][j] = sqrt( d(v[i]+v[j]) - d( abs(v[i]-v[j]) ) );\n\n\t\tstack<P> Q;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tvector<bool> V(n); V[i] = true;\n\t\t\tQ.push( P( V, make_pair(i, v[i]) ) );\n\t\t}\n\n\t\tdouble ans = INF;\n\t\tdouble cost[12][12]; fill(&cost[0][0], &cost[0][0]+12*12, INF);\n\t\twhile ( !Q.empty() ) {\n\t\t\tP p = Q.top(); Q.pop();\n\t\t\tint head = p.second.first;\n\t\t\tdouble length = p.second.second;\n\n\t\t\tint sz = 0;\n\t\t\tfor (int i = 0; i < n; ++i)\n\t\t\t\tsz += p.first[i];\n\n\t\t\tif (length + v[head] > L) continue;\n\t\t\tif (sz >= n) {\n\t\t\t\tif (length + v[head] < ans)\n\t\t\t\t\tans = length + v[head];\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif (p.first[i]) continue;\n\n\t\t\t\tvector<bool> v2 = p.first; v2[i] = true;\n\t\t\t\tQ.push( P(v2, make_pair(i, length + len[head][i])) );\n\t\t\t}\n\t\t}\n\n\t\tif (ans <= L) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "# include <iostream>\n# include <sstream>\n# include <string>\n# include <cmath>\n# include <algorithm>\nconst int MAX_N = 12;\nconst double INF = (1 << 16);\n\nint n, l;\nint r[MAX_N];\ndouble memo[1 << MAX_N][MAX_N];\n\ndouble solve(int s, int v) {\n\tif (s == (1 << n) - 1)\n\t\treturn r[v];\n\tif (memo[s][v] >= 0)\n\t\treturn memo[s][v];\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif ((s >> i & 1) == 0)\n\t\t\tres = std::min(res, solve(s | (1 << i), i) + sqrt(pow(r[i] + r[v], 2) - pow(r[i] - r[v], 2)));\n\t}\n\treturn memo[s][v] = res;\n}\n\nint main() {\n\twhile (1) {\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tn = 0;\n\t\tstd::string str;\n\t\tstd::getline(std::cin, str);\n\t\tstd::stringstream s(str);\n\t\ts >> l;\n\t\ts.ignore();\n\t\twhile (!s.eof()) {\n\t\t\tint a;\n\t\t\ts >> a;\n\t\t\tr[n] = a;\n\t\t\t++n;\n\t\t\ts.ignore();\n\t\t}\n\t\tfor (int i = 0; i < (1 << n); ++i) {\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tmemo[i][j] = -1;\n\t\t}\n\t\tdouble ans = INF;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tans = std::min(ans, solve((1 << i), i) + r[i]);\n\t\t}\n\t\tstd::cout << ans << std::endl;\n\t\tif (ans <= (double)l)\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\telse\n\t\t\tstd::cout << \"NA\" << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,1,0,-1,1,-1,-1,1};\nconst int dy[]={-1,0,1,0,1,1,-1,-1};\nconst int INF = 1<<30;\nconst int EPS = 1e-15;\n#define PB push_back\n#define mk make_pair\n#define fi first\n#define se second\n#define ll long long\n#define reps(i,j,k) for(int i = (j); i < (k); i++)\n#define rep(i,j) reps(i,0,j)\n#define MOD 1000000007\ntypedef pair<int,int> Pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ndouble memo[1<<12][12];\ndouble dist(double a,double b){\n\tif(a<b)swap(a,b);\n\treturn sqrt(((a+b)*(a+b))-((a-b)*(a-b)));\n}\ndouble search(int bit,int dep,int prev,vi cake){\n\tif(dep == cake.size()){\n\t\treturn (double)cake[prev];\n\t}\n\tif(memo[bit][dep]){\n\t\treturn memo[bit][dep];\n\t}\n\tdouble ret = INF;\n\trep(i,cake.size()){\n\t\tif(!(bit>>i & 1)){\n\t\t\tif(bit == 0){\n\t\t\t\tret = min(ret,search(bit|1<<i,dep+1,i,cake)+cake[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tret = min(ret,search(bit|1<<i,dep+1,i,cake)+dist(cake[prev],cake[i]));\t\t\n\t\t\t}\n\t\t}\n\t}\n\treturn memo[bit][prev] = ret;\n}\nint main(){\n\tint len;\n\twhile(~scanf(\"%d\",&len)){\n\t\trep(i,1<<12){\n\t\t\trep(j,12){\n\t\t\t\tmemo[i][j] = 0.0000;\n\t\t\t}\n\t\t}\n\t\tvi cake;\n\t\tchar c;\n\t\twhile(~(c=getchar())){\n\t    \tif(c=='\\n')break;\n\t    \telse if(c==' '){\n\t    \t\tint tmp;\n\t    \t\tscanf(\"%d\",&tmp);\n\t    \t\tcake.PB(tmp);\n\t    \t}\n\t    }\n\t\tdouble ret = search(0,0,-1,cake);\n\t\tif(len-ret>=0.0)puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<cmath>\nusing namespace std;\n#define rep(i, n) for ( int i = 0; i < (int)n; i++)\n#define MAX 12\n#define INFTY (1<<21)\nint W, L[MAX], n;\n\ninline double getL(int r1, int r2){\n    return sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\nvoid compute(){\n    double T[1<<MAX][MAX];\n    rep(i, 1<<n) rep(j, n) T[i][j] = INFTY;\n    rep(i, n) T[1<<i][i] = L[i]*2;\n    rep(i, 1<<n) rep(j, n) rep(l, n){\n\tif ( (1<<l) & i ) continue;\n\tT[(1<<l)|i][l] = min(T[(1<<l)|i][l], T[i][j] - L[j] + L[l] + getL(L[j], L[l]));\n    }\n    double minv = INFTY;\n    rep(i, n) minv = min(minv, T[(1<<n)-1][i]);\n    if ( minv > W ) cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n}\n\nmain(){\n    string line;\n    int l;\n    while( getline(cin, line) && !cin.eof() ){\n\tstringstream sin(line);\n\tn = 0;\n\tsin >> W; \n\twhile( sin >> l ) L[n++] = l;\n\tcompute();\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<sstream>\n#include<utility>\n#include<map>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>P;\nchar I[1000],*p;\nint R[15],N,i,j,k,a[2][15];\ndouble B,EPS=0.0001;\n\ndouble ch(int *r)\n{\n\tint i;\n\tdouble l=0;\n\tfor(i=0;i<N-1;i++)\n\t{\n\t\tdouble a=pow((double)r[i]+r[i+1],2);\n\t\tdouble b=pow((double)abs(r[i]-r[i+1]),2);\n\n\t\tl+=sqrt(a-b);\n\t}\n\treturn pow(l+r[0]+r[N-1],2);\n}\n\nint main()\n{\n\tfor(;gets(I);)\n\t{\n\t\tmemset(R,0,sizeof(R));\n\t\tmemset(a,0,sizeof(a));\n\t\tp=strtok(I,\" \");\n\t\tB=(double)atoi(p);\n\t\tB*=B;\n\t\tfor(N=0;(p=strtok(NULL,\" \"))!=NULL;)\n\t\t\tR[N++]=atoi(p);\n\t\tsort(R,R+N);\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(j%2)a[0][j]=R[i++];\n\t\t\telse a[0][j]=R[k--];\n\t\t}\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(!(j%2))a[1][j]=R[i++];\n\t\t\telse a[1][j]=R[k--];\n\t\t}\n\t\tputs(B-ch(a[0])>EPS||B-ch(a[1])>EPS?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    // for (int i = 0; i < temps.size(); ++i) cakes.push_back(temps[i]);\n    // for (int i = 0; i < temps.size(); ++i) cakes.insert(cakes.begin(), temps[i]);\n    for( int i = 0; i < temps.size() / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      // if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      // else cakes.insert(cakes.begin(), e);\n      cakes.push_back(e);\n    }\n    \n    // {\n    //   int lb = 0, ub = temps.size() - 1; \n    //   while (lb <= ub) {\n    //     if (lb != ub) {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     } else {\n    //       int df = abs(cakes.front() - temps[lb]), db = abs(cakes.back() - temps[lb]);\n    //       if (df > db) cakes.insert(cakes.begin(), temps[lb]);\n    //       else cakes.push_back(temps[lb]);\n    //     }\n    //     ++lb; --ub;\n    //   }\n    // }\n\n    // {\n    //   for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n    //     if (lb == ub) {\n    //       if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n    //         cakes.push_back(temps[lb]);\n    //       else\n    //         inserter(cakes, cakes.begin()) = temps[lb];\n    //     } else {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     }\n    //   }\n    // }\n\n    // puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <cmath>\n#include <sstream>\n#include <cstring>\nusing namespace std;\n\n#define Sq(c) ((c)*(c))\n\nconst int MAX_N = 12;\nconst int INF = 1<<27;\n\nint n;\ndouble r[MAX_N+2];\ndouble dp[(1<<MAX_N)+2][MAX_N+2];\ndouble dist[MAX_N+2][MAX_N+2];\n\ndouble rec(int S, int v) {\n  if(dp[S][v] >= 0) return dp[S][v];\n  \n  if(S == (1<<n)-1 && v==0) return dp[S][v]=0;\n  \n  double res = INF;\n  for(int u=0; u<n; u++) {\n    if(!(S >> u & 1)) res = min(res, rec(S | 1 << u, u) + dist[v][u]);\n  }\n  return dp[S][v] = res;\n}\n\nint main() {\n  \n  double width;\n  string str;\n\n  while(getline(cin, str)) {\n    stringstream ss(str);\n    \n    ss >> width;\n    n = 0;\n    while( ss >> r[n] ) n++;\n    \n    memset(dp, -1, sizeof(dp));\n\n    for(int i=0; i<n; i++) {\n      for(int j=0; j<n; j++) {\n\tdist[i][j] = sqrt( Sq( r[i]+r[j] ) - Sq( r[i]-r[j] ) );\n      }\n    }\n    // テ・ツキツヲテ・ツ渉ウテ、ツクツ。テァツォツッテ」ツ?ォテヲツウツィテヲツ??\n    for(int i=0; i<n; i++) {\n      dist[i][n] = dist[n][i] = r[i];\n    }\n    n ++;\n    \n    if( rec(0, 0) <= width ) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n    \n    // printf(\"%lf\\n\", dp[0][0]);\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 500; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 1e5;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' '; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.0001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.0001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.0001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.0001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tif(left > right)printf(\"BUG!\\n\");\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<sstream>\n\nusing namespace std;\n\nconst double INF=10000000;\ndouble l;\nbool flag;\nstring str;\nvector<double> r;\ndouble dp[1<<12][12];\n\nvoid rec(int x,int bit,double nl,double nh){\n\tif(dp[bit][x]<nl)return;\n\tdp[bit][x]=nl;\n\tif(bit==(1<<r.size())-1){\n\t\tif(nl+nh<=l)flag=true;\n\t\treturn;\n\t}\n\telse{\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\tif(!(bit>>i & 1)){\n\t\t\t\tdouble nnh=r[i];\n\t\t\t\tdouble nnl=nl+sqrt(pow(nh+nnh,2)-pow(fabs(nh-nnh),2));\n\t\t\t\tif(nnl<dp[bit | 1<<i][i]){\n\t\t\t\t\tdp[bit | 1<<i][i]=nnl;\n\t\t\t\t\trec(i,bit | 1<<i,nnl,nnh);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n\nint main(void){\n\twhile(getline(cin,str)){\n\t\tflag=false;\n\t\tr.clear();\n\t\tfor(int i=0;i<(1<<12)-1;i++){\n\t\t\tfor(int j=0;j<12;j++){\n\t\t\t\tdp[i][j]=INF;\n\t\t\t}\n\t\t}\n\t\tstringstream input(str);\n\t\tinput >> l;\n\t\tdouble a;\n\t\twhile(input >> a)r.push_back(a);\n\t\tfor(int i=0;i<r.size();i++){\n\t\t\trec(i,1<<i,r[i],r[i]);\n\t\t}\n\t\tif(flag)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n#include<vector>\n#include<cmath>\nusing namespace std;\n\nint main(){\n\n\tint n, cnt, r[12];\n\tdouble len;\n\tstring str;\n\tstringstream ss;\n\tvector<int> vc;\n\t\n\twhile(getline(cin, str)){\n\t\tcnt = 0;\n\t\tvc.clear();\n\t\t\n\t\tss.clear();\n\t\tss << str;\n\t\tss >> n;\n\t\twhile(ss >> r[cnt]){\n\t\t\tcnt++;\n\t\t}\n\t\t\n\t\tsort(r, r+cnt);\n\t\t\n\t\tfor(int i=0; i <= cnt-i-1; i++){\n\t\t\tif(i != cnt-i-1){\n\t\t\t\tvc.push_back(r[i]);\n\t\t\t\tvc.push_back(r[cnt-i-1]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvc.push_back(r[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tlen = vc[0];\n\t\tfor(int i=1; i<vc.size(); i++){\n\t\t\tlen += 2.0 * sqrt(vc[i-1] * vc[i]);\n\t\t}\n\t\tlen += vc.back();\n\n\t\tif(len <= (double)n) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n\n\treturn 0;\n\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<string>\n#include<iostream>\n#include<cmath>\n#include<map>\n#include<set>\n#include<climits>\n#include<ctime>\n#include<complex>\n#include<sstream>\n#include<cstring>\nusing namespace std;\ntypedef vector<string>vs;\ntypedef vector<int>vi;\ntypedef vector<vi>vvi;\ntypedef vector<double>vd;\ntypedef pair<int,int>pii;\ntypedef long long ll;\ntypedef pair<ll,ll>pll;\ntypedef vector<ll>vl;\n#define rrep(i,x,n) for(int i=(x);i<(n);++i)\n#define rep(i,x) rrep(i,0,(x))\n#define fi first\n#define se second\n#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();++i)\n#define all(c) (c).begin(),(c).end()\n#define rall(c) (c).rbegin(),(c).rend()\n#define pb push_back\n#define maxs(a,b) (a)=max(a,b)\n#define mins(a,b) (a)=min(a,b)\n\nconst double INF=114514;\nconst double EPS=1e-8;\nint main(){\n    string str;\n    while(getline(cin,str)){\n        stringstream ss(str);\n        int W;ss>>W;\n        vi r;int val;\n        while(ss>>val){\n            r.pb(val);\n        }\n        int N=r.size();\n        double dist[20][20]={{0}};\n        rep(i,N)dist[0][i+1]=r[i];\n        rep(i,N)rep(j,N){\n            dist[i+1][j+1]=sqrt((r[i]+r[j])*(r[i]+r[j])-(r[i]-r[j])*(r[i]-r[j]));\n        }\n\n        double dp[1<<12][13];\n        rep(i,(1<<N))rep(j,13)dp[i][j]=INF;\n        dp[0][0]=0;\n\n        rep(i,(1<<N)){\n            rep(j,N+1){\n\n                rep(k,N){\n                    if((i>>k)&1)continue;\n                    dp[i|(1<<k)][k+1]=min(dp[i|(1<<k)][k+1],dp[i][j]+dist[j][k+1]);\n                }\n            }\n        }\n\n        double mi=INF;\n        rep(i,N)mi=min(mi,dp[(1<<N)-1][i+1]+r[i]);\n\n        if(mi>W+EPS)puts(\"NA\");\n        else puts(\"OK\");\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tCake cakes[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> cakes[num].r;\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tfor(int i = 0; i < num; i++){ tmp += cakes[i].r; }\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\n\t\tsort(cakes,cakes+num);\n\t\t\n\t\tp[0] = cakes[0].r;\n\t\tcakes[0].used = true;\n\t\tif( solve2(p, 1, w, cakes, num, true) ){\n\t\t\tcout << \"OK\\n\";\n\t\t}else{\n\t\t\tcout << \"NA\\n\";\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    sort(r.begin(),r.end());\n\n    if(r.size()<=5){\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    if(r.size()>2)swap(r[1],r[r.size()-1]);\n\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main(){\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    string str;\n    while(getline(cin, str)){\n        int W;\n        int N;\n        int r[12];\n        stringstream ss(str);\n        ss >> W;\n        N = 0;\n        while(!ss.eof()){\n            ss >> r[N++];\n        }\n        sort(r, r + N);\n        string result = \"NA\";\n        do{\n            double width = 0;\n            width += r[0] + r[1];\n            width += 2 * sqrt(r[0] * r[2]);\n            width += 2 * sqrt(r[1] * r[N-1]);\n            for(int i = 3; i < N; i++){\n                width += 2 * sqrt(r[i - 1] * r[i]);\n            }\n            if(width <= W){\n                result = \"OK\";\n                break;\n            }\n        }while(next_permutation(r + 2, r + N));\n        cout << result << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\n\nint main()\n{\n\tchar line[128];\n\tchar l[128];\n\tdouble r[128];\n\t\n\twhile (fgets(line, 128, stdin) != NULL){\n\t\tdouble length;\n\t\tint n = 0;\n\t\t\n\t\tint p = 0;\n\t\tsscanf(&line[p], \"%lf\", &length);\n\t\tsscanf(&line[p], \"%s\", l);\n\t\tp += strlen(l);\n\t\t\n\t\twhile (line[p + 1] != '\\0'){\n\t\t\tsscanf(&line[p], \"%lf\", &r[n++]);\n\t\t\tsscanf(&line[p], \"%s\", l);\n\t\t\tp += strlen(l) + 1;\n\t\t}\n\t\t\n\t\tbool f = false;\n\t\tfor (int k = 0; k <= 1 && f == false; k++){\n\t\t\tfor (int i = 0; i < n - 1; i++){\n\t\t\t\tint m = i;\n\t\t\t\tfor (int j = i + 1; j < n; j++){\n\t\t\t\t\tif ((i + k) % 2 == 0 && r[m] > r[j]){\n\t\t\t\t\t\tm = j;\n\t\t\t\t\t}\n\t\t\t\t\telse if ((i + k) % 2 == 1 && r[m] < r[j]){\n\t\t\t\t\t\tm = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tswap(r[i], r[m]);\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n//\t\t\t\tprintf(\"%lf\\n\", r[i]);\n\t\t\t\t\n\t\t\t\tif (i == 0){\n\t\t\t\t\tlength -= r[i];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlength -= sqrt((r[i] + r[i - 1]) * (r[i] + r[i - 1]) - (r[i] - r[i - 1]) * (r[i] - r[i - 1]));\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tlength -= r[n - 1];\n\t\t\t\n//\t\t\tprintf(\"%lf\\n\", length);\n\t\t\t\n\t\t\tif (length >= 0.0){\n\t\t\t\tf = true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (f){\n\t\t\tputs(\"OK\");\n\t\t}\n\t\telse {\n\t\t\tputs(\"NA\");\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\nstruct some_cake{\n    int cake_flag[15];\n    double cake_length;\n    int last_cake;\n};\n\nsome_cake init_some_cake(){\n    some_cake init;\n    for(int i=0; i<15; i++)init.cake_flag[i]=0;\n    init.cake_length=0.0;\n    init.last_cake=0;\n    \n    return init;\n}\n\n\nusing namespace std;\n\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        //cout<<\"box\"<<box<<endl;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count])cake_count++;\n        \n        queue<some_cake> qu;\n        some_cake temp = init_some_cake();\n        qu.push(temp);\n        bool ans_flag=true;\n        while(qu.size()!=0){\n            some_cake pop_temp;\n            pop_temp = qu.front();\n            qu.pop();\n            \n            some_cake push_temp;\n            bool last_flag=true;\n            for(int i=0; i<cake_count; i++){\n                if(pop_temp.cake_flag[i] == 0){\n                    last_flag=false;\n                    push_temp = pop_temp;\n                    push_temp.cake_flag[i]=1;\n                    if(push_temp.cake_length==0.0){\n                        push_temp.cake_length=cake[i];\n                    }else{\n                        double x = (cake[push_temp.last_cake]+cake[i])*(cake[push_temp.last_cake]+cake[i])-(cake[push_temp.last_cake]-cake[i])*(cake[push_temp.last_cake]-cake[i]);\n                        push_temp.cake_length+=sqrt(x);\n                        \n                    }\n                    push_temp.last_cake=i;\n                    \n                    qu.push(push_temp);\n                }\n            }\n            if(last_flag){\n                pop_temp.cake_length+=cake[pop_temp.last_cake];\n                \n                \n                //cout<<pop_temp.cake_length<<endl;\n                if(pop_temp.cake_length<=box){\n                    ans_flag=false;\n                    cout<<\"OK\"<<endl;\n                    break;\n                }\n            }\n            \n            \n        }\n        \n        if(ans_flag)cout<<\"NA\"<<endl;\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<climits>\n#include<cmath>\n#include<cstdio>\n#include<cstdlib>\n#include<ctime>\n#include<string>\n#include<cstring>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<set>\n#include<map>\n#include<bitset>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<int, int> i_i;\n\n#define PI 3.141592653589793238462643383279\n#define mod 1000000007LL\n#define rep(i, n) for(i = 0;i < n;++i)\n#define rep1(i, n) for(i = 1;i < n;++i)\n#define per(i, n) for(i = n - 1;i > -1;--i)\n#define int(x) int x; scanf(\"%d\",&x)\n#define int2(x, y) int x, y; scanf(\"%d%d\",&x, &y)\n#define int3(x, y, z) int x, y, z; scanf(\"%d%d%d\",&x, &y, &z)\n#define int4(v, x, y, z) int v, x, y, z; scanf(\"%d%d%d%d\", &v, &x, &y, &z)\n#define int5(v, w, x, y, z) int v, w, x, y, z; scanf(\"%d%d%d%d%d\", &v, &w, &x, &y, &z)\n#define ll2(x, y) ll x, y; cin >> x >> y;\n#define scn(n, a) rep(i, n)cin >> a[i]\n#define sc2n(n, a, b) rep(i, n)cin >> a[i] >> b[i]\n#define pri(x) cout << (x) << \"\\n\"\n#define pri2(x, y) cout << (x) << \" \" << (y) << \"\\n\"\n#define pri3(x, y, z) cout << (x) << \" \" << (y) << \" \" << (z) << \"\\n\"\n#define pb push_back\n#define mp make_pair\n#define all(a) (a).begin(),(a).end()\n#define endl \"\\n\"\n#define kabe puts(\"---------------------------\")\n#define kara puts(\"\")\n#define debug(x) cout << \" --- \" << (x) << \"\\n\"\n#define debug2(x, y) cout << \" --- \" << (x) << \" \" << (y) << \"\\n\"\n#define debug3(x, y, z) cout << \" --- \" << (x) << \" \" << (y) << \" \" << (z) << \"\\n\"\n#define X first\n#define Y second\n#define eps 0.00000001\n#define prid(x) printf(\"%.15lf\\n\", x)\n\ndouble w, r[12];\nint hd, dt[12];\ndouble dp[4100][12];\n\nbool solve(void){\n  int i, j, k;\n  rep(i, 1 << hd)rep(j, hd)dp[i][j] = 2016.0;\n  rep(j, hd)dp[1 << j][j] = r[j];\n  rep1(i, 1 << hd)rep(j, hd)if(dp[i][j] != 2016.0)rep(k, hd)if((i & (1 << k)) == 0)\n  dp[i | (1 << k)][k] = min(dp[i | (1 << k)][k], dp[i][j] + 2.0 * sqrt(r[j] * r[k]));\n  rep(j, hd)if(dp[(1 << hd) - 1][j] + r[j] <= w + eps)return true;\n  return false;\n}\n\nint pt;\nstring s;\n\ndouble nxt(void){\n  int res = 0;\n  for(;;){\n    if(s[pt] == ' ')break;\n    res = (res * 10) + (s[pt++] - '0');\n  }\n  return (double)res;\n}\n\nsigned main(void){\n  int i, j;\n  for(int testcase = 0;testcase >= 0;testcase++){\n    getline(cin, s);\n    if(s.size() == 0)break;\n    s += \" \";\n    hd = 0; pt = 0;\n    w = nxt(); ++pt;\n    for(;pt < s.size();){\n      r[hd++] = nxt();\n      ++pt;\n    }\n\n    puts(solve() ? \"OK\" : \"NA\");\n\n//*/\n\n//*/ break;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define ESP 10e-6\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\ndouble CalcCirclesLength(const vector<int> &r){\n\tdouble ret;\n\tret = r[0];\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2 * sqrt((double)r[i]*r[i+1]);\n\t}\n\tret += r[r.size() - 1];\n\treturn ret;\n}\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tdouble length = 0;\n\t\tvector<int> vCandR;\n\t\tvector<int> vR;\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\t\t\tcin >> tmp;\n\t\t\tvCandR.push_back(tmp);\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tvR.push_back(vCandR[0]);\n\t\tvCandR.erase( vCandR.begin()+0 );\n\t\twhile( vCandR.size() > 0 ){\n\t\t\tdouble minlen = 241;\n\t\t\tint minind = 0;\n\t\t\tint minins = 0;\n\n\t\t\t//for(unsigned int i = 0; i < vCandR.size(); ++i){\t\n\t\t\t\tdouble l;\n\t\t\t\tint i = 0;\n\n\t\t\t\tfor(unsigned j = 0; j <= vR.size(); ++j){\n\t\t\t\t\tvR.insert(vR.begin() + j,vCandR[i]);\n\t\t\t\t\t/*for(unsigned int m = 0; m < vR.size(); ++m){\n\t\t\t\t\t\tcout << vR[m] << ' ';\n\t\t\t\t\t}*/\n\n\t\t\t\t\tl = CalcCirclesLength( vR );\n\t\t\t\t\tif( l < minlen ){\n\t\t\t\t\t\tminlen = l; minind = i; minins = j;\n\t\t\t\t\t\t//cout << \" O(min = \" << minlen << \")\";\n\t\t\t\t\t}\n\t\t\t\t\tvR.erase(vR.begin() + j);\n\t\t\t\t\t//cout << endl;\n\t\t\t\t}\n\t\t\t//}\n\t\t\tvR.insert( vR.begin() + minins, vCandR[minind] );\n\t\t\t\n\t\t\t\n\t\t\tvCandR.erase( vCandR.begin() + minind );\n\t\t}\n\t\tlength = CalcCirclesLength( vR );\n\t\tif( fabs( length - w ) <= ESP || length <= w ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' '; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tif(info_index > 12)printf(\"BUG!\\n\");\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define INF 1e9\nusing namespace std;\n\nint getNum(string a,int &i){\n  int res=0;\n  while(isdigit(a[i]))res=res*10+a[i++]-'0';\n  return res;\n}\n\ndouble getx(double R,double r){return sqrt((R+r)*(R+r)-(R-r)*(R-r));}\n\n\nint n;\nvector<double> num;\ndouble mem[11][11][1<<12];\nint used[11][11][1<<12];\ndouble dfs(int l,int r,int sta){\n  if(sta==(1<<n)-1)return 0;\n  if(used[l][r][sta]++)return mem[l][r][sta];\n\n  double res=INF;\n  for(int i=0;i<n;i++){\n    if((sta&(1<<i)))continue;\n    double lcost=num[i]+getx(l,num[i])-l;\n    double rcost=num[i]+getx(num[i],r)-r;\n    res=min(res,lcost+dfs(num[i],r,sta|(1<<i)));\n    res=min(res,rcost+dfs(l,num[i],sta|(1<<i)));\n  }\n  return mem[l][r][sta]=res;\n}\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    int w,idx=0;\n    w = getNum(str,idx);\n    num.clear();\n    while(idx++<str.size())num.push_back(getNum(str,idx));\n    n = num.size();\n    memset(used,0,sizeof(used));\n    double mn=INF;\n    for(int i=0;i<n;i++)mn=min(mn,2*num[i]+dfs(num[i],num[i],1<<i));\n    cout<<(mn<=w? \"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    deque<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    sort(temps.begin(), temps.end(), greater<int>());\n    for (;temps.size();) {\n      int front = temps.front();\n      temps.pop_front();\n      if (temps.size() == 0) {\n        if (abs(front - *cakes.begin()) > abs(front - *cakes.rbegin())) {\n          // inserter(temps, temps.begin()) = front;\n          inserter(cakes, cakes.begin()) = front;\n        } else {\n          cakes.push_back(front);\n        }\n        break;\n      }\n      int back = temps.back();\n      temps.pop_back();\n      cakes.push_back(front);\n      cakes.push_back(back);\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes[0];\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      // if (cakes[i] == cakes[i+1]) {\n      //   current_length += 2 * cakes[i];\n      // } else {\n      //   int larger = max(cakes[i], cakes[i+1]);\n      //   int smaller = min(cakes[i], cakes[i+1]);\n      //   double height = larger - smaller;\n      //   double naname = larger + smaller;\n      //   double width = sqrt(pow(naname, 2) - pow(height, 2));\n      //   current_length += width;\n      // }\n\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes[cakes.size() - 1];\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<complex>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<ctime>\n#include<vector>\n#include<sstream>\n#include<iostream>\nusing namespace std;\nint main(void){\n\n    int N;\n\n    string s;\n    while(getline(cin,s)){\n    long long int D = 1000;\n    vector<double> A,B;\n        istringstream ss(s);\n        int t;\n        ss >> N;\n        while(ss >> t)A.push_back(t);\n\n        //for(int i = 0;i < A.size();i++)cout<<A[i]<<endl;\n        double best = 1000000;\n        double ans = 1000000;\n        while(D--){\n            vector<double> V1,V2;\n            srand(time(NULL) + D);\n            V1 = A;\n            double sum = 0;\n            int x = rand() % A.size();\n            int y = rand() % A.size();\n            swap(V1[x],V1[y]);\n\n            for(int i = 0;i < V1.size()-1;i++){\n                double R1 = V1[i] + V1[i+1];\n                double R2 = V1[i] - V1[i+1];\n                sum += sqrt((R1 * R1) - (R2 * R2));\n            }\n\n            sum += V1[0] + V1[V1.size()-1];\n            double e = pow((sum/ans), 75);\n            double z = (double)((int)(rand()%1000000))/1000000;\n            if(z>=(1-(1/e)))ans = sum,A = V1;/*\n            if(D%10000 == 0){\n                for(int i = 0;i < A.size();i++){\n                    cout<<A[i]<<\" \";\n                }\n                cout<<\" : \";\n                for(int i = 0;i < B.size();i++){\n                    cout<<B[i]<<\" \";\n                }\n                cout<<endl;\n            }*/\n            if(sum<best)best = sum,B = V1;\n        }\n        int siz = 0;\n        for(int i = 0;i < 1000;i++){\n            if(best <= (double)i){\n                siz = i;\n                //cout<<siz<<endl;\n                break;\n            }\n        }\n        if(siz <= N)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n        }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\ndouble sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tdouble t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tdouble tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\n\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tint iniIncrease = -1;\n\t\tvector<pair<int,int>> vhist;\n\t\tint tmp = 0;\n\t\tint num = 0;\n\t\tint p[MAX];\n\t\tint r[MAX];\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tcin >> r[num];\n\t\t\tnum++;\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tsort(r,r+num);\n\t\t\n\t\tfor(int i = 0; i < num; i++){\n\t\t\tif( i > 0 ){\n\t\t\t\tif( r[i] > r[i-1] && iniIncrease < 0 ) iniIncrease = (i - 2 < 0 ? 0 : i - 2);\n\t\t\t}\n\t\t\ttmp += r[i];\n\t\t}\n\t\tif( iniIncrease < 0 ) iniIncrease = num - 2;\n\t\tif( tmp > w ){\n\t\t\tcout << \"NA\\n\";\n\t\t\tcontinue;\n\t\t}\n\t\tif( num > 2 ){\n\t\t\tbool bFound = false;\n\t\t\tfor(int i = iniIncrease; i < num && !bFound; i++){\n\t\t\t\tfor(int j = i + 1; j < num && !bFound; j++){\n\t\t\t\t\tif( !vhist.empty() && vhist.end() != find(vhist.begin(), vhist.end(), make_pair(i,j)) ) continue;\n\t\t\t\t\tvhist.push_back(make_pair(i,j));\n\t\t\t\t\tswap(r[0],r[i]);\n\t\t\t\t\tswap(r[1],r[j]);\n\t\t\t\t\tif( solve( p, num-2, w, r) ){\n\t\t\t\t\t\tbFound = true;\n\t\t\t\t\t}\n\t\t\t\t\tswap(r[i],r[0]);\n\t\t\t\t\tswap(r[j],r[1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif( bFound ) cout << \"OK\\n\";\n\t\t\telse cout << \"NA\\n\";\n\t\t}else{\n\t\t\tif( num == 2 ){\n\t\t\t\tcout << (r[0]+r[1]+2.0*sqs[r[0]][r[1]] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}else if( num == 1 ){\n\t\t\t\tcout << (2*r[0] <= w ? \"OK\\n\" : \"NA\\n\");\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n#define DBL(x) ((x)*(x))\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\ndouble dp[1<<12][12];\nint r[12];\nint n;\nint len;\n\ndouble length(int flag, int last){\n  if(last != -1 && dp[flag][last] != 0) return dp[flag][last];\n  if(flag == 0) return r[last];\n\n  double ret = 1e10;\n  for(int i=0; i<n; i++){\n    if(flag & (1 << i)){\n      int r2 = r[i];\n      double r3;\n      if(last == -1)\n        r3 = r2;\n      else{\n        int r1 = r[last];\n        r3 = sqrt(DBL(r1+r2) - DBL(r1-r2));\n      }\n      double tmp = r3 + length(flag ^ (1<<i), i);\n      ret = min(ret, tmp);\n    }\n  }\n  if(last != -1) dp[flag][last] = ret;\n  return ret;\n}\n\nint main(){\n  string str;\n  while(getline(cin, str)){\n    stringstream ss(str);\n    int i;\n    ss>>len;\n    for(i=0; ss>>r[i]; n=++i);\n    memset(dp, 0, sizeof(dp));\n    double l = length((1<<n)-1,-1);\n    //printf(\"n=%d %f\\n\",n,l);\n    puts(l <= len + 1e-10 ? \"OK\" : \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    sort(r.begin(),r.end());\n\n    if(r.size()<=5){\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    if(r.size()>2)swap(r[1],r[r.size()-1]);\n\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%(r.size()-2)+1;\n            b=rand()%(r.size()-2)+1;\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    if(abs(evaluate(r)-mi)>EPS)puts(\"assert\");\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 100; //?????????[???v????????????\nconst double EPS = 1e-6; //?????????????????????p(???C??????????????????????????)\nint L;\nint N; //?????????[?????????P???[???L????????\n\n//?????????[?????????P???[???L?????????u???????????????????????n???????????A???S?????????????????????????v???Z????????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//???????????????????[???v?????????????n???????????A?????????????????????????????J????????????????????????????\n//(???J??????????????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????@??????????????????????????\n//???????????×????????????????????????????????????????????????????????????\n//int r[12] : ?????????[?????????P???[???L??????0????????????N-1???????????????????t?????????A???z???????????u???????????????????????????i???[????????????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //??????????????????????r[]???????????????????????i???[????????????????????\n\tdouble mi = score; //?????????????????????????????????????????????????????l?????????i???[????????????????????\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //???????????l??????????????\n}\n\n//???????????`?????????????????????????????????|????????????????????????????????????????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <complex>\n#include <algorithm>\n#include <sstream>\n\nusing namespace std;\n\n#define loop(i,a,b) for(int i=(a); i<int(b); i++)\n#define rep(i,b) loop(i,0,b)\n#define all(c) (c).begin(), (c).end()\n\ntypedef vector<int> vi;\n\ndouble width(vi const& rs){\n    double res = rs[0]+rs.back();\n    loop(i,1,rs.size()){\n        double dh=abs(rs[i-1]-rs[i]);\n        double a=rs[i-1]+rs[i];\n        double dy=sqrt(a*a-dh*dh);\n        res+=dy;\n    }\n    return res;\n}\n\nbool solve(vi& rs, int w){\n    sort(all(rs));\n    do if(width(rs) <= w) return true;\n    while(next_permutation(all(rs)));\n    return false;\n}\n\nint main(){\n    string s;\n    while(getline(cin,s)){\n        stringstream ss(s);\n        int w;ss>>w;\n        vi r;\n        int t;\n        while(ss>>t){\n            r.push_back(t);\n        }\n        string const ans[]={\"OK\",\"NA\"};\n        cout << ans[1-solve(r,w)] << endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nconst double INF = 1e5;\n\nvector<double> v;\nint n;\ndouble len;\ndouble dp[1 << 12][12];\n\ndouble search(int s, int prev)\n{\n\tif (s == (1 << n) - 1){\n\t\treturn v[prev];\n\t}\n\tif (~prev && dp[s][prev] < INF){\n\t\treturn dp[s][prev];\n\t}\n\t\n\tdouble res = INF;\n\tfor (int i = 0; i < n; i++){\n\t\tint x = 1 << i;\n\t\tif (s & x) continue;\n\t\tif (s == 0){\n\t\t\tres = min(res, v[i] + search(x, i));\n\t\t}\n\t\telse {\n\t\t\tdouble t = sqrt((v[i] + v[prev]) * (v[i] + v[prev]) - (v[i] - v[prev]) * (v[i] - v[prev]));\n\t\t\tres = min(res, t + search(s | x, i));\n\t\t}\n\t}\n\t\n\treturn dp[s][prev] = res;\n}\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\t\n\t\tlen = -1;\n\t\tv.clear();\n\t\tfill((double *)dp, (double *)dp + (1 << 12) * 12, INF);\n\t\t\n\t\twhile (!ss.eof()){\n\t\t\tdouble tmp;\n\t\t\tss >> tmp;\n\t\t\tif (len != -1) v.push_back(tmp);\n\t\t\telse len = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tn = v.size();\n\t\t\n\t\tdouble res = search(0, -1);\n\t\tif (res < len + 1e-6) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <string.h>\n#include <vector>\n#include <cmath>\n\n#define MAX 12\n\nusing namespace std;\n\nvector<int> split(const string &str, char delim){\n    istringstream iss(str); string tmp; vector<int> res;\n    while(getline(iss, tmp, delim)) {\n        int i;\n        std::istringstream iss(tmp);\n        iss >> i;\n        res.push_back(i);\n    }\n    return res;\n}\n\nfloat d[MAX][MAX];\nfloat dp[1 << MAX][MAX];\nint size;\n\nfloat rec(int S, int v) {\n    if (dp[S][v] >= 0) return dp[S][v];\n\n    if (S == (1 << size) -1 && v == 0) {\n        return dp[S][v] = 0;\n    }\n\n    float res = 99999;\n    for (int u = 0; u < size; u++) {\n        if(!(S >> u & 1))\n            res = min(res, rec(S | 1 << u, u) + d[v][u]);\n    }\n\n    return dp[S][v] = res;\n}\n\n\nint main(int argc, char const* argv[])\n{\n    string line;\n    while(getline(cin, line)) {\n\n        vector<int> params = split(line, ' ');\n        vector<int> cakes;\n\n        int weight = params.front();\n        for (vector<int>::iterator it = params.begin(); it != params.end(); it++) {\n            if(it == params.begin()) {weight = *it; continue;}\n            cakes.push_back(*it);\n        }\n\n        size = cakes.size();\n        for (int i = 0; i < size; i++) {\n            for (int j = i; j < size; j++) {\n                int i_r = cakes.at(i);\n                int j_r = cakes.at(j);\n                float sq = sqrt(pow(i_r + j_r, 2.0) - pow(i_r - j_r, 2.0));\n                if (i_r == j_r) sq = i_r + j_r;\n                d[i][j] = sq;\n                d[j][i] = sq;\n            }\n        }\n\n        memset(dp, -1, sizeof(dp));\n\n        float min_val = 99999;\n        for (int i = 0; i < size; i++) {\n            float rec_val = rec(0,i);\n            if (rec_val == 0) continue;\n            min_val = min(rec_val, min_val);\n        }\n\n        if (min_val > weight) {\n            std::cout << \"NA\" << std::endl;\n        } else {\n            std::cout << \"OK\" << std::endl;\n        }\n\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tint a = rand() % N, b = rand() % N;\n\t\tswap(r[a], r[b]);\n\t\tdouble tmpev;\n\t\tif ((tmpev = Evaluate(r)) < mi) {\n\t\t\tmi = tmpev;\n\t\t\tcontinue;\n\t\t} else if (mi == tmpev) continue;\n\t\tif (Changes(cnt)) {\n\t\t\tmi = min(mi, tmpev);\n\t\t\tcontinue;\n\t\t}\n\t\tswap(r[a], r[b]);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n\nconst int LOOP_TIMES = 1e6;\nconst double EPS = 1e-6;\nint L, N;\n\ndouble Evaluate(int *r){\n\tdouble val = r[0] + r[N-1];\n\tfor(int i = 0; i < N - 1; i++){\n\t\tint a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\nbool IsChange(int cnt){\n\treturn cnt < rand()%LOOP_TIMES + 1;\n}\n\ndouble Solve(int *r){\n\tdouble score = Evaluate(r), mi = score;\n\tfor(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n\t\tint *a = r + rand()%N, *b = r + rand()%N;\n\t\tswap(*a, *b);\n\n\t\tdouble next_score = Evaluate(r);\n\t\tif( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n\t\telse score = next_score;\n\t\t\n\t\tmi = min(mi, score);\n\t}\n\treturn mi;\n}\n\nint main(){\n\twhile(cin >> L){\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile( !SS.eof() ){\n\t\t\tSS >> r[N++];\n\t\t}\n\n\t\tdouble ans;\n\t\tif(N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif(L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 10000000\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    vector<int> vec;\n    stringstream ss(str);\n    int wid,n=0;\n    ss >> wid;\n    while(!ss.eof()){\n      int s;\n      ss >> s;\n      vec.push_back(s);\n      n++;\n    }\n    double dp[1<<n][n];\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tdp[i][j] = INF;\n      }\n    }\n    for(int i=0;i<n;i++){\n      dp[(1<<n)-1-(1<<i)][i] = vec[i];\n    }\n    for(int i=(1<<n)-2;i>-1;i--){\n      for(int j=0;j<n;j++){\n\tif(!(i & (1<<j))){\n\t  for(int k=0;k<n;k++){\n\t    dp[i][j] = min(dp[i][j],dp[i | (1<<j)][k] + 2*sqrt(vec[j]*vec[k]));\n\t  }\n\t}\n      }\n    }\n    double ans = INF;\n    for(int i=0;i<n;i++){\n      ans = min(ans,dp[0][i]+vec[i]);\n    }\n    if(ans <= wid) cout << \"OK\" << endl;\n    else cout << \"NG\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nstruct State {\n\tdouble length;\n\tint done, last;\n\tState(double a, int b, int c) : length(a), done(b), last(c) {}\n\tbool operator < (const State &t) const {\n\t\treturn length > t.length;\n\t}\n};\n\nint main()\n{\n\tstring str;\n\twhile (getline(cin, str)){\n\t\tstringstream ss(str);\n\t\tint length = -1;\n\t\tvector<int> v;\n\t\twhile (!ss.eof()){\n\t\t\tint tmp;\n\t\t\tss >> tmp;\n\t\t\tif (~length) v.push_back(tmp);\n\t\t\telse length = tmp;\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tint n = v.size();\n\t\tif (!n){\n\t\t\tputs(\"OK\");\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tvector<vector<double> > d(15, vector<double>(1 << 15, 1e25));\n\t\tbool res = false;\n\t\tpriority_queue<State> que;\n\t\tfor (que.push(State(0.0, 0, -1)); que.size(); que.pop()){\n\t\t\tState st = que.top();\n\t\t\tif (d[st.last + 1][st.done] < st.length) continue;\n\t\t\td[st.last + 1][st.done] = st.length;\n\t\t\tif (st.done == (1 << n) - 1){\n\t\t\t\t//printf(\"%f\\n\", st.length + v[st.last]);\n\t\t\t\tif (st.length + v[st.last] <= length) res = true;\n\t\t\t\telse continue;\n\t\t\t}\n\t\t\t\n\t\t\tfor (int i = 0; i < n; i++){\n\t\t\t\tint x = 1 << i;\n\t\t\t\tif (st.done & x) continue;\n\t\t\t\t\n\t\t\t\tdouble nlen = st.length;\n\t\t\t\tif (~st.last){\n\t\t\t\t\tnlen += sqrt((v[st.last] + v[i]) * (v[st.last] + v[i]) - (v[st.last] - v[i]) * (v[st.last] - v[i]));\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnlen += v[i];\n\t\t\t\t}\n\t\t\t\tint ndone = st.done | x;\n\t\t\t\tif (d[i + 1][ndone] < nlen) continue;\n\t\t\t\tque.push(State(nlen, ndone, i));\n\t\t\t}\n\t\t}\n\t\tputs(res ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[1000]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' '; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[1000];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<sstream>\n#include<utility>\n#include<map>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>P;\nchar I[300],*p;\nint R[15],B,N,i,j,k,a[2][15];\n\n\ndouble ch(int *r)\n{\n\tint i;\n\tdouble l=0;\n\tfor(i=0;i<N-1;i++)\n\t{\n\t\tint a=pow((double)r[i]+r[i+1],2);\n\t\tint b=pow((double)abs(r[i]-r[i+1]),2);\n\n\t\tl+=sqrt((double)(a-b));\n\t}\n\treturn pow(l+r[0]+r[N-1],2);\n}\n\nint main()\n{\n\tfor(;gets(I);)\n\t{\n\t\tp=strtok(I,\" \");\n\t\tB=atoi(p);\n\t\tB*=B;\n\t\tfor(N=0;(p=strtok(NULL,\" \"))!=NULL;)\n\t\t\tR[N++]=atoi(p);\n\t\tsort(R,R+N);\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(j%2)a[0][j]=R[i++];\n\t\t\telse a[0][j]=R[k--];\n\t\t}\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(!(j%2))a[1][j]=R[i++];\n\t\t\telse a[1][j]=R[k--];\n\t\t}\n\t\tputs(B>=ch(a[0])||B>=ch(a[1])?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <cmath>\n\nusing namespace std;\n\ndouble dp[12][1 << 12];\n\nint main(){\n\tint width;\n\twhile(cin >> width){\n\t\tfor(int i = 0; i < 12; ++i){\n\t\t\tfor(int j = 0; j < (1 << 12); ++j){ dp[i][j] = -1.0; }\n\t\t}\n\t\tstring line;\n\t\tgetline(cin, line);\n\t\tstringstream ss(line);\n\t\tvector<int> cakes;\n\t\tint r;\n\t\twhile(ss >> r){\n\t\t\tcakes.push_back(r);\n\t\t\tint index = cakes.size() - 1;\n\t\t\tdp[index][1 << index] = static_cast<double>(r * 2);\n\t\t}\n\t\tint n = cakes.size();\n\t\tfor(int j = 0; j < (1 << n); ++j){\n\t\t\tfor(int i = 0; i < n; ++i){\n\t\t\t\tif(!(j & (1 << i))){ continue; }\n\t\t\t\tfor(int k = 0; k < n; ++k){\n\t\t\t\t\tif(j & (1 << k)){ continue; }\n\t\t\t\t\tint mask = j | (1 << k);\n\t\t\t\t\tdouble c = cakes[i] + cakes[k];\n\t\t\t\t\tdouble a = cakes[i] - cakes[k];\n\t\t\t\t\tdouble b = sqrt(c * c - a * a);\n\t\t\t\t\tdouble p = dp[i][j] - cakes[i] + b + cakes[k];\n\t\t\t\t\tdp[k][mask] = (dp[k][mask] < 0.0 ? p : min(dp[k][mask], p));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool flag = (n == 0);\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tif(dp[i][(1 << n) - 1] <= width + 1e-6){ flag = true; }\n\t\t}\n\t\tcout << (flag ? \"OK\" : \"NG\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nint length;\nvector<int> rn;\ndouble dp[1 << 12 + 1][12];\n\nconst int INF = 1000000;\n\n// nÌrbgª§ÁÄ¢éª»Ý ÉüÁÄ¢é~\n// nÌóÔ©ç½ÇèÂ¯éÅ¬Ì·³ðßé\nvoid solve(){\n\n  for(int i = 0; i < 1 << rn.size(); i++){\n    fill(dp[i],dp[i]+12,INF);\n  }\n\n  for(int i = 0; i < rn.size(); i++){\n    dp[1<<i][i] = 2*rn[i];\n  }\n\n  for(int s = 1; s < 1 << rn.size(); s++){\n    for(int j = 0; j < rn.size(); j++){\n      if((s >> j & 1) == 0){\n\tcontinue;\n      }\n      for(int i = 0; i < rn.size(); i++){\n\tif((s >> i) & 1 == 0){\n\t  dp[s|1<<i][i] = min(dp[s|1<<i][i]\n\t\t\t      ,dp[s][j] + 2*sqrt(rn[j]+rn[i])-rn[j]+rn[i]);\n\t}\n      }\n    }\n  }\n  double minNum = INF;\n  for(int i = 0; i < rn.size(); i++){\n    minNum = min(minNum,dp[(1<<rn.size())-1][i]);\n  }\n  if(minNum < (double)length){\n    cout << \"OK\" << endl;\n  }\n  else\n    cout << \"NA\" << endl;\n}\n\nint main(){\n  int n;\n\n  string str;\n  while(1){\n    //    fill(dp,dp+1<<12,-1);\n    rn.clear();\n    getline(cin,str);\n    if(cin.eof())\n      break;\n    bool flag = true;\n    string s;\n    for(int i = 0; i < str.size(); i++){\n      if(str[i] == ' '){\n\tif(flag){\n\t  length = atoi(s.c_str());\n\t  flag = false;\n\t}\n\telse{\n\t  rn.push_back(atoi(s.c_str()));\n\t}\n\ts = \"\";\n      }\n      else if(i == str.size()-1){\n\ts += str[i];\n\trn.push_back(atoi(s.c_str()));\n      }\n      else\n\ts += str[i];\n    }\n\n    solve();\n    // cout << length << \" \" << flush;\n    // for(int i = 0; i < rn.size(); i++){\n    //   cout << rn[i] << \" \" << flush;\n    // }\n    // cout << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <math.h>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\n#define INF 100000\n\nint n, W;\nint r[12];\ndouble bitDP[12][(1<<12)]; // [??????????????£???] , [?????£?????±?????????bit??§??????]\n\nbool inputData() {\n\tstring str;\n\tgetline(cin, str);\n\tif(cin.eof()) {\n\t\treturn false;\n\t}\n\t\n\tstr += ' ';\n\t\n\tint i, tmp = 0;\n\tfor(i = 0; i < str.size(); i++) {\n\t\tif('0' <= str[i] && str[i] <= '9') {\n\t\t\ttmp  = tmp * 10 + str[i] - '0';\n\t\t} else {\n\t\t\tW = tmp;\n\t\t\ti++;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tn = tmp = 0;\n\twhile(i < str.size()) {\n\t\tif('0' <= str[i] && str[i] <= '9') {\n\t\t\ttmp  = tmp * 10 + str[i] - '0';\n\t\t} else {\n\t\t\tr[n++] = tmp;\n\t\t\ttmp = 0;\n\t\t}\n\t\t\n\t\ti++;\n\t}\n\t\n\treturn true;\n}\n\nint main()\n{\n\twhile(inputData()) {\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\t\tbitDP[i][bit] = INF;\n\t\t\t}\n\t\t\tbitDP[i][(1 << i)] = (double)r[i];\n\t\t}\n\t\t\n\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\tfor(int i = 0; i < n ; i++) {\n\t\t\t\tfor(int j = 0; j < n; j++) {\n\t\t\t\t\tif(bit& (1 << j)) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tdouble distance_r = r[i] + r[j];\n\t\t\t\t\tdouble distance_y = (r[i] - r[j] >= 0)? r[i] - r[j]: r[j] - r[i];\n\t\t\t\t\tdouble cost = distance_r * cos(asin(distance_y / distance_r));\n\t\t\t\t\tbitDP[j][bit| (1 << j)] = min(bitDP[j][bit| (1 << j)], bitDP[i][bit] + cost);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t/*\n\t\tfor(int i = 0; i < n ; i++) {\n\t\t\tfor(int bit = 0; bit < (1 << n); bit++) {\n\t\t\t\tif(bitDP[i][bit] == INF) cout << -1 << \" \";\n\t\t\t\telse cout << bitDP[i][bit] << \" \";\n\t\t\t}cout << endl;\n\t\t}*/\n\t\t\n\t\tdouble ans = INF;\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tans = min(ans, bitDP[i][(1 << n)-1] + (double)r[i]);\n\t\t}\n\t\t//cout << ans << \" \" << W << endl;\n\t\tcout << ((ans <= W)? \"OK\": \"NA\") << endl;\n\t\t\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    sort(temps.begin(), temps.end());\n\n    // {\n    //   for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n    //     if (lb == ub) {\n    //       if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n    //         cakes.push_back(temps[lb]);\n    //       else\n    //         inserter(cakes, cakes.begin()) = temps[lb];\n    //     } else {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     }\n    //   }\n    // }\n\n    puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n\nconst int LOOP_TIMES = 1e2;\nconst double EPS = 1e-6;\nint L, N;\n\ndouble Evaluate(int *r){\n\tdouble val = r[0] + r[N-1];\n\tfor(int i = 0; i < N - 1; i++){\n\t\tint a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\nbool IsChange(int cnt){\n\treturn cnt < rand()%LOOP_TIMES + 1;\n}\n\ndouble Solve(int *r){\n\tdouble score = Evaluate(r), mi = score;\n\tfor(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n\t\tint *a = r + rand()%N, *b = r + rand()%N;\n\t\tswap(*a, *b);\n\n\t\tdouble next_score = Evaluate(r);\n\t\tif( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n\t\telse score = next_score;\n\t\t\n\t\tmi = min(mi, score);\n\t}\n\treturn mi;\n}\n\nint main(){\n\twhile(cin >> L){\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile( !SS.eof() ){\n\t\t\tSS >> r[N++];\n\t\t}\n\n\t\tif(L - Solve(r) + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\n#include <deque>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    sort(rs.begin(), rs.end());\n    deque<int> deq(rs.begin(), rs.end());\n    vector<int> bs;\n    bs.push_back(deq.front());\n    deq.pop_front();\n    int right = deq.front();\n    deq.pop_front();\n    while(!deq.empty()) {\n        bs.push_back(deq.back());\n        deq.pop_back();\n        if(!deq.empty()) {\n            bs.push_back(deq.front());\n            deq.pop_front();\n        }\n    }\n    bs.push_back(right);\n    /*double req = bs[0] + bs[size-1];\n    for(int i=1; i<size; i++) {\n        req += calc(bs[i-1], bs[i]);\n    }*/\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <iomanip>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdlib>\n#include <cstdio>\n#include <cmath>\n#include <bitset>\nusing namespace std;\n  \nconst double EPS = 1e-9;\n\nint dx[] = {0, 0, 1, -1};\nint dy[] = {1, -1, 0, 0};\n\nint main(){\n\tstring s;\n\twhile(getline(cin, s)){\n\t\tstringstream ss;\n\t\tvector<int> r;\n\t\tint boxlen;\n\t\tint n;\n\t\tss << s;\n\t\tss >> boxlen;\n\t\twhile(ss >> n){\n\t\t\tr.push_back(n);\n\t\t}\n\t\tsort(r.begin(), r.end());\n\t\tdouble len = r[0];\n\t\tif(r.size() > 1){\n\t\t\tlen += r[1];\n\t\t}\n\t\tint i = 0, j = r.size()-1;\n\t\tint cnt = 0;\n\t\twhile(i != j){\n\t\t\tprintf(\"i:%d, j:%d, d=%lf\\n\", i, j, 2*sqrt((double)r[i]*r[j]));\n\t\t\tlen += 2*sqrt((double)r[i]*r[j]);\n\t\t\tif(cnt%2){\n\t\t\t\tj--;\n\t\t\t}else{\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tcnt++;\n\t\t}\n\n\t\tcout << \"len:\" << len << endl;\n\t\tcout << \"boxlen:\" << boxlen << endl;\n\t\tif(len <= boxlen){\n\t\t\tcout << \"OK\" << endl;\n\t\t}else{\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n\n  \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\nint r[15];\ndouble dp[15][15][100000];\nint main(){\n\tint len;\n\tstring s;\n\twhile(cin>>len){\n\tgetline(cin,s);\n\tint n=0,cnt=0;\n\tfor(int i=1;i<s.size();i++){\n\t\tif(s[i]==' '){\n\t\t\tr[n]=cnt;\n\t\t\tn++;\n\t\t\tcnt=0;\n\t\t}\n\t\telse{\n\t\t\tcnt*=10;\n\t\t\tcnt+=s[i]-'0';\n\t\t}\n\t}\n\tr[n]=cnt;\n\tn++;\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<100000;k++){\n\t\t\t\tdp[i][j][k]=10000.0;\n\t\t\t}\n\t\t}\n\t}\n\tint w=1;\n\tfor(int i=0;i<n;i++){\n\t\tdp[0][i][w]=r[i]+0.0;\n\t\tw*=2;\n\t}\n\tfor(int i=0;i<n-1;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<w;k++){\n\t\t\t\tint h=1;\n\t\t\t\tfor(int e=0;e<n;e++){\n\t\t\t\t\tif(k%(h*2)<h){\n\t\t\t\t\t\tdouble set=dp[i][j][k];\n\t\t\t\t\t\tset+=2*(double)sqrt((double)r[j]*r[e]);\n\t\t\t\t\t\tif(dp[i+1][e][k+h]>set){\n\t\t\t\t\t\t\tdp[i+1][e][k+h]=set;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\th*=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbool ok=false;\n\tfor(int j=0;j<n;j++){\n\t\tfor(int k=0;k<w;k++){\n\t\t\tif(dp[n-1][j][k]+r[j]<=len){\n\t\t\t\tok=true;\n\t\t\t}\n\t\t}\n\t}\n\tif(ok)cout<<\"OK\"<<endl;\n\telse cout<<\"NA\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define X first\n#define Y second\n\nvector<double> data;\npair<double,double> lc;\nvector<bool> done;\n\nvector<int> memo(1<<12);\nint boxSize;\nbool flag;\n\ndouble solve(double x,double a,double b){\n\treturn (2.0*x+sqrt(4*x*x-4*(x*x-4*a*b)) ) / 2.0;\n}\n\nvoid bt(){\n\tif( count(done.begin(),done.end(),true) == done.size() ){\n\t\tif( lc.X + lc.Y<=boxSize){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tif(flag || lc.X + lc.Y > boxSize)return;\n\t\n\tint msk = 0;\n\tfor(int i=0;i<done.size();i++){\n\t\tif(done[i])msk += 1<<i;\n\t}\n\tif( lc.first >= memo[msk])return;\n\tmemo[msk] = lc.first;\n\tfor(int i=0;i<data.size();i++){\n\t\tif(done[i])continue;\n\t\t\n\t\t//if(solve(lc.X,lc.Y,data[i]) > boxSize)continue;\n\t\tdone[i] = true;\n\t\tpair<double,double> tmp = lc;\n\t\tlc = make_pair(solve(lc.X,lc.Y,data[i]),data[i]);\n\t\tbt();\n\t\tlc = tmp;\n\t\tdone[i] = false;\n\t}\n}\n\n\nint main(){\n\tint t;\n\tstring s;\n\twhile(getline(cin,s) && s != \"\"){\n\t\tvector<int> input;\n\t\tflag = false;\n\t\tdata.clear();\n\t\t\n\t\tstringstream ss(s);\n\t\twhile(ss >> t)input.push_back(t);\n\t\t\n\t\tboxSize = input[0];\n\t\tfor(int i=1;i<input.size();i++){\n\t\t\tdata.push_back(input[i]);\n\t\t}\n\t\tsort( data.begin(),data.end(),greater<int>() );\n\t\tdone.resize(data.size());\n\t\tfill(done.begin(),done.end(),false);\n\t\tfill(memo.begin(),memo.end(),(1<<21));\n\t\t\n\t\tfor(int i=0;i<data.size();i++){\n\t\t\tdone[i] = true;\n\t\t\tlc = make_pair(data[i],data[i]);\n\t\t\tbt();\n\t\t\tdone[i] = false;\n\t\t}\n\t\tcout << (flag?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <vector>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nvector<int> parse(string str) {\n\tvector<int> ret; int t = 0; str += ' ';\n\tfor (int i = 0; i < str.size(); i++) {\n\t\tif (str[i] == ' ') ret.push_back(t), t = 0;\n\t\telse t = t * 10 + str[i] - 48;\n\t}\n\treturn ret;\n}\nint bitcount(int x) {\n\tint ret = 0;\n\tfor (int i = 0; i < 31; i++) {\n\t\tif (x & (1 << i)) ret++;\n\t}\n\treturn ret;\n}\nstring s; double dp[4100][12];\nint main() {\n\twhile (s = \"\", getline(cin, s)) {\n\t\tvector<int> u = parse(s);\n\t\tvector<int> v(u.begin() + 1, u.end());\n\t\tint n = v.size();\n\t\tfor (int i = 0; i < (1 << n); i++) {\n\t\t\tfor (int j = 0; j < n; j++) dp[i][j] = 999999999.9L;\n\t\t}\n\t\tfor (int i = 0; i < n; i++) dp[1 << i][i] = v[i];\n\t\tfor (int i = 1; i < (1 << n); i++) {\n\t\t\tif (bitcount(i) <= 1) continue;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (!(i & (1 << j))) continue;\n\t\t\t\tdp[i][j] = 999999999.9L;\n\t\t\t\tfor (int k = 0; k < n; k++) {\n\t\t\t\t\tif ((i & (1 << k)) && (j != k)) {\n\t\t\t\t\t\tdouble d1 = v[j] + v[k], d2 = abs(v[j] - v[k]);\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j], dp[i - (1 << j)][k] + sqrt(d1 * d1 - d2 * d2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble ret = 999999999.9L;\n\t\tfor (int i = 0; i < n; i++) ret = min(ret, dp[(1 << n) - 1][i] + v[i]);\n\t\tcout << (ret <= u[0] + 1e-10 ? \"OK\" : \"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECURE_NO_WARNINGS 1\n# include <iostream>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <map>\n# include <stack>\nusing namespace std;\n//# define M_PI 3.141592\n# define INF ((int)(1<<30))\n# define FOR(i,n) for(int i=0;i<(int)n;i++)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define toRad 2.0*M_PI/360.0\n# define inin(x) int x;cin>>x;\n# define all(x) x.begin(),x.end()\n# define debug(x) cout<<#x<<\" :\"<<x<<endl;\n# define rep(i,n) for(int i=0;i<(int)n;i++)\n# define EPS 1e-12\n# define CHECK(i,a) FOR(i,a.size())cout<<#a<<\"[\"<<i<<\"] : \"<<a[i]<<endl; \n\nvector<double>a;\ndouble memo[1 << 12][13];\ndouble calc(int a1,int a2)\n{\n\tdouble t = a[a1] + a[a2];\n\tdouble s = a[a1] - a[a2];\n\treturn sqrt(t*t - s*s);\n}\n\n\n\ndouble dp(int bit,int s)\n{\n\tif (memo[bit][s]>=0)return memo[bit][s];\n\tdouble ans = 9999999999999.0;\n\tbool ok = true;\n\tfor (int i = 0; i < a.size(); i++)\n\t{\n\t\tif (!(bit & (1 << i)))\n\t\t{\n\t\t\tok = false;\n\t\t\tdouble x = (bit ? 0.0 : a[i]);\n\t\t\tans = min(ans, dp(bit | (1 << i), i) + calc(i, s)+x);\n\t\t}\n\t}\n\tif (ok)return a[s];\n\treturn memo[bit][s] = ans;\n}\nint main()\n{\n\tstring s;\n\twhile (getline(cin,s))\n\t{\n\t\tfor (auto &x : memo)for(auto &y:x)y= -1.0;\n\t\ta.clear();\n\t\tstringstream ss(s);\n\t\tdouble n;\n\t\tss >> n;\n\t\tdouble temp;\n\t\twhile (ss >> temp)\n\t\t{\n\t\t\ta.push_back(temp);\n\t\t}\n\t\tbool ok = false;\n\t\tdouble ans = 99999999999999999;\n\t\tfor (int i = 0; i < a.size(); i++)\n\t\t{\n\t\t\tans = min(ans, dp(1 << i, i)+a[i]);\n\t\t}\n\t\tok = (ans <= n);\n\t\tif (ok)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <cmath>\n#include <climits>\nusing namespace std;\n#define rep2(x,from,to) for(int x=(from);x<(to);++(x))\n#define rep(x,to) rep2(x,0,to)\n\nint main() {\n\tdouble dp[1<<12][12];\n\tdouble dist[16][32];\n\trep(i,16) {\n\t\trep2(j,i,32) {\n\t\t\tdist[i][j] = sqrt(j*j-i*i);\n\t\t}\n\t}\n\tint len, tmp;\n\tstring s;\n\twhile(getline(cin, s)) {\n\t\tstringstream ss(s);\t\t\n\t\tvector<int> v;\n\t\tss >> len;\n\t\twhile(ss >> tmp) v.push_back(tmp);\n\t\tint n = v.size();\n\t\trep(i,1<<12) {\n\t\t\trep(j,12) {\n\t\t\t\tdp[i][j] = INT_MAX;\n\t\t\t}\n\t\t}\n\t\trep(i,n) {\n\t\t\tdp[1<<i][i] = v[i];\n\t\t}\n\t\trep(i,(1<<n)) {\n\t\t\trep(j,n) {\n\t\t\t\tif(!(i&(1<<j))) continue;\n\t\t\t\trep(k,n) {\n\t\t\t\t\tif(i&(1<<k)) continue;\n\t\t\t\t\tdp[i|1<<k][k] = min(dp[i|1<<k][k], dp[i][j]+dist[abs(v[k]-v[j])][v[k]+v[j]]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool f = 1;\n\t\trep(i,n) {\n\t\t\tif(dp[(1<<n)-1][i] + v[i] <= len) {\n\t\t\t\tcout << \"OK\" << endl;\n\t\t\t\tf = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f) cout << \"NA\" << endl;\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[2000]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[2000];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\t//if(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\tif(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-6 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\n\ndouble calc(int r1,int r2){\n  return sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,1e9));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    REP(i,1,(1 << n)){\n      REP(j,0,n){\n        if(i & (1 << j)) continue;\n        ll nxt = i | (1 << j);\n        REP(k,0,n){\n          if((i & (1 << k)) == 0) continue;\n          double bw = 0;\n          if(nxt == (1 << n)-1){\n            bw += v[j];\n          }\n          bw += calc(v[k],v[j]);\n          dp[nxt][j] = min(dp[nxt][j],bw + dp[i][k]);\n        }\n      }\n    }\n    rep(i,n){\n      ans = min(ans,dp[(1 << n)-1][i]);\n    }\n    if(ans <= w){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.00001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        double ans;\n        if(r.size()==1)ans=r[0]*2;\n        else ans=optimize(r);\n\n        if(ans<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    deque<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    sort(temps.begin(), temps.end());\n    for (;temps.size();) {\n      int front = temps.front();\n      temps.pop_front();\n      if (temps.size() == 0) {\n        if (abs(front - *cakes.begin()) > abs(front - *cakes.rbegin())) {\n          inserter(temps, temps.begin()) = front;\n        } else {\n          cakes.push_back(front);\n        }\n        break;\n      }\n      int back = temps.back();\n      temps.pop_back();\n      cakes.push_back(front);\n      cakes.push_back(back);\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes[0];\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      if (cakes[i] == cakes[i+1]) {\n        current_length += 2 * cakes[i];\n      } else {\n        int larger = max(cakes[i], cakes[i+1]);\n        int smaller = min(cakes[i], cakes[i+1]);\n        double height = larger - smaller;\n        double naname = larger + smaller;\n        double width = sqrt(pow(naname, 2) - pow(height, 2));\n        current_length += width;\n      }\n    }\n    current_length += cakes[cakes.size() - 1];\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nvint x;\ndouble n,dis[20][20];\nint m;\nstring str;\ndouble dp[5000][15];\n\nvoid input(){\n\tint c;\n\tx.clear();\n\tm=0;\n\tbool first=true;\n\tint num=0;\n\tint i;\n\tfor(i=0;i<str.size();i++){\n\t\tc=str[i];\n\t\tif(c==' '){\n\t\t\tif(first){\n\t\t\t\tn=num;\n\t\t\t\tnum=0;\n\t\t\t\tfirst=false;\n\t\t\t}else{\n\t\t\t\tx.push_back(num);\n\t\t\t\tm++;\n\t\t\t\tnum=0;\n\t\t\t}\n\t\t}else{\n\t\t\tnum=num*10+c-'0';\n\t\t}\n\t}\n\tif(num!=0){x.push_back(num);m++;}\n\treturn;\n}\n\nvoid hoge(int i,int j){\n//cout<<i<<\" \"<<j<<\" \"<<dp[i][j]<<endl;\n\tint k;\n\tdouble res=-2;\n\tif(dp[i][j]!=-1)return;\n\tif(i&1<<j){\n\t\tint ii=i^1<<j;\n\t\tfor(k=0;k<m;k++){\n\t\t\thoge(ii,k);\n//cout<<\" \"<<ii<<\" \"<<k<<\" \"<<dp[ii][k]<<\" \"<<x[j]<<\" \"<<x[k]<<endl;\n\t\t\tif(dp[ii][k]==-2)continue;\n\t\t\telse if(res==-2)res=dp[ii][k]+dis[x[j]][x[k]];\n\t\t\telse chmin(res,dp[ii][k]+dis[x[j]][x[k]]);\n\t\t}\n\t}\n\tdp[i][j]=res;\n//cout<<i<<\" \"<<j<<\" \"<<dp[i][j]<<endl;\n}\n\nint main() {\n\tint i,j;\n\tfor(i=0;i<20;i++){\n\t\tfor(j=0;j<20;j++){\n\t\t\tdis[i][j]=sqrt(double((i+j)*(i+j)-(i-j)*(i-j)));\n\t\t}\n\t}\n\twhile(getline(cin,str)){\n\t\tinput();\n\t\tint i;\n//for(i=0;i<m;i++)cout<<x[i]<<endl;\n\t\tfor(i=0;i<5000;i++){\n\t\t\tfor(j=0;j<15;j++){\n\t\t\t\tdp[i][j]=-1;\n\t\t\t}\n\t\t}\n\t\tfor(i=0;i<m;i++)dp[1<<i][i]=x[i];\n\t\tfor(i=0;i<m;i++){\n\t\t\thoge((1<<m)-1,i);\n\t\t\tdp[(1<<m)-1][i]+=x[i];\n\t\t}\n\t\tdouble res=100100100;\n\t\tfor(i=0;i<m;i++)chmin(res,dp[(1<<m)-1][i]);\n\t\tcout<<(n>=res?\"OK\":\"NA\")<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 300; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<sstream>\n#include<cmath>\n\nusing namespace std;\n\nconst int MAX = 12;\nvector<double> Cake;\ndouble box;\ndouble dp[(1<<MAX)][MAX];\n\nvoid init(){\n  Cake.clear();\n  fill(dp[0],dp[0]+(1<<MAX)*MAX,0);\n}\n\nvoid make(){\n  string s;\n  getline(cin,s);\n  stringstream ss(s);\n  double num;\n  while(ss >> num) Cake.push_back(num);\n}\n\nvoid solve(){\n\n\n  for(int i = 0; i < (1<<Cake.size()); i++)\n    for(int j = 0; j < (int)Cake.size(); j++)\n      for(int k = 0; k < (int)Cake.size(); k++)\n\tif(i == 0) dp[(1<<k)][k] = Cake[k];\n\telse if(!(i&(1<<k)))\n\t  dp[i+(1<<k)][k] = dp[i+(1<<k)][j]+2*sqrt(Cake[j]*Cake[k]);\n\n  for(int i = 0; i < (int)Cake.size(); i++){\n    //  cout << dp[(1<<Cake.size())-1][i]+Cake[i] << endl;\n    if(dp[(1<<Cake.size())-1][i]+Cake[i] <= box) {cout << \"OK\" << endl;return;}\n  }\n  cout << \"NA\" << endl;\n}\n\nint main(){\n\n  while(cin >> box){\n    init();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <cstring>\n#include <sstream>\n#define MAX_N 12\n#define INF 10000\nusing namespace std;\nvector<int> cakes;\nint n;\ndouble d[MAX_N][MAX_N];\ndouble dp[1 << MAX_N][MAX_N];\n\nvoid calc_dist(){\n    for (int i = 0; i < n; i++) {\n        for (int j = 0;  j < n; j++) {\n            double dist = sqrt(pow(cakes[i] + cakes[j], 2) - pow(cakes[i] - cakes[j], 2));\n            d[i][j] = dist;\n        }\n    }\n}\n\ndouble solve(){\n    n = cakes.size();\n    for (int s = 0; s < 1 << n; s++) {\n        for (int j = 0; j < n; j++) {\n            dp[s][j] = INF;\n        }\n    }\n    \n    dp[(1 << n) - 1][0] = 0;\n    \n    for (int s = (1 << n) - 2; s >= 0; s--) {\n        for (int v = 0; v < n; v++) {\n            for (int u = 0; u < n; u++) {\n                if (!(s >> u & 1)) {\n                    dp[s][v] = min(dp[s][v], dp[s | 1 << u][u] + d[v][u]);\n                }\n            }\n        }\n    }\n    return dp[0][0];\n}\n\n\nint main()\n{\n    int len;\n\n    while (cin >> len) {\n        cakes.clear();\n        string str;\n        getline(cin, str);\n        stringstream ss(str);\n        while (!ss.eof()) {\n            int r;\n            ss >> r;\n            cakes.push_back(r);\n        }\n        n = cakes.size();\n        for (int i = 0; i < n; i++) {\n            d[i][i] = 0;\n        }\n        calc_dist();\n        if (solve() <= len){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NG\" << endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n\nconst int LOOP_TIMES = 1e2;\nconst double EPS = 1e-6;\nint L, N;\n\ndouble Evaluate(int *r){\n\tdouble val = r[0] + r[N-1];\n\tfor(int i = 0; i < N - 1; i++){\n\t\tint a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\nbool IsChange(int cnt){\n\treturn cnt < rand()%LOOP_TIMES + 1;\n}\n\ndouble Solve(int *r){\n\tdouble score = Evaluate(r), mi = score;\n\tfor(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n\t\tint *a = r + rand()%N, *b = r + rand()%N;\n\t\tswap(*a, *b);\n\n\t\tdouble next_score = Evaluate(r);\n\t\tif( score >= next_score && !IsChange(cnt) ) swap(a, b);\n\t\telse score = next_score;\n\t\t\n\t\tmi = min(mi, score);\n\t}\n\treturn mi;\n}\n\nint main(){\n\twhile(cin >> L){\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile(!SS.eof() ){\n\t\t\tSS >> r[N++];\n\t\t}\n\n\t\tif(L - Solve(r) + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\ndouble calcMin(int n, int *r)\n{\n\tstatic double dp[1 << 12][12] = {0};\n\tstatic double dist[12][12];\n\tconst double MAX = 1000000;\n\t\n\tfor(int i = 0; i < n; ++i) {\n\t\tfor(int j = 0; j < n; ++j) {\n\t\t\tdouble dx = r[i] + r[j], dy = abs(r[i] - r[j]);\n\t\t\tdist[i][j] = sqrt(dx * dx - dy * dy);\n\t\t}\n\t}\n\t\n\tfor(int i = 0; i < (1 << n); ++i)\n\t\tfor(int j = 0; j < n; ++j)\n\t\t\tdp[i][j] = MAX;\n\tfor(int i = 0; i < n; ++i)\n\t\tdp[1 << i][i] = r[i];\n\t\n\tfor(int i = 0; i < (1 << n); ++i) {\n\t\tfor(int j = 0; j < n; ++j) {\n\t\t\t\n\t\t\tif(!(i & (1 << j)))\n\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\tint prev = i & (~(1 << j));\n\t\t\t\n\t\t\tfor(int k = 0; k < n; ++k) {\n\t\t\t\t\n\t\t\t\tif(!(prev & (1 << k)))\n\t\t\t\t\tcontinue;\n\t\t\t\t\n\t\t\t\tdp[i][j] = min(dp[i][j], dp[prev][k] + dist[k][j]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tdouble ans = MAX;\n\t\n\tfor(int i = 0; i < n; ++i)\n\t\tans = min(ans, dp[(1 << n) - 1][i] + r[i]);\n\t\t\n\treturn ans;\n}\n\nint main()\n{\n\twhile(true) {\n\t\t\n\t\tint s, n = 0;\n\t\tint r[12];\n\t\tchar c = 0;\n\t\t\n\t\tif(scanf(\"%d \", &s) == EOF)\n\t\t\tbreak;\n\t\t\t\n\t\twhile(c != '\\n')\n\t\t\tscanf(\"%d%c\", &r[n++], &c);\n\t\t\n\t\tprintf(\"[Debug] %d :\", s);\n\t\tfor(int i = 0; i < n; ++i)\n\t\t\tprintf(\" %d\", r[i]);\n\t\tprintf(\" : %d\\n\", n);\n\t\t\t\n\t\tprintf(\"%s\\n\", calcMin(n, r) <= s ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nconst int dx[]={0,1,0,-1,1,-1,-1,1};\nconst int dy[]={-1,0,1,0,1,1,-1,-1};\nconst int INF = 1<<30;\nconst int EPS = 1e-15;\n#define PB push_back\n#define mk make_pair\n#define fi first\n#define se second\n#define ll long long\n#define reps(i,j,k) for(int i = (j); i < (k); i++)\n#define rep(i,j) reps(i,0,j)\n#define MOD 1000000007\ntypedef pair<int,int> Pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ndouble memo[1<<12][12];\ndouble dist(double a,double b){\n\tif(a<b)swap(a,b);\n\treturn sqrt(((a+b)*(a+b))-((a-b)*(a-b)));\n}\ndouble search(int bit,int dep,int prev,vi cake){\n\tif(dep == cake.size()){\n\t\treturn (double)cake[prev];\n\t}\n\tif(memo[bit][dep]){\n\t\treturn memo[bit][dep];\n\t}\n\tdouble ret = INF;\n\trep(i,cake.size()){\n\t\tif(!(bit>>i & 1)){\n\t\t\tif(bit == 0){\n\t\t\t\tret = min(ret,search(bit|1<<i,dep+1,i,cake)+cake[i]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tret = min(ret,search(bit|1<<i,dep+1,i,cake)+dist(cake[prev],cake[i]));\t\t\n\t\t\t}\n\t\t}\n\t}\n\treturn memo[bit][prev] = ret;\n}\nint main(){\n\tstring str;\n\twhile(getline(cin,str)){\n\t\tmemset(memo,0,sizeof(memo));\n\t\tstringstream ss(str);\n\t\tvi cake;\n\t\tint tmp;\n\t\tdouble len;\n\t\tbool f=false;\n\t\twhile(ss >> tmp){\n\t\t\tif(!f)len = (double)tmp;\n\t\t\telse cake.PB(tmp);\n\t\t\tf = true;\n\t\t}\n\t\tdouble ret = search(0,0,-1,cake);\n\t\tif(len-ret>=0.0)puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define MAX 12\n\nlong double sqs[MAX][MAX] = {{0,}};\n\nclass Cake{\npublic:\n\tCake():r(0),used(false){};\n\tint r;\n\tbool used;\n\tbool operator<(const Cake &t) const{\n\t\treturn r < t.r;\n\t}\n};\n\nbool check(int p[], int n, int w){\n\tlong double t = 0;\n\n\tt += p[0];\n\tfor(int i = 0; i < n-1; i++){\n\t\tt += 2.0*sqrt((long double)p[i]*p[i+1]);\n\t}\n\tt += p[n-1];\n\n\treturn t <= w;\n}\n\nbool solve2(int p[], int pos, int w, Cake cakes[], int n, bool greater){\n\tif( pos == n ){\n\t\treturn check(p,n,w);\n\t}else{\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tif( (greater ? p[pos-1] <= cakes[i].r : p[pos-1] >= cakes[i].r) && !cakes[i].used ){\n\t\t\t\tp[pos] = cakes[i].r;\n\t\t\t\tcakes[i].used = true;\n\t\t\t\tif( solve2( p, pos+1, w, cakes, n, !greater) ) return true;\n\t\t\t\tcakes[i].used = false;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}\n\nbool solve(int p[], int n, int w, int r[]){\n\t/*\n\t\tHigh Speed but not alphameric order.\n\t\tgenperm1 from http://www5.airnet.ne.jp/tomy/cpro/pe1.htm (C) Tomy\n\t*/\n\tlong double tw;\n\tint *c,*pc,*q,k,t;\n\n\tc = new int[n];\n\tfor(k=1,q=p,pc=c;k<=n;)*q++=*pc++=k++;k=1;pc=c;\n\tdo{t=*(p+k);*(p+k)=*(q=p+((k&1)?*pc:0));*q=t;\n\t\n\t//TODO\n\ttw = r[0] + 2.0 * sqs[r[0]][r[p[0]+1]];\n\tfor(int i = 0; i < n-1; i++){\n\t\ttw += 2.0 * sqs[ r[p[i]+1] ][ r[p[i+1]+1] ];\n\t}\n\ttw += r[1] + 2.0 * sqs[ r[1] ][ r[p[n-1]+1] ];\n\tif( tw <= w ){\n\t\t//cout << tw << endl;\n\t\tdelete [] c;\n\t\treturn true;\n\t}\n\t\n\tk=1;pc = c;while(*pc==0)*pc++=k++;(*pc)--;}while(k<n);\n\n\tdelete [] c;\n\treturn false;\n}\nlong double CalcCirclesLength(vector<int> &r){\n\tlong double ret;\n\tret = r[0];\n\t//cout << r[0] << ' ';\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2.0 * sqs[ r[i] ][ r[i+1] ];\n\t\t//cout << sqs[ r[i] ][ r[i+1] ] << ' ';\n\t}\n\t//cout << r[r.size() - 1] << endl;\n\tret += r[r.size() - 1];\n\treturn ret;\n}\nint main(void){\n\tfor(int i = 1; i < sizeof(sqs)/sizeof(*sqs); ++i){\n\t\tfor(int j = 1; j < sizeof(*sqs)/sizeof(**sqs); ++j){\n\t\t\tsqs[i][j] = sqrt((long double)i * j);\n\t\t}\n\t}\n\twhile(true){\n\t\tint w;\n\t\tlong double length = 0;\n\t\tvector<int> vCandR;\n\t\tvector<int> vR;\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\t\t\tcin >> tmp;\n\t\t\tvCandR.push_back(tmp);\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tvR.push_back(vCandR[0]);\n\t\tvCandR.erase( vCandR.begin()+0 );\n\t\twhile( vCandR.size() > 0 ){\n\t\t\tlong double minlen = 5000;\n\t\t\tint minind = 0;\n\t\t\tint minins = 0;\n\t\t\tfor(unsigned int i = 0; i < vCandR.size(); ++i){\t\n\t\t\t\tlong double l;\n\n\t\t\t\tfor(unsigned j = 0; j <= vR.size(); j++){\n\t\t\t\t\tvR.insert(vR.begin()+j,vCandR[i]);\n\t\t\t\t\tl = CalcCirclesLength( vR );\n\t\t\t\t\tif( l < minlen ){\n\t\t\t\t\t\tminlen = l; minind = i; minins = j;\n\t\t\t\t\t}\n\t\t\t\t\tvR.erase(vR.begin()+j);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvR.insert( vR.begin() + minins, vCandR[minind] );\n\t\t\t/*for(unsigned int i = 0; i < vR.size(); ++i){\n\t\t\t\tcout << vR[i] << ' ';\n\t\t\t}\n\t\t\tcout << endl;*/\n\t\t\tvCandR.erase( vCandR.begin() + minind );\n\t\t}\n\t\tcout << (CalcCirclesLength( vR ) <= w ? \"OK\\n\" : \"NA\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[300]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\t\t\t\tdistance[i][k] = sqrt((info[i].r+info[k].r)*(info[i].r+info[k].r)-(info[i].r-info[k].r)*(info[i].r-info[k].r)); //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\n\tdouble minimum = 4000.0;\n\n\tfor(int start_town = 0; start_town < info_index;start_town++){\n\n\t\tfor(int i = 0; i <= info_index; i++){\n\t\t\tfor(int k = 0; k < info_index;k++){\n\t\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t\t}\n\t\t}\n\n\t\tint next_state;\n\n\t\tnext_state = pow(2,start_town);\n\n\t\tdp[0][start_town][next_state] = 2.0*info[start_town].r;\n\n\t\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\t\tif(i == info_index && a == start_town && state == limit-1 && k != start_town){\n\t\t\t\t\t\t\t\t\tdp[i][start_town][limit-1] = min(dp[i][start_town][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state]+distance[k][a]+info[a].r-info[k].r);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tminimum = min(minimum,dp[info_index][start_town][limit-1]);\n\n\t}\n\n\tif(minimum < length || fabs(minimum-length) < EPS){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[300];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <numeric>\n#include <bitset>\n#include <cmath>\n\nstatic const int MOD = 1000000007;\nusing ll = long long;\nusing u32 = unsigned;\nusing u64 = unsigned long long;\nusing namespace std;\n\ntemplate<class T> constexpr T INF = ::numeric_limits<T>::max()/32*15+208;\n\ntemplate <class T, class U>\nvector<T> make_v(U size, const T& init){ return vector<T>(static_cast<size_t>(size), init); }\n\ntemplate<class... Ts, class U>\nauto make_v(U size, Ts... rest) { return vector<decltype(make_v(rest...))>(static_cast<size_t>(size), make_v(rest...)); }\n\ntemplate<class T> void chmin(T &a, const T &b){ a = (a < b ? a : b); }\ntemplate<class T> void chmax(T &a, const T &b){ a = (a > b ? a : b); }\n\nint main() {\n    string s;\n    while(getline(cin, s)){\n        vector<int> v{0};\n        for (auto &&i : s) {\n            if(i == ' ') v.emplace_back(0);\n            else v.back() = v.back()*10+i-'0';\n        }\n        int W = v.front();\n        int n = v.size()-1;\n        vector<int> A(v.begin()+1,v.end());\n        auto dp = make_v(n, 1 << n, 1e12);\n        for (int i = 0; i < n; ++i) {\n            dp[i][1 << i] = A[i];\n        }\n        for (int j = 0; j < (1 << n); ++j) {\n            for (int i = 0; i < n; ++i) {\n                for (int k = 0; k < n; ++k) {\n                    if(!(j & (1 << k))){\n                        chmin(dp[k][j^(1 << k)], dp[i][j]+2*sqrt(A[i]*A[k]));\n                    }\n                }\n            }\n        }\n        int ok = 0;\n        for (int i = 0; i < n; ++i) {\n            if(dp[i].back()+A[i] <= W+1e-10) ok = 1;\n        }\n        puts(ok ? \"OK\" : \"NA\");\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\ntemplate <class Itr>\nItr get_adv_itr(Itr _itr, int n) {\n  Itr itr(_itr);\n  advance(itr, n);\n  return itr;\n}\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    while (is >> temp) cakes.push_back(temp);\n    N = cakes.size();\n    string ans = \"NA\";\n\n    rep(i,N) {\n      vector<int> cp_cakes(cakes);\n      double cost = cp_cakes[i];\n      cp_cakes.erase(get_adv_itr(cp_cakes.begin(),i));\n      int last = (int)cost;\n      while (cp_cakes.size()) {\n        vector<int> dists;\n        for (int j = 0; j < cp_cakes.size(); ++j)\n          dists.push_back(pow(last - cp_cakes[j],2));\n        int id = distance(dists.begin(),\n                          max_element(dists.begin(), dists.end()));\n        cost += sqrt(pow(last + cp_cakes[id],2) - pow(last - cp_cakes[id],2));\n        last = cp_cakes[id];\n        cp_cakes.erase(get_adv_itr(cp_cakes.begin(), id));\n      }\n      cost += last;\n      if (L >= cost) {\n        ans = \"OK\";\n        break;\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<sstream>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\ndouble rdata[12][12];\ndouble table[1<<12][12];\nconst double eps = 1e-10;\n\nvoid pre_calc(int n,double *r){\n  rep(i,n){\n    rep(j,n){\n      double A=r[i]+r[j],B=r[i]-r[j];\n      rdata[i][j]=sqrt(A*A-B*B);\n    }\n    rdata[i][i]=0;\n  }\n}\n\n\ndouble solve(int now,int n,int state,double *r,\n\t     int last){\n  if ( table[state][last] >-eps)return table[state][last];\n    \n  if ( now == n){\n    return table[state][last]=r[last];\n  }\n\n\n  double ret=1000000000;\n  rep(i,n){\n    if ( ((1<<i)&state)!= 0)continue;\n    ret=min(ret,rdata[last][i]+solve(now+1,n,(state|(1<<i)),r,i));\n  }\n  \n  return table[state][last]=ret;\n}\n\nmain(){\n  double in;\n  while(cin>>in ){\n    string t;getline(cin,t);stringstream sin(t);\n    int n=0;\n    double r[12];\n    while(sin>>r[n])n++;\n    bool used[12]={false};\n    sort(r,r+n);\n    pre_calc(n,r);\n    rep(i,(1<<n)){\n      rep(j,n)table[i][j]=-1;\n    }\n\n    double ret=in+1;\n    rep(i,n){\n      ret=min(ret,r[i]+solve(1,n,(1<<i),r,i));\n    }\n    \n    if (ret<in+eps)puts(\"OK\");\n    else puts(\"NA\");\n    \n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 500;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cmath>\n#include<algorithm>\nusing namespace std;\n\n#define ESP 10e-6\n#define MAX 12\n\ndouble CalcCirclesLength(const vector<int> &r){\n\tdouble ret;\n\tret = r[0];\n\tfor(unsigned int i = 0; i < r.size() - 1; ++i){\n\t\tret += 2 * sqrt((double)r[i]*r[i+1]);\n\t}\n\tret += r[r.size() - 1];\n\treturn ret;\n}\nint main(void){\n\twhile(true){\n\t\tdouble w;\n\t\tdouble length = 0;\n\t\tvector<int> vLeftR;\n\t\tvector<int> vR;\n\t\t\n\t\tcin >> w;\n\t\tif( cin.eof() ) break;\n\t\twhile( true ){\n\t\t\tint tmp;\n\t\t\tcin >> tmp;\n\t\t\tvLeftR.push_back(tmp);\n\t\t\tif( '\\n' == cin.get() ) break;\n\t\t}\n\n\t\tvR.push_back(vLeftR[0]);\n\t\tvLeftR.erase( vLeftR.begin()+0 );\n\t\twhile( vLeftR.size() > 0 ){\n\t\t\tdouble minlen = 241;\n\t\t\tint minins = 0;\n\n\t\t\tfor(unsigned j = 0; j <= vR.size(); ++j){\n\t\t\t\tdouble l;\n\t\n\t\t\t\tvR.insert(vR.begin() + j,vLeftR[0]);\n\t\t\t\tl = CalcCirclesLength( vR );\n\t\t\t\tif( l < minlen ){\n\t\t\t\t\tminlen = l; minins = j;\n\t\t\t\t}\n\t\t\t\tvR.erase(vR.begin() + j);\n\t\t\t}\n\t\t\tvR.insert( vR.begin() + minins, vLeftR[0] );\n\t\t\tvLeftR.erase( vLeftR.begin() );\n\t\t}\n\t\tlength = CalcCirclesLength( vR );\n\t\tif( fabs( length - w ) <= ESP || length <= w ) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <vector>\n#include <string>\n#include <map>\n#include <cmath>\n#include <sstream>\n#include <queue>\n#include <cstring>\n#include <cstdlib>\n#include <algorithm>\n#include <iterator>\n#include <stack>\n#include <list>\nusing namespace std;\ntypedef long long int lli;\ntypedef pair<int,int> P;\n#define F first\n#define S second\nconst int INF=1000000000;\n\nint main(){\n\tstring str;\n\twhile(getline(cin,str)){\n\t\tstringstream s;\n\t\ts << str;\n\t\tint l;\n\t\ts >> l;\n\t\tvector<int> r;\n\t\twhile(!s.eof()){\n\t\t\tint tmp;\n\t\t\ts >> tmp;\n\t\t\tr.push_back(tmp);\n\t\t}\t\n\t\tdouble dp[1<<12][12];\n\t\tdouble d[12][12];\n\t\tint n=(int)r.size();\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tfor(int j=0; j<n; ++j){\n\t\t\t\td[i][j]=2*sqrt(r[i]*r[j]);\n\t\t\t}\n\t\t}\n\t\tfor(int S=0; S<(1<<n); ++S){\n\t\t\tfill(dp[S],dp[S]+n,INF);\n\t\t}\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tdp[(1<<n)-1-(1<<i)][i]=r[i];\n\t\t}\n\t\tfor(int S=(1<<n)-2; S>=0; --S){\n\t\t\tfor(int j=0; j<n; ++j){\n\t\t\t\tif(!(1&(1<<j))){\n\t\t\t\t\tfor(int k=0; k<n; ++k){\n\t\t\t\t\t\tif(S==0) dp[S][j]=min(dp[S][j],dp[S|1<<j][k]+d[j][k]+r[j]);\n\t\t\t\t\t\telse dp[S][j]=min(dp[S][j],dp[S|1<<j][k]+d[j][k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble res=INF;\n\t\tfor(int i=0; i<n; ++i){\n\t\t\tres=min(res,dp[0][i]);\n\t\t\t//cout << dp[0][i] << \"\\n\";\n\t\t}\n\t\tif(res<=l) cout << \"OK\\n\";\n\t\telse cout << \"NA\\n\";\n\t\t//cout << res << \"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <sstream>\n#include <cstring>\n#include <fstream>\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nconst int MAX_N = 12+1;\nconst double INF = 1e+100;\ndouble dist[10+1][10+1]; // ツ板シツ径 a ツづ個ケツーツキツづ個陳心ツづ板シツ径 b ツづ個ケツーツキツづ個陳心ツづづ個仰猟猟」ツ。\ndouble d[MAX_N][MAX_N];\ndouble dp[1<<MAX_N][MAX_N];\nint n, w;\nint a[MAX_N];\n\n// ツケツーツキツ甘板づ個仰猟猟」ツづーツ仰づ淞づゥ\nint calc (void )\n{\n\tfor (int i = 3; i <= 10; i++ )\n\t\tfor (int j = 3; j <= 10; j++ )\n\t\t\tdist[i][j] = 2.0*sqrt ((double)i*j );\n}\n\n// ツ経ツ路ツづ個静堋堕アツづーツ仰づ淞づゥ\nvoid make (void )\n{\n\t// ツ渉可甘コツ可サ\n\trep (i, n+1 )\n\t\trep (j, n+1 )\n\t\t\t\td[i][j] = INF;\n\n\trep (i, n )\n\t\trep (j, n )\n\t\t\td[i][j] = dist[a[i]][a[j]];\n\n\trep (i, n ){\n\t\td[n][i] = a[i]; d[i][n] = a[i];\n\t} // end rep\n}\n\n// bitDP\ndouble solve (){\n\n\t// ツ渉可甘コツ可サ\n\trep (S, 1<<n ){\n\t\tfill (dp[S], dp[S]+n, INF );\n\t} // end rep\n\n\tdp[(1<<n)-1][0] = 0;\n\tfor (int S = (1 << n ) - 2; S >= 0; S-- ){\n\t\trep (v, n ){\n\t\t\t rep (u, n ){\n\t\t\t\tif (!(S >> u & 1 ) ){\n\t\t\t\t\tdp[S][v] = min (dp[S][v], dp[S | 1 << u][u] + d[v][u] );\n\t\t\t\t} // end if\n\t\t\t} // end rep\n\t\t} // end rep\n\t} // end for\n\n\treturn dp[0][0];\n}\n\nint main()\n{\n\tcalc ();\n\tstring str = \"\";\n\n\twhile (getline (cin, str ) ){\n\t\tvector <int> cake; \n\t\tstringstream ss (str );\n\t\tss >> w;\n\t\tint i = 0, m;\n\t\twhile (ss >> m ){\n\t\t\t a[i++] = m;\n\t\t} // end while\n\t\tn = i;\n\t\tmake ();\n\t\tif ((double)w >= solve () ){\n\t\t\tprintf ( \"OK\\n\" );\n\t\t}else{\n\t\t\tprintf ( \"NA\\n\" );\n\t\t} // end if\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.00000001\nusing namespace std;\n\nstruct Info{\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum+EPS){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+EPS;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < EPS){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + EPS;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - EPS;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div; //i??????k???\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = 3000.0;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = 0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){ //?????°????????????\n\t\tfor(int k = 0; k < info_index; k++){ //???????????????\n\t\t\tfor(int state = 0; state < limit; state++){ //??¶???????????????\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){ //???a?????¢????????£???????????´???\n\t\t\t\t\t\t\tif(i == info_index && a == 0 && state == limit-1){\n\t\t\t\t\t\t\t\tdp[i][0][limit-1] = min(dp[i][0][limit-1],dp[i-1][k][state]+distance[k][0]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < EPS){\n\t\t//printf(\"OK %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\t//printf(\"NA %.3lf\\n\",dp[info_index][0][limit-1]);\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\t\t//if(ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <queue>\n#include <cstring>\nusing namespace std;\n\n#define EPS 1e-8\n\ndouble calcR(double r1, double r2)\n{\n\treturn sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\nclass Trl\n{\npublic:\n\tint p, h;\n\tdouble c;\n\tTrl(int p, int h, double c)\n\t:p(p),h(h),c(c)\n\t{}\n\t\n\tbool operator<(const Trl& t) const\n\t{\n\t\treturn c>t.c;\n\t}\n};\n\n\nbool v[13][1<<12];\n\t\t\nint main()\n{\n\tdouble cst[11][11]={0};\n\tfor(int i=0; i<=10; i++)\n\t\tcst[0][i]=2*i;\n\t\t\n\tfor(int i=3; i<=10; i++)\n\tfor(int j=3; j<=10; j++)\n\t\tcst[i][j]=calcR(i,j)-i+j;\n\t\t\n\tint L;\n\twhile(cin >> L)\n\t{\n\t\tint cake[13], p=0;\n\t\tcake[0]=0;\n\t\twhile(cin.peek() != '\\n')\n\t\t{\n\t\t\tcin >> cake[p+1];\n\t\t\tp++;\n\t\t}\n\t\t\n\t\tmemset(v,0,sizeof(v));\n\t\tpriority_queue<Trl> q;\n\t\tq.push(Trl(0,0,0));\n\t\tbool g=false;\n\t\twhile(!q.empty())\n\t\t{\n\t\t\tTrl t=q.top(); q.pop();\n\t\t\tif(v[t.p][t.h]) continue;\n\t\t\tv[t.p][t.h]=1;\n\t\t\t\n\t\t\tif(t.h==(1<<p)-1)\n\t\t\t{\n\t\t\t\tg=true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n\t\t\tfor(int i=0; i<p; i++)\n\t\t\t{\n\t\t\t\tif(t.h&(1<<i)) continue;\n\t\t\t\tdouble tc=t.c+cst[cake[t.p]][cake[i+1]];\n\t\t\t\tint th=t.h+(1<<i);\n\t\t\t\tif(v[i+1][th]) continue;\n\t\t\t\tif(tc>L+EPS) continue;\n\t\t\t\t\n\t\t\t\tq.push(Trl(i+1, th, tc));\n\t\t\t}\n\t\t}\n\t\tcout << (g?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define MOD 1000000007\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3f\n#define EPS (1e-10)\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int>P;\n\ndouble dp[1 << 15][30];\nint r[10];\nint main() {\n\tstring s;\n\twhile (getline(cin, s)) {\n\t\tstringstream buf(s);\n\t\tdouble w; buf >> w;\n\t\tint p = 0; while (buf >> r[p++]); p--;\n\t\tfill(dp[0], dp[1 << 10], INF);\n\t\trep(i, p)dp[1 << i][r[i]] = r[i] * 2;\n\t\trep(i, 1 << p) {\n\t\t\trep(k, 11) {\n\t\t\t\trep(j, p) {\n\t\t\t\t\tif (i >> j & 1)continue;\n\t\t\t\t\tdouble d = sqrt((k + r[j])*(k + r[j]) - (k - r[j])*(k - r[j])) - k + r[j];\n\t\t\t\t\tdp[i | 1 << j][r[j]] = min(dp[i | 1 << j][r[j]], dp[i][k] + d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i, 11) {\n\t\t\tif (dp[(1 << p) - 1][i] <= w) {\n\t\t\t\tputs(\"OK\"); goto g;\n\t\t\t}\n\t\t}\n\t\tputs(\"NA\");\n\tg:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <math.h>\n#include <random>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 100; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\n\t\t///random\n        int i=rand()%N;\n        int j=rand()%N;\n        int t=r[i];\n        r[i]=r[j];\n\t\tr[j]=t;\n        score = Evaluate(r);\n\t\tif(score<mi){\n            mi=score;\n\t\t}else{\n            if(Changes(cnt)){\n                mi=score;\n            }else{\n                int a=r[i];\n                r[i]=r[j];\n                r[j]=a;\n            }\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n    srand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\n#define INF 1e+9\n#define EPS 1e-13\nusing namespace std;\n\nint w,n,r[12];\ndouble dp[1 << 12][12]; \n\nint main(){\n\tchar c;\n\twhile(1){\n\t\tbool flag = false;\n\t\tint tmp = 0,n = 0;\n\t\twhile(c = getchar()){\n\t\t\tif(c == EOF) return 0;\n\t\t\tif(c == '\\n') {\n\t\t\t\tr[n++] = tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(c == ' '){\n\t\t\t\tif(!flag){\n\t\t\t\t\tflag = true;\n\t\t\t\t\tw = tmp;\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}else{\n\t\t\t\t\tr[n++] = tmp;\n\t\t\t\t\ttmp = 0;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\ttmp = tmp * 10 + (c - '0');\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0;i < 1 << n;i++){\n\t\t\tfor(int j = 0;j < n;j++) dp[i][j] = INF;\n\t\t}\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tdp[1 << i][i] = (double)r[i];\n\t\t}\n\t\tfor(int i = 0;i <= (1 << n) - 1;i++){\n\t\t\tfor(int j = 0;j < n;j++){\n\t\t\t\tif(i >> j & 1){\n\t\t\t\t\tfor(int k = 0;k < n;k++){\n\t\t\t\t\t\tdp[i][j] = min(dp[i][j],dp[i & ~(1 << j)][k] + sqrt(4.0 * (double)r[j] * (double)r[k]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble mi = INF;\n\t\tfor(int i = 0;i < n;i++){\n\t\t\tmi = min(mi,dp[(1 << n) - 1][i] + (double)r[i]);\n\t\t}\n\t\tif(w - mi + EPS >= 0) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<list>\n//#include<algorithm>\n#include<iostream>\n//#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int i;\n  int l,n;\n  double m;\n  char s[256],*t;\n  while(fgets(s,256,stdin)!=0){\n    l=atoi(strtok(s,\" \"));\n    list<int> r,q;\n    for(n=0;(t=strtok(NULL,\" \"))!=NULL;n++)\n      r.push_back(atoi(t));\n    r.sort();\n    q.push_back(r.front());\n    r.pop_front();\n    for(;;){\n      if(r.empty())\n\tbreak;\n      q.push_front(r.back());\n      r.pop_back();\n      if(r.empty())\n\tbreak;\n      q.push_back(r.back());\n      r.pop_back();\n      if(r.empty())\n\tbreak;\n      q.push_front(r.front());\n      r.pop_front();\n      if(r.empty())\n\tbreak;\n      q.push_back(r.front());\n      r.pop_front();\n    }\n    m=0.0;\n    list<int>::iterator it=q.begin();\n    m+=*it;\n    for(i=0;i<n-1;i++){\n      int a,b;\n      a=*it;\n      it++;\n      b=*it;\n      m+=sqrt(a*b)*2;\n    }\n    m+=*it;\n    if(m<=l)\n      cout<<\"OK\"<<endl;\n    else\n      cout<<\"NA\"<<endl;\n  }\n  return 0;\n}\n/*\n  int i,r[10];\n  double l;\n  cin>>r[0]>>r[1]>>r[2]>>r[3]>>r[4]>>r[5];\n  l=0.0;\n  l+=r[0];\n  for(i=0;i<5;i++)\n    l+=sqrt(r[i]*r[i+1])*2;\n  l+=r[i];\n  cout<<l<<endl;\n  return 0;\n}\n*/"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#define MAX_N 12\n#define INF 10000\nusing namespace std;\nvector<int> cakes;\ndouble d[MAX_N][MAX_N];\ndouble dp[1 << MAX_N][MAX_N];\n\nvoid calc_dist(){\n    for (int i = 0; i < cakes.size() - 1; i++) {\n        for (int j = i + 1;  j < cakes.size(); j++) {\n            double dist = sqrt(pow(cakes[i] + cakes[j], 2) - pow(cakes[i] - cakes[j], 2));\n            d[i][j] = d[j][i] = dist;\n        }\n    }\n}\n\ndouble solve(){\n    int n = cakes.size();\n    for (int s = 0; s < 1 << MAX_N; s++) {\n        for (int j = 0; j < MAX_N; j++) {\n            dp[s][j] = INF;\n        }\n    }\n    \n    dp[(1 << n) - 1][0] = 0;\n    \n    for (int s = (1 << n) - 2; s >= 0; s--) {\n        for (int v = 0; v < n; v++) {\n            for (int u = 0; u < n; u++) {\n                if (!(s >> u & 1)) {\n                    dp[s][v] = min(dp[s][v], dp[s | 1 << u][u] + d[u][v]);\n                }\n            }\n        }\n    }\n    return dp[0][0];\n}\n\n\nint main()\n{\n    int len, r;\n\n    while (cin >> len) {\n\n        cakes.clear();\n        while (cin >> r) {\n            if (cin.peek() == '\\n') {\n                break;\n            }\n            cakes.push_back(r);\n        }\n        for (int i = 0; i < cakes.size(); i++) {\n            d[i][i] = 0;\n        }\n        calc_dist();\n        if (solve() <= len){\n            cout << \"OK\" << endl;\n        }else{\n            cout << \"NG\" << endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n\n    if(r.size()<=5){\n        sort(r.begin(),r.end());\n        double res=evaluate(r);\n        do{\n            res=min(res,evaluate(r));\n        }while(next_permutation(r.begin(),r.end()));\n        return res;\n    }\n\n    double T=10000;\n    double cool=0.99;\n\n    double mi=evaluate(r);\n\n    while(T>0.000001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    srand((unsigned)time(NULL));\n    int l;\n    while(cin>>l){\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define INF (1<<29)\n#define EPS (1e-8)\n\ndouble calc(int *tmp, int n) {\n\tdouble sum = tmp[0] + tmp[n - 1];\n\tFOR(i, 1, n) {\n\t\tsum += sqrt(pow(tmp[i] + tmp[i - 1], 2) - pow(abs(tmp[i] - tmp[i - 1]), 2));\n\t}\n\treturn sum;\n}\n\nint main() {\n\tstring str;\n\twhile (getline(cin, str)) {\n\t\tistringstream is(str);\n\t\tint n = count(str.c_str(), str.c_str() + str.size(), ' ');\n\t\tint w, r[10];\n\t\tis >> w;\n\t\tREP(i, n) is >> r[i];\n\t\t\n\t\tsort(r, r + n);\n\t\t\n\t\tdouble ans = INF;\n\t\tREP(i, 2) {\n\t\t\tint R = n - 1, L = 0;\n\t\t\tbool f = i & 1;\n\t\t\t\n\t\t\tint tmp[10];\n\t\t\tREP(j, n) {\n\t\t\t\tif (f) tmp[j] = r[R--];\n\t\t\t\telse tmp[j] = r[L++];\n\t\t\t\tf = !f;\n\t\t\t}\n\t\t\tans = min(ans, calc(tmp, n));\n\t\t}\n\t\tif ((double)w + EPS >= ans) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\nconst ld eps = 1e-9;\n\n//// < \"d:\\d_download\\visual studio 2015\\projects\\programing_contest_c++\\debug\\a.txt\" > \"d:\\d_download\\visual studio 2015\\projects\\programing_contest_c++\\debug\\b.txt\"\n\nvector<ld>rs;\nld memo[13][1 << 12];\nld getans(const int from, bitset<12>&bs) {\n\tif (memo[from][bs.to_ulong()] < -1) {\n\t\tif (bs.count() == 0)return 0;\n\t\tld ans = 1e18;\n\t\tfor (int i = 0; i < rs.size(); ++i) {\n\t\t\tif (bs[i]) {\n\t\t\t\tld plus;\n\t\t\t\tld a = rs[i];\n\t\t\t\tif (from == 12) {\n\t\t\t\t\tplus = 2 * a;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tld b = rs[from];\n\t\t\t\t\tplus=sqrt((a + b)*(a + b) - (a - b)*(a - b))-b+a;\n\t\t\t\t} \n\t\t\t\tbs[i] = false;\n\t\t\t\tans = min(ans,plus+ getans(i, bs));\n\t\t\t\tbs[i] = true;\n\t\t\t}\n\t\t}\n\t\tmemo[from][bs.to_ulong()] = ans;\n\t}\n\treturn memo[from][bs.to_ulong()];\n}\nvector<string> split(const string &str, char delim) {\n\tvector<string> res;\n\tsize_t current = 0, found;\n\twhile ((found = str.find_first_of(delim, current)) != string::npos) {\n\t\tres.push_back(string(str, current, found - current));\n\t\tcurrent = found + 1;\n\t}\n\tres.push_back(string(str, current, str.size() - current));\n\treturn res;\n}\nint main() {\n\tstring st;\n\twhile (getline(cin,st)) {\n\t\tvector<string>sts = split(st, ' ');\n\t\tint W = stoi(sts[0]);\n\t\trs.clear();\n\t\tfor (int i = 1; i < sts.size(); ++i) {\n\t\t\trs.push_back(stold(sts[i]));\n\t\t}\n\t\tfor (int i = 0; i < 13; ++i) {\n\t\t\tfor (int j = 0; j < (1 << 12); ++j) {\n\t\t\t\tmemo[i][j] = -2;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\tbitset<12>bs((1 << rs.size()) - 1);\n\t\tld sum = getans(12, bs);\n\t\tif (sum > W)cout << \"NA\" << endl;\n\t\telse cout << \"OK\" << endl;\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    sort(temps.begin(), temps.end());\n\n    // for (int i = 0; i < temps.size(); ++i) cakes.push_back(temps[i]);\n    for (int i = 0; i < temps.size(); ++i) cakes.insert(cakes.begin(), temps[i]);\n    \n    // {\n    //   int lb = 0, ub = temps.size() - 1; \n    //   while (lb <= ub) {\n    //     if (lb != ub) {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     } else {\n    //       int df = abs(cakes.front() - temps[lb]), db = abs(cakes.back() - temps[lb]);\n    //       if (df > db) cakes.insert(cakes.begin(), temps[lb]);\n    //       else cakes.push_back(temps[lb]);\n    //     }\n    //     ++lb; --ub;\n    //   }\n    // }\n\n    // {\n    //   for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n    //     if (lb == ub) {\n    //       if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n    //         cakes.push_back(temps[lb]);\n    //       else\n    //         inserter(cakes, cakes.begin()) = temps[lb];\n    //     } else {\n    //       cakes.push_back(temps[lb]);\n    //       cakes.push_back(temps[ub]);\n    //     }\n    //   }\n    // }\n\n    // puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n\n    sort(temps.begin(), temps.end());\n\n    {\n      for (int lb = 0, ub = temps.size()-1; lb <= ub; ++lb, --ub) {\n        if (lb == ub) {\n          if (abs(cakes.front() - temps[lb]) < abs(cakes.back() - temps[lb]))\n            cakes.push_back(temps[lb]);\n          else\n            cakes.insert(cakes.begin(), temps[lb]);\n            // inserter(cakes, cakes.begin()) = temps[lb];\n        } else {\n          cakes.push_back(temps[lb]);\n          cakes.push_back(temps[ub]);\n        }\n      }\n    }\n\n    // puts(\"OK\"); continue;\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L >= current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint main(){\n  string s;\n  while(getline(cin,s)){\n    double w;\n    vector<double> v;\n    stringstream ss(s);\n    ss>>w;\n    double t;\n    while(ss>>t) v.push_back(t);\n    int n=v.size();\n    double dp[1<<n][n],inf=1<<25;\n    for(int i=0;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tdp[i][j]=inf;\n    for(int i=0;i<n;i++) dp[1<<i][i]=v[i];\n    for(int i=1;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tfor(int k=0;k<n;k++)\n\t  if(((i>>j)&1)&&!((i>>k)&1)) dp[i+(1<<k)][k]=min(dp[i+(1<<k)][k],dp[i][j]+sqrt((v[j]+v[k])*(v[j]+v[k])-(v[j]-v[k])*(v[j]-v[k])));\n    bool f=0;\n    for(int i=0;i<n;i++) f|=dp[(1<<n)-1][i]+v[i]<=w;\n    cout<<(f?\"OK\":\"NG\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<algorithm>\n#include<vector>\n#include<queue>\n#include<map>\n#include<set>\n#include<climits>\n#include<stack>\n#include<cstdlib>\n#include<ctime>\n#include<cmath>\n#include<string>\n#include<cstring>\n#include<sstream>\nusing namespace std;\n \nconst int LOOP_TIMES = 1e2;\nconst double EPS = 1e-6;\nint L, N;\n \ndouble Evaluate(int *r){\n    double val = r[0] + r[N-1];\n    for(int i = 0; i < N - 1; i++){\n        int a = abs( r[i] - r[i+1] ), c = r[i] + r[i+1];\n        val += sqrt(c*c - a*a);\n    }\n    return val;\n}\n \nbool IsChange(int cnt){\n    return cnt < rand()%LOOP_TIMES + 1;\n}\n \ndouble Solve(int *r){\n    double score = Evaluate(r), mi = score;\n    for(int cnt = 0; cnt < LOOP_TIMES; cnt++){\n        int *a = r + rand()%N, *b = r + rand()%N;\n        swap(*a, *b);\n \n        double next_score = Evaluate(r);\n        if( score >= next_score && !IsChange(cnt) ) swap(*a, *b);\n        else score = next_score;\n         \n        mi = min(mi, score);\n    }\n    return mi;\n}\n \nint main(){\n    while(cin >> L){\n        N = 0;\n        int r[12];\n        string S;\n        getline(cin, S);\n        stringstream SS(S);\n        while( !SS.eof() ){\n            SS >> r[N++];\n        }\n \n        double ans;\n        if(N == 1) ans = r[0]*2;\n        else ans = Solve(r);\n \n        if(L - ans + EPS > 0) puts(\"OK\");\n        else puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\nstruct qu_data{\n    double l;\n    double last;\n    int rest_cake_num;\n    int rest_cake[15];\n};\n\nint main(){\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[15]={0};\n        int cake_count=0;\n        while(ss>>cake[cake_count]){\n            cake_count++;\n        }\n        \n        \n        qu_data data;\n        data.l=0.0;\n        data.last=0.0;\n        data.rest_cake_num=cake_count;\n        for(int i=0; i<15; i++){\n            data.rest_cake[i]=cake[i];\n        }\n        \n        queue<qu_data> qu;\n        qu.push(data);\n        \n        \n        bool output_flag=true;\n        while(!qu.empty()){\n            qu_data front_data = qu.front();\n            qu.pop();\n            if(front_data.rest_cake_num==0&&front_data.l<=box){\n                cout<<\"OK\"<<endl;\n                output_flag=false;\n                break;\n            }\n            \n            for(int i=0; i<front_data.rest_cake_num; i++){\n                qu_data push_data = front_data;\n                if(push_data.l == 0.0){\n                    push_data.l+=push_data.rest_cake[i];\n                    push_data.last=push_data.rest_cake[i];\n                    push_data.rest_cake_num--;\n                    swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                }else{\n                    double x = (push_data.last+push_data.rest_cake[i])*(push_data.last+push_data.rest_cake[i])-(push_data.last-push_data.rest_cake[i])*(push_data.last-push_data.rest_cake[i]);\n                    \n                    push_data.l+=sqrt(fabs(x));\n                    push_data.last=push_data.rest_cake[i];\n                    push_data.rest_cake_num--;\n                    swap(push_data.rest_cake[i], push_data.rest_cake[push_data.rest_cake_num]);\n                    \n                    if(push_data.rest_cake_num==0)push_data.l+=push_data.last;\n                    \n                }\n                \n                qu.push(push_data);\n            }\n            \n        }\n        if(output_flag)cout<<\"NA\"<<endl;\n\n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[100]){\n\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r+0.00000001;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00000001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00000001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00000001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00000001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] < 2000.0){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] < length || fabs(dp[info_index][0][limit-1]-length) < 0.00000001){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[100];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0' || ch == EOF)break;\n\n\t\twhile(ch != '\\n' && ch != '\\0' && ch != EOF){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\ntypedef pair<int,int> P;\n\nstring in;\nint L, temp, N;\n\nint main() {\n  while (getline(cin, in)) {\n    istringstream is(in);\n    is >> L;\n    vector<int> cakes;\n    vector<int> temps;\n    while (is >> temp) {\n      temps.push_back(temp);\n    }\n    N = temps.size();\n    sort(temps.begin(), temps.end());\n\n    for( int i = 0; i < N / 2; ++i) {\n      cakes.push_back(temps[i]);\n      cakes.push_back(temps[N-1-i]);\n    }\n    if (N % 2) {\n      int e = temps[(N-1)/2];\n      if (abs(e - cakes.front()) < abs(e - cakes.back())) cakes.push_back(e);\n      else {\n        vector<int>::iterator it = cakes.begin();\n        cakes.insert(it, e);\n      }\n    }\n    // rep(i,cakes.size()) printf(\"%4d\", cakes[i]); puts(\"\");\n    \n    double current_length = cakes.front();\n    for (int i = 0; i < cakes.size() - 1; ++i) {\n      current_length += 2 * sqrt(cakes[i] * cakes[i+1]);\n    }\n    current_length += cakes.back();\n    // printf(\"%lf\\n\", current_length);\n    \n    printf(\"%s\\n\", (L + 10e-10 > current_length) ? \"OK\": \"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <vector>\n#include <cmath>\n\n#define MAX 12\n\nusing namespace std;\n\nvector<int> split(const string &str, char delim){\n    istringstream iss(str); string tmp; vector<int> res;\n    while(getline(iss, tmp, delim)) {\n        int i;\n        std::istringstream iss(tmp);\n        iss >> i;\n        res.push_back(i);\n    }\n    return res;\n}\n\nfloat d[MAX][MAX];\nfloat dp[1 << MAX][MAX];\nint size;\n\nfloat rec(int S, int v) {\n    if (dp[S][v] >= 0) return dp[S][v];\n\n    if (S == (1 << size) -1 && v == 0) {\n        return dp[S][v] = 0;\n    }\n\n    float res = 99999;\n    for (int u = 0; u < size; u++) {\n        if(!(S >> u & 1))\n            res = min(res, rec(S | 1 << u, u) + d[v][u]);\n    }\n\n    return dp[S][v] = res;\n}\n\n\nint main(int argc, char const* argv[])\n{\n    string line;\n    while(getline(cin, line)) {\n\n        vector<int> params = split(line, ' ');\n        vector<int> cakes;\n\n        int weight = params.front();\n        for (vector<int>::iterator it = params.begin(); it != params.end(); it++) {\n            if(it == params.begin()) {weight = *it; continue;}\n            cakes.push_back(*it);\n        }\n\n        size = cakes.size();\n        for (int i = 0; i < size; i++) {\n            for (int j = i; j < size; j++) {\n                int i_r = cakes.at(i);\n                int j_r = cakes.at(j);\n                float sq = sqrt(pow(i_r + j_r, 2.0) - pow(i_r - j_r, 2.0));\n                if (i_r == j_r) sq = i_r + j_r;\n                d[i][j] = sq;\n                d[j][i] = sq;\n            }\n        }\n\n        memset(dp, -1, sizeof(dp));\n\n        float min_val = 99999;\n        for (int i = 0; i < size; i++) {\n            float rec_val = rec(0,i);\n            if (rec_val == 0) continue;\n            min_val = min(rec_val, min_val);\n        }\n\n        if (min_val > weight) {\n            std::cout << \"NA\" << std::endl;\n        } else {\n            std::cout << \"OK\" << std::endl;\n        }\n\n\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define INF 1e9\nusing namespace std;\n\nint getNum(string a,int &i){\n  int res=0;\n  while(isdigit(a[i]))res=res*10+a[i++]-'0';\n  return res;\n}\n\ndouble getx(double R,double r){return sqrt((R+r)*(R+r)-(R-r)*(R-r));}\n\n\nint n;\nvector<double> num;\ndouble mem[11][11][1<<12];\nint used[11][11][1<<12];\ndouble dfs(int l,int r,int sta){\n  if(sta==(1<<n)-1)return 0;\n  if(used[l][r][sta]++)return mem[l][r][sta];\n\n  double res=INF;\n  for(int i=0;i<n;i++){\n    if((sta&(1<<i)))continue;\n    double lcost=num[i]+getx(l,num[i])-l;\n    double rcost=num[i]+getx(num[i],r)-r;\n    res=min(res,lcost+dfs(num[i],r,sta|(1<<i)));\n    res=min(res,rcost+dfs(l,num[i],sta|(1<<i)));\n  }\n  return mem[l][r][sta]=res;\n}\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    int w,idx=0;\n    w = getNum(str,idx);\n    num.clear();\n    while(idx++<str.size())num.push_back(getNum(str,idx));\n    n = num.size();\n    memset(used,0,sizeof(used));\n    double mn=INF;\n    for(int i=0;i<n;i++)mn=min(mn,2*num[i]+dfs(num[i],num[i],1<<i));\n    cout<<(dfs(0,0,0)<=w? \"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <ctime>\n#include <cstdlib>\n#include <cmath>\n#include <cstdio>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define pb push_back\n#define fr first\n#define sc second\ntypedef pair<int, int> Pii;\ntypedef vector<int> Vi;\nconst int INF = (1<<25);\nconst int dx[]={1,0,-1,0}, dy[]={0,-1,0,1};\n\ndouble data[11][11];\ndouble dp[1 << 12][12];\n\nint main() {\n  for(int i=3; i<=10; i++) {\n    for(int j=3; j<=10; j++) {\n      data[i][j] = sqrt((double)((j+i)*(j+i)-(j-i)*(j-i)));\n    }\n  }\n\n  int len;\n  while( cin >> len ) {\n    string s;\n    getline(cin, s);\n\n    Vi cur;\n    stringstream ss( s );\n    while( !ss.eof() ) {\n      int r;\n      ss >> r;\n      cur.pb( r );\n    }\n\n    int n = cur.size();\n\n    for(int i=0; i<(1<<12); i++) {\n      fill(dp[i], dp[i]+12, INF);\n    }\n\n    for(int i=0; i<cur.size(); i++) {\n      dp[1<<i][i] = cur[i];\n    }\n\n    for(int i=0; i<(1<<n); i++) {\n      for(int j=0; j<n; j++) {\n\tif( dp[i][j] != INF ) {\n\t  for(int k=0; k<n; k++) {\n\t    if( k == j ) continue;\n\t    if( !(i & (1 << k)) ) {\n\t      if( (i|(1<<k))  == ((1<<n)-1) )  {\n\t\tdp[i|(1<<k)][k] = min(dp[i|(1<<k)][k], dp[i][j]+data[cur[k]][cur[j]]+cur[k]);\n\t      }\n\t      else {\n\t\tdp[i|(1<<k)][k] = min(dp[i|(1<<k)][k], dp[i][j]+data[cur[k]][cur[j]]);\n\t      }\n\t    }\n\t  }\n\t}\n      }\n    }\n\n    bool flag = false;\n    for(int i=0; i<n; i++) {\n      if( dp[(1<<n)-1][i] <= len ) flag = true;\n    }\n\n    if( flag ) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<ios>\n#include<algorithm>\n#include<cmath>\nusing namespace std;\ndouble w,r[12];\ndouble dp[1<<12][12];\nmain()\n{\n\twhile(~scanf(\"%lf \",&w))\n\t{\n\t\tint n=0;char c;\n\t\twhile(scanf(\"%lf%c\",r+n++,&c),c==' ');\n\t\tfor(int i=0;i<n;i++)for(int j=0;j<1<<n;j++)dp[j][i]=w+1;\n\t\tfor(int i=0;i<n;i++)dp[1<<i][i]=r[i];\n\t\tfor(int i=1;i<1<<n;i++)\n\t\t{\n\t\t\tfor(int j=0;j<n;j++)\n\t\t\t{\n\t\t\t\tif(!(i&1<<j))continue;\n\t\t\t\tfor(int k=0;k<n;k++)\n\t\t\t\t{\n\t\t\t\t\tif(i&1<<k)continue;\n\t\t\t\t\tdouble dis=2*sqrt(r[j]*r[k]);\n\t\t\t\t\tdp[i|(1<<k)][k]=min(dp[i|(1<<k)][k],dp[i][j]+dis);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble ans=w+1;\n\t\tfor(int i=0;i<n;i++)ans=min(ans,dp[(1<<n)-1][i]+r[i]);\n\t\tputs(ans>w?\"NA\":\"OK\");\n\t}\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n#include <climits>\n#include <cfloat>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <algorithm>\n#include <functional>\n#include <utility>\n#include <numeric>\n\nusing namespace std;\n\ntypedef unsigned int UI;\ntypedef long long LL;\ntypedef unsigned long long ULL;\ntypedef vector<int> VI;\ntypedef vector<VI> VVI;\ntypedef vector<string> VS;\ntypedef pair<int,int> PII;\ntypedef istringstream ISS;\ntypedef ostringstream OSS;\n\n#define REP( i, m, n ) for ( int i = (int)( m ); i < (int)( n ); ++i )\n#define EACH( v, c ) for ( auto &v : c )\n\n#define ITER( c ) __typeof( (c).begin() )\n#define IREP( c, it ) for ( ITER(c) it = c.begin(); it != c.end(); ++it )\n#define ALL( c ) (c).begin(), (c).end()\n\n#define PB( n ) push_back( n )\n#define MP( a, b ) make_pair( ( a ), ( b ) )\n#define EXIST( c, e ) ( (c).find( e ) != (c).end() )\n\n#define fst first\n#define snd second\n\n#define DUMP( x ) cerr << #x << \" = \" << ( x ) << endl\n#define DEBUG( x ) cerr << __FILE__ << \":\" << __LINE__ << \": \" << #x << \" = \" << ( x ) << endl\n\ntypedef vector< double > VD;\ntypedef vector< VD > VVD;\n\ndouble dist( double r1, double r2 )\n{\n\treturn sqrt( pow( r1 + r2, 2 ) - pow( r1 - r2, 2 ) );\n}\n\nstring solve( int x, int n, VI rs )\n{\n\tVVD dp( 1 << n, VD( n, DBL_MAX ) );\n\n\tREP( i, 0, n )\n\t{\n\t\tdp[ 1 << i ][i] = rs[i];\n\t}\n\n\tREP( i, 1, 1 << n )\n\t{\n\t\tREP( j, 0, n )\n\t\t{\n\t\t\tif ( dp[i][j] == DBL_MAX )\n\t\t\t{\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tREP( k, 0, n )\n\t\t\t{\n\t\t\t\tif ( ( i >> k & 1 ) )\n\t\t\t\t{\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tdp[ i | 1 << k ][k] = min( dp[ i | 1 << k ][k], dp[i][j] + dist( rs[j], rs[k] ) );\n\t\t\t}\n\t\t}\n\t}\n\n\tREP( i, 0, n )\n\t{\n\t\tif ( dp.back()[i] + rs[i] <= x )\n\t\t{\n\t\t\treturn \"OK\";\n\t\t}\n\t}\n\n\treturn \"NA\";\n}\n\nint main()\n{\n\tcin.tie( 0 );\n\tios::sync_with_stdio( false );\n\n\tstring str;\n\n\twhile ( getline( cin, str ) )\n\t{\n\t\tISS iss( str );\n\n\t\tint n;\n\t\tiss >> n;\n\n\t\tVI rs;\n\t\tint tmp;\n\n\t\twhile ( iss >> tmp )\n\t\t{\n\t\t\trs.PB( tmp );\n\t\t}\n\n\t\tcout << solve( n, rs.size(), rs ) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <list>\n#include <algorithm>\n#include <cmath>\n#include <stack>\n#include <map>\n#include <numeric>\n#include <sstream>\n#include <queue>\n#include <iomanip>\nusing namespace std;\n\n#define REP(i,n) for(int (i)=0; (i)<(n); (i)++)\n#define FOR(i,a,b) for(int (i)=(a); (i)<(b); (i)++)\n#define PUSH(n,v) for(int i=0; i<(n); i++) {int j; cin >> j; v.push_back(j);}\n#define ALL(v) v.begin(), v.end()\n#define print(s) cout << (s) << endl\n\ndouble getMide(int a, int b) {\n    return sqrt(pow(a+b,2) -  pow(a-b,2));\n}\n\nvoid solve120(string s) {\n    int W;\n    vector<int> r;\n    stringstream ss;\n    ss << s;\n    ss >> W;\n    int rr;\n    while (ss >> rr) r.push_back(rr);\n    sort(ALL(r));\n    if (r.size() == 0) {\n        cout << \"OK\" << endl;\n        return;\n    }else if (r.size() == 1) {\n        if (r[0] * 2 <= W) cout << \"OK\" << endl;\n        else cout << \"NA\" << endl;\n        return;\n    }else if (r.size() == 2) {\n        if (r[0] + r[1] + getMide(r[0], r[1]) <= W) cout << \"OK\" << endl;\n        else cout << \"NA\" << endl;\n        return;\n    }\n    \n    int r0 = r[0], r1 = r[1];\n    double len = 10000;\n    r.erase(r.begin());\n    r.erase(r.begin());\n    \n    do {\n        double l = r0 + r1;\n        REP(i,r.size()) {\n            if (i == 0) l += getMide(r0, r[i]);\n            else {\n                l += getMide(r[i-1], r[i]);\n            }\n        }\n        l += getMide(r.back(), r1);\n        len = min(len, l);\n    }while (next_permutation(ALL(r)));\n    \n    if (len <= W) cout << \"OK\" << endl;\n    else cout << \"NA\" << endl;\n}\n\nint main() {\n    string s;\n    while (getline(cin,s)) {\n        solve120(s);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<sstream>\n#include<cmath>\n\nusing namespace std;\n\nconst int MAX = 13;\nvector<double> Cake;\ndouble box;\ndouble dp[(1<<MAX)][MAX];\n\nvoid init(){\n  Cake.clear();\n  fill(dp[0],dp[0]+(1<<MAX)*MAX,100000000);\n  dp[0][0] = 0;\n}\n\nvoid make(){\n  string s;\n  getline(cin,s);\n  stringstream ss(s);\n  double num;\n  while(ss >> num) Cake.push_back(num);\n}\n\nvoid solve(){\n\n\n  for(int i = 0; i < (1<<Cake.size()); i++)\n    for(int j = 0; j < (int)Cake.size(); j++){\n      if(i == 0) {dp[(1<<j)][j] = Cake[j]; continue;}\n      for(int k = 0; k < (int)Cake.size(); k++)\n\tif(!(i&(1<<k)) && j != k){\n\t  dp[i+(1<<k)][k] = min(dp[i+(1<<k)][k],dp[i][j]+2.0*sqrt(Cake[j]*Cake[k]));\n\t  //\t  if(dp[i][j] == 0) cout << \"error\" << endl;\n\t}\n    }\n\n  for(int i = 0; i < (int)Cake.size(); i++){\n    //    cout << \"cake \" << Cake[i] << endl;\n    //cout << dp[(1<<Cake.size())-1][i]+Cake[i] << endl;\n    if(dp[(1<<Cake.size())-1][i]+Cake[i] <= box) {cout << \"OK\" << endl;return;}\n  }\n  cout << \"NA\" << endl;\n}\n\nint main(){\n\n  while(cin >> box){\n    init();\n    make();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cstring>\n#include <cstdlib>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define pb push_back\n\nusing namespace std;\n\nvector<string> split(string &str,char delim)\n{\n\tvector<string> res;\n\tsize_t current = 0,found;\n\twhile((found = str.find_first_of(delim,current)) != string::npos)\n\t{\n\t\tres.push_back(string(str,current,found  - current));\n\t\tcurrent = found + 1;\n\t}\n\tres.push_back(string(str,current,str.size() - current));\n\treturn res;\n}\n\nint main()\n{\n\tstring s;\n\twhile(getline(cin,s))\n\t{\n\t\tvector<string> _s = split(s,' ');\n\t\tvector<int> a;\n\t\tint n = 0;\n\n\t\trep(i,_s.size())\n\t\t{\n\t\t\ta.pb(atoi(_s[i].c_str()));\n\t\t\tn++;\n\t\t}\n\n\t\tint len = a[0];\n\t\ta.erase(a.begin());\n\n\t\tdouble min_len = 10000000;\n\t\tdo\n\t\t{\n\t\t\tdouble sum = 0;\n\t\t\tsum += a[0];\n\n\t\t\trep(i,n-2)\n\t\t\t{\n\t\t\t\tdouble temp = (a[i]+a[i+1])*(a[i]+a[i+1]) - (a[i]-a[i+1])*(a[i]-a[i+1]);\n\t\t\t\ttemp = sqrt(abs(temp));\n\t\t\t\tsum += temp;\n\t\t\t}\n\n\t\t\tsum += a[n-2];\n\n\t\t\tmin_len = min(min_len,sum);\n\t\t}while(next_permutation(a.begin(),a.end()));\n\n\t\tif(min_len <= len) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\t\tcout << min_len << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <iostream>\ntypedef long long int ll;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\nusing namespace std;\n\nstruct Info{\n\tInfo(){\n\t\tr = -1.0;\n\t}\n\n\tdouble r;\n};\n\ndouble*** dp;\n\nvoid func(char buf[3000]){\n\tdouble length;\n\tint tmp;\n\n\tint index;\n\n\ttmp = 0;\n\tfor(index = 0;buf[index] != ' ' && buf[index] != '\\0'; index++){\n\t\ttmp = 10*tmp + buf[index] - '0';\n\t}\n\n\tlength = (double)tmp;\n\n\tInfo info[15];\n\tint info_index = 0;\n\n\twhile(buf[index] != '\\0'){\n\n\t\ttmp = 0;\n\t\tfor(++index;buf[index] != ' ' && buf[index] != '\\0';index++){\n\t\t\ttmp = 10*tmp + buf[index] - '0';\n\t\t}\n\t\tinfo[info_index].r = (double)tmp;\n\t\tinfo_index++;\n\t}\n\n\tdouble sum = 0;\n\n\tfor(int i = 0; i < info_index; i++){\n\t\tsum += info[i].r;\n\t}\n\n\tif(length > 2*sum){\n\t\tprintf(\"OK\\n\");\n\t\treturn;\n\t}\n\n\tdouble div,left,right,m,calcDist;\n\n\tdouble distance[info_index][info_index];\n\n\tfor(int i = 0; i < info_index;i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tif(i != k){\n\n\t\t\t\tleft = info[i].r;\n\t\t\t\tright = 2.0*info[i].r+info[k].r;\n\t\t\t\tm = (left+right)/2.0;\n\n\t\t\t\twhile(left <= right){\n\t\t\t\t\tcalcDist = sqrt((m-info[i].r)*(m-info[i].r)+(info[i].r-info[k].r)*(info[i].r-info[k].r));\n\n\t\t\t\t\tif(fabs(calcDist-(info[i].r+info[k].r)) < 0.00001){\n\t\t\t\t\t\tdiv = m+info[k].r-info[i].r*2.0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tif(calcDist + 0.00001 < info[i].r+info[k].r){\n\t\t\t\t\t\t\tleft = m + 0.00001;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tright = m - 0.00001;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tm = (left+right)/2.0;\n\t\t\t\t}\n\t\t\t\tdistance[i][k] = div;\n\t\t\t}\n\t\t}\n\t}\n\n\tint limit = pow(2,info_index);\n\n\tfor(int i = 0; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index;k++){\n\t\t\tfor(int p = 0; p < limit; p++)dp[i][k][p] = (double)BIG_NUM;\n\t\t}\n\t}\n\n\n\tdp[0][0][1] = info[0].r*2.0;\n\n\tint next_state;\n\n\tfor(int i = 1; i <= info_index; i++){\n\t\tfor(int k = 0; k < info_index; k++){\n\t\t\tfor(int state = 0; state < limit; state++){\n\t\t\t\tif(dp[i-1][k][state] != (double)BIG_NUM){\n\t\t\t\t\tfor(int a = 0; a < info_index; a++){\n\t\t\t\t\t\tif(state & (1 << a)){\n\t\t\t\t\t\t\tif(i == info_index){\n\t\t\t\t\t\t\t\tdp[info_index][0][limit-1] = min(dp[info_index][0][limit-1],dp[i-1][k][state]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tnext_state = state + pow(2,a);\n\t\t\t\t\t\t\tdp[i][a][next_state] = min(dp[i][a][next_state],dp[i-1][k][state] + distance[k][a]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif(dp[info_index][0][limit-1] <= length){\n\t\tprintf(\"OK\\n\");\n\t}else{\n\t\tprintf(\"NA\\n\");\n\t}\n\n}\n\nint main(){\n\n\tdp = new double**[13];\n\n\tfor(int i = 0; i < 13; i++){\n\t\tdp[i] = new double*[12];\n\t\tfor(int k = 0; k < 12; k++){\n\t\t\tdp[i][k] = new double[4096];\n\t\t}\n\t}\n\n\n\tchar buf[3000];\n\tint index;\n\tchar ch;\n\n\twhile(true){\n\t\tindex = 0;\n\t\tch = getchar();\n\n\t\tif(ch == '\\n' || ch == '\\0')break;\n\n\t\twhile(ch != '\\n' && ch != '\\0'){\n\t\t\tbuf[index++] = ch;\n\t\t\tch = getchar();\n\t\t}\n\t\tbuf[index] = '\\0';\n\t\tfunc(buf);\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define FOR(i,a,b) for(int i= (a); i<((int)b); ++i)\n#define RFOR(i,a) for(int i=(a); i >= 0; --i)\n#define FOE(i,a) for(auto i : a)\n#define ALL(c) (c).begin(), (c).end()\n#define RALL(c) (c).rbegin(), (c).rend()\n#define DUMP(x)  cerr << #x << \" = \" << (x) << endl;\n#define SUM(x) std::accumulate(ALL(x), 0LL)\n#define MIN(v) *std::min_element(v.begin(), v.end())\n#define MAX(v) *std::max_element(v.begin(), v.end())\n#define EXIST(v,x) (std::find(v.begin(), v.end(), x) != v.end())\n#define BIT(n) (1LL<<(n))\n#define UNIQUE(v) v.erase(unique(v.begin(), v.end()), v.end());\n\ntypedef long long LL;\ntemplate<typename T> using V = std::vector<T>;\ntemplate<typename T> using VV = std::vector<std::vector<T>>;\ntemplate<typename T> using VVV = std::vector<std::vector<std::vector<T>>>;\n\ntemplate<class T> inline T ceil(T a, T b) { return (a + b - 1) / b; }\ntemplate<class T> inline void print(T x) { std::cout << x << std::endl; }\ntemplate<class T> inline void print_vec(const std::vector<T> &v) { for (int i = 0; i < v.size(); ++i) {  if (i != 0) {std::cout << \" \";} std::cout << v[i];} std::cout << \"\\n\"; }\ntemplate<class T> inline bool inside(T y, T x, T H, T W) {return 0 <= y and y < H and 0 <= x and x < W; }\ntemplate<class T> inline double euclidean_distance(T y1, T x1, T y2, T x2) { return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2)); }\ntemplate<class T> inline double manhattan_distance(T y1, T x1, T y2, T x2) { return abs(x1 - x2) + abs(y1 - y2); }\n\nconst int INF = 1L << 30;\nconst double EPS = 1e-9;\nconst std::string YES = \"YES\", Yes = \"Yes\", NO = \"NO\", No = \"No\";\nconst std::vector<int> dy4 = { 0, 1, 0, -1 }, dx4 = { 1, 0, -1, 0 };    // 4近傍（右, 下, 左, 上）\nconst std::vector<int> dy8 = { 0, -1, 0, 1, 1, -1, -1, 1 }, dx8 = { 1, 0, -1, 0, 1, 1, -1, -1 };\n\nusing namespace std;\n\n// strをdelimiterで分割する\nvector<string> split(const string &str, const string &delimiter) {\n    vector<string> res;\n    size_t current = 0, found, delimlen = delimiter.size();\n    while ((found = str.find(delimiter, current)) != string::npos) {\n        res.emplace_back(string(str, current, found - current));\n        current = found + delimlen;\n    }\n    res.emplace_back(string(str, current, str.size() - current));\n    return res;\n}\n\nint main() {\n    cin.tie(0);\n\tios::sync_with_stdio(false);\n\n\tstring s;\n\twhile (getline(cin, s)) {\n\t    vector<string> raw = split(s, \" \");\n\t    int W;\n\t    vector<int> v;\n\t    W = stoi(raw[0]);\n\t    FOR(i, 1, raw.size()) {\n\t        v.emplace_back(stoi(raw[i]));\n\t    }\n\t    int n = v.size();\n\n\t    vector<vector<double>> dp(1 << n, vector<double>(n, INF));\n\t    FOR(i, 0, n) {\n\t        dp[1 << i][i] = v[i];\n\t    }\n\n\t    FOR(b, 0, 1 << n) {\n\t        FOR(i, 0, n) {\n//                assert(dp[b][i] != INF);\n\n                FOR(j, 0, n) {\n                    if ((b & (1 << j)) == 0) {\n\n                        int r1 = v[i];\n                        int r2 = v[j];\n\n                        double bb = (r1 + r2) * (r1 + r2) - (r1 - r2) * (r1 - r2);\n                        double dist = sqrt(bb);\n                        dp[b | 1 << j][j] = min(dp[b | 1 << j][j], dp[b][i] + dist);\n                    }\n                }\n            }\n\t    }\n\n\t    bool ans = false;\n\t    FOR(j, 0, dp[0].size()) {\n\t        if (dp[(1 << n) - 1][j] + v[j] <= W) {\n\t            ans = true;\n\t        }\n\t    }\n\t    if (ans) {\n\t        print(\"OK\");\n\t    }\n\t    else {\n            print(\"NA\");\n        }\n\t}\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <limits.h>\n#include <math.h>\n#include <bitset>\n#include <vector>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <iomanip>\n#include <iostream>\n\n#define VARIABLE(x) cerr << #x << \"=\" << x << endl\n#define BINARY(x) static_cast<bitset<16> >(x);\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define REP(i,m,n) for (int i=m;i<(int)(n);i++)\n#define if_range(x, y, w, h) if (0<=(int)(x) && (int)(x)<(int)(w) && 0<=(int)(y) && (int)(y)<(int)(h))\n\nconst int INF = 100000000;\ntypedef double D;\nconst double EPS = 1e-8;\nconst double PI = 3.14159;\nint dx[4]={-1, 0, 1, 0}, dy[4]={0, -1, 0, 1};\nusing namespace std;\ntypedef pair<int, int> P;\n\n/** Problem0120 : Patisserie **/\nconst int MAX_N = 12;\n\ndouble W;\nvector<double> size;\nint dp[1<<MAX_N][MAX_N];\nint N;\n\nint sig(double a, double b) {\n\tif(a < b - EPS) return -1;\n\tif(a > b + EPS) return +1;\n\treturn 0;\n}\n\nbool rec(int S, int v, double w)\n{\n\t//printf(\"(S, v, w) = (%d, %d, %.2f)\\n\", S, v, w);\n\t\n\tif (dp[S][v]>=0)\n\t\treturn dp[S][v];\n\t\n\tif (S==(1<<N)-1) {\n\t\tprintf(\"%.2f %.2f\\n\", W, w);\n\t\treturn dp[S][v] = (sig(W, w)!=-1);\n\t}\n\t\n\tbool res=false;\n\trep(u, N) {\n\t\tif (!(S>>u&1)) {\n\t\t\tdouble nw = w - size[v] + size[u] + sqrt((size[u]+size[v])*(size[u]+size[v]) - (size[u]-size[v])*(size[u]-size[v]));\n\t\t\tres |= rec(S|1<<u, u, nw);\n\t\t}\n\t}\n\t\n\treturn dp[S][v] = res;\n}\n\nint main()\n{\n\tstring in;\n\twhile (getline(cin, in)) {\n\t\tsize.clear();\n\t\t\n\t\tstringstream ss(in);\n\t\tss>>W;\n\t\tdouble d;\n\t\twhile (ss>>d) {\n\t\t\tsize.push_back(d);\n\t\t};\n\t\tN=(int)size.size();\n\t\t\n\t\tmemset(dp, -1, sizeof(dp));\n\t\t\t\n\t\tbool ans=false;\n\t\trep(i, N) {\n\t\t\tans |= rec(1<<i, i, 2*size[i]);\n\t\t}\n\t\t\n\t\tcout << (ans?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\ndouble add(double a, double b){\n  if(abs(a+b) < eps* (abs(a) + abs(b))) return 0;\n  return a+b;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,0));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    double ans = 10000000.0;\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw = add(bw,v[nxt]);\n            }\n            if(bfr != 0){\n              ll h = v[bn]+v[nxt],s = v[bn] - v[nxt];\n              bw = add(bw , sqrt(h*h - s*s));\n            }\n            if(dp[bfr|( 1 << nxt)][nxt] != 0)\n              dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            else\n              dp[bfr|( 1 << nxt)][nxt] = bw;\n            if((bfr|(1 << nxt)) == (1 << n)-1){\n              ans = min(ans,bw);\n            }\n          }\n        }\n      }\n    }\n    if(w - ans+ eps > 0){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cmath>\n#include<cstdio>\n#include<algorithm>\n\nusing namespace std;\n\nint main()\n{\n\tdouble tbl_sqrt[101];\n\tfor(int i=1;i<=100;i++)\ttbl_sqrt[i]=sqrt(i);\n\n\tint box;\n\twhile(~scanf(\"%d \",&box)){\n\t\tint r[12],n;\n\t\tfor(n=1;;n++){\n\t\t\tscanf(\"%d\",r+n-1);\n\t\t\tif(getchar()=='\\n')\tbreak;\n\t\t}\n\n\t\tsort(r,r+n);\n\n\t\tdouble wmin=2*box;\n\t\tdo{\n\t\t\tdouble w=r[0]+r[n-1];\n\t\t\tfor(int i=0;i<n-1;i++)\tw+=2*tbl_sqrt[r[i]*r[i+1]];\n\t\t\twmin=min(wmin,w);\n\t\t}while(next_permutation(r+1,r+n));\n\n\t\tputs(wmin<=box?\"OK\":\"NA\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<math.h>\nusing namespace std;\nint r[13];\ndouble dp[13][13][4097];\nint main(){\n\tint len;\n\tstring s;\n\twhile(cin>>len){\n\tgetline(cin,s);\n\tint n=0,cnt=0;\n\tfor(int i=1;i<s.size();i++){\n\t\tif(s[i]==' '){\n\t\t\tr[n]=cnt;\n\t\t\tn++;\n\t\t\tcnt=0;\n\t\t}\n\t\telse{\n\t\t\tcnt*=10;\n\t\t\tcnt+=s[i]-'0';\n\t\t}\n\t}\n\tr[n]=cnt;\n\tn++;\n\tfor(int i=0;i<n;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<4097;k++){\n\t\t\t\tdp[i][j][k]=10000.0;\n\t\t\t}\n\t\t}\n\t}\n\tint w=1;\n\tfor(int i=0;i<n;i++){\n\t\tdp[0][i][w]=r[i]+0.0;\n\t\tw*=2;\n\t}\n\tfor(int i=0;i<n-1;i++){\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<w;k++){\n\t\t\t\tint h=1;\n\t\t\t\tfor(int e=0;e<n;e++){\n\t\t\t\t\tif(k%(h*2)<h){\n\t\t\t\t\t\tdouble set=dp[i][j][k];\n\t\t\t\t\t\tset+=2*(double)sqrt((double)r[j]*r[e]);\n\t\t\t\t\t\tif(dp[i+1][e][k+h]>set){\n\t\t\t\t\t\t\tdp[i+1][e][k+h]=set;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\th*=2;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tbool ok=false;\n\tfor(int j=0;j<n;j++){\n\t\tfor(int k=0;k<w;k++){\n\t\t\tif(dp[n-1][j][k]+r[j]<=len){\n\t\t\t\tok=true;\n\t\t\t}\n\t\t}\n\t}\n\tif(ok)cout<<\"OK\"<<endl;\n\telse cout<<\"NA\"<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nint main(){\n  string s;\n  while(getline(cin,s)){\n    double w;\n    vector<double> v;\n    stringstream ss(s);\n    ss>>w;\n    double t;\n    while(ss>>t) v.push_back(t);\n    int n=v.size();\n    double dp[1<<n][n],inf=1<<25;\n    for(int i=0;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tdp[i][j]=inf;\n    for(int i=0;i<n;i++) dp[1<<i][i]=v[i];\n    for(int i=1;i<(1<<n);i++)\n      for(int j=0;j<n;j++)\n\tfor(int k=0;k<n;k++)\n\t  if(((i>>j)&1)&&!((i>>k)&1)) dp[i+(1<<k)][k]=min(dp[i+(1<<k)][k],dp[i][j]+sqrt((v[j]+v[k])*(v[j]+v[k])-(v[j]-v[k])*(v[j]-v[k])));\n    bool f=0;\n    for(int i=0;i<n;i++) f|=dp[(1<<n)-1][i]+v[i]<=w+1e-7;\n    cout<<(f?\"OK\":\"NG\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint W, N, R[12];\n\nint abs(int x) {\n  return x < 0 ? -x : x;\n}\n\ndouble calc(vector<int> v, int cnt) {\n  int bfr;\n  double sum;\n  int s;\n  int lim = v.size() % 2;\n  if(cnt % 2 == 0) {\n    bfr = *v.begin();\n    s = *v.begin();\n    v.erase(v.begin());\n  } else {\n    bfr = *(--v.end());\n    s = *(--v.end());\n    v.erase(--v.end());\n  }\n  sum = 0;\n\n  while(v.size() != lim) {\n    vector<int>::iterator it;\n    if(cnt % 2 == 0) {\n      it = v.end();\n      it--;\n    } else {\n      it = v.begin();\n    }\n\n    if(bfr == *it) sum += *it * 2;\n    else     sum += sqrt((bfr+*it)*(bfr+*it) - (bfr-*it)*(bfr-*it));\n    bfr = *it;\n    v.erase(it);\n    cnt++;\n  }\n  if(lim == 0) return s + sum + bfr;\n  else {\n    double tmp1 = sqrt((s+v[0])*(s+v[0]) - (s-v[0])*(s-v[0]));\n    double tmp2 = sqrt((bfr+v[0])*(bfr+v[0]) - (bfr-v[0])*(bfr-v[0]));\n    return min(v[0] + tmp1 + sum + bfr, s + sum + tmp2 + bfr);\n  }\n}\n\nvoid solve() {\n  sort(R, R+N);\n  vector<int> v;\n  for(int i = 0; i < N; ++i) {\n    v.push_back(R[i]);\n  }\n  if(min(calc(v, 0), calc(v, 1)) <= W) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"NA\" << endl;\n  }\n}\n\nmain() {\n  while(1) {\n    string str;\n    getline(cin, str);\n    if(cin.eof()) break;\n    stringstream ss;\n    ss << str;\n    ss >> W;\n    for(int i = 0; ; ++i) {\n      if(ss.eof()) {\n\tN = i;\n\tbreak;\n      }\n      ss >> R[i];\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n#define X first\n#define Y second\n\nvector<double> data;\npair<double,double> lc;\nvector<bool> done;\n\nint boxSize;\nbool flag;\n\ndouble solve(double x,double a,double b){\n\treturn (2.0*x+sqrt(4*x*x-4*(x*x-4*a*b)) ) / 2.0;\n}\n\nvoid bt(){\n\tif( count(done.begin(),done.end(),true) == done.size() ){\n\t\tif( lc.X + lc.Y<=boxSize){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tif(flag || lc.X + lc.Y > boxSize)return;\n\t\n\tfor(int i=0;i<data.size();i++){\n\t\tif(done[i])continue;\n\t\t\n\t\tif(solve(lc.X,lc.Y,data[i]) > boxSize)continue;\n\t\tdone[i] = true;\n\t\tpair<double,double> tmp = lc;\n\t\tlc = make_pair(solve(lc.X,lc.Y,data[i]),data[i]);\n\t\tbt();\n\t\tlc = tmp;\n\t\tdone[i] = false;\n\t}\n}\n\n\nint main(){\n\tint t;\n\tstring s;\n\twhile(getline(cin,s) && s != \"\"){\n\t\tvector<int> input;\n\t\tflag = false;\n\t\tdata.clear();\n\t\t\n\t\tstringstream ss(s);\n\t\twhile(ss >> t)input.push_back(t);\n\t\t\n\t\tboxSize = input[0];\n\t\tfor(int i=1;i<input.size();i++){\n\t\t\tdata.push_back(input[i]);\n\t\t}\n\t\tdone.resize(data.size());\n\t\tfill(done.begin(),done.end(),false);\n\t\tfor(int i=0;i<data.size();i++){\n\t\t\tdone[i] = true;\n\t\t\tlc = make_pair(data[i],data[i]);\n\t\t\tbt();\n\t\t\tdone[i] = false;\n\t\t}\n\t\tcout << (flag?\"OK\":\"NG\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <stdio.h>\n#include <math.h>\n#include <cctype>\n\n#include <iostream>\n#include <vector>\n#include <deque>\n#include <queue>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i, n) for(int i = 0; i < n; i++)\n#define repi(i,l,n) for(int (i)=(int)(l);(i)<(int)(n);(i)++)\n#define d_arr(arr, h, w) rep(i,(h) ){ cout << \"[\"; rep(j,(w) ) { cout << (arr)[i][j] << \", \"; } cout << \"]\" << endl;}\n#define IN(x,s,g) ((x) >= (s) && (x) < (g))\n#define ISIN(x,y,w,h) (IN((x),0,(w)) && IN((y),0,(h)))\n#define print(x) printf(\"%d\\n\",x);\n\n#define max_cakes 12\n#define INF (1<<30)\n\ntypedef pair<int ,int> P;\n\n\ndouble dis( int l, int r){\n    double sq = pow(l+r,2) - pow(fabs(l-r),2);\n    return sqrt(sq);\n}\n\nvector<int> cakes;\nint nCakes;\n\nvoid show(int bit){\n    rep(i,nCakes){\n        if( bit>>i & 1 ) { cout << 1 << \",\"; }\n        else { cout << 0 << \",\"; }\n    }\n    puts(\"\");\n}\n\n\ndouble rec( int left_i, int bit ){\n    //cout << \"rec( left=\" << cakes[left_i] << \", bit=\" << bit << \" )\" << endl;\n    //show(bit);\n    if( (1<<nCakes)-1 == bit ){\n        //cout << \"return!!\" << endl;\n        return cakes[left_i];\n    }\n    double ret = 1000000.0;\n    rep( i,nCakes ){\n        //cout << \"try to branch off to :\" << i << endl; \n        if( (bit>>i) & 1 ) { continue; }\n        else { \n            //cout << \"next cakes_i:\"<<i<<\",next cake:\"<< cakes[i]<< endl;\n            //cout << \"next bit:\";\n            //show( (1<<i)|bit );\n            //puts(\"\");\n            double tmp = dis(cakes[left_i], cakes[i]) + rec(i, (1<<i) | bit );\n            ret = min(ret, tmp);\n        }\n    }\n    return ret;\n}\n\nint main()\n{\n    while(1){\n        cakes.clear();\n        int length;\n        cin >> length; if( length == 0 ) break;\n        int tmp;\n        while(1) { \n            cin >> tmp;\n            cakes.push_back(tmp);\n            if (cin.peek()=='\\n') break;\n        }\n        nCakes = cakes.size();\n\n        int bit = 0;\n        double cap = 10000000.0;\n        rep(i,cakes.size()){\n            double scale = cakes[i] + rec(i, 1<<i );\n            cap = min(cap, scale);\n        }\n\n        //cout << \"length: \" << length << endl;\n        //cout << \"cap : \" << cap << endl;\n        if (cap <= length) { cout << \"OK\" << endl; }\n        else { cout << \"NA\" << endl; }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<complex>\n#include<cmath>\n#include<algorithm>\n#include<map>\n#include<ctime>\n#include<vector>\n#include<sstream>\n#include<iostream>\nusing namespace std;\nint main(void){\n\n    int N;\n\n    string s;\n    while(getline(cin,s)){\n    long long int D = 100000;\n    vector<double> A,B;\n        istringstream ss(s);\n        int t;\n        ss >> N;\n        while(ss >> t)A.push_back(t);\n\n        //for(int i = 0;i < A.size();i++)cout<<A[i]<<endl;\n        double best = 1000000;\n        double ans = 1000000;\n        while(D--){\n            vector<double> V1,V2;\n            srand(time(NULL) + D);\n            V1 = A;\n            double sum = 0;\n            int x = rand() % A.size();\n            int y = rand() % A.size();\n            swap(V1[x],V1[y]);\n\n            for(int i = 0;i < V1.size()-1;i++){\n                double R1 = V1[i] + V1[i+1];\n                double R2 = V1[i] - V1[i+1];\n                sum += sqrt((R1 * R1) - (R2 * R2));\n            }\n\n            sum += V1[0] + V1[V1.size()-1];\n            double e = pow((sum/ans), 75);\n            double z = (double)((int)(rand()%1000000))/1000000;\n            if(z>=(1-(1/e)))ans = sum,A = V1;/*\n            if(D%10000 == 0){\n                for(int i = 0;i < A.size();i++){\n                    cout<<A[i]<<\" \";\n                }\n                cout<<\" : \";\n                for(int i = 0;i < B.size();i++){\n                    cout<<B[i]<<\" \";\n                }\n                cout<<endl;\n            }*/\n            if(sum<best)best = sum,B = V1;\n        }\n        int siz = 0;\n        for(int i = 0;i < 1000;i++){\n            if(best <= (double)i){\n                siz = i;\n                //cout<<siz<<endl;\n                break;\n            }\n        }\n        if(siz <= N)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n        }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\nconst double EPS=1e-6;\n\ndouble evaluate(vector<double>&r){\n    double res=r[0]+r[r.size()-1];\n    for(int i=0;i+1<r.size();i++){\n        double h=(r[i]+r[i+1]);\n        double s=abs(r[i]-r[i+1]);\n        res+=sqrt(h*h-s*s);\n    }\n    return res;\n}\n\ndouble optimize(vector<double>r){\n    double T=10000;\n    double cool=0.99;\n    double step=1;\n\n    double mi=evaluate(r);\n\n    while(T>0.0001){\n        int a,b;\n        while(true){\n            a=rand()%r.size();\n            b=rand()%r.size();\n            if(a!=b)break;\n        }\n\n        double score=evaluate(r);\n        swap(r[a],r[b]);\n        double new_score=evaluate(r);\n\n        double p=exp(-abs(new_score-score)/T);\n\n        if(new_score>score || rand()<p*RAND_MAX);\n        else{\n            swap(r[a],r[b]);\n        }\n\n        mi=min(mi,new_score);\n        T*=cool;\n    }\n    return mi;\n}\n\nint main(){\n    int l;\n    while(cin>>l){\n        cin.ignore();\n        string str;\n        getline(cin,str);\n        stringstream ss(str);\n        vector<double>r;\n        while(!ss.eof()){\n            double t;\n            ss>>t;\n            r.push_back(t);\n        }\n\n        if(optimize(r)<l+EPS)puts(\"OK\");\n        else puts(\"NA\");\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <vector>\n#include <cmath>\n#include <algorithm>\n#include <queue>\n#include <map>\n\nusing namespace std;\n\n#define INF 1 << 24\n\nint d(int n) {\n\treturn n * n;\n}\n\ntypedef pair< vector<bool>, pair<int, double> > P;\n\nint v_to_int(vector<bool> v) {\n\tint ret = 0;\n\tfor (int i = 0; i < v.size(); ++i) {\n\t\tret <<= 1;\n\t\tret |= v[i];\n\t}\n\treturn ret;\n}\n\nint main() {\n\tint L;\n\twhile ( scanf(\"%d\", &L) != EOF ) {\n\t\tvector<int> v;\n\n\t\tchar c;\n\t\twhile ( c = getchar(), c != '\\n' && c != '\\r' && c != EOF ) {\n\t\t\tint a; scanf(\"%d\", &a);\n\t\t\tv.push_back(a);\n\t\t}\n\n/*\n\t\tsort( v.begin(), v.end() );\n\n\t\tint n = v.size();\n\t\tvector<int> v1, v2;\n\t\tfor (int i = 0; i < n/2; ++i)\n\t\t\tv1.push_back(v[i]);\n\n\t\tfor (int i = n/2; i < n; ++i)\n\t\t\tv2.push_back(v[i]);\n*/\n\n\t\tint n = v.size();\n\t\tvector< vector<double> > len(n, vector<double>(n, INF));\n\t\tfor (int i = 0; i < n; ++i)\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tlen[i][j] = sqrt( d(v[i]+v[j]) - d( abs(v[i]-v[j]) ) );\n\n\t\tqueue<P> Q;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tvector<bool> V(n); V[i] = true;\n\t\t\tQ.push( P( V, make_pair(i, v[i]) ) );\n\t\t}\n\n\t\tdouble ans = INF;\n\t\tdouble cost[1<<12][12]; fill(&cost[0][0], &cost[0][0]+(1<<12)*12, INF);\n\t\twhile ( !Q.empty() ) {\n\t\t\tP p = Q.front(); Q.pop();\n\t\t\tint head = p.second.first;\n\t\t\tdouble length = p.second.second;\n\n\t\t\tint sz = 0;\n\t\t\tfor (int i = 0; i < n; ++i)\n\t\t\t\tsz += p.first[i];\n\n\t\t\tif (length + v[head] > L) continue;\n\t\t\tif (sz >= n) {\n\t\t\t\tif (length + v[head] < ans)\n\t\t\t\t\tans = length + v[head];\n\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (length > cost[v_to_int(p.first)][head]) continue;\n\t\t\tcost[v_to_int(p.first)][head] = length;\n\n\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif (p.first[i]) continue;\n\n\t\t\t\tvector<bool> v2 = p.first; v2[i] = true;\n\t\t\t\tQ.push( P(v2, make_pair(i, length + len[head][i])) );\n\t\t\t}\n\t\t}\n\n\t\tcout << ans << endl;\n\t\tif (ans <= L) cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 10000000\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    vector<int> vec;\n    stringstream ss(str);\n    int wid,n=0;\n    ss >> wid;\n    while(!ss.eof()){\n      int s;\n      ss >> s;\n      vec.push_back(s);\n      n++;\n    }\n    double dp[(1<<12)+1][20];\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tdp[i][j] = INF;\n      }\n    }\n    for(int i=0;i<n;i++){\n      dp[(1<<n)-1-(1<<i)][i] = vec[i];\n    }\n    for(int i=(1<<n)-2;i>-1;i--){\n      for(int j=0;j<n;j++){\n\tif(!(i & (1<<j))){\n\t  for(int k=0;k<n;k++){\n\t    dp[i][j] = min(dp[i][j],dp[i | (1<<j)][k] + 2*sqrt(vec[j]*vec[k]));\n\t  }\n\t}\n      }\n    }\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tcout << dp[i][j] << \"  \";\n      }\n      cout << endl;\n    }\n    double ans = INF;\n    for(int i=0;i<n;i++){\n      ans = min(ans,dp[0][i]+vec[i]);\n    }\n    cout << ans << endl;\n    if(ans <= wid) cout << \"OK\" << endl;\n    else cout << \"NG\" << endl;\n  }\n  //cout << (1<<3) << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<sstream>\n#include<cmath>\n#include<algorithm>\n\nconstexpr int MAX_N = 12;\nconstexpr double INF = (int)1e9;\n\nint n, w;\nint a[MAX_N];\ndouble memo[MAX_N][(1 << MAX_N)];\n\ndouble func(int x1, int x2) {\n\treturn sqrt(pow(a[x1] + a[x2], 2) - pow(abs(a[x1] - a[x2]), 2));\n}\n\ndouble solve(int m, int S) {\n\tif (memo[m][S] > 0.0)\n\t\treturn memo[m][S];\n\tif (S == (1 << n) - 1)\n\t\treturn memo[m][S] = a[m];\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (!((S >> i) & 1))\n\t\t\tres = std::min(res, solve(i, S | (1 << i)) + func(m, i));\n\t}\n\treturn memo[m][S] = res;\n}\n\nvoid output() {\n\tfor (int i = 0; i < n; ++i) {\n\t\tfor (int j = 0; j < (1 << n); ++j)\n\t\t\tmemo[i][j] = 0.0;\n\t}\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (solve(i, (1 << i)) + a[i] <= (double)w) {\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\t\treturn;\n\t\t}\n\t}\n\tstd::cout << \"NA\" << std::endl;\n}\n\nint main() {\n\tstd::string str;\n\twhile (1) {\n\t\tstd::getline(std::cin, str);\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tstd::stringstream ss(str);\n\t\tss >> w;\n\t\tn = 0;\n\t\twhile (!ss.eof()) {\n\t\t\tss >> a[n];\n\t\t\t++n;\n\t\t}\n\t\tfor (int i = 0; i < n; ++i)\n\t\tstd::cout << std::endl;\n\t\toutput();\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "# include <iostream>\n# include <sstream>\n# include <string>\n# include <cmath>\n# include <algorithm>\nconst int MAX_N = 12;\nconst double INF = (1 << 16);\n\nint n, l;\nint r[MAX_N];\ndouble memo[1 << MAX_N][MAX_N];\n\ndouble solve(int s, int v) {\n\tif (s == (1 << n) - 1)\n\t\treturn r[v];\n\tif (memo[s][v] != -1.0)\n\t\treturn memo[s][v];\t\n\tdouble res = INF;\n\tfor (int i = 0; i < n; ++i) {\n\t\tif (((s >> i) & 1) == 0)\n\t\t\tres = std::min(res, solve(s | (1 << i), i) + sqrt(pow(r[i] + r[v], 2) - pow(r[i] - r[v], 2)));\n\t}\n\treturn memo[s][v] = res;\n}\n\nint main() {\n\twhile (1) {\n\t\tif (std::cin.eof())\n\t\t\tbreak;\n\t\tstd::string str;\n\t\tstd::getline(std::cin, str);\n\t\tstd::stringstream s(str);\n\t\ts >> l;\n\t\ts.ignore();\n\n\t\twhile (!s.eof()) {\n\t\t\tint a;\n\t\t\ts >> a;\n\t\t\tr[n] = a;\n\t\t\t++n;\n\t\t\ts.ignore();\n\t\t}\n\t\tfor (int i = 0; i < (1 << n); ++i) {\n\t\t\tfor (int j = 0; j < n; ++j)\n\t\t\t\tmemo[i][j] = -1.0;\n\t\t}\n\t\tdouble ans = INF;\n\t\tfor (int i = 0; i < n; ++i) {\n\t\t\tans = std::min(ans, solve((1 << i), i) + r[i]);\n\t\t}\n\t\tif (ans <= l)\n\t\t\tstd::cout << \"OK\" << std::endl;\n\t\telse\n\t\t\tstd::cout << \"NA\" << std::endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<bitset>\n#include<cassert>\n#include<cctype>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<functional>\n#include<limits>\n#include<list>\n#include<map>\n#include<numeric>\n#include<set>\n#include<stack>\n#include<string>\n#include<sstream>\n#include<queue>\n#include<vector>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define MOD 1000000007\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\n\nint main() {\n\tfor (int w; cin >> w;) {\n\t\tstring s; getline(cin, s);\n\t\tvector<int> c;\n\t\tstringstream ss(s);\n\t\twhile (!ss.eof()) {\n\t\t\tint r; ss >> r;\n\t\t\tc.push_back(r);\n\t\t}\n\t\tint bend = 1 << c.size();\n\t\tvector<vector<double>> dp(bend, vector<double>(c.size(), INF));\n\t\tfor (int i = 0; i < c.size(); i++) {\n\t\t\tdp[0][i] = c[i];\n\t\t}\n\t\tfor (int bit = 0; bit < bend; bit++) {//1??±?????\\??????\n\t\t\tfor (int i = 0; i < c.size(); i++) {\n\t\t\t\tif ((bit & (1 << i)) == 0) {//??±?????\\??£??????????????£??????\n\t\t\t\t\tfor (int j = 0; j < c.size(); j++) {\n\t\t\t\t\t\t//cout << bitset<10>(bit) << endl;\n\t\t\t\t\t\t//cout << bitset<10>(1 << i) << endl;\n\t\t\t\t\t\t//cout << bitset<10>(1 << j) << endl;\n\t\t\t\t\t\t//cout << endl;\n\t\t\t\t\t\tif ((bit&(1 << j)) != 0) {//??±?????\\??£????????????\n\t\t\t\t\t\t\tdp[bit][i] = min(\n\t\t\t\t\t\t\t\tdp[bit][i],\n\t\t\t\t\t\t\t\tdp[bit - (1 << j)][j]\n\t\t\t\t\t\t\t\t+ sqrt(\n\t\t\t\t\t\t\t\t(c[j] + c[i])*(c[j] + c[i]) - (c[j] - c[i])*(c[j] - c[i])\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//cout << dp[bit][i] << endl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble m = INF;\n\t\tfor (int i = 0; i < c.size(); i++) {\n\t\t\t//cout << dp[bend - 1 - (1 << i)][i] + c[i] << endl;\n\t\t\tm = min(m, dp[(bend - 1) - (1 << i)][i] + c[i]);\n\t\t}\n\t\tcout << (m <= w ? \"OK\" : \"NA\") << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <cstring>\n#include <algorithm>\n#include <sstream>\n#include <map>\n#include <set>\n#include <cmath>\n\n#define REP(i,k,n) for(int i=k;i<n;i++)\n#define rep(i,n) for(int i=0;i<n;i++)\n#define INF 1<<30\n#define pb push_back\n#define mp make_pair\n#define EPS 1e-8\n#define equals(a,b) fabs((a) - (b)) < EPS\n\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int> P;\n\nvector<string> split(const string &str, char delim) {\n    vector<string> res;\n    size_t current = 0, found;\n    while((found = str.find_first_of(delim, current)) != string::npos) {\n        res.push_back(string(str, current, found - current));\n        current = found + 1;\n    }\n    res.push_back(string(str, current, str.size() - current));\n    return res;\n}\n\nint stoi(string s) {\n    int ret;\n    stringstream ss;\n    ss << s;\n    ss >> ret;\n    return ret;\n}\n\ndouble dp[1<<12][12];\n\nint main() {\n    string s;\n    while(getline(cin,s)) {\n        vector<string> t = split(s,' ');\n        int len = stoi(t[0]);\n        vector<int> v;\n        REP(i,1,t.size()) {\n            v.push_back(stoi(t[i]));\n        }\n        int n = v.size();\n\n        rep(i,1<<n) {\n            rep(j,n) dp[i][j] = INF;\n        }\n\n        rep(i,n) {\n            dp[1<<i][i] = v[i];\n        }\n\n        rep(k,(1<<n)) {\n            rep(i,n) {\n                rep(j,n) {\n                    if(k & (1<<j)) continue;\n                    double r = (v[i]+v[j]) * (v[i]+v[j]) - (v[i]-v[j])*(v[i]-v[j]);\n                    dp[k|(1<<j)][j] = min(dp[k|(1<<j)][j],dp[k][i] + sqrt(r));\n                }\n            }\n        }\n\n        double res = INF;\n        rep(i,n) {\n            res = min(res,dp[(1<<n)-1][i] + v[i]);\n        }\n\n        if(res <= len) cout << \"OK\" << endl;\n        else cout << \"NA\" << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) begin(r),end(r)\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\nusing pdl = pair<double,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\ndouble add(double a, double b){\n  if(abs(a+b) < eps* (abs(a) + abs(b))) return 0;\n  return a+b;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  stringstream ss;\n  ll w;\n  while(getline(cin,s)){\n    ss.clear();\n    ss << s;\n    ss >> w;\n    vector<ll> v(12);\n    ll n = 0,k;\n    while(ss >> k){\n      v[n] = k;\n      ++n;\n    }\n    vector<vector<double>> dp(1 << n,vector<double>(n,0));\n    bool f = false;\n    rep(i,n){\n      dp[1 << i][i] = v[i];\n    }\n    rep(bfr,(1 << n)){\n      REP(now,0,n){\n        if((bfr & (1 << now)) == 0) continue;\n        REP(nxt,0,n){\n          if((bfr & (1 << nxt)) == 0){\n            double bw = dp[bfr][now];\n            int bn = now;\n            if(bfr == 0 || (bfr|(1 << nxt)) == (1 << n)-1){\n              bw = add(bw,v[nxt]);\n            }\n            if(bfr != 0){\n              ll h = v[bn]+v[nxt],s = v[bn] - v[nxt];\n              bw = add(bw , sqrt(h*h - s*s));\n            }\n            if(dp[bfr|( 1 << nxt)][nxt] != 0)\n              dp[bfr|( 1 << nxt)][nxt] = min(dp[bfr|( 1 << nxt)][nxt],bw);\n            else\n              dp[bfr|( 1 << nxt)][nxt] = bw;\n            if((bfr|(1 << nxt)) == (1 << n)-1 && w - bw >= 0){\n              f = true;\n            }\n          }\n        }\n      }\n    }\n    if(f){\n      cout << \"OK\" << endl;\n    }\n    else{\n      cout << \"NA\"<<endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <cmath>\n#include <climits>\nusing namespace std;\n#define rep2(x,from,to) for(int x=(from);x<(to);++(x))\n#define rep(x,to) rep2(x,0,to)\n\nint main() {\n\tdouble dp[1<<12][12];\n\tdouble calc[16][32];\n\trep(i,16) {\n\t\trep2(j,i,32) {\n\t\t\tcalc[i][j] = sqrt(j*j-i*i);\n\t\t}\n\t}\n\tint len, tmp;\n\tstring s;\n\twhile(getline(cin, s)) {\n\t\tstringstream ss(s);\t\t\n\t\tvector<int> v;\n\t\tss >> len;\n\t\twhile(ss >> tmp) v.push_back(tmp);\n\t\tint n = v.size();\n\t\trep(i,1<<12) {\n\t\t\trep(j,12) {\n\t\t\t\tdp[i][j] = INT_MAX;\n\t\t\t}\n\t\t}\n\t\trep(i,n) {\n\t\t\tdp[1<<i][i] = v[i];\n\t\t}\n\t\trep(i,(1<<n)) {\n\t\t\trep(j,n) {\n\t\t\t\tif(!(i&(1<<j))) continue;\n\t\t\t\trep(k,n) {\n\t\t\t\t\tif(i&(1<<k)) continue;\n\t\t\t\t\tdp[i|1<<k][k] = min(dp[i|1<<k][k], dp[i][j]+calc[abs(v[k]-v[j])][v[k]+v[j]]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool f = 1;\n\t\trep(i,n) {\n\t\t\tif(dp[(1<<n)-1][i] + v[i] <= len) {\n\t\t\t\tcout << \"OK\" << endl;\n\t\t\t\tf = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f) cout << \"NA\" << endl;\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <list>\n#include <map>\n#include <set>\n#include <stack>\n#include <queue>\n#include <bitset>\n#include <algorithm>\n#include <numeric>\n#include <utility>\n#include <sstream>\n#include <iostream>\n#include <iomanip>\n#include <cstdio>\n#include <climits>\n#include <cmath>\n#include <string>\n#include <cstring>\n#include <complex>\n\n#define FOR(i,b,n) for(int i=b;i<n;i++)\n#define RFOR(i,b,n) for(int i=n-1;i>=b;i--)\n#define CLR(mat) memset(mat, 0, sizeof(mat))\n#define NCLR(mat) memset(mat, -1, sizeof(mat))\n#define FILL(mat, x) memset(mat, x, sizeof(mat))\n#define BIT(n, b) (((1<<b) & n)!=0)\n\n#define INF 1<<16\n\nusing namespace std;\n\ntypedef pair<int,int> paii;\ntypedef long long ll;\n\nint n = 0;\ndouble boxsz, rc[16], dp[1<<16][16];\n\ndouble addrad(double r1, double r2){\n\treturn sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\ndouble rec(int stat, int v){\n\t\n\tif( dp[stat][v] >= 0 )\n\t\treturn dp[stat][v];\n\t\n\tif( stat == (1<<n)-1 )\n\t\treturn rc[v];\n\t\t\n\tdouble &res = dp[stat][v];\n\tres = INF;\n\t\n\tfor(int i = 0; i < n; ++i){\n\t\tif( !BIT(stat, i) ){\n\t\t\tres = min(res, rec(stat|(1<<i), i) + addrad(rc[v], rc[i]));\n\t\t}\n\t}\n\t\n\treturn res;\n}\n\nstring solve(){\n\n\tdouble res = INF;\n\n\tfor(int i = 0; i < n; ++i){\n\t\tNCLR(dp);\n\t\tres = min(res, rec(1<<i, i) + rc[i]);\n\t}\n\t\n\treturn res <= boxsz ? \"OK\" : \"NA\";\n}\n\n\nint main(){\n\n\twhile(!cin.eof()){\n\t\t\n\t\tstring str;\n\t\tgetline(cin, str);\n\t\t\n\t\tstringstream ss(str);\n\t\t\n\t\tss >> boxsz;\n\t\t\n\t\tn = 0;\n\t\twhile(!ss.eof()){\n\t\t\tss >> rc[n++];\n\t\t\tss.ignore();\n\t\t}\n\t\t\n\t\tcout << solve() << endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <sstream>\n#include <cmath>\n#include <string>\n#include <algorithm>\nusing namespace std;\ntypedef long long LL;\n#define OFFSET 2\n\nint box_width;\nset<LL> done;\n\ndouble dist(int r1, int r2)\n{\n\tdouble a = pow(abs(r1 - r2), 2);\n\tdouble b = pow(r1 + r2, 2);\n\treturn sqrt(-a + b);\n}\n\nbool solve(vector<int> cakes, LL state)\n{\n\tif (cakes.empty()) {\n\t\t// calculate the length\n\t\tdouble length = 0;\n\t\tint prev = 0;\n\t\tint save_state = state;\n\t\tdo {\n\t\t\tint current = state % 10 + OFFSET;\n\t\t\tstate /= 10;\n\t\t\tif (prev) {\n\t\t\t\tlength -= prev;\n\t\t\t\tlength += dist(prev, current);\n\t\t\t\tlength += current;\n\t\t\t} else {\n\t\t\t\tlength += current * 2;\n\t\t\t}\n\t\t\tprev = current;\n\t\t} while (state);\n\t\t// cout << \"state: \" << save_state << \", length: \" << length << endl;\n\t\tif (length <= box_width) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (done.find(state) != done.end()) {\n\t\treturn false;\n\t}\n\tdone.insert(state);\n\n\tfor (int i = 0; i < cakes.size(); ++i) {\n\t\tvector<int> next_cakes = cakes;\n\t\tint cake = next_cakes[i];\n\t\tLL next_state = state * 10 + (cake - OFFSET);\n\t\tnext_cakes.erase(next_cakes.begin() + i);\n\t\tif (solve(next_cakes, next_state)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nint main()\n{\n\twhile (cin >> box_width) {\n\t\tstring line;\n\t\tstringstream ss;\n\t\tvector<int> cakes;\n\t\tgetline(cin, line);\n\t\tss << line;\n\t\tint r;\n\t\twhile (ss >> r) {\n\t\t\tcakes.push_back(r);\n\t\t}\n\n\t\tdone.clear();\n\t\tif (solve(cakes, 0)) {\n\t\t\tcout << \"OK\" << endl;\n\t\t} else {\n\t\t\tcout << \"NA\" << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <sstream>\n#include <string>\n#include <cmath>\nusing namespace std;\n\nint W, N;\nvector<int> R;\n\nint pow(int x, int n) {\n  return (int)(pow((double)x, (double)n) + 0.5);\n}\n\ndouble calc(vector<int> v, int cnt) {\n  vector<int>::iterator it;\n  double sum;\n  int bfr;\n  bool first = true;\n\n  while(!v.empty()) {\n    if(cnt == 0) {\n      it = v.begin();\n    } else {\n      it = --v.end();\n    }\n\n    if(first) {\n      sum = *it;\n      first = false;\n    } else {\n      sum += sqrt(pow(bfr + *it, 2) - pow(bfr - *it, 2));\n    }\n\n    bfr = *it;\n    v.erase(it);\n    cnt = 1 - cnt;\n  }\n  return sum + bfr;\n}\n\nvoid solve() {\n  sort(R.begin(), R.end());\n  double tmp;\n  tmp = min(calc(R, 0), calc(R, 1));\n  reverse(R.begin(), R.end());\n  tmp = min(min(tmp, calc(R, 0)), calc(R, 1));\n\n  if(tmp <= W) {\n    cout << \"OK\" << endl;\n  } else {\n    cout << \"NA\" << endl;\n  }\n}\n\nmain() {\n  while(1) {\n    string str;\n    getline(cin, str);\n    if(cin.eof()) break;\n    stringstream ss;\n    ss << str;\n    ss >> W;\n    R.clear();\n    for(int i = 0; ; ++i) {\n      if(ss.eof()) {\n\tN = i;\n\tbreak;\n      }\n      int tmp;\n      ss >> tmp;\n      R.push_back(tmp);\n    }\n    solve();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define MOD 1000000007\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3f\n#define EPS (1e-10)\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int, int>P;\n\ndouble dp[1 << 15][11];\nint r[10];\nint main() {\n\tstring s;\n\twhile (getline(cin, s)) {\n\t\tstringstream buf(s);\n\t\tdouble w; buf >> w;\n\t\tint p = 0; while (buf >> r[p++]); p--;\n\t\tfill(dp[0], dp[1 << 10], INF);\n\t\trep(i, p)dp[1 << i][r[i]] = r[i] * 2;\n\t\trep(i, 1 << p) {\n\t\t\trep(k, 11) {\n\t\t\t\trep(j, p) {\n\t\t\t\t\tif (i >> j & 1)continue;\n\t\t\t\t\tdouble d = sqrt((k + r[j])*(k + r[j]) - (k - r[j])*(k - r[j])) - k + r[j];\n\t\t\t\t\tdp[i | 1 << j][r[j]] = min(dp[i | 1 << j][r[j]], dp[i][k] + d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\trep(i, 11) {\n\t\t\tif (dp[(1 << p) - 1][i] <= w) {\n\t\t\t\tputs(\"OK\"); goto g;\n\t\t\t}\n\t\t}\n\t\tputs(\"NA\");\n\tg:;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<sstream>\n#include<utility>\n#include<map>\n#include<vector>\n#include<queue>\n#include<algorithm>\nusing namespace std;\ntypedef long long ll;\ntypedef pair<int,int>P;\nchar I[300],*p;\nint R[15],B,N,i,j,k,a[2][15];\n\n\ndouble ch(int *r)\n{\n\tint i;\n\tdouble l=0;\n\tfor(i=0;i<N-1;i++)\n\t{\n\t\tint a=pow((double)r[i]+r[i+1],2);\n\t\tint b=pow((double)abs(r[i]-r[i+1]),2);\n\n\t\tl+=sqrt((double)(a-b));\n\t}\n\treturn pow(l+r[0]+r[N-1],2);\n}\n\nint main()\n{\n\tfor(;gets(I);)\n\t{\n\t\tp=strtok(I,\" \");\n\t\tB=atoi(p);\n\t\tB*=B;\n\t\tfor(N=0;(p=strtok(NULL,\" \"))!=NULL;)\n\t\t\tR[N++]=atoi(p);\n\t\tsort(R,R+N);\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(j%2)a[0][j]=R[i++];\n\t\t\telse a[0][j]=R[k--];\n\t\t}\n\t\tfor(i=j=0,k=N-1;i<=k;j++)\n\t\t{\n\t\t\tif(!(j%2))a[1][j]=R[i++];\n\t\t\telse a[1][j]=R[k--];\n\t\t}\n\t\tputs(B>=ch(a[0])||B>=ch(a[1])?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<cmath>\n#include<cstdio>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\t//===============================================\n\t\t//???????????????\n\t\tint a=rand()%N,b=rand()%N;\n\t\tswap(r[a],r[b]);\n\t\tscore=Evaluate(r);\n\t\tif(mi>score){\n            mi=score;\n            continue;\n\t\t}\n\t\tif(mi<score){\n            if(Changes(cnt)){\n                mi=score;\n                continue;\n            }\n            swap(r[a],r[b]);\n\t\t}\n\t\t//===============================================\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "//38\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<vector>\n#include<cmath>\n\nusing namespace std;\n\nvector<int> v;\n\nbool dfs(double r,int u,int p){\n  if(1<<v.size()==u+1){\n    return r>=p;\n  }else{\n    for(int i=0;i<v.size();i++){\n      if(!(u&1<<i)){\n\tif(dfs(r-2*sqrt(v[i]*p),u|1<<i,v[i]))return true;\n      }\n    }\n    return false;\n  }\n}\n\nint main(){\n  for(int w;cin>>w;){\n    v.clear();\n    string s;\n    getline(cin,s);\n    stringstream ss(s);\n    for(int r;ss>>r;){\n      v.push_back(r);\n    }\n    int i;\n    for(i=0;i<v.size();i++){\n      if(dfs(w-v[i],1<<i,v[i]))break;\n    }\n    cout<<((i<v.size())?\"OK\":\"NA\")<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,n) FOR(i,0,n)\n#define INF (1<<29)\n#define EPS (1e-8)\n\ndouble calc(int *tmp, int n) {\n\tdouble sum = tmp[0] + tmp[n - 1];\n\tFOR(i, 1, n) {\n\t\tsum += sqrt(pow(tmp[i] + tmp[i - 1], 2) - pow(abs(tmp[i] - tmp[i - 1]), 2));\n\t}\n\treturn sum;\n}\n\nint main() {\n\tstring str;\n\twhile (getline(cin, str)) {\n\t\tistringstream is(str);\n\t\tint n = count(str.c_str(), str.c_str() + str.size(), ' ');\n\t\tint w, r[10];\n\t\tis >> w;\n\t\tREP(i, n) is >> r[i];\n\t\t\n\t\tsort(r, r + n);\n\t\t\n\t\tdouble ans = INF;\n\t\tREP(i, 2) {\n\t\t\tint R = n - 1, L = 0;\n\t\t\tbool f = i & 1;\n\t\t\t\n\t\t\tint tmp[10];\n\t\t\tREP(j, n) {\n\t\t\t\tif (f) tmp[j] = r[R--];\n\t\t\t\telse tmp[j] = r[L++];\n\t\t\t\tf = !f;\n\t\t\t}\n\t\t\tans = min(ans, calc(tmp, n));\n\t\t}\n\t\tif ((double)w >= ans) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <vector>\n#include <cmath>\n#include <algorithm>\nusing namespace std;\ndouble calc(vector<int>&v, int s, int n, int p,int b,double w,double l)\n{\n  if(n == 0) return l + p;\n  double m = 300.0;\n  for(int i=0; i<s; i++){\n    if(!(b & (1 << i))){\n      double d;\n      if(p == 0) d = v[i];\n      else {\n\tdouble q = p - v[i];\n\tdouble r = p + v[i];\n\tdouble cos = sqrt(1.0 - q * q / (r * r));\n\td = r * cos;\n      }\n      if(l + d > w) continue;\n      d = calc(v,s,n-1,v[i],(b | (1 << i)),w,l + d);\n      m = min(m, d);\n    }\n  }\n  return m;\n}\nint main()\n{\n  string s;\n  while(getline(cin, s)){\n    istringstream in(s);\n    int n=0, i;\n    double w;\n    vector<int> v;\n    in >> w;\n    while(in >> i){\n      v.push_back(i);\n      n++;\n    }\n    double r = calc(v,n,n,0,0,w,0);\n    if(w < r) cout << \"NA\" << endl;\n    else cout << \"OK\" << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <sstream>\n#include <cstring>\n#include <fstream>\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nconst int MAX_N = 12+1;\nconst double INF = 1e+100;\ndouble dist[10+1][10+1]; // ツ板シツ径 a ツづ個ケツーツキツづ個陳心ツづ板シツ径 b ツづ個ケツーツキツづ個陳心ツづづ個仰猟猟」ツ。\ndouble d[MAX_N][MAX_N];\ndouble dp[1<<MAX_N][MAX_N];\nint n, w;\nint a[MAX_N];\n\n// ツケツーツキツ甘板づ個仰猟猟」ツづーツ仰づ淞づゥ\nint calc (void )\n{\n\tfor (int i = 3; i <= 10; i++ )\n\t\tfor (int j = 3; j <= 10; j++ )\n\t\t\tdist[i][j] = 2.0*sqrt ((double)i*j );\n}\n\n// ツ経ツ路ツづ個静堋堕アツづーツ仰づ淞づゥ\nvoid make (void )\n{\n\t// ツ渉可甘コツ可サ\n\trep (i, n+1 )\n\t\trep (j, n+1 )\n\t\t\t\td[i][j] = INF;\n\n\trep (i, n )\n\t\trep (j, n )\n\t\t\td[i][j] = dist[a[i]][a[j]];\n\n\trep (i, n ){\n\t\td[n][i] = a[i]; d[i][n] = a[i];\n\t} // end rep\n\tn++;\n}\n\n// bitDP\ndouble solve (){\n\n\t// ツ渉可甘コツ可サ\n\trep (S, 1<<n ){\n\t\tfill (dp[S], dp[S]+n, INF );\n\t} // end rep\n\n\tdp[(1<<n)-1][0] = 0;\n\tfor (int S = (1 << n ) - 2; S >= 0; S-- ){\n\t\trep (v, n ){\n\t\t\t rep (u, n ){\n\t\t\t\tif (!(S >> u & 1 ) ){\n\t\t\t\t\tdp[S][v] = min (dp[S][v], dp[S | 1 << u][u] + d[v][u] );\n\t\t\t\t} // end if\n\t\t\t} // end rep\n\t\t} // end rep\n\t} // end for\n\n\treturn dp[0][0];\n}\n\nint main()\n{\n\tcalc ();\n\tstring str = \"\";\n\n\twhile (getline (cin, str ) ){\n\t\tvector <int> cake; \n\t\tstringstream ss (str );\n\t\tss >> w;\n\t\tint i = 0, m;\n\t\twhile (ss >> m ){\n\t\t\t a[i++] = m;\n\t\t} // end while\n\t\tn = i;\n\t\tmake ();\n\t\tif ((double)w >= solve () ){\n\t\t\tprintf ( \"OK\\n\" );\n\t\t}else{\n\t\t\tprintf ( \"NA\\n\" );\n\t\t} // end if\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <algorithm>\n#include <vector>\nusing namespace std;\n\n#define BUFSIZE 65536\n\nchar buf[BUFSIZE];\n\ninline double base(double r, double x) {\n    return sqrt(r*r - x*x);\n}\n\ninline double calc(double r1, double r2) {\n    return base(r1+r2, r1-r2);\n}\n\nbool judge(int w, vector<int>& rs) {\n    const int size = rs.size();\n    for(int left=0; left<size; left++) {\n        for(int right=left+1; right<size; right++) {\n            vector<int> list;\n            for(int i=0; i<size; i++) if(i!=left && i!=right) list.push_back(i);\n            do {\n                double req = rs[right] + rs[left] + calc(rs[left], rs[list[0]]) + calc(rs[list[size-3]], rs[right]);\n                for(int i=1; i<size - 2; i++) {\n                    req += calc(rs[list[i-1]], rs[list[i]]);\n                }\n                if(req <= w) return true;\n            } while(next_permutation(list.begin(), list.end()));\n        }\n    }\n    return false;\n}\n\nint main(){\n  \n  while(cin.getline(buf, BUFSIZE)) {\n      istringstream iss(buf);\n      int w;\n      iss >> w;\n      vector<int> rs;\n      int r;\n      while(iss >> r) rs.push_back(r);\n      cout << (judge(w, rs) ? \"OK\" : \"NA\") << endl;\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <sstream>\n#include <cmath>\n#include <climits>\nusing namespace std;\n#define rep2(x,from,to) for(int x=(from);x<(to);++(x))\n#define rep(x,to) rep2(x,0,to)\ndouble dist[16][32] = {};\ndouble dp[1<<12][12];\nint main() {\n\trep(i,16) {\n\t\trep2(j,i,32) {\n\t\t\tdist[i][j] = sqrt(j*j-i*i);\n\t\t}\n\t}\n\tint len, tmp;\n\tstring s;\n\twhile(getline(cin, s)) {\n\t\tstringstream ss(s);\t\t\n\t\tvector<int> v;\n\t\tss >> len;\n\t\twhile(ss >> tmp) v.push_back(tmp);\n\t\tint n = v.size();\n\t\trep(i,1<<12) {\n\t\t\trep(j,12) {\n\t\t\t\tdp[i][j] = INT_MAX;\n\t\t\t}\n\t\t}\n\t\trep(i,n) {\n\t\t\tdp[1<<i][i] = v[i];\n\t\t}\n\t\trep(i,(1<<n)) {\n\t\t\trep(j,n) {\n\t\t\t\tif(!(i&(1<<j))) continue;\n\t\t\t\trep(k,n) {\n\t\t\t\t\tif(i&(1<<k)) continue;\n\t\t\t\t\tdp[i|1<<k][k] = min(dp[i|1<<k][k], dp[i][j]+dist[abs(v[k]-v[j])][v[k]+v[j]]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tbool f = 1;\n\t\trep(i,n) {\n\t\t\tif(dp[(1<<n)-1][i] + v[i] <= len) {\n\t\t\t\tcout << \"OK\" << endl;\n\t\t\t\tf = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(f) cout << \"NA\" << endl;\n\t}\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <vector>\n#include <algorithm>\n#include <map>\nusing namespace std;\n#define X first\n#define Y second\n\nmap<double,int> data;\npair<double,double> lc;\nvector<int> input;\n\nint boxSize;\nbool flag;\n\ndouble solve(double x,double a,double b){\n\treturn (2.0*x+sqrt(4*x*x-4*(x*x-4*a*b)) ) / 2.0;\n}\n\nvoid bt(int depth ){\n\tif(  depth == input.size()-1 ){\n\t\tif( lc.X + lc.Y<=boxSize){\n\t\t\tflag = true;\n\t\t}\n\t}\n\tif(flag || lc.X + lc.Y > boxSize)return;\n\t\n\tfor(map<double,int>::iterator it = data.begin();it != data.end();it++){\n\t\tif( (*it).second == 0 )continue;\n\t\t//if(solve(lc.X,lc.Y,(*it).first) > boxSize)continue;\n\t\t(*it).second--;\n\t\tpair<double,double> tmp = lc;\n\t\tlc = make_pair(solve(lc.X,lc.Y,(*it).first),(*it).first);\n\t\tbt(depth+1);\n\t\tlc = tmp;\n\t\t(*it).second++;\n\t}\n}\n\n\nint main(){\n\tint t;\n\tstring s;\n\twhile(getline(cin,s) && s != \"\"){\n\t\tflag = false;\n\t\tdata.clear();\n\t\tinput.clear();\n\t\tstringstream ss(s);\n\t\twhile(ss >> t)input.push_back(t);\n\t\t\n\t\tboxSize = input[0];\n\t\tfor(int i=1;i<input.size();i++){\n\t\t\tdata[input[i]]++;\n\t\t}\n\t\t\n\t\tfor(map<double,int>::iterator it = data.begin();it != data.end();it++){\n\t\t\t(*it).second--;\n\t\t\tlc = make_pair((*it).first,(*it).first);\n\t\t\tbt(1);\n\t\t\t(*it).second++;\n\t\t}\n\t\tcout << (flag?\"OK\":\"NA\") << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <functional>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n \nusing namespace std;\n \n#define REP(i,s,e) for(int i=(s); i<(int)(e); i++)\n#define rep(i,n) REP(i, 0, n)\n#define pb push_back\n#define mp make_pair\n#define all(r) (r).begin(),(r).end()\n#define rall(r) (r).rbegin(),(r).rend()\n#define fi first\n#define se second\n#define DBG(X) cout<<\" \"<<#X<<\" : \"<<X<<endl\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<ll> vl;\ntypedef pair<int, int> pii;\n\nconst int INF = 1e9;\nconst double EPS = 1e-8;\nconst int mod = 1e9 + 7;\nconst ll LINF = 1e18;\n\nstruct Input\n{\n\tint n;char c;char str[10010];string s;ll l;double d;\n\tint nextInt(){scanf(\"%d\", &n);return n;}\n\tll nextLong(){scanf(\"%lld\", &l);return l;}\n\tdouble nextDouble(){scanf(\"%lf\", &d);return d;}\n\tchar nextChar(){scanf(\"%c\", &c);return c;}\n\tstring next(){scanf(\"%s\", str);return string(str);}\n\tstring nextLine(){getline(cin, s);return s;}\n};\nInput in;\n\ndouble dp[(1<<12) + 10][12 + 10];\n\nvector<string> split(string s, char c = ' '){\n\tvector<string> ret;\n\tstringstream ss(s);\n\tstring t;\n\twhile(getline(ss, t, c)) ret.pb(t);\n\treturn ret;\n}\n\nint perseInt(string s){\n\tint ret = 0;\n\tfor(auto& c : s){\n\t\tret *= 10;\n\t\tret += c - '0';\n\t}\n\treturn ret;\n}\n\ndouble calc(int r1, int r2){\n\treturn sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2)) + r2 - r1;\n}\n\nint main(){\n\tstring s;\n\twhile(getline(cin, s)){\n\t\tauto u = split(s);\n\t\tint r = perseInt(u[0]);\n\t\tvector<int> v;\n\t\tfor(int i = 1; i < u.size(); i++) v.pb(perseInt(u[i]));\n\t\tint n = v.size();\n\t\tfor(int i = 1; i < 1<<n; i++){\n\t\t\tfor(int j = 0; j <= 12; j++) dp[i][j] = 1e18;\n\t\t}\n\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tdp[1<<i][i] = v[i] * 2;\n\t\t}\n\n\t\tfor(int i = 1; i < 1<< n; i++){\n\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\tif(i & (1<<j)) continue;\n\t\t\t\tint nxt = i | (1<<j);\n\t\t\t\tfor(int k = 0; k < n; k++) {\n\t\t\t\t\tif((i & (1<<k)) == 0) continue;\n\t\t\t\t\tdp[nxt][j] = min(dp[nxt][j], dp[i][k] + calc(v[k], v[j]));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tdouble ans = 1e18;\n\t\tint goal = (1<<n) -1;\n\t\tfor(int i = 0; i < n; i++) ans = min(ans, dp[goal][i]);\n\t\tcout<<(ans <= r ? \"OK\" : \"NA\")<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <iostream>\n#include <algorithm>\n#include <iomanip>\n#include <map>\n#include <fstream>\n#include <sstream>\n#include <math.h>\n#include <queue>\n#include <stack>\n#include <math.h>\n\n\nusing namespace std;\n\ndouble dp[1<<13][13];\nint n;\n\n\nint main(){\n\n    \n    \n    \n    \n\n    string input;\n    while(getline(cin, input)){\n        stringstream ss;\n        ss<<input;\n        double box;\n        ss>>box;\n        \n        double cake[12]={0};\n        n=0;\n        while(ss>>cake[n]){\n            n++;\n        }\n        \n        double v[13][13]={0};\n        for(int i=0; i<n; i++){\n            for(int j=0; j<n; j++){\n                if(i==j){\n                    v[i][j]=0;\n                    v[j][i]=v[i][j];\n                }else{\n                    double x = (cake[i]+cake[j])*(cake[i]+cake[j])-(cake[i]-cake[j])*(cake[i]-cake[j]);\n                    v[i+1][j+1]=sqrt((fabs(x)));\n                    //cout<<i<<\" \"<<j<<\" \"<<v[i][j]<<endl;\n                    v[j][i]=v[i][j];\n                }\n                \n            }\n        }\n        \n        for(int i=1; i<=n; i++){\n            v[0][i]=cake[i-1];\n            v[i][0]=cake[i-1];\n        }\n        \n        \n        n++;\n        //memset(dp, 999999.9999, sizeof(dp));\n        for(int i=0; i<(1<<13); i++){\n            for(int j=0; j<13; j++){\n                dp[i][j]=100000000;\n            }\n        }\n        \n        \n        dp[(1<<n) - 1][0] = 0;\n\n        \n        for(int i=(1<<n)-2; i>=0; i--){\n            for(int j=0; j<n; j++){\n                for(int k=0; k<n; k++){\n                    if(!((i >> k) & 1)){\n                        \n                        \n                        dp[i][j] = min(dp[i][j], dp[i | (1 << k)][k] + v[j][k]);\n                        \n                    }\n                }\n            }\n        }\n        \n        //cout<<dp[0][0]<<endl;\n        if(dp[0][0]<=box)cout<<\"OK\"<<endl;\n        else cout<<\"NA\"<<endl;\n\n        \n        \n        \n        \n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include <cmath>\n#include <bits/stdc++.h>\nusing namespace std;\n\nconst int LOOP = 1000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\nvoid Swap(int r[12],int L,int R){\n    int temp=r[L];\n    r[L]=r[R];\n    r[R]=temp;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t    int L=rand()%N;\n\t    int R=rand()%N;\n\t    Swap(r,L,R);\n\t    if(mi>=Evaluate(r)){\n            mi=Evaluate(r);\n            continue;\n\t    }\n\t    else if(Changes(cnt)){\n            mi=Evaluate(r);\n\t    }\n\t    else Swap(r,L,R);\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "# define _CRT_SECURE_NO_WARNINGS 1\n# include <iostream>\n# include <string>\n# include <bitset>\n# include <vector>\n# include <algorithm>\n# include <cstdlib>\n# include <cstdio>\n# include <cstring>\n# include <cstdlib>\n# include <iomanip>\n# include <queue>\n# include <sstream>\n# include <climits>\n# include <cmath>\n# include <list>\n# include <functional>\n# include <string>\n# include <ctime>\n# include <set>\n# include <map>\n# include <stack>\nusing namespace std;\n//# define M_PI 3.141592\n# define INF ((int)(1<<30))\n# define FOR(i,n) for(int i=0;i<(int)n;i++)\n# define FORI(i,k,n) for(int i=k;i<(int)n;i++)\n# define toRad 2.0*M_PI/360.0\n# define inin(x) int x;cin>>x;\n# define all(x) x.begin(),x.end()\n# define debug(x) cout<<#x<<\" :\"<<x<<endl;\n# define rep(i,n) for(int i=0;i<(int)n;i++)\n# define EPS 1e-12\n# define CHECK(i,a) FOR(i,a.size())cout<<#a<<\"[\"<<i<<\"] : \"<<a[i]<<endl; \n\nvector<double>a;\ndouble memo[1 << 12][13];\ndouble calc(int a1,int a2)\n{\n\tdouble t = a[a1] + a[a2];\n\tdouble s = a[a1] - a[a2];\n\treturn sqrt(t*t - s*s);\n}\n\n\n\ndouble dp(int bit,int s)\n{\n\tif (memo[bit][s]>=0)return memo[bit][s];\n\tdouble ans = 9999999999999.0;\n\tbool ok = true;\n\tfor (int i = 0; i < a.size(); i++)\n\t{\n\t\tif (!(bit & (1 << i)))\n\t\t{\n\t\t\tok = false;\n\t\t\tdouble x = (bit ? 0.0 : a[i]);\n\t\t\tans = min(ans, dp(bit | (1 << i), i) + calc(i, s)+x);\n\t\t}\n\t}\n\tif (ok)return a[s];\n\treturn memo[bit][s] = ans;\n}\nint main()\n{\n\tstring s;\n\twhile (getline(cin,s))\n\t{\n\t\tfor (auto &x : memo)for(auto &y:x)y= -1.0;\n\t\ta.clear();\n\t\tstringstream ss(s);\n\t\tdouble n;\n\t\tss >> n;\n\t\tdouble temp;\n\t\twhile (ss >> temp)\n\t\t{\n\t\t\ta.push_back(temp);\n\t\t}\n\t\tbool ok = false;\n\t\tdouble ans = 99999999999999999;\n\t\tfor (int i = 0; i < a.size(); i++)\n\t\t{\n\t\t\tans = min(ans, dp(1 << i, i)+a[i]);\n\t\t}\n\t\tok = (ans <= n);\n\t\tif (ok)cout << \"OK\" << endl;\n\t\telse cout << \"NA\" << endl;\n\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF 10000000\n\nint main(){\n  string str;\n  while(getline(cin,str)){\n    vector<int> vec;\n    stringstream ss(str);\n    int wid,n=0;\n    ss >> wid;\n    while(!ss.eof()){\n      int s;\n      ss >> s;\n      vec.push_back(s);\n      n++;\n    }\n    double dp[111][111];\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tdp[i][j] = INF;\n      }\n    }\n    for(int i=0;i<n;i++){\n      dp[(1<<n)-1-(1<<i)][i] = vec[i];\n    }\n    for(int i=(1<<n)-2;i>-1;i--){\n      for(int j=0;j<n;j++){\n\tif(!(i & (1<<j))){\n\t  for(int k=0;k<n;k++){\n\t    dp[i][j] = min(dp[i][j],dp[i | (1<<j)][k] + 2*sqrt(vec[j]*vec[k]));\n\t  }\n\t}\n      }\n    }\n    for(int i=0;i<(1<<n);i++){\n      for(int j=0;j<n;j++){\n\tcout << dp[i][j] << \"  \";\n      }\n      cout << endl;\n    }\n    double ans = INF;\n    for(int i=0;i<n;i++){\n      ans = min(ans,dp[0][i]+vec[i]);\n    }\n    cout << ans << endl;\n    if(ans <= wid) cout << \"OK\" << endl;\n    else cout << \"NG\" << endl;\n  }\n  //cout << (1<<3) << endl;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\n#include<algorithm>\n#include<cmath>\n#include<vector>\n#include<string>\n#include<bitset>\nusing namespace std;\n#define INF (1<<20)\nint r[15];\nint L;\nint N;\ndouble dp[(1<<14)][14];\nvector<string> ny;\nint bita;\ndouble GetLarge(int r1,int r2){\n  return sqrt((r1+r2)*(r1+r2)-abs(r1-r2)*abs(r1-r2))-r1+r2;\n}\ndouble solve(int no,int zen){\n  double ret=INF;\n  //  printf(\"%d\\n\",no);\n  //  printf(\"%lf %d %d\\n\",dp[no][zen],no,zen);\n  if(dp[no][zen]>0) return dp[no][zen];\n  if(no==bita){\n    return dp[no][zen]=(double)(r[zen]*2);\n  }\n  for(int i=0;i<N;i++){\n    if( (no & (1<<i)) != 0) continue;\n    double ad;\n    ad = GetLarge(r[i],r[zen]);\n    ret=min(ret,solve( (no|(1<<i)), i )+ad);\n  }\n  return dp[no][zen]=ret;\n}\nmain(){\n  char buf[256];\n  int co;\n  while(fgets(buf,sizeof(buf),stdin)!=NULL){\n    for(int i=0;i<(1<<13);i++){\n      for(int j=0;j<13;j++){\n\tdp[i][j]=-1.0f;\n      }\n    }\n    string str=buf;\n    co=0;\n    for(int i=0;i<(int)str.size();i++){\n      if(str[i]==' '){\n\tny.push_back(str.substr(co,i-co+1));\n\tco=i+1;\n      }\n    }\n    ny.push_back(str.substr(co,(int)str.size()-co));\n    sscanf(ny[0].c_str(),\"%d\",&L);\n    N=0;\n    for(int i=0;i<(int)ny.size()-1;i++){\n      N++;\n      sscanf(ny[i+1].c_str(),\"%d\",&r[i]);\n    }\n    bita = (1<<N)-1;\n    //  printf(\"%d %d\\n\",N,bita);\n    double ret = INF;\n    for(int i=0;i<N;i++){\n      ret=min(ret,solve((1<<i),i));\n      //  printf(\"%lf\\n\",ret);\n    }\n    if(ret <= (double)L)\n      printf(\"OK\\n\");\n    else\n      printf(\"NA\\n\");\n    ny.clear();\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <list>\n#include <cmath>\n#include <string>\n#include <sstream>\n#include <vector>\nusing namespace std;\n\n#define sqr(x) ((x) * (x))\n#define INF 10000000\n\ndouble dptable[1 << 13][13];\ndouble cost[13][13];\nint vertex;\nint width;\n\ndouble xdistance(double r1, double r2) {\n\tif(r1 == 0 || r2 == 0)\n\t\treturn max(r1, r2);\n\treturn sqrt(sqr(r1 + r2) - sqr(r1 - r2));\n}\n\nvoid pre(string str) {\n\tvector<int> radius;\n\tstringstream sstr(str);\n\tint tmp;\n\n\tradius.push_back(0);\n\tsstr >> width;\n\twhile(sstr >> tmp)\n\t\tradius.push_back(tmp);\n\tvertex = radius.size();\n\n\t/* cost */\n\tfor(int i = 0; i < radius.size(); i++) {\n\t\tfor(int j = 0; j < radius.size(); j++) {\n\t\t\tcost[i][j] = xdistance(radius[i], radius[j]);\n\t\t}\n\t\tcost[i][i] = 0;\n\t}\n\n\t/* dptable */\n\tfor(int i = 0; i < 1 << 13; i++) {\n\t\tfor(int j = 0; j < 13; j++) {\n\t\t\tdptable[i][j] = INF;\n\t\t}\n\t}\n\n\tdptable[(1 << vertex) - 1][0] = 0;\n}\n\ndouble solve(int S, int u) {\n\tfor(int i = 0; i < vertex; i++) {\n\t\tif(!(S & (1 << i))) {\n\t\t\tdptable[S][u] = min(dptable[S][u], solve(S | (1 << i), i) + cost[u][i]);\n\t\t}\n\t}\n\n\treturn dptable[S][u];\n}\n\nint main(void) {\n\tstring str;\n\n\twhile(getline(cin, str)) {\n\t\tpre(str);\n\t\tsolve(0,0);\n\n\t\tif(width >= dptable[0][0])\n\t\t\tcout << \"OK\" << endl;\n\t\telse\n\t\t\tcout << \"NA\" << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <sstream>\n#include <algorithm>\nusing namespace std;\n\n#define EPS 1e-8\n\ndouble between(double r1, double r2) {\n    return sqrt((r1+r2)*(r1+r2)-(r1-r2)*(r1-r2));\n}\n\nbool solve(int l, vector<int> rs) {\n    double total_length = *rs.begin() + *(rs.end()-1);\n    for (int i = 1; i < rs.size(); i++) {\n        total_length += between(rs[i-1], rs[i]);\n//        cout << between(rs[i-1], rs[i]) << endl;;\n    }\n//    cout << total_length << endl;\n    if ( total_length < l + EPS ) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\nint main() {\n    int l;\n    vector<int> rs;\n    string s;\n    while (getline(cin, s)) {\n        rs.clear();\n        istringstream iss(s);\n        iss >> l;\n        int r;\n        while (iss >> r) {\n            rs.push_back(r);\n        }\n        bool possible = false;\n        sort(rs.begin(), rs.end());\n        do {\n            if (solve(l, rs)) possible = true;\n        } while (next_permutation(rs.begin(), rs.end()));\n        if (possible) {\n            cout << \"OK\" << endl;\n        } else {\n            cout << \"NA\" << endl;\n        }\n        s.clear();\n    }\n    return 0;\n}\n\n        "
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <string>\n#include <sstream>\n#include <iostream>\n#include<time>\n#include<cstdlib>\nusing namespace std;\n\nconst int LOOP = 10000; //??????????????°\nconst double EPS = 1e-6; //??????????????¨(?°??????????????????????)\nint L;\nint N; //???????????±???????????°\n\n//???????????±????????????????????????????????¨?????¨???????¨????????¨??????????\ndouble Evaluate(int r[12]) {\n\tdouble val = r[0] + r[N-1];\n\tfor (int i = 0; i < N - 1; i++)\n\t{\n\t\tint a = abs(r[i] - r[i+1]), c = r[i] + r[i+1];\n\t\tval += sqrt(c*c - a*a);\n\t}\n\treturn val;\n}\n\n//?????¨?????????????????°???????????¨??????????????????????§???????????±???????\n//(????§?????????????true)\nbool Changes(int cnt) {\n\treturn cnt < rand()%LOOP;\n}\n\n//?????????????????????????????¢??°\n//?????????????°??????????????¨?????????????\n//int r[12] : ???????????±?????????0??????N-1???????????????????????????????????????????????????????´???????\ndouble Solve(int r[12]) {\n\tdouble score = Evaluate(r); //?????¨?????¶???r[]????¨???????????´????????????°\n\tdouble mi = score; //???????????§?????¶???????¨???????????°???????????´????????????°\n\tfor (int cnt = 0; cnt < LOOP; cnt++)\n\t{\n\t\tswap(r[rand()%N],r[rand()%N]);\n\t\tdouble evaluate = Evaluate(r);\n\t\tif(evaluate <= mi){\n\t\t\tmi = evaluate;\n\t\t}else{\n\t\t\tif(Changes(cnt)){\n\t\t\t\tmi = evaluate;\n\t\t\t}\n\t\t}\n\n\t}\n\treturn mi; //????°?????????????\n}\n\n//??\\?????¢????????????????????¢????????£????????§???????????????\nint main() {\n\tsrand(time(NULL));\n\twhile (cin >> L)\n\t{\n\t\tN = 0;\n\t\tint r[12];\n\t\tstring S;\n\t\tgetline(cin, S);\n\t\tstringstream SS(S);\n\t\twhile (!SS.eof()) SS >> r[N++];\n\n\t\tdouble ans;\n\t\tif (N == 1) ans = r[0]*2;\n\t\telse ans = Solve(r);\n\n\t\tif (L - ans + EPS > 0) puts(\"OK\");\n\t\telse puts(\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>), (<*>))\nimport Control.Monad\nimport Data.List\nimport Test.HUnit\n\nmain :: IO ()\n-- main = runTestTT (TestList tests) >> return ()\nmain = do\n  xs <- getc $ solve . split toDbl\n  mapM_ putStrLn xs\n\nsolve :: [Double] -> String\nsolve (x:xs)\n  | (sum $ zipWith dist mxs (tail mxs)) + head mxs + last mxs > x = \"NA\"\n  | otherwise = \"OK\"\n  where\n    sxs = sortBy (\\a b -> b `compare` a) xs\n    (as,bs) = splitAt (length sxs `div` 2) sxs\n    mxs = merge as (reverse bs)\n    \nmerge :: [Double] -> [Double] -> [Double]\nmerge [] ys = ys\nmerge (x:xs) (y:ys) = y:x:merge xs ys\n\ndist :: Double -> Double -> Double\ndist r1 r2 = sqrt ((r1 + r2) ^ 2 - (abs (r1 - r2)) ^ 2)\n\ntoDbl :: String -> Double\ntoDbl s = read s\n\nsplit :: (String -> a) -> String -> [a]\nsplit f = map f . words\n\ngetc :: (String -> a) -> IO [a]\ngetc f = map f . lines <$> getContents"
  },
  {
    "language": "Haskell",
    "code": "main = getLine >>= print\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\nint len;\nint cake[12];\ndouble dp[1 << 12][12], cost[12][12];\nint n;\nint goal;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == goal){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + cost[now][i]);\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j, k;\n    double res;\n    \n    while (scanf(\"%d\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%d\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        res = INF;\n        \n        for (i = 0; i < n; i++){\n            for (j = 0; j < n; j++){\n                cost[i][j] = sqrt(SQ(cake[i] + cake[j]) - SQ(cake[i] - cake[j]));\n            }\n        }\n        \n        for (k = 0; k < n; k++){\n            for (i = 0; i < (1 << n); i++){\n                for (j = 0; j < n; j++){\n                    dp[i][j] = -1;\n                }\n            }\n            goal = k;\n            res = min(res, tsp(0, k));\n        }\n        \n        if (res <= len){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include<math.h>\nn,r[12],c;\ndouble d[12][16],M[12][4096];\ndouble S(b,l,i){\n\tdouble*m=M[l]+b,s,t;\n\tfor((s=*m)?i=0:!b?s=r[i=0,l]:(i=n,s=1e3);i;)\n\t\tb&1<<--i&&(t=d[l][i]+S(b^1<<i,i),s=t<s?t:s);\n\treturn*m=s;\n}\nmain(L,i,j){\n\tdouble s,t;\n\tfor(;~scanf(\"%d\",&L);puts(s>L?\"NA \":\"OK \")){\n\t\tfor(n=0;scanf(\"%d%c\",r+n++,&c),c-10;);\n\t\tfor(i=n;i--;)\n\t\t\tfor(j=n;j--;)\n\t\t\t\td[i][j]=2*sqrt(r[i]*r[j]);\n\t\tmemset(M,0,393216);\n\t\ts=1e3;\n\t\tfor(i=n;i--;s=t<s?t:s)\n\t\t\tt=r[i]+S((1<<n)-1-(1<<i),i);\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r;\nint D[N],n;\ndouble dfs(int p,int f){\n\tif(M[p][f]<0){\n\t\tint i=0;\n\t\tM[p][f]=0;\n\t\tfor(;i<n;i++){\n\t\t\tif(f&1<<i)continue;\n\t\t\tM[p][f]=max(M[p][f],dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]));\n\t\t}\n\t}\n\treturn M[p][f];\n}\nmain(){\n\tint L,l,i,j,d;\n\tstring s;\n\tfor(;~scanf(\"%d\",&L);){\n\t\td=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\t\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\t\tfor(r=i=0;i<n;i++)r=max(r,dfs(i,1<<i));\n\t\tputs(d-r<=L?\"OK\":\"NA\");\n\t}\nexit(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint compare_int(const void *a, const void *b){\n\treturn *(int*)a - *(int*)b;\n}\n\nint main(void) {\n\tint n,dp,p;\n\tdouble box,len;\n\tint r[12];\n\tchar *tmp,str[512];\n\t\n\twhile(gets(str) != NULL){\n\t\tbox = atoi(strtok(str,\" \\n\"))*1.0;\n\t\tn = 0;\n\t\twhile((tmp = strtok(NULL,\" \\n\")) != NULL){\n\t\t\tr[n++] = atoi(tmp);\n\t\t}\n\t\tqsort(r,n,sizeof(int),compare_int);\n\t\t\n\t\tlen = r[0]+r[n/2];\n\t\tp = 0;\n\t\tdp = n-1;\n\t\tdo{\n\t\t\tlen += 2*sqrt(r[p]*r[p+dp]*1.0);\n\t\t\tp += dp;\n\t\t\tdp = -(dp/abs(dp))*(abs(dp)-1);\n\t\t}while(dp);\n\t\t\n\t\tif(box-len >= 0.0){\n\t\t\tprintf(\"OK\\n\");\n\t\t}else{\n\t\t\tprintf(\"NA\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\nint len;\nint cake[12];\ndouble dp[1 << 12][12], cost[12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + cost[now][i]);\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    \n    while (scanf(\"%d\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%d\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        for (i = 0; i < n; i++){\n            for (j = 0; j < n; j++){\n                cost[i][j] = sqrt(SQ(cake[i] + cake[j]) - SQ(cake[i] - cake[j]));\n            }\n        }\n        \n        for (i = 0; i < (1 << n); i++){\n            for (j = 0; j < n; j++){\n                dp[i][j] = -1;\n            }\n        }\n        \n        if (tsp(0, 0) <= (double)len){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "clude <stdio.h>          // printf()\n#include <stdlib.h>         // exit(), free(), strtol()\n#include <stdbool.h>\n#include <errno.h>          // errno\n#include <error.h>          // error()\n\n#define MAX_N 12\n\nint lineno;\nchar *linebuff = NULL;\nsize_t linebuffsize = 0;\n\nint r[MAX_N];\n\nvoid\ncleanup(int ecode)\n{\n\tif (linebuff)\n\t{\n\t\tfree(linebuff);\n\t\tlinebuff = NULL;\n\t\tlinebuffsize = 0;\n\t}\n\n\texit(ecode);\n}\n\nbool\nope_line()\n{\n\terrno = 0;\n\tif(getline(&linebuff, &linebuffsize, stdin) == -1) // read line\n\t{\n\t\tif(errno == 0)  // EOF?\n\t\t\treturn false;\n\n\t\terror(0, errno, \"Can't read line\");\n\t\tcleanup(1);\n\t}\n\n\tlineno++;\n//\tconst char *s = linebuff;\n\treturn true;\n}\n\nint\nmain(int argc, char **argv)\n{\n\tlineno = 0;\n\twhile (true) // process for each line\n\t{\n\t\tif (!ope_line())\n\t\t\tbreak;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<math.h>\n#define min(x,y)((x)<(y)?(x):(y))\nn,r[12];\ndouble d[12][12],smemo[12][1<<12];\ndouble shortest(restbits,last){\n\tint i;\n\tdouble s,t;\n\tif(restbits==0)\n\t\treturn r[last];\n\tif(smemo[last][restbits])\n\t\treturn smemo[last][restbits];\n\ts=1e3;\n\tfor(i=0;i<n;i++){\n\t\tif(restbits&(1<<i)){\n\t\t\tt=d[last][i]+shortest(restbits-(1<<i),i);\n\t\t\ts=min(s,t);\n\t\t}\n\t}\n\treturn smemo[last][restbits]=s;\n}\nmain(){\n\tint L,i,j;\n\tchar c;\n\tdouble s,t;\n\tfor(;~scanf(\"%d\",&L);){\n\t\tfor(n=0;scanf(\"%d%c\",r+n++,&c),c!='\\n';);\n\t\tfor(i=0;i<n;i++)\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t\td[i][j]=2*sqrt(r[i]*r[j]);\n\t\tmemset(smemo,0,sizeof(smemo));\n\t\ts=1e3;\n\t\tfor(i=0;i<n;i++){\n\t\t\tt=r[i]+shortest((1<<n)-1-(1<<i),i);\n\t\t\ts=min(s,t);\n\t\t}\n\t\tputs(s<=L?\"OK \":\"NA \");\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define N_MAX 12\n#define EPS (1e-7)\n\nint width;\nint n;\nint r[N_MAX];\n\nchar visited[N_MAX][1<<N_MAX];\n\nint judge(int prev,int used,double cur_width) {\n\tint i;\n\tif(cur_width>width+EPS)return 0;\n\tif(used==(1<<n)-1) {\n\t\tcur_width+=r[prev];\n\t\treturn cur_width<width+EPS;\n\t}\n\tfor(i=0;i<n;i++) {\n\t\tif((used&(1<<i))==0) {\n\t\t\t/* sqrt((r1+r2)^2 - (r1-r2)^2) */\n\t\t\tdouble delta=2.0*sqrt(r[prev]*r[i]);\n\t\t\tif(judge(i,used|(1<<i),cur_width+delta))return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(void) {\n\tchar input_buffer[1024];\n\twhile(fgets(input_buffer,sizeof(input_buffer),stdin)!=NULL) {\n\t\tint cur_num=0;\n\t\tint cur_index=-1;\n\t\tint i;\n\t\tint ok=0;\n\t\tfor(i=0;;i++) {\n\t\t\tif('0'<=input_buffer[i] && input_buffer[i]<='9') {\n\t\t\t\tcur_num=cur_num*10+input_buffer[i]-'0';\n\t\t\t} else {\n\t\t\t\tif(cur_num>0) {\n\t\t\t\t\tif(cur_index<0)width=cur_num; else r[cur_index]=cur_num;\n\t\t\t\t\tcur_index++;\n\t\t\t\t}\n\t\t\t\tcur_num=0;\n\t\t\t\tif(input_buffer[i]=='\\0') {\n\t\t\t\t\tn=cur_index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmemset(visited,0,sizeof(visited));\n\t\tfor(i=0;i<n;i++) {\n\t\t\tok=ok || judge(i,1<<i,(double)r[i]);\n\t\t}\n\t\tputs(ok?\"OK\":\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++){\n\t\tif(f&1<<i)continue;\n\t\tif(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t)M[p][f]=t;\n\t}\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);){\n\td=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n\tputs(d-r<=l?\"OK\":\"NA\");\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint compare_int(const void *a, const void *b){\n\treturn *(int*)a - *(int*)b;\n}\n\nint main(void) {\n\tint n,dp,p;\n\tdouble box,len;\n\tint r[12];\n\tchar *tmp,str[128];\n\t\n\twhile(gets(str) != NULL){\n\t\tbox = atoi(strtok(str,\" \\r\\n\"))*1.0;\n\t\tn = 0;\n\t\twhile((tmp = strtok(NULL,\" \\r\\n\")) != NULL){\n\t\t\tr[n++] = atoi(tmp);\n\t\t}\n\t\tqsort(r,n,sizeof(int),compare_int);\n\t\t\n\t\tlen = r[0]+r[n/2];\n\t\tif(n != 1){\n\t\t\tp = 0;\n\t\t\tdp = n-1;\n\t\t\tdo{\n\t\t\t\tlen += 2*sqrt(r[p]*r[p+dp]*1.0);\n\t\t\t\tp += dp;\n\t\t\t\tdp = -(dp/abs(dp))*(abs(dp)-1);\n\t\t\t}while(dp);\n\t\t}\n\t\t\n\t\tif(box-len >= 0.0){\n\t\t\tprintf(\"OK\\n\");\n\t\t}else{\n\t\t\tprintf(\"NA\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r<=l?\"OK\":\"NA\")){\nfor(d=n=0;getchar()!='\\n';d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAX_LEN 256\n#define MAX_NUM 12\n#define MAX_SQRT 100\n\nvoid init_map(int num);\nvoid init_sqrt(void);\n\ndouble getmin(int pat,int r,int ad,int num);\ndouble getmin2(int pat,int ad,int num);\ndouble getmin3(int num);\n\nint cake[MAX_NUM]; /* P[LTCY */\ndouble min; /* ÅKð */\n\ndouble sq[MAX_SQRT+1];/* [gvZÊ */\n\ndouble map[1<<MAX_NUM][MAX_NUM];\n\nint main(){\n\tchar buf[MAX_LEN];\n\tint num; /* P[LÂ */\n\tint width; /*  Ì·³ */\n\tint offset; /* obt@àùÇÊu */\n\tint oftmp;\n\t\n\tinit_sqrt();\n\t\n\twhile(fgets(buf,MAX_LEN,stdin)!=NULL){\n\t\t/* Âæ¾ */\n\t\tsscanf(buf,\"%d%n\",&width,&oftmp);\n\t\toffset = oftmp;\n\t\t/* TCYæ¾ */\n\t\tnum = 0;\n\t\twhile(sscanf(buf+offset,\"%d%n\",&cake[num],&oftmp) > 0){\n\t\t\toffset+=oftmp;\n\t\t\tnum++;\n\t\t}\n\t\t\n\t\t/* èvZ */\n\t\tinit_map(num);\n\t\t\n\t\tmin = getmin3(num);\n\t\t//printf(\"%d %.5f\\n\",width,min);\n\t\tprintf(min<=width?\"OK\\n\":\"NA\\n\");\n\t}\n\treturn 0;\n}\n\nvoid init_sqrt(void){\n\tint i;\n\tfor(i=0;i<MAX_SQRT+1;i++){\n\t\tsq[i] = 2*sqrt(i);\n\t}\n}\n\nvoid init_map(int num){\n\tint i,j;\n\tfor(i=0;i<(1<<num);i++){\n\t\tfor(j=0;j<num;j++){\n\t\t\tmap[i][j]=0;\n\t\t}\n\t}\n\tfor(i=0;i<num;i++){\n\t\tmap[1<<i][i] = 2*cake[i];\n\t}\n}\n\ndouble getmin(int pat,int r,int ad,int num){\n\tdouble min; /* ¡ñßéÅ¬lißèlj */\n\tdouble premin; /* patÆrÅÌÅ¬l */\n\tdouble premintmp;\n\tint i,bit;\n\tint prepat;/* pat©çrð²¢½p^[ */\n\t\n\tpremin = map[pat][r];\n\tif(premin==0){\n\t\tpremin = 99999;\n\t\tprepat = pat - (1<<r);\n\t\tfor(i=0;i<num;i++){\n\t\t\tbit = 1<<i;\n\t\t\tif((bit&prepat)!=0){\n\t\t\t\tpremintmp = getmin(prepat,i,r,num);\n\t\t\t\tif(premintmp<premin){\n\t\t\t\t\tpremin=premintmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmap[pat][r] = premin;\n\t}\n\tpat += (1<<ad);\n\tmin = premin - cake[r] + sq[cake[r]*cake[ad]] + cake[ad];\n\tmap[pat][ad] = min;\n\treturn min;\n}\n\ndouble getmin2(int pat,int ad,int num){\n\tint i,bit;\n\tdouble min,ret;\n\tmin = 99999;\n\tfor(i=0;i<num;i++){\n\t\tbit = 1<<i;\n\t\tif((bit&pat)!=0){\n\t\t\tret = getmin(pat,i,ad,num);\n\t\t\tif(ret<min)min=ret;\n\t\t}\n\t}\n\treturn min;\n}\n\ndouble getmin3(int num){\n\tint i,bit,pat;\n\tdouble min,ret;\n\tmin = 99999;\n\tpat = (1<<num)-1;\n\tfor(i=0;i<num;i++){\n\t\tbit = 1<<i;\n\t\tret = getmin2(pat-bit,i,num);\n\t\tif(ret<min)min=ret;\n\t}\n\treturn min;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\n#define N 12\n#define MAX(A,B) \\\n  ( (B) > (A) ? (B) : (A) )\n\n/** メモ化用テーブル */\ndouble k_operafan[ N ][ 1 << N ];\n\n/** 箱のサイズ */\nint l;\n/** 入力の個数 */\nint n;\n/** 入力の内容 */\nint d[ N ];\n\n/** 与えられたケーキで構成できる最大の重なりの長さを求める */\ndouble\ndpFSA (\n  /** 前方に存在するケーキ番号 */\n  int cake,\n  /** 既に使用したケーキのビット集合 */\n  size_t st\n  )\n{\n  int i;\n  \n  if ( k_operafan[ cake ][ st ] >= 0. ) ;\n  else\n  {\n    /* 与えられたケーキで構成できる総ての組み合わせを調べる */\n    k_operafan[ cake ][ st ] = 0.;\n    for ( i = 0; i < n; ++i )\n    {\n      /* 既に使用されているならケーキ[ i ] は使えない */\n      if ( st & ( 1 << i ) )\n        continue ;\n\n      /* 2 つの半径r1, r2 のケーキの中点間の距離 => 2 * sqrt ( r1 * r2 ) */\n      k_operafan[ cake ][ st ]\n        = MAX ( k_operafan[ cake ][ st ]\n              , dpFSA ( i, st | ( 1 << i ) )\n              + ( d[ cake ] + d[ i ] - sqrt ( d[ cake ] * d[ i ] ) * 2. ) );\n    }\n  }\n\n  return ( k_operafan[ cake ][ st ] );\n}\n\nint\nmain (\n  int   argc,\n  char *argv[ ]\n  )\n{\n  int i, j;\n\n  for ( ; ; )\n  {\n    char s[ BUFSIZ ], *p;\n    double res;\n    int len;\n\n    /* 標準入力から1 行読み込み */\n    if ( fgets ( s, BUFSIZ, stdin ) == NULL )\n      break ;\n\n    /* 箱のサイズは先頭トークン */\n    l = atoi ( strtok ( s, \" \\r\\n\" ) );\n\n    /* 以降のトークンはそれぞれロールケーキの半径 */\n    n = 0;\n    for ( ; ; )\n    {\n      p = strtok ( NULL, \" \\r\\n\" );\n      if ( p == NULL )\n        break ;\n\n      d[ n++ ] = atoi ( p );\n    }\n\n    /* メモ化テーブルを初期化してから探索 */\n    for ( i = 0; i < N; ++i )\n    for ( j = 0; j < ( 1 << N ); ++j )\n      k_operafan[ i ][ j ] = -1.;\n    res = 0.;\n    for ( i = 0; i < n; ++i )\n      res = MAX( res, dpFSA ( i, 1 << i ) );\n\n    /* 結果からケーキの並びの最小の長さを求めて判定 */\n    len = 0;\n    for ( i = 0; i < n; ++i )\n      len += d[ i ] * 2;\n    res = len - res;\n    puts ( res <= l ? \"OK\" : \"NA\" );\n  }\n\n  return ( EXIT_SUCCESS );\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++){\n\t\tif(f&1<<i)continue;\n\t\tif(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t)M[p][f]=t;\n\t}\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);){\n\td=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n\tputs(d-r<l+.1?\"OK\":\"NA\");\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r<=l?\"OK\":\"NA\")){\n\tfor(d=n=0;getchar()!='\\n';d+=D[n++]*2)scanf(\"%d\",D+n);\n\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include<math.h>\n#define min(x,y)((x)<(y)?(x):(y))\nn,r[12];\ndouble d[12][12],smemo[1<<12][12];\ndouble shortest(restbits,last){\n\tint i;\n\tdouble s,t;\n\tif(restbits==0)\n\t\treturn r[last];\n\tif(smemo[restbits][last])\n\t\treturn smemo[restbits][last];\n\ts=1e3;\n\tfor(i=0;i<n;i++){\n\t\tif(restbits&(1<<i)){\n\t\t\tt=d[last][i]+shortest(restbits-(1<<i),i);\n\t\t\ts=min(s,t);\n\t\t}\n\t}\n\treturn smemo[restbits][last]=s;\n}\nmain(){\n\tint L,i,j;\n\tchar c;\n\tdouble s,t;\n\tfor(;~scanf(\"%d\",&L);){\n\t\tfor(n=0;scanf(\"%d%c\",r+n++,&c),c!='\\n';);\n\t\tfor(i=0;i<n;i++)\n\t\t\tfor(j=0;j<n;j++)\n\t\t\t\td[i][j]=2*sqrt(r[i]*r[j]);\n\t\tmemset(smemo,0,sizeof(smemo));\n\t\ts=1e3;\n\t\tfor(i=0;i<n;i++){\n\t\t\tt=r[i]+shortest((1<<n)-1-(1<<i),i);\n\t\t\ts=min(s,t);\n\t\t}\n\t\tputs(s<=L?\"OK\":\"NA\");\n\t}\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\ndouble len;\ndouble cake[12];\ndouble dp[1 << 12][12], cost[12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + cost[now][i]);\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    \n    while (scanf(\"%lf\", &len) != EOF){\n        getchar();\n        n = 0;\n        memset(cake, 0, sizeof(cake));\n        while (1){\n            scanf(\"%lf\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        for (i = 0; i < n; i++){\n            for (j = 0; j < n; j++){\n                cost[i][j] = sqrt(SQ(cake[i] + cake[j]) - SQ(cake[i] - cake[j]));\n            }\n        }\n        \n        for (i = 0; i < (1 << n); i++){\n            for (j = 0; j < n; j++){\n                dp[i][j] = -1;\n            }\n        }\n        \n        if (tsp(0, 0) <= len){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r>l?\"NA\":\"OK\")){\nfor(d=n=0;getchar()-10;d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;i++)t=dfs(i++,1<<i),r=r>t?r:t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "// AOJ 0120: Patisserie\n// 2017.9.28 bal4u@uu\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>\n#include <math.h>\n\n#define EQ(a,b) (fabs(a-b)<= 1e-7)\n\nint r[13];\nchar buf[202], *p;\ndouble d[13][13];\t\t\t\t\t// ???????????±???????????????????°´????????¢\ndouble dp[13][4100];\t\t\t\t// ?°´????????¢, ??´?????????????????±??????????±\\??´?????????\n\nint main()\n{\n\tint w, n, i, j, k, t, s;\n\tint lim;\n\tdouble x;\n\n\tfor (i = 3; i <= 10; i++) for (j = i; j <= 10; j++)\n\t\td[i][j] = d[j][i] = 2.0 * sqrt(i * j);\n\n\twhile (fgets(p = buf, 200, stdin) != NULL) {\n\t\ts = 0, n = -1;\n\t\twhile (*p) {\n\t\t\twhile (isspace(*p)) p++;\n\t\t\tif (isdigit(*p)) {\n\t\t\t\tif (n < 0) w = atoi(p);\n\t\t\t\telse       t = atoi(p), r[n] = t, s += t;\n\t\t\t\tn++;\n\t\t\t\twhile (isdigit(*p)) p++;\n\t\t\t}\n\t\t}\n\t\tif (2 * s <= w) { puts(\"OK\"); continue; }\n\n\t\tmemset(dp, 0, sizeof(dp));\n\t\tfor (i = 0; i < n; i++)\tdp[i][1<<i] = r[i];\n\n\t\tlim = 1 << n;\n\t\tfor (k = 0; k < lim; k++) {\n\t\t\tfor (i = 0; i < n; i++)\t{\t\t// ??????????????±??????\n\t\t\t\tfor (j = 0; j < n; j++) {\t// ??´????????±??????\n\t\t\t\t\tif (dp[j][k] == 0) continue;\n\t\t\t\t\telse {\n\t\t\t\t\t\tint ii;\n\t\t\t\t\t\tx = dp[j][k] + d[r[i]][r[j]];\n\t\t\t\t\t\tii = k | (1 << i);\n\t\t\t\t\t\tif (dp[i][ii] == 0 || x < dp[i][ii]) dp[i][ii] = x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (x = 10000, i = 0; i < n; i++) {\n\t\t\tif (dp[i][lim-1] == 0) continue;\n\t\t\tdp[i][lim-1] += r[i];\n\t\t\tif (dp[i][lim-1] < x) x = dp[i][lim-1];\n\t\t}\n\t\tputs(EQ(x, w) || x <= w ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\ndouble len;\ndouble cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + sqrt(SQ(cake[i] + cake[now]) - SQ(cake[i] - cake[now])));\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    \n    while (scanf(\"%lf\", &len) != EOF){\n        getchar();\n        n = 0;\n        memset(cake, 0, sizeof(cake));\n        while (1){\n            scanf(\"%lf\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        for (i = 0; i < (1 << 12); i++){\n            for (j = 0; j < 12; j++){\n                dp[i][j] = -1;\n            }\n        }\n        \n        if (tsp(0, 0) <= len){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAX_LEN 20\n#define MAX_NUM 12\n#define MAX_SQRT 100\n\n#define INT(x) ((int)(x+0.9999999999999999))\n\n/* http://www5.airnet.ne.jp/tomy/cpro/pe1.htm */\nvoid showperm(int p[], int n);\t/* ±Ì[`ÅeñÉÎ·éðs¤ */\nvoid genperm1(int p[], int n);\t/* ¬ñ¶¬[`C«®ÅÍÈ¢\t*/\n\nvoid init_sqrt(void);\n\n\nint cake[MAX_NUM]; /* P[LTCY */\ndouble min; /* ÅKð */\n\ndouble sq[MAX_SQRT+1];/* [gvZÊ */\n\nint main(){\n\tchar buf[MAX_LEN];\n\tint num; /* P[LÂ */\n\tint width; /*  Ì·³ */\n\tint offset; /* obt@àùÇÊu */\n\tint oftmp;\n\tint p[MAX_NUM];/* ñpobt@ */\n\t\n\tinit_sqrt();\n\t\n\twhile(fgets(buf,MAX_LEN,stdin)!=NULL){\n\t\t/* Âæ¾ */\n\t\tsscanf(buf,\"%d%n\",&width,&oftmp);\n\t\toffset = oftmp;\n\t\t/* TCYæ¾ */\n\t\tnum = 0;\n\t\twhile(sscanf(buf+offset,\"%d%n\",&cake[num],&oftmp) > 0){\n\t\t\toffset+=oftmp;\n\t\t\tnum++;\n\t\t}\n\t\t\n\t\t/* èvZ */\n\t\t\n\t\t//printf(\"wid: %d\\n\",width);\n\t\t//{int i;for(i=0;i<num;i++)printf(\"c%d: %d\\n\",i,cake[i]);}\n\t\tmin = width+1;\n\t\tgenperm1(p,num);\n\t\tprintf(\"%d %d\\n\",INT(min),width);\n\t\tprintf(INT(min)<=width?\"OK\\n\":\"NG\\n\");\n\t}\n\treturn 0;\n}\n\nvoid init_sqrt(void){\n\tint i;\n\tfor(i=0;i<MAX_SQRT+1;i++){\n\t\tsq[i] = 2*sqrt(i);\n\t\t//printf(\"%3d %.5f\\n\",i,sq[i]);\n\t}\n}\n\nvoid showperm(int p[], int n){\n\tdouble sum;\n\tint i;\n\tsum = cake[p[0]-1];\n\t//printf(\"%.5f\\n\",(double)cake[p[0]-1]);\n\tfor(i=0;i<n-1;i++){\n\t\t//printf(\"%.5f\\n\",sq[cake[p[i]-1]*cake[p[i+1]-1]]);\n\t\tsum += sq[cake[p[i]-1]*cake[p[i+1]-1]];\n\t}\n\tsum += cake[p[n-1]-1];\n\t//printf(\"%.5f\\n\",(double)cake[p[n-1]-1]);\n\tif(min>sum)min = sum;\n\t//for(i=0;i<n;i++)printf(\"%2d \",cake[p[i]-1]);\n\t//printf(\":%.5f\\n\",sum);\n}\n\n/* ñ¶¬ASY */\n/* http://www5.airnet.ne.jp/tomy/cpro/pe1.htm */\nvoid genperm1(int p[], int n)\n{\n\tint *c, *pc, *q;\n\tint k, t;\n\n\tc = (int *)malloc(sizeof(int) * n);\n\tif(c == NULL)\n\t{\n\t\tfprintf(stderr, \"Error : out of memory  in genperm1()\\n\");\n\t\texit(-1);\n\t}\n\n\tfor(k = 1, q = p, pc = c; k <= n; )\t*q++ = *pc++ = k++;\n\tk = 1;\n\tpc = c;\n\tdo\n\t{\n\t\tt = *(p + k);\n\t\t*(p + k) = *(q = p + ((k & 1)? *pc: 0));\n\t\t*q = t;\n\t\tshowperm(p, n);\n\t\tk = 1;\n\t\tpc = c;\n\t\twhile(*pc == 0)\t*pc++ = k++;\n\t\t(*pc)--;\n\t} while(k < n);\n\tfree((char *)c);\n}"
  },
  {
    "language": "C",
    "code": "#include<math.h>\n#define min(x,y)((x)<(y)?(x):(y))\nn,r[12];double d[12][12],smemo[1<<12][12];double shortest(restbits,last){int i;double s,t;if(restbits==0)return r[last];if(smemo[restbits][last])return smemo[restbits][last];s=1e3;for(i=0;i<n;i++){if(restbits&(1<<i)){t=d[last][i]+shortest(restbits-(1<<i),i);s=min(s,t);}}return smemo[restbits][last]=s;}main(){int L,i,j;char c;double s,t;for(;~scanf(\"%d\",&L);){for(n=0;scanf(\"%d%c\",r+n++,&c),c!='\\n';);for(i=0;i<n;i++)for(j=0;j<n;j++)d[i][j]=2*sqrt(r[i]*r[j]);memset(smemo,0,sizeof(smemo));s=1e3;for(i=0;i<n;i++){t=r[i]+shortest((1<<n)-1-(1<<i),i);s=min(s,t);}puts(s<=L?\"OK\":\"NA\");}}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\nint len;\nint cake[12];\ndouble dp[1 << 12][12], cost[12][12];\nint n;\nint goal;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == goal){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + cost[now][i]);\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j, k;\n    double res;\n    \n    while (scanf(\"%d\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%d\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        res = INF;\n        \n        for (i = 0; i < n; i++){\n            for (j = 0; j < n; j++){\n                cost[i][j] = sqrt(SQ(cake[i] + cake[j]) - SQ(cake[i] - cake[j]));\n            }\n        }\n        \n        for (k = 0; k < n; k++){\n            for (i = 0; i < (1 << n); i++){\n                for (j = 0; j < n; j++){\n                    dp[i][j] = -1;\n                }\n            }\n            goal = k;\n            res = min(res, tsp(0, k));\n        }\n        \n        if (res - len < EPS){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include<math.h>\n#define min(x,y)((x)<(y)?(x):(y))\nn,r[12];double d[12][12],smemo[1<<12][12];double shortest(restbits,last){int i;double s,t;if(restbits==0)return r[last];if(smemo[restbits][last])return smemo[restbits][last];s=1e3;for(i=0;i<n;i++){if(restbits&(1<<i)){t=d[last][i]+shortest(restbits-(1<<i),i);s=min(s,t);}}return smemo[restbits][last]=s;}main(){int L,i,j;char c;double s,t;for(;~scanf(\"%d\",&L);){for(n=0;scanf(\"%d%c\",r+n++,&c),c!='\\n';);for(i=0;i<n;i++)for(j=0;j<n;j++)d[i][j]=2*sqrt(r[i]*r[j]);memset(smemo,0,sizeof(smemo));s=1e3;for(i=0;i<n;i++){t=r[i]+shortest((1<<n)-1-(1<<i),i);s=min(s,t);}puts(s<=L?\"OK\":\"NA\");}}"
  },
  {
    "language": "C",
    "code": "// Aizu Vol-1 0120: Patisserie\n// 2017.8.5\n\n#include <stdio.h>\n#include <ctype.h>\n#include <string.h>\n#include <math.h>\n\nchar *gets(char *);\nchar buf[200], *p;\n\nint getInt(void)\n{\n\tint n = 0;\n\twhile (isspace(*p)) p++;\n\tif (!*p) return -1;\n\twhile (isdigit(*p)) n = 10 * n + (*p++ - '0');\n\treturn n;\n}\n\nint lim;\nint n, r[15], f[15];\ndouble d[15][15];\n#define EQ(a,b) (fabs(a-b)<= 0.000001)\n\nint combi(int m, int i, double w)\n{\n\tint j;\n\tdouble x;\n\n\tif (m == n) {\n\t\tx = w + r[i];\n\t\treturn (EQ(x, lim) || x <= lim);\n\t}\n\tfor (j = 0; j < n; j++) {\n\t\tif (f[j]) continue;\n\t\tif (w + d[i][j] < lim) {\n\t\t\tf[j] = 1;\n\t\t\tif (combi(m + 1, j, w + d[i][j])) return 1;\n\t\t\tf[j] = 0;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tint i, j, t;\n\n\twhile (gets(p = buf) != NULL) {\n\t\tlim = getInt();\n\t\tfor (t = n = 0; (r[n] = getInt()) > 0; n++) t += r[n];\n\t\tif (2 * t <= lim) { puts(\"OK\"); continue; }\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tf[i] = 0;\n\t\t\tfor (j = i + 1; j < n; j++) d[i][j] = d[j][i] = 2.0 * sqrt(r[i] * r[j]);\n\t\t}\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tf[i] = 1;\n\t\t\tif (combi(1, i, r[i])) break;\n\t\t\tf[i] = 0;\n\t\t}\n\t\tputs(i < n ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint compare_int(const void *a, const void *b){\n\treturn *(int*)a - *(int*)b;\n}\n\nint main(void) {\n\tint n,dp,p;\n\tdouble box,len;\n\tint r[12];\n\tchar *tmp,str[128];\n\t\n\twhile(gets(str) != NULL){\n\t\tbox = atoi(strtok(str,\" \\r\\n\"))*1.0;\n\t\tn = 0;\n\t\twhile((tmp = strtok(NULL,\" \\r\\n\")) != NULL){\n\t\t\tr[n++] = atoi(tmp);\n\t\t}\n\t\tqsort(r,n,sizeof(int),compare_int);\n\t\t\n\t\tlen = r[0]+r[n/2];\n\t\tp = 0;\n\t\tdp = n-1;\n\t\tdo{\n\t\t\tlen += 2*sqrt(r[p]*r[p+dp]*1.0);\n\t\t\tp += dp;\n\t\t\tdp = -(dp/abs(dp))*(abs(dp)-1);\n\t\t}while(dp);\n\n\t\tif(box-len >= 0.0){\n\t\t\tprintf(\"OK\\n\");\n\t\t}else{\n\t\t\tprintf(\"NA\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++){\n\t\tif(f&1<<i)continue;\n\t\tif(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]*1.0),M[p][f]<t)M[p][f]=t;\n\t}\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);){\n\td=n=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\tfor(i=0;i<N;i++)for(j=0;j<1<<N;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n\tputs(d-r<l+1e-5?\"OK\":\"NA\");\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\nint len, cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + sqrt(SQ(cake[i] + cake[now]) - SQ(cake[i] - cake[now])));\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    char str[512];\n    int flag;\n    \n    while (fgets(str, 512, stdin) != NULL){\n        i = flag = len = n = 0;\n        memset(cake, 0, sizeof(cake));\n        while (str[i] != '\\0'){\n            if (flag == 0){\n                while (str[i] != ' ' && str[i] != '\\n'){\n                    len = len * 10 + str[i++] - '0';\n                }\n                i++;\n                flag = 1;\n            }\n            else {\n                while (str[i] != ' ' && str[i] != '\\n'){\n                    cake[n] = cake[n] * 10 + str[i++] - '0';\n                }\n                n++;\n                i++;\n            }\n        }\n        \n        for (i = 0; i < (1 << 12); i++){\n            for (j = 0; j < 12; j++){\n                dp[i][j] = -1 * INF;\n            }\n        }\n        \n        if (tsp(0, 0) - (double)len <= EPS){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++){\n\t\tif(f&1<<i)continue;\n\t\tif(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t)M[p][f]=t;\n\t}\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);){\n\tfor(d=n=0;getchar()!='\\n';d+=D[n++]*2)scanf(\"%d\",D+n);\n\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n\tputs(d-r<=l?\"OK\":\"NA\");\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "// AOJ 0120: Patisserie\n// 2017.8.21 bal4u@uu\n// 201711.20\n\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define R 1000\nint r[13];\nint d[13][13];\t\t\t\t\t// ???????????±???????????????????°´????????¢\nint dp[13][4100];\t\t\t\t// ?°´????????¢, ??´?????????????????±??????????±\\??´?????????\nchar buf[50], *p;\n\nint getint()\n{\n\tint n = 0;\n\twhile (*p >= '0') n = (n<<3) + (n<<1) + (*p++ & 0xf);\n\treturn n;\n}\n\nint main()\n{\n\tint w, n, i, ii, j, k;\n\tint lim, x;\n\n\tfor (i = 3; i <= 10; i++) for (ii = i*i, j = i; j <= 10; j++, ii+=i)\n\t\td[i][j] = d[j][i] = (int)(2*R * sqrt(ii));\n\n\twhile (fgets(p=buf, 50, stdin) != NULL) {\n\t\tw = getint(); p++;\n\t\tn = 0, j = 0;\n\t\twhile (*p >= ' ') {\ti = getint(), p++, r[n++] = i, j += i; }\n\t\tif (2 * j <= w) { puts(\"OK\"); continue; }\n\t\tw *= R;\n\n\t\tmemset(dp, 0x55, sizeof(dp));\n\t\tfor (ii = 1, i = 0; i < n; i++, ii <<= 1) dp[i][ii] = r[i]*R;\n\n\t\tlim = (1 << n) - 1;\n\t\tfor (k = 0; k <= lim; k++) {\n\t\t\tfor (ii = 1, i = 0; i < n; i++, ii <<= 1) {\n\t\t\t\tif (k & ii) continue;\n\t\t\t\tfor (j = 0; j < n; j++) {\n\t\t\t\t\tx = dp[j][k] + d[r[i]][r[j]];\n\t\t\t\t\tif (x < dp[i][k|ii]) dp[i][k|ii] = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (x = 100000, i = 0; i < n; i++) {\n\t\t\tdp[i][lim] += r[i]*R;\n\t\t\tif (dp[i][lim] < x) x = dp[i][lim];\n\t\t}\n\t\tputs(x <= w ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n\nint rs[12];\nint rsize;\ndouble w;\ndouble calc(){\n  int i;\n  double ans=(double)(rs[0]+rs[rsize-1]),buf;\n  for(i=0;i<rsize-1;i++){\n    if(rs[i]==rs[i+1]){\n      ans+=(double)(rs[i]+rs[i+1]);\n    }else{\n      buf=(double)(rs[i]>rs[i+1]?rs[i]-rs[i+1]:rs[i+1]-rs[i])/(double)(rs[i]+rs[i+1]);\n      buf=(double)(rs[i]+rs[i+1])*sqrt(1-buf*buf);\n      ans+=buf;\n    }\n  }\n  return ans;\n}\nint s(int n){\n  int i,buf;\n  double c;\n  if(n==rsize){\n    c=calc();\n    if(c<=w){\n      return 1;\n    }else{\n      return 0;\n    }\n  }\n  for(i=n;i<rsize;i++){\n    buf=rs[i];\n    rs[i]=rs[n];\n    rs[n]=buf;\n    if(s(n+1)) return 1;\n    buf=rs[i];\n    rs[i]=rs[n];\n    rs[n]=buf;\n  }\n  return 0;\n}\nint main(){\n  int i;\n  char buf[128],*ind,*h;\n  while(fgets(buf,128,stdin)!=NULL){\n    ind=strchr(buf,' ');\n    *ind='\\0';\n    w=(double)atoi(buf);\n    h=++ind;\n    rsize=0;\n    while((ind=strchr(ind,' '))!=NULL){\n      *ind='\\0';\n      rs[rsize++]=atoi(h);\n      h=++ind;\n    }\n    rs[rsize++]=atoi(h);\n    printf(\"%s\\n\",s(0)?\"OK\":\"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\ndouble f(int a,int b){return sqrt((a+b)*(a+b)-(a-b)*(a-b));}\nint nxpt(char *s){\n  int i,l=strlen(s),max=0,f[260]={0};\n  for(l--;l+1&&max<=s[l];l--)f[max=s[l]]++;\n  if(l<0)return 0;\n  f[s[l]]++;\n  for(i=s[l]+1;f[i]==0;i++);\n  f[s[l]=i]--;\n  for(i=0;s[++l];f[s[l]=i]--){\n    while(f[i]==0)i++;\n  }\n  return 1;\n}\nint main(){\n  char s[100010],a[20];\n  int i,r,n[20],m;\n  double d[30],l;\n  while(fgets(s,100000,stdin)){\n    for(i=r=m=0;s[i];i++){\n      if('0'<=s[i]&&s[i]<='9')m=m*10+s[i]-'0';\n      else{\n\ta[r]=r+1;\n\tn[r++]=m;\n\tm=0;\n      }\n    }\n    a[r-1]=0;\n    //for(i=0;i<r-1;i++)printf(\"%d\\n\",a[i]);\n    do{//printf(\"\\n\");\n      for(i=l=0;i+2<r;i++){//printf(\"%d %d\\n\",n[a[i]],n[a[i+1]]);\n\td[i]=f(n[a[i]],n[a[i+1]]);\n\tl+=d[i];//printf(\"%f \",l);\n      }//printf(\"%f \",l+n[1]+n[r-1]);\n      if(l+n[a[0]]+n[a[r-2]]>n[0])goto END;\n      for(i=0;i+3<r;i++){\n\tif(d[i]+d[i+1]<f(n[a[i]],n[a[i+2]]))goto END;\n      }\n      printf(\"OK\\n\");\n      goto NEXT;\n    END:;\n    }while(nxpt(a));\n    printf(\"NA\\n\");\n  NEXT:;\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint i,j,k,n,buc[15],cake[15];\ndouble box,list[11][11],goal,leng[2];\nchar sp;\n\nint main(){\n\tfor(i=3;i<=10;i++){\n\t\tfor(j=3;j<=10;j++){\n\t\t\tlist[i][j]=i+j-sqrt((double)((i+j)*(i+j)-(i-j)*(i-j)));\n\t\t}\n\t}\n\n\twhile(scanf(\"%lf\",&box)!=EOF){\n\t\tn=0;goal=0;\n\t\tfor(i=0;i<11;i++)buc[i]=0;\n\t\twhile(1){\n\t\t\tscanf(\"%c\",&sp);\n\t\t\tif(sp=='\\n')break;\n\t\t\t\n\t\t\tscanf(\"%d\",&k);\n\t\t\tbuc[k]++;\n\t\t\tgoal+=k*2;\n\t\t\tn++;\n\t\t}\n\n\t\t//printf(\"before:%lf\\n\",goal);\n\t\tgoal-=box;\n\t\t//printf(\"after:%lf\\n\",goal);\n\t\t\n\t\tif(goal<=0){printf(\"OK\\n\");continue;}\n\n\t\tfor(i=3,j=0;i<11 && j<n;i++){for(;buc[i]>0;j++,buc[i]--)cake[j]=i;}\n\n\t\tleng[0]=0;leng[1]=0;\n\t\tfor(k=1,i=0,j=0;k<n;k++){\n\t\t\tleng[0]+=list[cake[i]][cake[n-j-1]];\n\t\t\tleng[1]+=list[cake[j]][cake[n-i-1]];\n\t\t\tif(i<=j)i=j+1;else{j++;i--;}\n\t\t}\n\n\t\tif(leng[0]>=goal || leng[1]>=goal)printf(\"OK\\n\"); else printf(\"NA\\n\");\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "n,r[12],c;double d[12][16],M[12][4096];double S(b,l,i){double*m=M[l]+b,s,t;for((s=*m)?i=0:!b?s=r[i=0,l]:(i=n,s=1e3);i;)b&1<<--i&&(t=d[l][i]+S(b^1<<i,i),s=t<s?t:s);return*m=s;}main(L,i,j){double s,t;for(;~scanf(\"%d\",&L);puts(s>L?\"NA\":\"OK\")){for(n=0;scanf(\"%d%c\",r+n++,&c),c-10;);for(i=n;i--;)for(j=n;j--;)d[i][j]=2*sqrt(r[i]*r[j]);memset(M,0,393216);s=1e3;for(i=n;i--;s=t<s?t:s)t=r[i]+S((1<<n)-1-(1<<i),i);}}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#define MIN(x,y) (x)>(y)?(y):(x)\n\nint r[12],flag[12],roll[12];\ndouble min;\n\nint compare_int(const void *a, const void *b){\n    return *(int*)a - *(int*)b;\n}\n\ndouble calc(int n){\n\tint i;\n\tdouble res = (r[roll[0]]+r[roll[n-1]])*1.0;\n\t\n\tfor(i = 0;i < n-1;i++){\n\t\tres += sqrt(4.0*r[roll[i]]*r[roll[i+1]]);\n\t}\n\t\n\treturn res;\n}\n\nvoid foo(int n,int N){\n\tint i;\n\t\n\tif(n == N){\n\t\tmin = MIN(calc(n),min);\n\t\treturn;\n\t}\n\t\n\tfor(i = 0;i < N;i++){\n\t\tif(!flag[i]){\n\t\t\tif(roll[n] == -1){\n\t\t\t\troll[n] = i;\n\t\t\t\tflag[i] = 1;\n\t\t\t\tfoo(n+1,N);\n\t\t\t\tflag[i] = 0;\n\t\t\t}else{\n\t\t\t\tif(r[roll[n]] != r[i]){\n\t\t\t\t\troll[n] = i;\n\t\t\t\t\tflag[i] = 1;\n\t\t\t\t\tfoo(n+1,N);\n\t\t\t\t\tflag[i] = 0;\n\t\t\t\t\troll[n] = -1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(void) {\n\tint box,i,n;\n\tchar str[64],*p;\n\t\n\twhile(fgets(str,64,stdin) != NULL){\n\t\tbox = atoi(strtok(str,\" \\r\\n\"));\n\t\t\n\t\tn = 0;\n\t\twhile(p = strtok(NULL,\" \\r\\n\"),p != NULL){\n\t\t\tr[n++] = atoi(p);\n\t\t}\n\t\t\n\t\tqsort(r,n,sizeof(int),compare_int);\n\t\tmemset(flag,0,sizeof(flag));\n\t\tfor(i = 0;i < n;i++){\n\t\t\troll[i] = -1;\n\t\t}\n\t\tmin = 120.0;\n\t\tfoo(0,n);\n\t\t\n\t\tprintf(\"%s\\n\",min <= box ? \"OK\" : \"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\ndouble dMIN(double a,double b){return a<b?a:b;}\ndouble f(int a,int b){return sqrt((a+b)*(a+b)-(a-b)*(a-b));}\nint i,j,k,n=0,r=0,d[20];\ndouble l[15][1000010]={};\nint main(){\n  char s[100010];\n  double min;\n  while(fgets(s,100000,stdin)){\n    for(i=r=n=0;s[i];i++){\n      if('0'<=s[i]&&s[i]<='9')n=n*10+s[i]-'0';\n      else{\n\td[r++]=n;\n\tn=0;\n      }\n    }\n    //for(i=0;i<r;i++)printf(\"%d \",d[i]);printf(\"\\n\");\n    for(i=0;i<(1<<(r-1));i++){\n      for(j=0;j<r-1;j++)l[j][i]=1e9;\n    }\n    for(i=0;i<r-1;i++)l[i][1<<i]=d[i+1];\n    for(i=0;i<(1<<(r-1));i++){\n      for(j=0;j<r-1;j++){//printf(\"%18f \",l[j][i]);\n\tif(i&(1<<j)==0)continue;\n\tfor(k=0;k<r-1;k++)l[k][i|(1<<k)]=dMIN(l[k][i|(1<<k)],l[j][i]+f(d[j+1],d[k+1]));\n\t//printf(\"%18f \",l[j][i]);\n      }//printf(\"\\n\");\n    }\n  \n    min=1e9;\n    for(i=0;i<r-1;i++)min=dMIN(min,l[i][(1<<(r-1))-1]+d[i+1]);//printf(\"%f\\n\",min);\n    printf(\"%s\\n\",min<d[0]+1e-9?\"OK\":\"NA\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++){\n\t\tif(f&1<<i)continue;\n\t\tif(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]*1.0),M[p][f]<t)M[p][f]=t;\n\t}\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);){\n\td=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\tfor(i=0;i<N;i++)for(j=0;j<1<<N;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n\tputs(d-r<l+1e-5?\"OK\":\"NA\");\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAX_LEN 256\n#define MAX_NUM 12\n#define MAX_SQRT 100\n\n/* http://www5.airnet.ne.jp/tomy/cpro/pe1.htm */\nvoid showperm(int p[], int n);\t/* ±Ì[`ÅeñÉÎ·éðs¤ */\nvoid genperm1(int p[], int n);\t/* ¬ñ¶¬[`C«®ÅÍÈ¢\t*/\n\nvoid init_sqrt(void);\n\nint cake[MAX_NUM]; /* P[LTCY */\ndouble min; /* ÅKð */\n\ndouble sq[MAX_SQRT+1];/* [gvZÊ */\n\nint main(){\n\tchar buf[MAX_LEN];\n\tint num; /* P[LÂ */\n\tint width; /*  Ì·³ */\n\tint offset; /* obt@àùÇÊu */\n\tint oftmp;\n\tint p[MAX_NUM];/* ñpobt@ */\n\t\n\tinit_sqrt();\n\t\n\twhile(fgets(buf,MAX_LEN,stdin)!=NULL){\n\t\t/* Âæ¾ */\n\t\tsscanf(buf,\"%d%n\",&width,&oftmp);\n\t\toffset = oftmp;\n\t\t/* TCYæ¾ */\n\t\tnum = 0;\n\t\twhile(sscanf(buf+offset,\"%d%n\",&cake[num],&oftmp) > 0){\n\t\t\toffset+=oftmp;\n\t\t\tnum++;\n\t\t}\n\t\t\n\t\t/* èvZ */\n\t\tmin = width+1;\n\t\tgenperm1(p,num);\n\t\tprintf(min<=width?\"OK\\n\":\"NG\\n\");\n\t}\n\treturn 0;\n}\n\nvoid init_sqrt(void){\n\tint i;\n\tfor(i=0;i<MAX_SQRT+1;i++){\n\t\tsq[i] = 2*sqrt(i);\n\t\t//printf(\"%3d %.5f\\n\",i,sq[i]);\n\t}\n}\n\nvoid showperm(int p[], int n){\n\tdouble sum;\n\tint i;\n\tsum = cake[p[0]-1];\n\t//printf(\"%.5f\\n\",(double)cake[p[0]-1]);\n\tfor(i=0;i<n-1;i++){\n\t\t//printf(\"%.5f\\n\",sq[cake[p[i]-1]*cake[p[i+1]-1]]);\n\t\tsum += sq[cake[p[i]-1]*cake[p[i+1]-1]];\n\t}\n\tsum += cake[p[n-1]-1];\n\t//printf(\"%.5f\\n\",(double)cake[p[n-1]-1]);\n\tif(min>sum)min = sum;\n\t//for(i=0;i<n;i++)printf(\"%2d \",cake[p[i]-1]);\n\t//printf(\":%.5f\\n\",sum);\n}\n\n/* ñ¶¬ASY */\n/* http://www5.airnet.ne.jp/tomy/cpro/pe1.htm */\nvoid genperm1(int p[], int n)\n{\n\tint *c, *pc, *q;\n\tint k, t;\n\n\tc = (int *)malloc(sizeof(int) * n);\n\tif(c == NULL)\n\t{\n\t\tfprintf(stderr, \"Error : out of memory  in genperm1()\\n\");\n\t\texit(-1);\n\t}\n\n\tfor(k = 1, q = p, pc = c; k <= n; )\t*q++ = *pc++ = k++;\n\tk = 1;\n\tpc = c;\n\tdo\n\t{\n\t\tt = *(p + k);\n\t\t*(p + k) = *(q = p + ((k & 1)? *pc: 0));\n\t\t*q = t;\n\t\tshowperm(p, n);\n\t\tk = 1;\n\t\tpc = c;\n\t\twhile(*pc == 0)\t*pc++ = k++;\n\t\t(*pc)--;\n\t} while(k < n);\n\tfree((char *)c);\n}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r>l?\"NA\":\"OK\")){\nfor(d=n=0;getchar()-10;d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;i++)t=dfs(i++,1<<i),r=r>t?r:t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAX_LEN 256\n#define MAX_NUM 12\n#define MAX_SQRT 100\n\nvoid init_map(int num);\nvoid init_sqrt(void);\n\ndouble getmin(int pat,int r,int ad,int num);\ndouble getmin2(int pat,int ad,int num);\ndouble getmin3(int num);\n\nint cake[MAX_NUM]; /* P[LTCY */\ndouble min; /* ÅKð */\n\ndouble sq[MAX_SQRT+1];/* [gvZÊ */\n\ndouble map[1<<MAX_NUM][MAX_NUM];\n\nint main(){\n\tchar buf[MAX_LEN];\n\tint num; /* P[LÂ */\n\tint width; /*  Ì·³ */\n\tint offset; /* obt@àùÇÊu */\n\tint oftmp;\n\t\n\tinit_sqrt();\n\t\n\twhile(fgets(buf,MAX_LEN,stdin)!=NULL){\n\t\t/* Âæ¾ */\n\t\tsscanf(buf,\"%d%n\",&width,&oftmp);\n\t\toffset = oftmp;\n\t\t/* TCYæ¾ */\n\t\tnum = 0;\n\t\twhile(sscanf(buf+offset,\"%d%n\",&cake[num],&oftmp) > 0){\n\t\t\toffset+=oftmp;\n\t\t\tnum++;\n\t\t}\n\t\t\n\t\t/* èvZ */\n\t\tinit_map(num);\n\t\t\n\t\tmin = getmin3(num);\n\t\tprintf(\"%d %.5f\\n\",width,min);\n\t\tprintf(min<=width?\"OK\\n\":\"NG\\n\");\n\t}\n\treturn 0;\n}\n\nvoid init_sqrt(void){\n\tint i;\n\tfor(i=0;i<MAX_SQRT+1;i++){\n\t\tsq[i] = 2*sqrt(i);\n\t}\n}\n\nvoid init_map(int num){\n\tint i,j;\n\tfor(i=0;i<(1<<num);i++){\n\t\tfor(j=0;j<num;j++){\n\t\t\tmap[i][j]=0;\n\t\t}\n\t}\n\tfor(i=0;i<num;i++){\n\t\tmap[1<<i][i] = 2*cake[i];\n\t}\n}\n\ndouble getmin(int pat,int r,int ad,int num){\n\tdouble min; /* ¡ñßéÅ¬lißèlj */\n\tdouble premin; /* patÆrÅÌÅ¬l */\n\tdouble premintmp;\n\tint i,bit;\n\tint prepat;/* pat©çrð²¢½p^[ */\n\t\n\tpremin = map[pat][r];\n\tif(premin==0){\n\t\tpremin = 99999;\n\t\tprepat = pat - (1<<r);\n\t\tfor(i=0;i<num;i++){\n\t\t\tbit = 1<<i;\n\t\t\tif((bit&prepat)!=0){\n\t\t\t\tpremintmp = getmin(prepat,i,r,num);\n\t\t\t\tif(premintmp<premin){\n\t\t\t\t\tpremin=premintmp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmap[pat][r] = premin;\n\t}\n\tpat += (1<<ad);\n\tmin = premin - cake[r] + sq[cake[r]*cake[ad]] + cake[ad];\n\tmap[pat][ad] = min;\n\treturn min;\n}\n\ndouble getmin2(int pat,int ad,int num){\n\tint i,bit;\n\tdouble min,ret;\n\tmin = 99999;\n\tfor(i=0;i<num;i++){\n\t\tbit = 1<<i;\n\t\tif((bit&pat)!=0){\n\t\t\tret = getmin(pat,i,ad,num);\n\t\t\tif(ret<min)min=ret;\n\t\t}\n\t}\n\treturn min;\n}\n\ndouble getmin3(int num){\n\tint i,bit,pat;\n\tdouble min,ret;\n\tmin = 99999;\n\tpat = (1<<num)-1;\n\tfor(i=0;i<num;i++){\n\t\tbit = 1<<i;\n\t\tret = getmin2(pat-bit,i,num);\n\t\tif(ret<min)min=ret;\n\t}\n\treturn min;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>          // printf(), scanf()\n#include <stdlib.h>         // abs(), qsort()\n#include <math.h>           // sqrt()\n#include <stdbool.h>\n\n#define MAX_N 12\n\nint lineno;\n\nint w;\nint n;\nint r[MAX_N];\nint r0[MAX_N];\n\nint\ncmp_func(const void *l_, const void *r_)\n{\n\tconst int *l = (const int*) l_;\n\tconst int *r = (const int*) r_;\n\n\tif (*l < *r)\n\t\treturn -1;\n\n\tif (*l > *r)\n\t\treturn 1;\n\n\treturn 0;\n}\n\nbool\nsolve()\n{\n\tqsort(r0, n, sizeof(int), cmp_func);\n\n\tint h = 0, t = n - 1;\n\tfor (int i = 0; i < n; i += 2)\n\t{\n\t\tr[i] = r0[h++];\n\t\tif (i + 1 < n)\n\t\t\tr[i + 1] = r0[t--];\n\t}\n\n\tdouble l = r[0];\n\tfor (int i = 1; i < n; ++i)\n\t{\n\t\tint ra = r[i - 1] + r[i];\n\t\tint ry = abs(r[i - 1] - r[i]);\n\t\tl += sqrt(ra * ra - ry * ry);\n\t\tif (l > w)\n\t\t\treturn false;\n\t}\n\n\tl += r[n - 1];\n\treturn (l <= w) ? true : false;\n}\n\nbool\nope_line()\n{\n\n\tlineno++;\n\tint i = scanf(\"%d\", &w);\n\tif (i == EOF)\n\t\treturn false;\n\n\tfor (n = 0;; ++n)\n\t{\n\t\tchar c;\n\t\tscanf(\"%c\", &c);\n\t\tif (c == '\\n' || c == EOF)\n\t\t\tbreak;\n\n\t\tscanf(\"%d\", &r0[n]);\n\t}\n\n\tprintf(\"%s\\n\", solve() ? \"OK\" : \"NA\");\n\treturn true;\n}\n\nint\nmain(int argc, char **argv)\n{\n\tlineno = 0;\n\twhile (true) // process for each line\n\t{\n\t\tif (!ope_line())\n\t\t\tbreak;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A0120\nTitle Patisserie\n*/\n#include <stdio.h>\n// Select Below\n//#include <stdlib.h>\n#include <string.h>\n#include <float.h>\n#include <math.h>\n//#include <limits.h>\n//Global data section\nchar buf[100];\nint r[12];\nint r1[12];\nint n;\nint l;\n//\nint compare_int(const void *a, const void *b)\n{\n    return *(int*)b - *(int*)a;\n}\n\n\nvoid re_order(int r[],int r1[],int n)\n{\n        int i;\n\n        qsort(r,n,sizeof(int),compare_int);\n#ifdef DEBUG\n        print(r,n);\n#endif\n                \n        if((n & 1)==0)\n        {\n                for(i=0;i<n/2;i++)\n                {\n                        r1[i*2]=r[i];\n                        r1[i*2+1]=r[n-i-1];\n                }\n                return;\n        }\n        if(r[n/2-1]-r[n/2] < r[n/2]-r[n/2+1])\n        {\n                for(i=0;i<n/2;i++)\n                {\n                        r1[i*2]=r[i];\n                        r1[i*2+1]=r[n-i-1];\n                }\n        }\n        else\n        {\n                for(i=0;i<n/2;i++)\n                {\n                        r1[i*2]=r[n-i-1];\n                        r1[i*2+1]=r[i];\n                }\n        }\n        r1[n-1]=r[n/2];\n}\nvoid print(int r[] ,int n)\n{\n        int i;\n\n        printf(\"%d:\",l);\n        for(i=0;i<n;i++)\n                printf(\"%d \",r[i]);\n        printf(\"\\n\");\n}\ndouble calc(int r[],int n)\n{\n        int i;\n        double ret;\n        \n        ret = (double)r[0];\n        for(i=0;i<n;i++)\n                ret += 2*sqrt(r[i]*r[i+1]);\n        ret += (double)r[n-1];\n        return(ret);\n}\nvoid clear()\n{\n        int i;\n\n        for(i=0;i<100;i++)\n                buf[i]=0;\n\n        for(i=0;i<12;i++)\n        {\n                r[i]=r1[i]=0;\n        }\n}\nmain()\n{\n        char *p,i;\n        double total;\n\n        while(clear(),fgets(buf,100,stdin))\n        {\n                //printf(\"B:%s\\n\",buf);    \n                p=strtok(buf,\" \");\n                sscanf(p,\"%d\",&l);\n             \n                i=0;\n                while(p=strtok(NULL,\" \"))\n                {\n                        sscanf(p,\"%d\",&r[i]);\n                        i++;\n                }\n                n=i;\n\n                if(n>=3)\n                        re_order(r,r1,n);\n#ifdef DEBUG\n                print(r1,n);\n#endif\n                total=calc(r1,n);\n#ifdef DEBUG\n                printf(\"%lf\\n\",total);\n#endif\n                printf(\"%s\\n\",(total<=(double)l)?\"OK\":\"NA\");\n              \n        }\n\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-5)\n\ndouble len;\ndouble cake[12], dist[12][12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + dist[now][i]);\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    \n    while (scanf(\"%lf\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%lf\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        for (i = 0; i < (1 << 12); i++){\n            for (j = 0; j < 12; j++){\n                dp[i][j] = -1 * INF;\n            }\n        }\n        \n        for (i = 0; i < n; i++){\n            for (j = 0; j < n; j++){\n                dist[i][j] = sqrt(SQ(cake[i] + cake[j]) - SQ(cake[i] - cake[j]));\n            }\n            dist[i][i] = 0;\n        }\n        \n        if (tsp(0, 0) < len + EPS){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "// Aizu Vol-1 0120: Patisserie\n// 2017.8.5\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n#include <math.h>\n\nchar *gets(char *);\nchar buf[200], *p;\n\nint getInt(void)\n{\n\tint n = 0;\n\twhile (isspace(*p) || *p == ',') p++;\n\tif (!*p) return -1;\n\twhile (isdigit(*p)) n = 10 * n + (*p++ - '0');\n\treturn n;\n}\n\ndouble lim;\nint n, r[15];\n#define EQ(a,b) (fabs(a-b)<= 0.00001)\n\nint main()\n{\n\tint i, j, k, t;\n\tdouble w;\n\tint ci = 0;\n\n\twhile (gets(p = buf) != NULL) {\n\t\tlim = getInt();\n\t\tfor (n = 0; (r[n] = getInt()) > 0; n++);\n\t\tif (!n) { puts(\"OK\"); continue; }\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tk = i;\n\t\t\tfor (j = i + 1; j < n; j++) if (r[k] > r[j]) k = j;\n\t\t\tif (k != i) t = r[i], r[i] = r[k], r[k] = t;\n\t\t}\n\t\tfor (w = r[0], i = 0, k = 1, j = n - 1; k < n; k++) {\n\t\t\tw += 2.0 * sqrt(r[i] * r[j]);\n\t\t\tif (k & 1) i++;\n\t\t\telse j--;\n\t\t}\n\t\tw += r[n & 1 ? j : i];\n//\t\tprintf(\"lim %lf, w %lf\\n\", lim, w);\n\t\tputs((EQ(w, lim) || w <= lim) ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r<=l?\"OK\":\"NA\")){\nfor(d=n=0;getchar()!='\\n';d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;i++)t=dfs(i,1<<i),r=r>t?r:t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n\nint compare_int(const void *a, const void *b){\n\treturn *(int*)a - *(int*)b;\n}\n\nint main(void) {\n\tint n,dp,p;\n\tdouble box,len;\n\tint r[12];\n\tchar *tmp,str[256];\n\t\n\twhile(gets(str) != NULL){\n\t\tbox = atoi(strtok(str,\" \\n\"))*1.0;\n\t\tn = 0;\n\t\twhile((tmp = strtok(NULL,\" \\n\")) != NULL){\n\t\t\tr[n++] = atoi(tmp);\n\t\t}\n\t\tqsort(r,n,sizeof(int),compare_int);\n\t\t\n\t\tlen = r[0]+r[n/2];\n\t\tp = 0;\n\t\tdp = n-1;\n\t\tdo{\n\t\t\tlen += 2*sqrt(r[p]*r[p+dp]*1.0);\n\t\t\tp += dp;\n\t\t\tdp = -(dp/abs(dp))*(abs(dp)-1);\n\t\t}while(dp);\n\t\t\n\t\tif(box-len >= 0.0){\n\t\t\tprintf(\"OK\\n\");\n\t\t}else{\n\t\t\tprintf(\"NA\\n\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++){\n\t\tif(f&1<<i)continue;\n\t\tif(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t)M[p][f]=t;\n\t}\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);){\n\td=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n\tputs(d-r<l+1e-5?\"OK\":\"NA\");\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\ndouble len;\ndouble cake[12], dist[12][12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + dist[now][i]);\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    \n    while (scanf(\"%lf\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%lf\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        for (i = 0; i < (1 << 12); i++){\n            for (j = 0; j < 12; j++){\n                dp[i][j] = -1 * INF;\n            }\n        }\n        \n        for (i = 0; i < n; i++){\n            for (j = 0; j < n; j++){\n                dist[i][j] = sqrt(SQ(cake[i] + cake[j]) - SQ(cake[i] - cake[j]));\n            }\n            dist[i][i] = 0;\n        }\n        \n        if (tsp(0, 0) <= len){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>          // printf()\n#include <stdlib.h>         // exit(), free(), strtol()\n#include <stdbool.h>\n#include <errno.h>          // errno\n#include <error.h>          // error()\n\n#define MAX_N 12\n\nint lineno;\nchar *linebuff = NULL;\nsize_t linebuffsize = 0;\n\nint r[MAX_N];\n\nvoid\ncleanup(int ecode)\n{\n\tif (linebuff)\n\t{\n\t\tfree(linebuff);\n\t\tlinebuff = NULL;\n\t\tlinebuffsize = 0;\n\t}\n\n\texit(ecode);\n}\n\nbool\nope_line()\n{\n\terrno = 0;\n\tif(getline(&linebuff, &linebuffsize, stdin) == -1) // read line\n\t{\n\t\tif(errno == 0)  // EOF?\n\t\t\treturn false;\n\n\t\terror(0, errno, \"Can't read line\");\n\t\tcleanup(1);\n\t}\n\n\tlineno++;\n//\tconst char *s = linebuff;\n\treturn true;\n}\n\nint\nmain(int argc, char **argv)\n{\n\tlineno = 0;\n\twhile (true) // process for each line\n\t{\n\t\tif (!ope_line())\n\t\t\tbreak;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>          // printf(), scanf()\n#include <stdlib.h>         // abs(), qsort()\n#include <math.h>           // sqrt(), round()\n#include <stdbool.h>\n\n// #define DEBUG 1\n#define MAX_N 12\n\nint n;\nint r[MAX_N];\nint w;\nint lineno;\n#ifdef DEBUG\ndouble wmin;\n#endif\n\nint\ncmp_func(const void *l_, const void *r_)\n{\n\tconst int *l = (const int*) l_;\n\tconst int *r = (const int*) r_;\n\n\tif (*l < *r)\n\t\treturn -1;\n\n\tif (*l > *r)\n\t\treturn 1;\n\n\treturn 0;\n}\n\ndouble\nwidth(const int a[MAX_N * 2 - 1])\n{\n\tdouble tw = a[0];\n\tfor (int i = 1; i < n; ++i)\n\t{\n\t\tint rc = a[i - 1] + a[i];\n\t\tint ra = abs(a[i - 1] - a[i]);\n\t\ttw += sqrt(rc * rc - ra * ra);\n\t}\n\n\ttw += a[n - 1];\n\ttw = round(tw * 1000000000.0) / 1000000000.0;\n\treturn tw;\n}\n\nbool\nsolve()\n{\n\tqsort(r, n, sizeof(int), cmp_func);\n\n\tint a[MAX_N * 2 - 1];\n\tint l = 0, h = n - 1;\n\tint tl = n - 1, th = n - 1;\n\ta[tl] = r[h--];\n\n\tfor (int i = 1; i < n; ++i)\n\t{\n\t\tint b;\n\t\tif (i & 1)\n\t\t\tb = r[l++];\n\t\telse\n\t\t\tb = r[h--];\n\n\t\tint lw = abs(a[tl] - b);\n\t\tint hw = abs(a[th] - b);\n\t\tif (lw > hw)\n\t\t\ta[--tl] = b;\n\t\telse if (lw < hw)\n\t\t\ta[++th] = b;\n\t\telse\n\t\t{\n\t\t\tif (a[tl] < a[th])\n\t\t\t\ta[--tl] = b;\n\t\t\telse\n\t\t\t\ta[++th] = b;\n\t\t}\n\t}\n\n#ifndef DEBUG\n\tdouble wmin = width(&a[tl]);\n#else\n\twmin = width(&a[tl]);\n#endif\n\n\tl = 0, h = n - 1;\n\ttl = n - 1; th = n - 1;\n\ta[tl] = r[l++];\n\n\tfor (int i = 1; i < n; ++i)\n\t{\n\t\tint b;\n\t\tif (i & 1)\n\t\t\tb = r[h--];\n\t\telse\n\t\t\tb = r[l++];\n\n\t\tint lw = abs(a[tl] - b);\n\t\tint hw = abs(a[th] - b);\n\t\tif (lw > hw)\n\t\t\ta[--tl] = b;\n\t\telse if (lw < hw)\n\t\t\ta[++th] = b;\n\t\telse\n\t\t{\n\t\t\tif (a[tl] < a[th])\n\t\t\t\ta[--tl] = b;\n\t\t\telse\n\t\t\t\ta[++th] = b;\n\t\t}\n\t}\n\n\tdouble d = width(&a[tl]);\n\tif (d < wmin)\n\t\twmin = d;\n\n\treturn wmin <= w;\n}\n\nbool\nope_line()\n{\n\n\tlineno++;\n\tint i = scanf(\"%d\", &w);\n\tif (i == EOF)\n\t\treturn false;\n\n\tfor (n = 0;; ++n)\n\t{\n\t\tchar c;\n\t\tscanf(\"%c\", &c);\n\t\tif (c == '\\n' || c == EOF)\n\t\t\tbreak;\n\n\t\tscanf(\"%d\", &r[n]);\n\t}\n\n#ifndef DEBUG\n\tprintf(\"%s\\n\", solve() ? \"OK\" : \"NA\");\n#else\n\tbool b = solve();\n\tprintf(\"%s: %.9f\\n\", b ? \"OK\" : \"NA\", wmin);\n#endif\n\treturn true;\n}\n\nint\nmain(int argc, char **argv)\n{\n\tlineno = 0;\n\twhile (true) // process for each line\n\t{\n\t\tif (!ope_line())\n\t\t\tbreak;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 0120: Patisserie\n// 2017.9.28 bal4u@uu\n\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define EQ(a,b) (fabs(a-b)<= 1e-7)\n\nint r[13];\ndouble d[13][13];\t\t\t\t\t// ???????????±???????????????????°´????????¢\ndouble dp[13][4100];\t\t\t\t// ?°´????????¢, ??´?????????????????±??????????±\\??´?????????\nchar buf[50], *p;\n\nint getint()\n{\n\tint n = 0;\n\twhile (*p >= '0') n = (n<<3) + (n<<1) + (*p++ & 0xf);\n\treturn n;\n}\n\nint main()\n{\n\tint w, n, i, j, k, t, s;\n\tint lim;\n\tdouble x;\n\n\tfor (i = 3; i <= 10; i++) for (j = i; j <= 10; j++)\n\t\td[i][j] = d[j][i] = 2.0 * sqrt(i * j);\n\n\twhile (fgets(p=buf, 50, stdin) != NULL) {\n\t\tw = getint(); p++;\n\t\tn = 0, s = 0;\n\t\twhile (*p >= ' ') {\tt = getint(), p++, r[n++] = t, s += t; }\n\t\tif (2 * s <= w) { puts(\"OK\"); continue; }\n\n\t\tmemset(dp, 0, sizeof(dp));\n\t\tfor (i = 0; i < n; i++)\tdp[i][1<<i] = r[i];\n\n\t\tlim = (1 << n) - 1;\n\t\tfor (k = 0; k <= lim; k++) {\n\t\t\tfor (i = 0; i < n; i++)\t{\n\t\t\t\tfor (j = 0; j < n; j++) {\n\t\t\t\t\tif (dp[j][k] == 0) continue;\n\t\t\t\t\telse {\n\t\t\t\t\t\tint ii;\n\t\t\t\t\t\tx = dp[j][k] + d[r[i]][r[j]];\n\t\t\t\t\t\tii = k | (1 << i);\n\t\t\t\t\t\tif (dp[i][ii] == 0 || x < dp[i][ii]) dp[i][ii] = x;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (x = 10000, i = 0; i < n; i++) {\n\t\t\tif (dp[i][lim] == 0) continue;\n\t\t\tdp[i][lim] += r[i];\n\t\t\tif (dp[i][lim] < x) x = dp[i][lim];\n\t\t}\n\t\tputs(EQ(x, w) || x <= w ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(f,p){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(f|1<<i,i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r>l?\"NA\":\"OK\")){\nfor(d=n=0;getchar()-10;d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;)t=dfs(1<<i,i++),r=r>t?r:t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n\nint len;\nint cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + sqrt(SQ(cake[i] - cake[now]) + SQ(cake[i] + cake[now])));\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j, k;\n    double res;\n    \n    while (scanf(\"%d\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%d\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        res = INF;\n        for (k = 0; k < n; k++){\n            for (i = 0; i < (1 << n); i++){\n                for (j = 0; j < n; j++){\n                    dp[i][j] = -1;\n                }\n            }\n            res = min(res, tsp(k, 0) + cake[k]);\n        }\n        \n        if (res <= len){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\nint i,j,k,n,buc[15],cake[15];\ndouble box,list[11][11],goal,leng[2];\nchar sp;\n\nint main(){\n\tfor(i=3;i<=10;i++){\n\t\tfor(j=3;j<=10;j++){\n\t\t\tlist[i][j]=i+j-sqrt((double)((i+j)*(i+j)-(i-j)*(i-j)));\n\t\t}\n\t}\n\n\twhile(scanf(\"%lf\",&box)!=EOF){\n\t\tn=0;goal=0;\n\t\tfor(i=0;i<11;i++)buc[i]=0;\n\t\twhile(1){\n\t\t\tscanf(\"%c\",&sp);\n\t\t\tif(sp=='\\n')break;\n\t\t\t\n\t\t\tscanf(\"%d\",&k);\n\t\t\tbuc[k]++;\n\t\t\tgoal+=k*2;\n\t\t\tn++;\n\t\t}\n\t\tgoal-=box;\n\t\t\n\t\tif(goal<=0){printf(\"OK\\n\");continue;}\n\t\tfor(i=3,j=0;i<11 && j<n;i++){for(;buc[i]>0;j++,buc[i]--)cake[j]=i;}\n\n\t\tleng[0]=0;leng[1]=0;\n\t\tfor(k=1,i=0,j=0;k<n;k++){\n\t\t\tleng[0]+=list[cake[i]][cake[n-j-1]];\n\t\t\tleng[1]+=list[cake[j]][cake[n-i-1]];\n\t\t\tif(i<=j)i=j+1;else{j++;i--;}\n\t\t}\n\n\t\tif(leng[0]>=goal || leng[1]>=goal)printf(\"OK\\n\"); else printf(\"NA\\n\");\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\n#include<string.h>\ndouble f(int a,int b){return sqrt((a+b)*(a+b)-(a-b)*(a-b));}\nint nxpt(char *s){\n  int i,l=strlen(s),max=0,f[260]={0};\n  for(l--;l+1&&max<=s[l];l--)f[max=s[l]]++;\n  if(l<0)return 0;\n  f[s[l]]++;\n  for(i=s[l]+1;f[i]==0;i++);\n  f[s[l]=i]--;\n  for(i=0;s[++l];f[s[l]=i]--){\n    while(f[i]==0)i++;\n  }\n  return 1;\n}\nint main(){\n  char s[100010],a[20];\n  int i,r,n[20],m;\n  double d[30],l;\n  while(fgets(s,100000,stdin)!=NULL){\n    for(i=r=m=0;s[i];i++){\n      if('0'<=s[i]&&s[i]<='9')m=m*10+s[i]-'0';\n      else{\n\ta[r]=r+1;\n\tn[r++]=m;\n\tm=0;\n      }\n    }\n    a[r-1]=0;\n    //for(i=0;i<r-1;i++)printf(\"%d\\n\",a[i]);\n    do{//printf(\"\\n\");\n      for(i=l=0;i+2<r;i++){//printf(\"%d %d\\n\",n[a[i]],n[a[i+1]]);\n\td[i]=f(n[a[i]],n[a[i+1]]);\n\tl+=d[i];//printf(\"%f \",l);\n      }//printf(\"%f \",l+n[1]+n[r-1]);\n      if(l+n[a[0]]+n[a[r-2]]>n[0])goto END;\n      for(i=0;i+3<r;i++){\n\tif(d[i]+d[i+1]<f(n[a[i]],n[a[i+2]]))goto END;\n      }\n      printf(\"OK\\n\");\n      goto NEXT;\n    END:;\n    }while(nxpt(a));\n    printf(\"NA\\n\");\n  NEXT:;\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#define MIN(x,y) (x)>(y)?(y):(x)\n\nint r[12],flag[12],roll[12];\ndouble min;\n\nint compare_int(const void *a, const void *b){\n    return *(int*)a - *(int*)b;\n}\n\ndouble calc(int n){\n\tint i;\n\tdouble res = (r[roll[0]]+r[roll[n-1]])*1.0;\n\t\n\tfor(i = 0;i < n-1;i++){\n\t\tres += sqrt(4.0*r[roll[i]]*r[roll[i+1]]);\n\t}\n\t\n\treturn res;\n}\n\nvoid foo(int n,int N){\n\tint i;\n\t\n\tif(n == N){\n\t\tmin = MIN(calc(n),min);\n\t\treturn;\n\t}\n\t\n\tfor(i = 0;i < N;i++){\n\t\tif(!flag[i]){\n\t\t\tif(roll[n] == -1){\n\t\t\t\troll[n] = i;\n\t\t\t\tflag[i] = 1;\n\t\t\t\tfoo(n+1,N);\n\t\t\t\tflag[i] = 0;\n\t\t\t}else{\n\t\t\t\tif(r[roll[n]] != r[i]){\n\t\t\t\t\troll[n] = i;\n\t\t\t\t\tflag[i] = 1;\n\t\t\t\t\tfoo(n+1,N);\n\t\t\t\t\tflag[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main(void) {\n\tint box,i,n;\n\tchar str[64],*p;\n\t\n\twhile(fgets(str,64,stdin) != NULL){\n\t\tbox = atoi(strtok(str,\" \\r\\n\"));\n\t\t\n\t\tn = 0;\n\t\twhile(p = strtok(NULL,\" \\r\\n\"),p != NULL){\n\t\t\tr[n++] = atoi(p);\n\t\t}\n\t\t\n\t\tqsort(r,n,sizeof(int),compare_int);\n\t\tmemset(flag,0,sizeof(flag));\n\t\tfor(i = 0;i < n;i++){\n\t\t\troll[i] = -1;\n\t\t}\n\t\tmin = 120.0;\n\t\tfoo(0,n);\n\t\t\n\t\tprintf(\"%s\\n\",min <= box ? \"OK\" : \"NA\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <string.h>\n\nint ok;\nint r[16] = {0};\nint visit[16] = {0};\nint md, N;\n\nstatic inline int sq(int n) { return (n * n); }\nvoid dfs(double d, int prev, int n)\n{\n\tint i;\n\tif (n == 0){\n\t\tif (d + prev <= md) ok = 1;\n\t\t//printf(\"%f\\n\", d + prev);\n\t\treturn;\n\t}\n\tfor (i = 0; i < N; ++i){\n\t\tif (visit[i]) continue;\n\t\tvisit[i] = 1;\n\t\tdfs(d + sqrt(sq(prev + r[i]) - sq(prev - r[i])), r[i], n - 1);\n\t\tvisit[i] = 0;\n\t\tif (ok) return;\n\t}\n}\n\nint main(void)\n{\n\tint i;\n\tchar buf[1024];\n\tchar *p;\n\n\twhile (fgets(buf, sizeof(buf), stdin)){\n\t\tmd = atoi(buf);\n\t\tp = buf;\n\t\tN = 0;\n\t\twhile (p = strchr(p, ' ')){\n\t\t\tp++;\n\t\t\tr[N] = atoi(p);\n\t\t\tN++;\n\t\t}\n\t\tok = 0;\n\t\tfor (i = 0; i < N; ++i){\n\t\t\tvisit[i] = 1;\n\t\t\tdfs(r[i], r[i], N - 1);\n\t\t\tvisit[i] = 0;\n\t\t\tif (ok) {\n\t\t\t\tputs(\"OK\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!ok) puts(\"NA\");\n\t}\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n#include <stdlib.h>\n\n#define MAX_LEN 20\n#define MAX_NUM 12\n#define MAX_SQRT 100\n\n//#define INT(x) ((int)(x+0.999999999999999999999999999999))\n\n/* http://www5.airnet.ne.jp/tomy/cpro/pe1.htm */\nvoid showperm(int p[], int n);\t/* ±Ì[`ÅeñÉÎ·éðs¤ */\nvoid genperm1(int p[], int n);\t/* ¬ñ¶¬[`C«®ÅÍÈ¢\t*/\n\nvoid init_sqrt(void);\n\n\nint cake[MAX_NUM]; /* P[LTCY */\ndouble min; /* ÅKð */\n\ndouble sq[MAX_SQRT+1];/* [gvZÊ */\n\nint main(){\n\tchar buf[MAX_LEN];\n\tint num; /* P[LÂ */\n\tint width; /*  Ì·³ */\n\tint offset; /* obt@àùÇÊu */\n\tint oftmp;\n\tint p[MAX_NUM];/* ñpobt@ */\n\t\n\tinit_sqrt();\n\t\n\twhile(fgets(buf,MAX_LEN,stdin)!=NULL){\n\t\t/* Âæ¾ */\n\t\tsscanf(buf,\"%d%n\",&width,&oftmp);\n\t\toffset = oftmp;\n\t\t/* TCYæ¾ */\n\t\tnum = 0;\n\t\twhile(sscanf(buf+offset,\"%d%n\",&cake[num],&oftmp) > 0){\n\t\t\toffset+=oftmp;\n\t\t\tnum++;\n\t\t}\n\t\t\n\t\t/* èvZ */\n\t\t\n\t\t//printf(\"wid: %d\\n\",width);\n\t\t//{int i;for(i=0;i<num;i++)printf(\"c%d: %d\\n\",i,cake[i]);}\n\t\tmin = width+1;\n\t\tgenperm1(p,num);\n\t\t//printf(\"%.200f %d\\n\",min,width);\n\t\tprintf(min<=width?\"OK\\n\":\"NG\\n\");\n\t}\n\treturn 0;\n}\n\nvoid init_sqrt(void){\n\tint i;\n\tfor(i=0;i<MAX_SQRT+1;i++){\n\t\tswitch(i){\n\t\t\tcase 0:\n\t\t\tsq[i] = 0;\n\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\tsq[i] = 2*1;\n\t\t\tbreak;\n\t\t\tcase 2*2:\n\t\t\tsq[i] = 2*2;\n\t\t\tbreak;\n\t\t\tcase 3*3:\n\t\t\tsq[i] = 2*3;\n\t\t\tbreak;\n\t\t\tcase 4*4:\n\t\t\tsq[i] = 2*4;\n\t\t\tbreak;\n\t\t\tcase 5*5:\n\t\t\tsq[i] = 2*5;\n\t\t\tbreak;\n\t\t\tcase 6*6:\n\t\t\tsq[i] = 2*6;\n\t\t\tbreak;\n\t\t\tcase 7*7:\n\t\t\tsq[i] = 2*7;\n\t\t\tbreak;\n\t\t\tcase 8*8:\n\t\t\tsq[i] = 2*8;\n\t\t\tbreak;\n\t\t\tcase 9*9:\n\t\t\tsq[i] = 2*9;\n\t\t\tbreak;\n\t\t\tcase 10*10:\n\t\t\tsq[i] = 2*10;\n\t\t\tbreak;\n\t\t\tdefault:\n\t\t\tsq[i] = 2*sqrt(i);\n\t\t\tbreak;\n\t\t}\n\t\t//printf(\"%3d %.5f\\n\",i,sq[i]);\n\t}\n}\n\nvoid showperm(int p[], int n){\n\tdouble sum;\n\tint i;\n\tsum = cake[p[0]-1];\n\t//printf(\"%.5f\\n\",(double)cake[p[0]-1]);\n\tfor(i=0;i<n-1;i++){\n\t\t//printf(\"%.5f\\n\",sq[cake[p[i]-1]*cake[p[i+1]-1]]);\n\t\tsum += sq[cake[p[i]-1]*cake[p[i+1]-1]];\n\t}\n\tsum += cake[p[n-1]-1];\n\t//printf(\"%.5f\\n\",(double)cake[p[n-1]-1]);\n\tif(min>sum)min = sum;\n\t//for(i=0;i<n;i++)printf(\"%2d \",cake[p[i]-1]);\n\t//printf(\":%.5f\\n\",sum);\n}\n\n/* ñ¶¬ASY */\n/* http://www5.airnet.ne.jp/tomy/cpro/pe1.htm */\nvoid genperm1(int p[], int n)\n{\n\tint *c, *pc, *q;\n\tint k, t;\n\n\tc = (int *)malloc(sizeof(int) * n);\n\tif(c == NULL)\n\t{\n\t\tfprintf(stderr, \"Error : out of memory  in genperm1()\\n\");\n\t\texit(-1);\n\t}\n\n\tfor(k = 1, q = p, pc = c; k <= n; )\t*q++ = *pc++ = k++;\n\tk = 1;\n\tpc = c;\n\tdo\n\t{\n\t\tt = *(p + k);\n\t\t*(p + k) = *(q = p + ((k & 1)? *pc: 0));\n\t\t*q = t;\n\t\tshowperm(p, n);\n\t\tk = 1;\n\t\tpc = c;\n\t\twhile(*pc == 0)\t*pc++ = k++;\n\t\t(*pc)--;\n\t} while(k < n);\n\tfree((char *)c);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define N_MAX 12\n#define EPS (1e-7)\n\nint width;\nint n;\nint r[N_MAX];\n\ndouble best[N_MAX][1<<N_MAX];\n\nint judge(int prev,int used,double cur_width) {\n\tint i;\n\tif(best[prev][used]>EPS && cur_width+EPS>best[prev][used])return 0;\n\tbest[prev][used]=cur_width;\n\tif(cur_width>width+EPS)return 0;\n\tif(used==(1<<n)-1) {\n\t\tcur_width+=r[prev];\n\t\treturn cur_width<width+EPS;\n\t}\n\tfor(i=0;i<n;i++) {\n\t\tif((used&(1<<i))==0) {\n\t\t\t/* sqrt((r1+r2)^2 - (r1-r2)^2) */\n\t\t\tdouble delta=2.0*sqrt(r[prev]*r[i]);\n\t\t\tif(judge(i,used|(1<<i),cur_width+delta))return 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main(void) {\n\tchar input_buffer[1024];\n\twhile(fgets(input_buffer,sizeof(input_buffer),stdin)!=NULL) {\n\t\tint cur_num=0;\n\t\tint cur_index=-1;\n\t\tint i;\n\t\tint ok=0;\n\t\tfor(i=0;;i++) {\n\t\t\tif('0'<=input_buffer[i] && input_buffer[i]<='9') {\n\t\t\t\tcur_num=cur_num*10+input_buffer[i]-'0';\n\t\t\t} else {\n\t\t\t\tif(cur_num>0) {\n\t\t\t\t\tif(cur_index<0)width=cur_num; else r[cur_index]=cur_num;\n\t\t\t\t\tcur_index++;\n\t\t\t\t}\n\t\t\t\tcur_num=0;\n\t\t\t\tif(input_buffer[i]=='\\0') {\n\t\t\t\t\tn=cur_index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmemset(best,0,sizeof(best));\n\t\tfor(i=0;i<n;i++) {\n\t\t\tok=ok || judge(i,1<<i,(double)r[i]);\n\t\t}\n\t\tputs(ok?\"OK\":\"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\nint len, cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0 && now >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1){\n        return (cake[now]);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + (now >= 0 ? sqrt(SQ(cake[i] + cake[now]) - SQ(cake[i] - cake[now])) : cake[i]));\n        }\n    }\n    \n    return (now >= 0 ? dp[bit][now] = res : res);\n}\n\nint main(void)\n{\n    int i, j;\n    char str[512];\n    int flag;\n    \n    while (fgets(str, 512, stdin) != NULL){\n        i = flag = len = n = 0;\n        memset(cake, 0, sizeof(cake));\n        while (str[i] != '\\0'){\n            if (flag == 0){\n                while (str[i] != ' ' && str[i] != '\\n'){\n                    len = len * 10 + str[i++] - '0';\n                }\n                i++;\n                flag = 1;\n            }\n            else {\n                while (str[i] != ' ' && str[i] != '\\n'){\n                    cake[n] = cake[n] * 10 + str[i++] - '0';\n                }\n                n++;\n                i++;\n            }\n        }\n        \n        for (i = 0; i < (1 << 12); i++){\n            for (j = 0; j < 12; j++){\n                dp[i][j] = -1 * INF;\n            }\n        }\n        \n        if (tsp(0, -1) < len + EPS){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <math.h>\n#define MIN(x,y) ((x)>(y)?(y):(x))\n\nint N;\nint r[12],data[12],flag[12];\ndouble min;\n\nint compare_int(const void *a, const void *b){\n    return *(int*)a - *(int*)b;\n}\n\ndouble calc(){\n\tint i;\n\tdouble len = r[data[0]]+r[data[N-1]];\n\t\n\tfor(i = 0;i < N-1;i++){\n\t\tlen += 2*sqrt(r[data[i]]*r[data[i+1]]*1.0);\n\t}\n\t\n\treturn len;\n}\n\nvoid foo(int n){\n    int i;\n     \n    if(n == N){\n        min = MIN(min,calc());\n        return;\n    }\n     \n    for(i = 0;i < N;i++){\n        if(!flag[i]){\n            flag[i] = 1;\n            data[n] = i;\n            foo(n+1);\n            flag[i] = 0;\n        }\n    }\n}\nint main(void) {\n    int n,dp,p;\n    double box,len;\n    char *tmp,str[128];\n     \n    while(gets(str) != NULL){\n        box = atoi(strtok(str,\" \\r\\n\"))*1.0;\n        N = 0;\n        while((tmp = strtok(NULL,\" \\r\\n\")) != NULL){\n            r[N++] = atoi(tmp);\n        }\n        qsort(r,N,sizeof(int),compare_int);\n        \n        min = N*20.0;\n        memset(flag,0,sizeof(flag));\n        foo(n);\n        \n        len = min;\n        //printf(\"%f:\",len);\n         \n        if(box-len >= 0.0){\n            printf(\"OK\\n\");\n        }else{\n            printf(\"NA\\n\");\n        }\n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "// Aizu Vol-1 0120: Patisserie\n// 2017.8.21 bal4u@uu\n\n#include <stdio.h>\n#include <ctype.h>\n#include <string.h>\n#include <math.h>\n\nchar *gets(char *);\nchar buf[200], *p;\n\nint getInt(void)\n{\n\tint n = 0;\n\twhile (isspace(*p)) p++;\n\tif (!*p) return -1;\n\twhile (isdigit(*p)) n = 10 * n + (*p++ - '0');\n\treturn n;\n}\n\ntypedef struct { int r, n, f; } T;\n\nint lim;\nT r[15]; int n, N;\ndouble d[15][15];\n#define EQ(a,b) (fabs(a-b)<= 0.000001)\n\nint combi(int m, int i, double w)\n{\n\tint j;\n\tdouble x, l;\n\n\tif (m == N) {\n\t\tx = w + r[i].r;\n\t\treturn (EQ(x, lim) || x <= lim);\n\t}\n\tfor (j = 0; j < n; j++) {\n\t\tif (r[j].f == r[j].n) continue;\n\t\tl = d[r[i].r][r[j].r];\n\t\tif (w + l < lim) {\n\t\t\tr[j].f++;\n\t\t\tif (combi(m + 1, j, w + l)) return 1;\n\t\t\tr[j].f--;\n\t\t}\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tint i, j, t, s;\n\tint c[15];\n\t\n\tfor (i = 3; i <= 10; i++) for (j = i; j <= 10; j++)\n\t\td[i][j] = d[j][i] = 2.0 * sqrt(i * j);\n\twhile (gets(p = buf) != NULL) {\n\t\tlim = getInt();\n\t\tmemset(c, 0, sizeof(c));\n\t\tfor (N = s = 0; (t = getInt()) > 0; N++) s += t, c[t]++;\n\t\tif (2 * s <= lim) { puts(\"OK\"); continue; }\n\t\tfor (n = i = 0; i <= 10; i++)\n\t\t\tif (c[i] > 0) r[n].r = i, r[n].n = c[i], r[n++].f = 0;\n\t\tif (!EQ(r[0].r, lim) && r[0].r >= lim) { puts(\"NA\"); continue; }\n\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tr[i].f++;\n\t\t\tif (combi(1, i, r[i].r)) break;\n\t\t\tr[i].f--;\n\t\t}\n\t\tputs(i < n ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A0120\nTitle Patisserie\n*/\n#include <stdio.h>\n// Select Below\n//#include <stdlib.h>\n#include <string.h>\n#include <float.h>\n#include <math.h>\n//#include <limits.h>\n//Global data section\nchar buf[100];\nint r[12];\nint r1[12];\nint n;\nint l;\n//\nint compare_int(const void *a, const void *b)\n{\n    return *(int*)b - *(int*)a;\n}\n\n\nvoid re_order(int r[],int r1[],int n)\n{\n        int i;\n\n        qsort(r,n,sizeof(int),compare_int);\n#ifdef DEBUG\n        print(r,n);\n#endif\n                \n        if((n & 1)==0)\n        {\n                for(i=0;i<n/2;i++)\n                {\n                        r1[i*2]=r[i];\n                        r1[i*2+1]=r[n-i-1];\n                }\n                return;\n        }\n        if(r[n/2-1]-r[n/2] < r[n/2]-r[n/2+1])\n        {\n                for(i=0;i<n/2;i++)\n                {\n                        r1[i*2]=r[i];\n                        r1[i*2+1]=r[n-i-1];\n                }\n        }\n        else\n        {\n                for(i=0;i<n/2;i++)\n                {\n                        r1[i*2]=r[n-i-1];\n                        r1[i*2+1]=r[i];\n                }\n        }\n        r1[n-1]=r[n/2];\n}\nvoid print(int r[] ,int n)\n{\n        int i;\n\n        printf(\"%d:\",l);\n        for(i=0;i<n;i++)\n                printf(\"%d \",r[i]);\n        printf(\"\\n\");\n}\ndouble calc(int r[],int n)\n{\n        int i;\n        double ret;\n        \n        ret = (double)r[0];\n        for(i=0;i<n;i++)\n                ret += 2*sqrt(r[i]*r[i+1]);\n        ret += (double)r[n-1];\n        return(ret);\n}\nmain()\n{\n        char *p,i;\n        double total;\n\n        while(fgets(buf,100,stdin))\n        {\n                \n                p=strtok(buf,\" \");\n                sscanf(p,\"%d\",&l);\n\n                i=0;\n                while(p=strtok(NULL,\" \"))\n                {\n                        sscanf(p,\"%d\",&r[i]);\n                        i++;\n                }\n                n=i;\n\n                if(n>=3)\n                        re_order(r,r1,n);\n#ifdef DEBUG\n                print(r1,n);\n#endif\n                total=calc(r1,n);\n#ifdef DEBUG\n                printf(\"%lf\\n\",total);\n#endif\n                printf(\"%s\\n\",(total<=(double)l)?\"OK\":\"NA\");\n        }\n\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdlib.h>\n#include <math.h>\n\nint cmp_int(const void *a, const void *b) {\n    return *(int*)a - *(int*)b;\n}\n\nint main(void) {\n    char buf[100], *tok;\n    int w, r[12], ri[12], n, i, j, k;\n    double dist[12][12], d;\n\n    while (gets(buf) != NULL) {\n        tok = strtok(buf, \" \");\n        sscanf(tok, \"%d\", &w);\n        n = 0;\n        while ((tok = strtok(NULL, \" \")) != NULL) {\n            sscanf(tok, \"%d\", &(r[n++]));\n        }\n        qsort(r, n, sizeof(int), cmp_int);\n        for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n                dist[i][j] = sqrt(pow(r[i]+r[j], 2) - pow(r[i]-r[j], 2));\n            }\n        }\n\n        for (i = 0, j = n - 1, k = 0; i < n / 2 + (n&1); i++, j--) {\n            ri[k++] = i;\n            ri[k++] = j;\n        }\n        d = r[ri[0]] + r[ri[n-1]];\n        for (i = 1; i < n; i++) {\n            d += dist[ri[i-1]][ri[i]];\n        }\n        if (d <= w) {\n            puts(\"OK\");\n            continue;\n        }\n\n        for (i = 0, j = n - 1, k = 0; i < n / 2 + (n&1); i++, j--) {\n            ri[k++] = j;\n            ri[k++] = i;\n        }\n        d = r[ri[0]] + r[ri[n-1]];\n        for (i = 1; i < n; i++) {\n            d += dist[ri[i-1]][ri[i]];\n        }\n        if (d <= w) {\n            puts(\"OK\");\n            continue;\n        }\n        puts(\"NA\");\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 0120: Patisserie\n// 2017.8.21 bal4u@uu\n// 201711.20\n\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\nint r[13];\ndouble d[13][13];\t\t\t\t\t// ???????????±???????????????????°´????????¢\ndouble dp[13][4100];\t\t\t\t// ?°´????????¢, ??´?????????????????±??????????±\\??´?????????\nchar buf[50], *p;\n\nint getint()\n{\n\tint n = 0;\n\twhile (*p >= '0') n = (n<<3) + (n<<1) + (*p++ & 0xf);\n\treturn n;\n}\n\nint main()\n{\n\tint w, n, i, ii, j, k;\n\tint lim;\n\tdouble x;\n\n\tfor (i = 3; i <= 10; i++) for (ii = i*i, j = i; j <= 10; j++, ii+=i)\n\t\td[i][j] = d[j][i] = 2 * sqrt(ii);\n\n\twhile (fgets(p=buf, 50, stdin) != NULL) {\n\t\tw = getint(); p++;\n\t\tn = 0, j = 0;\n\t\twhile (*p >= ' ') {\ti = getint(), p++, r[n++] = i, j += i; }\n\t\tif (2 * j <= w) { puts(\"OK\"); continue; }\n\n\t\tmemset(dp, 0x55, sizeof(dp));\n\t\tfor (i = 0; i < n; i++)\tdp[i][1<<i] = r[i];\n\n\t\tlim = (1 << n) - 1;\n\t\tfor (k = 0; k <= lim; k++) {\n\t\t\tfor (ii = 1, i = 0; i < n; i++, ii <<= 1) {\n\t\t\t\tif (k & ii) continue;\n\t\t\t\tfor (j = 0; j < n; j++) {\n\t\t\t\t\tif (dp[j][k] > 256) continue;\n\t\t\t\t\tx = dp[j][k] + d[r[i]][r[j]];\n\t\t\t\t\tif (x < dp[i][k|ii]) dp[i][k|ii] = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (x = 1000, i = 0; i < n; i++) {\n\t\t\tif (dp[i][lim] == 0) continue;\n\t\t\tdp[i][lim] += r[i];\n\t\t\tif (dp[i][lim] < x) x = dp[i][lim];\n\t\t}\n\t\tputs(x <= w ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-5)\n\ndouble len;\ndouble cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!((bit >> i) & 1)){\n            res = min(res, tsp(bit | (1 << i), i) + sqrt(SQ(cake[i] + cake[now]) - SQ(cake[i] - cake[now])));\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    \n    while (scanf(\"%lf\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%lf\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        for (i = 0; i < (1 << 12); i++){\n            for (j = 0; j < 12; j++){\n                dp[i][j] = -1 * INF;\n            }\n        }\n        \n        if (tsp(0, 0) < len + EPS){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r,t;\nD[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\n\tint i=0;\n\tM[p][f]=0;\n\tfor(;i<n;i++){\n\t\tif(f&1<<i)continue;\n\t\tif(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]*1.0),M[p][f]<t)M[p][f]=t;\n\t}\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);){\n\td=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\tfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n\tputs(d-r<l+1e-5?\"OK\":\"NA\");\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[N],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r<=l?\"OK\":\"NA\")){\nfor(d=n=0;getchar()!='\\n';d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;i++)if(t=dfs(i,1<<i),r<t)r=t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\nint len;\nint cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + sqrt(SQ(cake[i] - cake[now]) + SQ(cake[i] + cake[now])));\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j, k;\n    double res;\n    \n    while (scanf(\"%d\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%d\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        res = INF;\n        for (k = 0; k < n; k++){\n            for (i = 0; i < (1 << n); i++){\n                for (j = 0; j < n; j++){\n                    dp[i][j] = -1;\n                }\n            }\n            res = min(res, tsp(k, 0) + cake[k]);\n        }\n        \n        if (res - len < EPS){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<math.h>\nint main(void)\n{\n\tint w,n,min,max,r[12];\n\tdouble length;\n\tint i,j,temp;\n\tchar s;\n\twhile (scanf(\"%d\", &w) != EOF) {\n\t\tn = 0;\n\t\tlength = 0;\n\t\twhile (1) {\n\t\t\tscanf(\"%c\",&s);\n\t\t\tif (s == '\\n')break;\n\n\t\t\tscanf(\"%d\",&r[n]);\n\t\t\tn++;\n\t\t}\n\t\tmin = r[0];\n\t\tmax = r[0];\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfor (j = i + 1; j < n; j++) {\n\t\t\t\tif (i % 2 != 0) {\n\t\t\t\t\tif (r[i] < r[j]) {\n\t\t\t\t\t\ttemp = r[i];\n\t\t\t\t\t\tr[i] = r[j];\n\t\t\t\t\t\tr[j] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (r[i] > r[j]) {\n\t\t\t\t\t\ttemp = r[i];\n\t\t\t\t\t\tr[i] = r[j];\n\t\t\t\t\t\tr[j] = temp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tlength = r[0] +r[n-1] ;\n\t\tfor (i = 0; i < n-1; i++) {\n\t\t\tif (r[i] == r[i + 1]) \n\t\t\t\tlength += r[i] + r[i + 1];\n\t\t\telse \n\t\t\t\tlength += sqrt(pow((double)(r[i] + r[i + 1]), 2.0) - pow((double)(r[i] - r[i + 1]), 2.0));\n\t\t}\n\t\tif (w-length < 0)\n\t\t\tprintf(\"NA\\n\");\n\t\telse\n\t\t\tprintf(\"OK\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-5)\n\ndouble len;\ndouble cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0 && now >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1){\n        return (cake[now]);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!((bit >> i) & 1)){\n            if (now >= 0){\n                res = min(res, tsp(bit | (1 << i), i) + sqrt(SQ(cake[i] + cake[now]) - SQ(cake[i] - cake[now])));\n            }\n            else {\n                res = min(res, tsp(bit | (1 << i), i) + cake[i]);\n            }\n        }\n    }\n    \n    if (now >= 0){\n        return (dp[bit][now] = res);\n    }\n    else {\n        return (res);\n    }\n}\n\nint main(void)\n{\n    int i, j;\n    \n    while (scanf(\"%lf\", &len) != EOF){\n        getchar();\n        n = 0;\n        while (1){\n            scanf(\"%lf\", &cake[n++]);\n            \n            if (getchar() == '\\n'){\n                break;\n            }\n        }\n        \n        for (i = 0; i < (1 << n); i++){\n            for (j = 0; j < n; j++){\n                dp[i][j] = -1 * INF;\n            }\n        }\n        \n        if (tsp(0, -1) < len + EPS){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "// Aizu Vol-1 0120: Patisserie\n// 2017.8.21 bal4u@uu\n\n#include <stdio.h>\n#include <ctype.h>\n#include <string.h>\n#include <math.h>\n\nchar *gets(char *);\nchar buf[200], *p;\n\nint getInt(void)\n{\n\tint n = 0;\n\twhile (isspace(*p)) p++;\n\tif (!*p) return -1;\n\twhile (isdigit(*p)) n = 10 * n + (*p++ - '0');\n\treturn n;\n}\n\ntypedef struct { int r, n, f; } T;\n\nint lim;\nT r[15]; int n, N;\ndouble d[15][15];\n#define EQ(a,b) (fabs(a-b)<= 0.00001)\n\nint combi(int m, int i, double w)\n{\n\tint j;\n\tdouble x, l;\n\n\tif (m == N) {\n\t\tx = w + r[i].r;\n\t\treturn (EQ(x, lim) || x <= lim);\n\t}\n\tfor (j = 0; j < n; j++) {\n\t\tif (r[j].f == r[j].n) continue;\n\t\tl = d[r[i].r][r[j].r];\n\t\tif (w + l + r[j].r > lim) continue;\n\t\tr[j].f++;\n\t\tif (combi(m + 1, j, w + l)) return 1;\n\t\tr[j].f--;\n\t}\n\treturn 0;\n}\n\nint main()\n{\n\tint i, j, t, s;\n\tint c[15];\n\t\n\tfor (i = 3; i <= 10; i++) for (j = i; j <= 10; j++)\n\t\td[i][j] = d[j][i] = 2.0 * sqrt(i * j);\n\twhile (gets(p = buf) != NULL) {\n\t\tlim = getInt();\n\t\tmemset(c, 0, sizeof(c));\n\t\tfor (N = s = 0; (t = getInt()) > 0; N++) s += t, c[t]++;\n\t\tif (2 * s <= lim) { puts(\"OK\"); continue; }\n\t\tfor (n = i = 0; i <= 10; i++)\n\t\t\tif (c[i] > 0) r[n].r = i, r[n].n = c[i], r[n++].f = 0;\n\t\tif (!EQ(r[0].r, lim) && r[0].r >= lim) { puts(\"NA\"); continue; }\n\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tr[i].f++;\n\t\t\tif (combi(1, i, r[i].r)) break;\n\t\t\tr[i].f--;\n\t\t}\n\t\tputs(i < n ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 0120: Patisserie\n// 2017.8.21 bal4u@uu\n// 2017.11.20\n\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define INF 1000\nint r[13], n, lim;\ndouble d[13][13];\t\t\t\t\t// ???????????±???????????????????°´????????¢\ndouble dp[4100][13];\nchar buf[50], *p;\n\nint getint()\n{\n\tint n = 0;\n\twhile (*p >= '0') n = (n<<3) + (n<<1) + (*p++ & 0xf);\n\treturn n;\n}\n\ndouble rec(int b, int k)\n{\n\tint i, ii;\n\tdouble ans, x;\n\n\tif (dp[b][k] >= 0) return dp[b][k];\n\tif (b == lim) ans = r[k];\n\telse {\n\t\tans = INF;\n\t\tfor (ii = 1, i = 0; i < n; i++, ii<<=1) {\n\t\t\tif (b & ii) continue;\n\t\t\tx = rec(b | ii, i) + d[r[k]][r[i]];\n\t\t\tif (x < ans) ans = x;\n\t\t}\n\t}\n\treturn dp[b][k] = ans;\n}\n\nint main()\n{\n\tint w, i, j;\n\tdouble ans, x;\n\n\tfor (i = 3; i <= 10; i++) {\n\t\tint jj;\n\t\tfor (jj = i*i, j = i; j <= 10; j++, jj+= i)\n\t\td[i][j] = d[j][i] = 2 * sqrt(jj);\n\t}\n\n\twhile (fgets(p=buf, 50, stdin) != NULL) {\n\t\tw = getint(); p++;\n\t\tn = 0, j = 0;\n\t\twhile (*p >= ' ') {\ti = getint(), p++, r[n++] = i, j += i; }\n\t\tif (2 * j <= w) { puts(\"OK\"); continue; }\n\t\tlim = (1 << n) - 1;\n\t\tans = INF;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tmemset(dp, -0x33, sizeof(dp));\n\t\t\tx = rec(1<<i, i) + r[i];\n\t\t\tif (x < ans) ans = x;\n\t\t}\n\t\tputs(ans <= w ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 0120: Patisserie\n// 2017.8.21 bal4u@uu\n// 201711.20\n\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define R 100000\nint r[13];\nint d[13][13];\t\t\t\t\t// ???????????±???????????????????°´????????¢\nint dp[13][4100];\t\t\t\t// ?°´????????¢, ??´?????????????????±??????????±\\??´?????????\nchar buf[50], *p;\n\nint getint()\n{\n\tint n = 0;\n\twhile (*p >= '0') n = (n<<3) + (n<<1) + (*p++ & 0xf);\n\treturn n;\n}\n\nint main()\n{\n\tint w, n, i, ii, j, k;\n\tint lim, x;\n\n\tfor (i = 3; i <= 10; i++) for (ii = i*i, j = i; j <= 10; j++, ii+=i)\n\t\td[i][j] = d[j][i] = (int)(2*R * sqrt(ii));\n\n\twhile (fgets(p=buf, 50, stdin) != NULL) {\n\t\tw = getint(); p++;\n\t\tn = 0, j = 0;\n\t\twhile (*p >= ' ') {\ti = getint(), p++, r[n++] = i, j += i; }\n\t\tif (2 * j <= w) { puts(\"OK\"); continue; }\n\t\tw *= R;\n\n\t\tmemset(dp, 0x55, sizeof(dp));\n\t\tfor (ii = 1, i = 0; i < n; i++, ii <<= 1) dp[i][ii] = r[i]*R;\n\n\t\tlim = (1 << n) - 1;\n\t\tfor (k = 0; k <= lim; k++) {\n\t\t\tfor (ii = 1, i = 0; i < n; i++, ii <<= 1) {\n\t\t\t\tif (k & ii) continue;\n\t\t\t\tfor (j = 0; j < n; j++) {\n\t\t\t\t\tx = dp[j][k] + d[r[i]][r[j]];\n\t\t\t\t\tif (x < dp[i][k|ii]) dp[i][k|ii] = x;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (x = 240*R, i = 0; i < n; i++) {\n\t\t\tdp[i][lim] += r[i]*R;\n\t\t\tif (dp[i][lim] < x) x = dp[i][lim];\n\t\t}\n\t\tputs(x <= w ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#define N 12\ndouble M[N][1<<N],r;\nint D[N],n;\ndouble dfs(int p,int f){\n\tif(M[p][f]<0){\n\t\tint i=0;\n\t\tM[p][f]=0;\n\t\tfor(;i<n;i++){\n\t\t\tif(f&1<<i)continue;\n\t\t\tM[p][f]=max(M[p][f],dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]));\n\t\t}\n\t}\n\treturn M[p][f];\n}\nmain(){\n\tint L,l,i,j,d;\n\tfor(;~scanf(\"%d\",&L);){\n\t\td=0;do{scanf(\"%d\",D+n);d+=D[n++]*2;}while(getchar()!='\\n');\n\t\tfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\n\t\tfor(r=i=0;i<n;i++)r=max(r,dfs(i,1<<i));\n\t\tputs(d-r<=L?\"OK\":\"NA\");\n\t}\nexit(0);\n}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r>l?\"NA\":\"OK\")){\nfor(d=n=0;getchar()-10;d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;)t=dfs(i++,1<<i),r=r>t?r:t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "// Aizu Vol-1 0120: Patisserie\n// 2017.8.5\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n#include <string.h>\n#include <math.h>\n\nchar *gets(char *);\nchar buf[200], *p;\n\nint getInt(void)\n{\n\tint n = 0;\n\twhile (isspace(*p) || *p == ',') p++;\n\tif (!*p) return -1;\n\twhile (isdigit(*p)) n = 10 * n + (*p++ - '0');\n\treturn n;\n}\n\ndouble lim;\nint n, r[15];\n#define EQ(a,b) (fabs(a-b)<= 0.00001)\n\nint main()\n{\n\tint i, j, k, t;\n\tdouble w1, w2;\n\tint ci = 0;\n\n\twhile (gets(p = buf) != NULL) {\n\t\tlim = getInt();\n\t\tfor (n = 0; (r[n] = getInt()) > 0; n++);\n\t\tif (!n) { puts(\"OK\"); continue; }\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tk = i;\n\t\t\tfor (j = i + 1; j < n; j++) if (r[k] > r[j]) k = j;\n\t\t\tif (k != i) t = r[i], r[i] = r[k], r[k] = t;\n\t\t}\n\t\tfor (w1 = r[0], i = 0, k = 1, j = n - 1; k < n; k++) {\n\t\t\tw1 += 2.0 * sqrt(r[i] * r[j]);\n\t\t\tif (k & 1) i++;\n\t\t\telse j--;\n\t\t}\n\t\tw1 += r[i];\n\t\tfor (w2 = r[n-1], i = n-1, k = 1, j = 0; k < n; k++) {\n\t\t\tw2 += 2.0 * sqrt(r[i] * r[j]);\n\t\t\tif (k & 1) i--;\n\t\t\telse j++;\n\t\t}\n\t\tw2 += r[i];\n\n//\t\tprintf(\"lim %lf, w1 %lf, w2 %lf\\n\", lim, w1, w2);\n\t\tif (w2 <= w1) w1 = w2;\n\t\tputs((EQ(w1, lim) || w1 <= lim) ? \"OK\" : \"NA\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r>l?\"NA\":\"OK\")){\nfor(d=n=0;getchar()-10;d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;)t=dfs(i++,1<<i),r=r>t?r:t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "double M[12][4096],r,t;D[12],n;\ndouble dfs(p,f){if(M[p][f]<0){\nint i=0;\nfor(M[p][f]=0;i<n;i++)if(!(f&1<<i)&&(t=dfs(i,f|1<<i)+D[p]+D[i]-2*sqrt(D[p]*D[i]),M[p][f]<t))M[p][f]=t;\n}return M[p][f];}\nmain(l,i,j,d){for(;~scanf(\"%d\",&l);puts(d-r>l?\"NA\":\"OK\")){\nfor(d=n=0;getchar()-10;d+=D[n++]*2)scanf(\"%d\",D+n);\nfor(i=0;i<n;i++)for(j=0;j<1<<n;j++)M[i][j]=-1;\nfor(r=i=0;i<n;i++)t=dfs(i++,1<<i),r=r>t?r:t;\n}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <math.h>\n\n#define SQ(x) ((x) * (x))\n#define INF (100000000)\n#define EPS (1e-9)\n\nint len, cake[12];\ndouble dp[1 << 12][12];\nint n;\n\ndouble min(double a, double b)\n{\n    return (b > a ? a : b);\n}\n\ndouble tsp(int bit, int now)\n{\n    int i;\n    double res;\n    \n    if (dp[bit][now] >= 0){\n        return (dp[bit][now]);\n    }\n    \n    if (bit == (1 << n) - 1 && now == 0){\n        return (dp[bit][now] = 0);\n    }\n    \n    res = INF;\n    for (i = 0; i < n; i++){\n        if (!(bit >> i & 1)){\n            res = min(res, tsp(bit | 1 << i, i) + sqrt(SQ(cake[i] + cake[now]) - SQ(cake[i] - cake[now])));\n        }\n    }\n    \n    return (dp[bit][now] = res);\n}\n\nint main(void)\n{\n    int i, j;\n    char str[512];\n    int flag;\n    \n    while (fgets(str, 512, stdin) != NULL){\n        i = flag = len = n = 0;\n        memset(cake, 0, sizeof(cake));\n        while (str[i] != '\\0'){\n            if (flag == 0){\n                while (str[i] != ' ' && str[i] != '\\n'){\n                    len = len * 10 + str[i++] - '0';\n                }\n                i++;\n                flag = 1;\n            }\n            else {\n                while (str[i] != ' ' && str[i] != '\\n'){\n                    cake[n] = cake[n] * 10 + str[i++] - '0';\n                }\n                n++;\n                i++;\n            }\n        }\n        \n        for (i = 0; i < (1 << 12); i++){\n            for (j = 0; j < 12; j++){\n                dp[i][j] = -1 * INF;\n            }\n        }\n        \n        if (tsp(0, 0) <= len){\n            printf(\"OK\\n\");\n        }\n        else {\n            printf(\"NA\\n\");\n        }\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C",
    "code": "n,r[12],c;double d[12][12],M[12][4096];double S(b,l,i){double*m=M[l]+b,s,t;for((s=*m)?i=0:!b?s=r[i=0,l]:(i=n,s=1e3);i--;)b&1<<i&&(t=d[l][i]+S(b^1<<i,i),s=t<s?t:s);return*m=s;}main(L,i,j){double s,t;for(;~scanf(\"%d\",&L);puts(s>L?\"NA \":\"OK \")){for(n=0;scanf(\"%d%c\",r+n++,&c),c-10;);for(i=n;i--;)for(j=n;j--;)d[i][j]=2*sqrt(r[i]*r[j]);memset(M,0,393216);s=1e3;for(i=n;i--;s=t<s?t:s)t=r[i]+S((1<<n)-1-(1<<i),i);}}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws IOException{\n\t\t\n\t\t//Scanner sc = new Scanner(System.in);\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\twhile(true){\n\t\t\tString str;\n\t\t\t\n\t\t\tif((str = br.readLine()) == null || str.equals(\"\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes % 2 == 1){\n\t\t\t\tif(list.get(0) > list.get(cakes - 2)){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum < box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tString str;\n\t\t\t\n\t\t\tif((str = sc.nextLine()) == null || str.equals(\"\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes % 2 == 1){\n\t\t\t\tif(list.get(0) > list.get(cakes - 2)){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum < box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n//\t\t\ttbl.add(data);\n\t\t}\n\n/*\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}*/\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n/*\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);*/\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\t\n\t\t\t\tif(Math.abs(list.get(0) - cake_len[cakes/2]) > Math.abs(list.get(cakes-2) - cake_len[cakes/2])){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(list);\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t//System.out.println(sum);\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tif(data.length > 0){\n\t\t\tsum += data[seq[0]] + data[seq[seq.length-1]];\n\t\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t\t}\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\ttbl.add(data);\n\t\t}\n\n\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (tmp != null) {\n\t\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tData\tdata = null;\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\n\t\tdo {\n\t\t\tdouble\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\tif (data.cr[i] == data.cr[i+1]) {\n\t\t\t\t\ttmp += (double)(data.cr[i]*2);\n\t\t\t\t} else {\n\t\t\t\t\ttmp += Math.sqrt(Math.pow((double)data.cr[i]+data.cr[i+1], 2.0)-Math.pow((double)data.cr[i]-data.cr[i+1], 2.0));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic String getPermStr(int[] cr) {\n\t\tString\tres = \"\";\n\n\t\tfor (int i = 0; i < cr.length; i++) {\n\t\t\tres += (i == 0) ? String.valueOf(cr[i]) : \" \" + String.valueOf(cr[i]);\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Double.parseDouble(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (tmp != null) {\n\t\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass Data {\n\tdouble\twi = 0;\n\tint[]\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += data[seq[0]] + data[seq[seq.length-1]];\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.Deque;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\twhile (scanner.hasNext()) {\n\t\t\tStringTokenizer tokenizer = new StringTokenizer(scanner.nextLine());\n\t\t\tint n = Integer.parseInt(tokenizer.nextToken());\n\t\t\tint s = tokenizer.countTokens();\n\t\t\tint[] num = new int[s];\n\t\t\tfor (int i = 0; i < s; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(tokenizer.nextToken());\n\t\t\t}\n\t\t\tArrays.sort(num);\n\t\t\tDeque<Integer> que = new ArrayDeque<Integer>();\n\t\t\tfor (int t : num) {\n\t\t\t\tque.offer(t);\n\t\t\t}\n\t\t\tDeque<Integer> deque = new ArrayDeque<Integer>();\n\t\t\tint count = 0;\n\t\t\twhile (!que.isEmpty()) {\n\t\t\t\tif (count % 4 == 0)\n\t\t\t\t\tdeque.offer(que.pop());\n\t\t\t\telse if (count % 4 == 1)\n\t\t\t\t\tdeque.offer(que.pollLast());\n\t\t\t\telse if (count % 4 == 2)\n\t\t\t\t\tdeque.push(que.pollLast());\n\t\t\t\telse\n\t\t\t\t\tdeque.push(que.pop());\n\t\t\t\tcount++;\n\n\t\t\t}\n\t\t\tdouble sum = 0;\n\t\t\tsum += deque.getFirst();\n\t\t\tsum += deque.getLast();\n\t\t\tint a = deque.pop();\n\t\t\twhile (!deque.isEmpty()) {\n\t\t\t\tint b = deque.pop();\n\t\t\t\tsum += Math.sqrt(a * b) * 2;\n\t\t\t\ta = b;\n\t\t\t}\n\t\t\tSystem.out.println(sum <= n ? \"OK\" : \"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n//\t\t\t\tfor(int i=0; i<seq.length; i++){\n//\t\t\t\t\tSystem.out.print(seq[i]);\n//\t\t\t\t}\n//\t\t\t\tSystem.out.println();\n\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += (double)(data[seq[0]] + data[seq[seq.length-1]]);\n\t\t\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tpublic void sort(int[] r){\n\t\tboolean flag = false;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tint key = i;\n\t\t\tfor(int j = i; j < r.length; j++){\n\t\t\t\tif( flag ){\n\t\t\t\t\tif( r[j] > r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( r[j] < r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint temp = r[key];\n\t\t\tr[key] = r[i];\n\t\t\tr[i] = temp;\n\t\t\tflag = (flag) ? false : true;\n\t\t}\n\t}\n\tpublic double dist(int x, int y){\n\t\treturn 2*Math.sqrt(x*y);\n\t}\n\tpublic void solve() throws IOException{\n\t\twhile( stdIn.hasNext() ){\n\t\t\tString[] s = stdIn.nextLine().split(\" \");\n\t\t\tint m = Integer.parseInt(s[0]);\n\t\t\tint[] r = new int[s.length-1];\n\t\t\tfor(int i = 0; i < r.length; i++){\n\t\t\t\tr[i] = Integer.parseInt(s[i+1]);\n\t\t\t}\n\t\t\tsort(r);\n\t\t\tdouble sum = r[0] + r[r.length-1];\n\t\t\tfor(int i = 0; i < r.length-1; i++){\n\t\t\t\tsum += dist(r[i], r[i+1]);\n\t\t\t}\n\t\t//\tSystem.out.println(sum);\n\t\t\tif( sum > m ){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t}\n\t}\t\t\t\n\tpublic static void main (String args[]) throws IOException{\n\t\tnew Main().run();\n\t}\n\t\n\tScanner stdIn;\n\tPrintWriter writer;\n\t\n\tpublic void run() throws IOException{\n\t\tstdIn = null;\n\t\ttry{\n\t\t\tstdIn = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\t\t\twriter = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tstdIn.close();\n\t\t\twriter.close();\n\t\t} catch (Exception e){\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n//\t\t\ttbl.add(data);\n\t\t}\n\n/*\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}*/\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n//\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(1);\n//\t\t\tdata = new Data(lines.length-1);\n/*\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);*/\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tint len, n;\n\tint[] a;\n\n\tvoid run(){\n\t\tfor(;;){\n\t\t\tString[] ss=sc.nextLine().split(\" \");\n\t\t\tlen=Integer.parseInt(ss[0]);\n\t\t\tn=ss.length-1;\n\t\t\ta=new int[n];\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\ta[i]=Integer.parseInt(ss[i+1]);\n\t\t\t}\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve(){\n\t\tdouble[][] dp=new double[1<<n][n];\n\t\tfor(int j=0; j<1<<n; j++){\n\t\t\tfill(dp[j], INF);\n\t\t}\n\t\tfor(int i=0; i<n; i++){\n\t\t\tdp[1<<i][i]=2*a[i];\n\t\t}\n\t\tfor(int s=1; s<1<<n; s++){\n\t\t\tfor(int j=0; j<n; j++){\n\t\t\t\tif((s>>j&1)==0){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\t\tif((s>>i&1)==0){\n\t\t\t\t\t\tdp[s|1<<i][i]=min(dp[s|1<<i][i], dp[s][j]+2\n\t\t\t\t\t\t\t\t*sqrt(a[j]*a[i])-a[j]+a[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// debug(s,dp[s]);\n\t\t}\n\t\tdouble min=INF;\n\t\tfor(int i=0; i<n; i++){\n\t\t\tmin=min(min, dp[(1<<n)-1][i]);\n\t\t}\n\t\tprintln(min<len+EPS?\"OK\":\"NA\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tpublic double search(int[] r){\n\t\tsort(r, true);\n\t\tdouble sum1 = 0;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tsum1 += dist(r[i], r[(i+1)%r.length]);\n\t\t}\n\t\tdouble min = 1000000000;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tmin = Math.min(min, sum1 - dist(r[i], r[(i+1)%r.length]) + r[i] + r[(i+1)%r.length]);\n\t\t}\n\t\tsort(r, false);\n\t\tdouble sum2 = r[0] + r[r.length-1];\n\t\tfor(int i = 0; i < r.length-1; i++){\n\t\t\tsum2 += dist(r[i], r[i+1]);\n\t\t}\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tmin = Math.min(min, sum1 - dist(r[i], r[(i+1)%r.length]) + r[i] + r[(i+1)%r.length]);\n\t\t}\n\t\treturn Math.min(sum1, sum2);\n\t}\n\tpublic void sort(int[] r, boolean start){\n\t\tboolean flag = start;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tint key = i;\n\t\t\tfor(int j = i; j < r.length; j++){\n\t\t\t\tif( flag ){\n\t\t\t\t\tif( r[j] > r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( r[j] < r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint temp = r[key];\n\t\t\tr[key] = r[i];\n\t\t\tr[i] = temp;\n\t\t\tflag = (flag) ? false : true;\n\t\t}\n\t}\n\tpublic double dist(int x, int y){\n\t\treturn 2*Math.sqrt(x*y);\n\t}\n\tpublic void solve() throws IOException{\n\t\twhile( stdIn.hasNext() ){\n\t\t\tString[] s = stdIn.nextLine().split(\" \");\n\t\t\tint m = Integer.parseInt(s[0]);\n\t\t\tint[] r = new int[s.length-1];\n\t\t\tfor(int i = 0; i < r.length; i++){\n\t\t\t\tr[i] = Integer.parseInt(s[i+1]);\n\t\t\t}\n\t\t\tdouble sum = search(r);\n\t\t//\tSystem.out.println(sum);\n\t\t\tif( sum > m ){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t}\n\t}\t\t\t\n\tpublic static void main (String args[]) throws IOException{\n\t\tnew Main().run();\n\t}\n\t\n\tScanner stdIn;\n\tPrintWriter writer;\n\t\n\tpublic void run() throws IOException{\n\t\tstdIn = null;\n\t\ttry{\n\t\t\tstdIn = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\t\t\twriter = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tstdIn.close();\n\t\t\twriter.close();\n\t\t} catch (Exception e){\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import static java.util.Arrays.*;\n\nimport java.io.PrintWriter;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic void tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n\n\tvoid solve() {\n\t\tString[] ss = sc.nextLine().split(\"\\\\s+\");\n\t\tint[] r = new int[ss.length - 1];\n\t\tint L = Integer.parseInt(ss[0]);\n\t\tfor (int i = 1; i < ss.length; i++) {\n\t\t\tr[i-1] = Integer.parseInt(ss[i]);\n\t\t}\n\t\tint n = r.length;\n\t\tdouble[][] dp = new double[1 << n][n];\n\t\tdouble INF = 1e9;\n\t\tfor (int i = 0; i < dp.length; i++) fill(dp[i], INF);\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tdp[1 << i][i] = r[i];\n\t\t}\n\t\tfor (int set = 1; set < (1 << n); set++) {\n\t\t\tfor (int last = 0; last < n; last++) {\n\t\t\t\tif (dp[set][last] < INF/2) {\n\t\t\t\t\tfor (int next = 0; next < n; next++) if ((set >> next & 1) == 0) {\n\t\t\t\t\t\tdouble dx = Math.sqrt(Math.pow(r[last] + r[next], 2) - Math.pow(r[last] - r[next], 2));\n\t\t\t\t\t\tdouble ncost = dp[set][last] + dx;\n\t\t\t\t\t\tint nset = set | (1 << next);\n\t\t\t\t\t\tdp[nset][next] = Math.min(dp[nset][next],  ncost);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdouble EPS = 1e-10;\n\t\tdouble best = INF;\n\t\tfor (int last = 0; last < n; last++) {\n\t\t\tbest = Math.min(best, dp[(1 << n) - 1][last] + r[last]);\n\t\t}\n\t\tout.println(best < L + EPS ? \"OK\":\"NA\");\n\t}\n\n\tpublic static void main(String[] args) throws Exception {\n\t\tnew Main().run();\n\t}\n\n\tScanner sc = null;\n\tPrintWriter out = null;\n\tpublic void run() throws Exception {\n\t\tsc = new Scanner(System.in);\n\t\tout = new PrintWriter(System.out);\n\t\tfor (;sc.hasNext();) {\n\t\t\tsolve();\n\t\t\tout.flush();\n\t\t}\n\t\tout.close();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\t\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile(sc.hasNextDouble()){\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tdouble len = Double.parseDouble(s[0]);\n\t\t\tr = new double[s.length - 1];\n\n\t\t\tfor(int i=1;i<s.length;i++){\n\t\t\t\tr[i-1] = Double.parseDouble(s[i]);\n\t\t\t}\n\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tdp = new double[1<<12][12];\n\n\t\t\tfor(int i=0;i<r.length;i++){\n\t\t\t\tmin = Math.min(min,r[i]+solve(r.length-1,1<<i,i));\n\t\t\t}\n\n\t\t\tSystem.out.println(min <= len ? \"OK\" : \"NA\");\n\t\t}\n\t}\n\n\tprivate static double[] r;\n\tprivate static double[][] dp;\n\n\tprivate static double solve(int rem,int flg,int last){\n\t\tif(dp[flg][last] > 0) return dp[flg][last];\n\t\tif(rem == 0) return dp[flg][last] = r[last];\n\n\t\tdouble res = Double.MAX_VALUE;\n\t\tfor(int i=0;i<r.length;i++){\n\t\t\tif(((1<<i) & flg) > 0) continue;\n\t\t\tdouble tmp = Math.sqrt( Math.pow(r[last]+r[i],2) - Math.pow(r[last]-r[i],2) );\n\t\t\tres = Math.min(res,tmp+solve(rem-1,flg|(1<<i),i));\n\t\t}\n\n\t\treturn dp[flg][last] = res;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tdouble box = Double.parseDouble(dst[0]);\n\n\t\t\t//if(box == 0) break;\n\n\t\t\tint size = dst.length-1;\n\t\t\tint[] rad = new int[size];\n\t\t\tint[] sort = new int[size];\n\t\t\tfor(int n=0; n<size; n++){\n\t\t\t\trad[n] = Integer.parseInt(dst[n+1]);\n\t\t\t}\n\n\t\t\tint m = size/2;\n\t\t\tArrays.sort(rad);\n\t\t\tfor(int i=0; i<m; i++){\n\t\t\t\tsort[2*i] = rad[i];\n\t\t\t\tsort[2*i+1] = rad[size-1-i];\n\t\t\t}\n\t\t\tif(size%2==1){\n\t\t\t\tsort[size-1] = rad[m];\n\t\t\t}\n\n\t\t\tdouble cost = min_cost(sort);\n\t\t\tif(cost <= box){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic double min_cost(int[] data){\n\t\tdouble e = E(data);\n\t\tdouble ebest = e;\n\t\tint[] snew = copy(data);\n\t\tint[] sbest = copy(data);\n\t\tfor(int n=0; n<1000; n++){\n\t\t\tswap(sbest);\n\t\t\tdouble enew = E(sbest);\n\t\t\tif(enew < ebest){\n\t\t\t\tebest = enew;\n\t\t\t\tsnew = copy(sbest);\n\t\t\t}else{\n\t\t\t\tsbest = copy(snew);\n\t\t\t}\n\t\t}\n\n\t\treturn ebest;\n\t}\n\n\tpublic void swap(int[] data){\n\t\tint n = data.length;\n\t\tRandom rand = new Random(System.currentTimeMillis());\n\t\tint from = rand.nextInt(n);\n\t\tint to = rand.nextInt(n);\n\t\tint dst = data[from];\n\t\tdata[from] = data[to];\n\t\tdata[to] = dst;\n\t}\n\n\tpublic double E(int[] data){\n\t\tint n = data.length;\n\t\tdouble e = (double)(data[0] + data[n-1]);\n\t\tfor(int i=0; i<n-1; i++){\n\t\t\te += 2.0 * Math.sqrt(data[i] * data[i+1]);\n\t\t}\n\t\treturn e;\n\t}\n\n\tpublic int[] copy(int[] data){\n\t\tint n= data.length;\n\t\tint[] dst = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tdst[i] = data[i];\n\t\t}\n\t\treturn dst;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n//\t\t\t\tfor(int i=0; i<seq.length; i++){\n//\t\t\t\t\tSystem.out.print(seq[i]);\n//\t\t\t\t}\n//\t\t\t\tSystem.out.println();\n\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\ttry{\n\t\tsum += (double)(data[seq[0]] + data[seq[seq.length-1]]);\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\t\t}catch(Exception e){\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    static double[][] dis;\n    static double dp[][];\n    static int n;\n    static int g;\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        while (sc.hasNext()) {\n            String tmp[] = sc.nextLine().split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            int rs[] = new int[tmp.length - 1];\n            for (int i = 1; i < tmp.length; i++) {\n                rs[i - 1] = Integer.parseInt(tmp[i]);\n            }\n            n = rs.length;\n            dis = new double[n][n];\n            dp = new double[1 << n][n];\n\n            for (int i = 0; i < n; i++) {\n                dis[i][i] = 0;\n            }\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    dis[i][j] = dis[j][i] = 1.0\n                            * (rs[i] + rs[j])\n                            * Math.cos(Math.asin(1.0 * Math.abs(rs[i] - rs[j])\n                                    / (rs[i] + rs[j])));\n                }\n            }\n            boolean flag = false;\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    g = j;\n                    for (int k = 0; k < 1 << n; k++) {\n                        Arrays.fill(dp[k], -1);\n                    }\n                    double dis = tsp(0, i);\n                    if (dis + rs[i] + rs[j] <= l) {\n                        flag = true;\n                        i = n;\n                        break;\n                    }\n                }\n            }\n            System.out.println(flag ? \"OK\" : \"NA\");\n\n        }\n    }\n\n    public static double tsp(int S, int v) { // S:既に訪れた頂点、v:現在いる頂点\n        if (dp[S][v] >= 0) {\n            return dp[S][v];\n        }\n        if (S == (1 << n) - 1 && v == g) {\n            return dp[S][v] = 0;\n        }\n        double res = Double.POSITIVE_INFINITY;\n        for (int u = 0; u < n; u++) {\n            if ((S >> u & 1) == 0) {\n                res = Math.min(res, tsp(S | 1 << u, u) + dis[v][u]);\n            }\n        }\n        return dp[S][v] = res;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    static double[][] dis;\n    static double dp[][];\n    static int n;\n    static int g;\n    static final double EPS = 1.0e-10;\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        while (sc.hasNext()) {\n            String tmp[] = sc.nextLine().split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            int rs[] = new int[tmp.length - 1];\n            for (int i = 1; i < tmp.length; i++) {\n                rs[i - 1] = Integer.parseInt(tmp[i]);\n            }\n            n = rs.length;\n            dis = new double[n][n];\n            dp = new double[1 << n][n];\n\n            for (int i = 0; i < n; i++) {\n                dis[i][i] = 0;\n            }\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    dis[i][j] = dis[j][i] = 1.0\n                            * (rs[i] + rs[j])\n                            * Math.cos(Math.asin(1.0 * Math.abs(rs[i] - rs[j])\n                                    / (rs[i] + rs[j])));\n                }\n            }\n            boolean flag = false;\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    g = j;\n                    for (int k = 0; k < 1 << n; k++) {\n                        Arrays.fill(dp[k], -1);\n                    }\n                    double dis = tsp(0, i);\n                    //System.out.println(dis + rs[i] + rs[j]);\n                    if (dis + rs[i] + rs[j] < l\n                            || Math.abs(l - (dis + rs[i] + rs[j])) < EPS) {\n                        flag = true;\n                        i = n;\n                        break;\n                    }\n                }\n            }\n            System.out.println(flag ? \"OK\" : \"NA\");\n\n        }\n    }\n\n    public static double tsp(int S, int v) { // S:既に訪れた頂点、v:現在いる頂点\n        if (dp[S][v] >= 0) {\n            return dp[S][v];\n        }\n        if (S == (1 << n) - 1 && v == g) {\n            return dp[S][v] = 0;\n        }\n        double res = Double.POSITIVE_INFINITY;\n        for (int u = 0; u < n; u++) {\n            if ((S >> u & 1) == 0) {\n                res = Math.min(res, tsp(S | 1 << u, u) + dis[v][u]);\n            }\n        }\n        return dp[S][v] = res;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tData\tdata = null;\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\n\t\tdo {\n\t\t\tdouble\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\tif (data.cr[i] == data.cr[i+1]) {\n\t\t\t\t\ttmp += (double)(data.cr[i]*2);\n\t\t\t\t} else {\n\t\t\t\t\ttmp += Math.sqrt(Math.pow((double)data.cr[i]+data.cr[i+1], 2.0)-Math.pow((double)data.cr[i]-data.cr[i+1], 2.0));\n\t\t\t\t}\n\t\t\t}\n//\t\t\tif (min >= tmp) {\n//\t\t\t\tmin = tmp;\n//\t\t\t\tSystem.out.println(getPermStr(data.cr) + \" \" + min);\n//\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic String getPermStr(int[] cr) {\n\t\tString\tres = \"\";\n\n\t\tfor (int i = 0; i < cr.length; i++) {\n\t\t\tres += (i == 0) ? String.valueOf(cr[i]) : \" \" + String.valueOf(cr[i]);\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (tmp != null) {\n\t\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass Data {\n\tint\t\twi = 0;\n\tint[]\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.LinkedList;\nimport java.util.Scanner;\n\npublic class Sample0120 {\n\n\tpublic static void main(String[] args) {\n\n\t\tScanner sc =new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\tint box = sc.nextInt();\n\t\t\tLinkedList<Integer> array = new LinkedList<Integer>();\n\t\t\twhile(sc.hasNextInt())\n\t\t\t\tarray.push(sc.nextInt());\n\n\t\t\tdouble[][] data = new double[(1<<array.size())][array.size()];\n\n\t\t\tfor(int i=0;i<1<<array.size();i++)\n\t\t\t\tArrays.fill(data[i], Double.MAX_VALUE);\n\n\t\t\tfor(int i=0;i<array.size();i++)\n\t\t\t\tdata[1<<i][i]=array.get(i);\n\n\t\t\tfor(int i=0;i<1<<array.size();i++){\n\t\t\t\tfor(int j=0;j<array.size();j++){\n\t\t\t\t\tint tmp = 1<<j;\n\t\t\t\t\tif((i&tmp)==0){\n\t\t\t\t\t\tfor(int k=0;k<array.size();k++){\n\t\t\t\t\t\t\tdouble x = (double)array.get(j);\n\t\t\t\t\t\t\tdouble y = (double)array.get(k);\n\t\t\t\t\t\t\tdata[i|tmp][j]=Math.min(data[i][k]+Math.sqrt((x+y)*(x+y)-(x-y)*(x-y)),data[i|tmp][j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdouble min = Double.MAX_VALUE;\n\n\t\t\tfor(int i=0;i<array.size();i++){\n\t\t\t\tdata[(1<<array.size())-1][i]+=array.get(i);\n\t\t\t\tmin = Math.min(min,data[(1<<array.size())-1][i]);\n\t\t\t}\n\n\t\t\tif(min<(box+1e-8)){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t\telse\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\ttbl.add(data);\n\t\t}\n\n\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.Deque;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\twhile (scanner.hasNext()) {\n\t\t\tStringTokenizer tokenizer = new StringTokenizer(scanner.nextLine());\n\t\t\tint n = Integer.parseInt(tokenizer.nextToken());\n\t\t\tint s = tokenizer.countTokens();\n\t\t\tint[] num = new int[s];\n\n\t\t\tfor (int i = 0; i < s; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(tokenizer.nextToken());\n\t\t\t}\n\t\t\tArrays.sort(num);\n\t\t\tDeque<Integer> deque = new ArrayDeque<Integer>();\n\t\t\tfor (int t : num) {\n\t\t\t\tdeque.offer(t);\n\t\t\t}\n\t\t\tint[] map = new int[s];\n\t\t\tint x = 0;\n\t\t\twhile (!deque.isEmpty()) {\n\t\t\t\tmap[x] = deque.pollFirst();\n\t\t\t\tx++;\n\t\t\t\tif (!deque.isEmpty()) {\n\t\t\t\t\tmap[x] = deque.pollLast();\n\t\t\t\t\tx++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdouble sum = 0;\n\t\t\tsum += map[0];\n\t\t\tsum += map[s - 1];\n\t\t\tfor (int i = 1; i < s; i++) {\n\t\t\t\tsum += Math.sqrt(map[i] * map[i - 1]) * 2;\n\t\t\t}\n\t\t\tSystem.out.println(sum <= n ? \"OK\" : \"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes % 2 == 1){\n\t\t\t\tif(list.get(0) > list.get(cakes - 2)){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum < box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n  \npublic class Main {\n    private static  BufferedReader  br = null;\n    private static  double[][]      cd = null;\n    private static  int[]           rr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n \n    static {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n  \n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        int     size = 0;\n        Data    data = null;\n        DataTbl tbl  = new DataTbl();\n         \n        while ((data = parseData()) != null) {\n            tbl.add(data);\n        }\n \n        calcDist();\n \n        size = tbl.size();\n        for (int i = 0; i < size; i++) {\n            data = tbl.get(i);\n            System.out.println(solve(data));\n        }\n    }\n \n    public static String solve(Data data) {\n        String  res = \"NA\";\n        double  min = Double.MAX_VALUE;\n        double  tmp = 0.0;\n \n        do {\n            tmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n            for (int i = 0; i < data.cr.length-1; i++) {\n                tmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n            }\n            min = Math.min(min, tmp);\n \n            if (min <= data.wi) {\n                res = \"OK\";\n                break;\n            }\n        } while(next_perm(data.cr));\n \n        return res;\n    }\n \n    static boolean next_perm(int[] cr) {\n        int     i;\n        int     j;\n        int     t;\n        int     l = cr.length;\n        boolean r = false;\n         \n        if (l > 0) {\n            for(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n \n            if (i > 0) {\n                for(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n \n                // swap(p,j,i-1);\n                t = cr[j];\n                cr[j] = cr[i-1];\n                cr[i-1] = t;\n \n                for(j=l-1; i < j; i++, j--){\n                    // swap(p,i,j);\n                    t = cr[i];\n                    cr[i] = cr[j];\n                    cr[j] = t;\n                }\n \n                r = true;\n            }\n        }\n \n        return r;\n    }\n \n    public static void calcDist() {\n        int sz = rr[1]-rr[0];\n \n        cd = new double[sz+1][sz+1];\n        for (int i = 0; i <= sz; i++) {\n            for (int j = i; j <= sz; j++) {\n                double  d = 0.0;\n                if (i == j) {\n                    d = (double)((rr[0]+i)*2);\n                } else {\n                    d = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n                }\n                cd[i][j] = d;\n                cd[j][i] = d;\n            }\n        }\n    }\n \n    private static Data parseData() {\n        Data    data  = null;\n        String  stdin  = null;\n \n        if ((stdin = parseStdin()) != null) {\n            String[]    lines = stdin.split(\" \");\n \n            data = new Data(lines.length-1);\n            for(int i = 0; i < lines.length; i++) {\n                if (i == 0) {\n                    data.wi = Integer.parseInt(lines[i]);\n                } else {\n                    data.cr[i-1] = Integer.parseInt(lines[i]);\n                    rr[0] = Math.min(rr[0], data.cr[i-1]);\n                    rr[1] = Math.max(rr[1], data.cr[i-1]);\n                }\n            }\n            Arrays.sort(data.cr);\n        }\n \n        return data;\n    }\n \n    private static String parseStdin() {\n        String  stdin = null;\n \n        try {\n            String  tmp = br.readLine();\n            if (tmp != null) {\n                if (!tmp.isEmpty()) stdin = tmp;\n            }\n        }\n        catch (IOException e) {}\n \n        return stdin;\n    }\n}\n \nclass DataTbl extends ArrayList<Data> {\n}\n \nclass Data {\n    int         wi = 0;\n    int[]       cr = null;\n \n    Data (int cc) {\n        cr = new int[cc];\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n//\t\t\t\tfor(int i=0; i<seq.length; i++){\n//\t\t\t\t\tSystem.out.print(seq[i]);\n//\t\t\t\t}\n//\t\t\t\tSystem.out.println();\n\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\ttry{\n\t\tsum += (double)(data[seq[0]] + data[seq[seq.length-1]]);\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\t\t}catch(ArrayIndexOutOfBoundsException e){\n\t\t\te.printStackTrace();\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\t//if(size == 0) break;\n\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n\t\t\t\tdouble cakes = 0.0;\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += data[seq[0]] + data[seq[data.length-1]];\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String args[]) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint n;\n\n\t\twhile (true) {\n\t\t\tn = sc.nextInt();\n\t\t\tif (n == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tString s[] = sc.nextLine().split(\" \");\n\t\t\tif (f(s, n, new int[s.length - 1], 1)) {\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static boolean f(String s[], int length, int a[], int k) {\n\t\tint n = a.length;\n\t\tif (n < k) {\n\t\t\tdouble sum = 0.0;\n\t\t\tsum += Integer.valueOf(s[1]) / 2.0;\n\t\t\tsum += Integer.valueOf(s[n]) / 2.0;\n\t\t\tfor (int i = 2; i <= n; i++) {\n\t\t\t\tint r1 = Integer.valueOf(s[i - 1]);\n\t\t\t\tint r2 = Integer.valueOf(s[i]);\n\t\t\t\tsum += Math.sqrt(Math.pow(r1 + r2, 2) - Math.pow(Math.abs(r1 - r2), 2));\n\t\t\t}\n\t\t\tif (sum <= length) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (a[i] == 0) {\n\t\t\t\ta[i] = k;\n\t\t\t\tif (f(s, length, a, k + 1)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ta[i] = 0;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\ttbl.add(data);\n\t\t}\n\n\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n//\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n//\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n//\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n//\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\t\n\tvoid main() {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNextLine()) {\n\t\t\tString s = sc.nextLine();\n\t\t\tString[] ss = s.split(\" \");\n\t\t\tint W = Integer.parseInt(ss[0]);\n\t\t\tint n = ss.length - 1;\n\t\t\tint[] r = new int[n];\n\t\t\tfor(int i=1;i<=n;i++) {\n\t\t\t\tr[i-1] = Integer.parseInt(ss[i]);\n\t\t\t}\n\t\t\t\n\t\t\tdouble[][] dp = new double[1<<n][n];\n\t\t\tdouble INF = 1<<28;\n\t\t\tfor(int i=0;i<(1<<n);i++) {\n\t\t\t\tfor(int j=0;j<n;j++) {\n\t\t\t\t\tdp[i][j] = INF;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<n;i++) {\n\t\t\t\tdp[1<<i][i] = 2*r[i];\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0;i<(1<<n);i++) {\n\t\t\t\tfor(int j=0;j<n;j++) {\n\t\t\t\t\tif(dp[i][j] == INF) continue;\n\t\t\t\t\tfor(int k=0;k<n;k++) {\n\t\t\t\t\t\tif((i >> k & 1) == 1) continue;\n\t\t\t\t\t\tint nexti = i | (1 << k);\n\t\t\t\t\t\tdouble nextdp = dp[i][j] - r[j] + 2*Math.sqrt(r[j] * r[k]) + r[k];\n\t\t\t\t\t\tdp[nexti][k] = Math.min(dp[nexti][k], nextdp);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble ans = INF;\n\t\t\tfor(int j=0;j<n;j++) {\n\t\t\t\tans = Math.min(ans, dp[(1<<n)-1][j]);\n\t\t\t}\n\t\t\tSystem.out.println(ans<=W ? \"OK\":\"NA\");\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().main();\n\t}\n\n\n\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//マジで解法が思いつかなかったがbitDPをみて、まさかと思った\nclass Main{\n\tstatic long ans=0;\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in);\n\t\tString s=\"\";\n\t\tdouble INF=11451419810.0d;\n\t\tdouble min=INF;\n\t\twhile(sc.hasNext()) {\n\t\t\tmin=INF;\n\t\t\ts=sc.nextLine();\n\t\t\tString[] sp=s.split(\" \");\n\t\t\tdouble hako=Double.parseDouble(sp[0]);\n\t\t\tdouble[] en=new double[sp.length-1];\n\t\t\tfor(int i=0; i<sp.length-1; i++) {\n\t\t\t\ten[i]=Double.parseDouble(sp[i+1]);\n\t\t\t}\n\t\t\t//pl(sp.length-1);\n\t\t\tdouble[][] rinsetu=new double[sp.length-1][sp.length-1];\n\t\t\tfor(int i=0; i<sp.length-1; i++) {\n\t\t\t\tfor(int j=0; j<sp.length-1; j++) {\n\t\t\t\t\tif(i==j) {\n\t\t\t\t\t\trinsetu[i][j]=INF;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\trinsetu[i][j]=2*Math.sqrt(en[i]*en[j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdouble[][] dp=new double[1<<(sp.length-1)][(sp.length-1)];\n\t\t\tfor(int i=0; i<(1<<(sp.length-1)); i++) {\n\t\t\t\tfor(int j=0; j<(sp.length-1); j++) {\n\t\t\t\t\tdp[i][j]=INF;\t//DPテーブルの初期化（コスト最小化するので、初期値は十分に大きな正の値となる）\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<(sp.length-1);i++){\n\t\t\t\tdp[1<<i][i]=en[i];\n\t\t\t}\n\t\t\tfor(int i=0; i<(1<<(sp.length-1))-1; i++) {\t\t//すべての状態について探索する\n\t\t\t\tfor(int j=0; j<(sp.length-1); j++) {\n\t\t\t\t\tif(dp[i][j]==INF) {\n\t\t\t\t\t\tcontinue;\t\t//経路を確立していないなら経路をつくりだせないのでそのまま\n\t\t\t\t\t}\n\t\t\t\t\telse {\t//経路が確立している時、経路を伸ばせるかどうかを判断する\n\t\t\t\t\t\tfor(int k=0; k<(sp.length-1); k++) {\n\t\t\t\t\t\t\tif((i&(1<<k))!=0) {\t//その頂点がすでに訪問済みの時は見ない（枝刈り）\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse if(rinsetu[j][k]==INF){\t//すべての経路に対して行っている。　なので、ある頂点から別の頂点に伸びる辺が無いかもしれないので、無いときはスキップ\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse {\t\t//上の2条件を満たした時、経路を伸ばせる\n\t\t\t\t\t\t\t\tint nexti=i+(1<<k);\t\t//いまから向かう頂点の訪問フラグを立てる\n\t\t\t\t\t\t\t\tdp[nexti][k]=Math.min(dp[nexti][k], dp[i][j]+rinsetu[j][k]);\t//経路の更新 最短なら更新、そうでなければ維持\n\t\t\t\t\t\t\t\t//pl(\"i = \"+i+\" j = \"+j+\" k = \"+k+\" nexti\"+nexti+\" bitDP[][]= \"+dp[nexti][k]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint all=(1<<(sp.length-1))-1;\n\t\t\tfor(int i=0; i<(sp.length-1); i++) {\n\t\t\t\tif(dp[all][i]==INF) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdouble allcost=dp[all][i]+en[i];\n\t\t\t\t\tmin=Math.min(min, allcost);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(min<hako+0.000001) {\n\t\t\t\tpl(\"OK\");\n\t\t\t\t//pl(min);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpl(\"NA\");\n\t\t\t\t//pl(min);\n\t\t\t}\n\t\t}\n\t}\n\tpublic static void pl(Object o) {\n\t\tSystem.out.println(o);\n\t}\n\tpublic static void pl() {\n\t\tSystem.out.println();\n\t}\n\tpublic static void p(Object o) {\n\t\tSystem.out.print(o);\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tList<Integer> sort = new ArrayList<Integer>();\n\t\t\tList<Integer> que = new ArrayList<Integer>();\n\t\t\tdouble box = Double.parseDouble(dst[0]);\n\n\t\t\tint size = dst.length-1;\n\t\t\tint[] rad = new int[size];\n\t\t\tfor(int i=0; i<size; i++){\n\t\t\t\trad[i] = Integer.parseInt(dst[i+1]);\n\t\t\t}\n\n\t\t\tdouble width = 0.0;\n\t\t\tif(size>1){\n\t\t\t\tArrays.sort(rad);\n\t\t\t\tfor(int i=0; i<size-1; i++){\n\t\t\t\t\tque.add(rad[i]);\n\t\t\t\t}\n\n\t\t\t\tint flag = -1;\n\t\t\t\tsort.add(rad[size-1]);\n\t\t\t\twhile(que.size() > 1){\n\t\t\t\t\tif(flag == 1){\n\t\t\t\t\t\tflag = -1;\n\t\t\t\t\t\tint num = que.size()-1;\n\t\t\t\t\t\tint r = que.get(num);\n\t\t\t\t\t\tque.remove(num);\n\t\t\t\t\t\tdouble wr = 2.0 * Math.sqrt(r * sort.get(0));\n\t\t\t\t\t\tdouble wl = 2.0 * Math.sqrt(r * sort.get(sort.size()-1));\n\t\t\t\t\t\tif(wr < wl){\n\t\t\t\t\t\t\tsort.add(0, r);\n\t\t\t\t\t\t\twidth += wr;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tsort.add(r);\n\t\t\t\t\t\t\twidth += wl;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if(flag == -1){\n\t\t\t\t\t\tflag = 1;\n\t\t\t\t\t\tint num = 0;\n\t\t\t\t\t\tint r = que.get(num);\n\t\t\t\t\t\tque.remove(num);\n\t\t\t\t\t\tdouble wr = 2.0 * Math.sqrt(r * sort.get(0));\n\t\t\t\t\t\tdouble wl = 2.0 * Math.sqrt(r * sort.get(sort.size()-1));\n\t\t\t\t\t\tif(wr < wl){\n\t\t\t\t\t\t\tsort.add(r);\n\t\t\t\t\t\t\twidth += wl;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tsort.add(0, r);\n\t\t\t\t\t\t\twidth += wr;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tint r = que.get(0);\n\t\t\t\tdouble wr = r + 2.0 * Math.sqrt(r * sort.get(0)) + sort.get(sort.size()-1);\n\t\t\t\tdouble wl = sort.get(0) + 2.0 * Math.sqrt(sort.get(sort.size()-1) * r) + r;\n\t\t\t\twidth += Math.min(wr, wl);\n\t\t\t}\n\t\t\telse{\n\t\t\t\twidth = 2.0 * rad[0];\n\t\t\t}\n\t\t\tif(width <= box){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n\n    static double minRadius;\n    \n    public static void main(String[] args) {\n\n\tfinal Scanner stdin = new Scanner(System.in);\n\n\twhile ( stdin.hasNext() ) {\n\n\t    final String[] input = stdin.nextLine().split(\" \");\n\t    final int[] rads = new int[input.length - 1];\n\t    for (int i = 0; i < rads.length; ++i){\n\t\trads[i] = Integer.parseInt( input[i + 1] );\t\t\n\t    }\n\t    Arrays.sort( rads );\n\t    minRadius = Double.MAX_VALUE;\n\t    \n\t    final int boxSize = Integer.parseInt( input[0] );\n\t    boolean[] visited = new boolean[rads.length];\n\t\t\t\t\t    \n\t    dfs ( 0.0, 0, rads, visited, -1, false );\n\n\t    if ( minRadius > boxSize ) {\n\t\tSystem.out.println( \"NA\" );\n\t    } else {\n\t\tSystem.out.println( \"OK\" );\n\t    }\n\t}\t\n    }\n    \n    static void dfs( final double right, final int index, final int[] rads,\n\t\t     final boolean[] visited, final int last, final boolean rev) {\n\t\n\tif ( index == rads.length ) {\n\t    minRadius = Math.min( right + rads[last], minRadius );\n\t} else if ( right > minRadius ) {\n\t    return;\n\t}\n\tif ( rev ) {\n\t    int i = visited.length - 1;\n\t    while ( i >= 0 ){\n\t\tif ( !visited[i] ) {\n\t\t    visited[i] = true;\n\t\t    if ( index > 0 ) {\n\t\t\tdfs( right + 2 * Math.sqrt( rads[i] * rads[last] ), index + 1, rads, visited, i, !rev );\n\t\t    } else {\n\t\t\tdfs( right + rads[i], index + 1, rads, visited, i, !rev );\n\t\t    }\n\t\t    visited[i] = false;\n\t\t    \n\t\t    final int current = rads[i];\n\t\t    while ( i >= 0 && current == rads[i] ) {\n\t\t\ti--;\n\t\t    }\n\t\t} else {\n\t\t    i--;\n\t\t}\n\t    }\n\t} else {\n\t    int i = 0;\n\t    while ( i < rads.length ){\n\t\tif ( !visited[i] ) {\n\t\t    visited[i] = true;\n\t\t    if ( index > 0 ) {\n\t\t\tdfs( right + 2 * Math.sqrt( rads[i] * rads[last] ), index + 1, rads, visited, i, !rev );\n\t\t    } else {\n\t\t\tdfs( right + rads[i], index + 1, rads, visited, i, !rev );\n\t\t    }\n\t\t    visited[i] = false;\n\t\t    \n\t\t    final int current = rads[i];\n\t\t    while ( i < rads.length && current == rads[i] ) {\n\t\t\ti++;\n\t\t    }\n\t\t} else {\n\t\t    i++;\n\t\t}\n\t    }\n\t}\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tList<Integer> sort = new ArrayList<Integer>();\n\t\t\tList<Integer> que = new ArrayList<Integer>();\n\t\t\tdouble box = Double.parseDouble(dst[0]);\n\n\t\t\tint size = dst.length-1;\n\t\t\tint[] rad = new int[size];\n\t\t\tfor(int i=0; i<size; i++){\n\t\t\t\trad[i] = Integer.parseInt(dst[i+1]);\n\t\t\t}\n\n\t\t\tArrays.sort(rad);\n\n\t\t\tfor(int i=0; i<size-1; i++){\n\t\t\t\tque.add(rad[i]);\n\t\t\t}\n\n\t\t\tint flag = -1;\n\t\t\tdouble width = 0.0;\n\t\t\tsort.add(rad[size-1]);\n\t\t\twhile(que.size() > 1){\n\t\t\t\tif(flag == 1){\n\t\t\t\t\tflag = -1;\n\t\t\t\t\tint num = que.size()-1;\n\t\t\t\t\tint r = que.get(num);\n\t\t\t\t\tque.remove(num);\n\t\t\t\t\tdouble wr = 2.0 * Math.sqrt(r * sort.get(0));\n\t\t\t\t\tdouble wl = 2.0 * Math.sqrt(r * sort.get(sort.size()-1));\n\t\t\t\t\tif(wr < wl){\n\t\t\t\t\t\tsort.add(0, r);\n\t\t\t\t\t\twidth += wr;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsort.add(r);\n\t\t\t\t\t\twidth += wl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(flag == -1){\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tint num = 0;\n\t\t\t\t\tint r = que.get(num);\n\t\t\t\t\tque.remove(num);\n\t\t\t\t\tdouble wr = 2.0 * Math.sqrt(r * sort.get(0));\n\t\t\t\t\tdouble wl = 2.0 * Math.sqrt(r * sort.get(sort.size()-1));\n\t\t\t\t\tif(wr < wl){\n\t\t\t\t\t\tsort.add(r);\n\t\t\t\t\t\twidth += wl;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsort.add(0, r);\n\t\t\t\t\t\twidth += wr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint r = que.get(0);\n\t\t\tdouble wr = r + 2.0 * Math.sqrt(r * sort.get(0)) + sort.get(sort.size()-1);\n\t\t\tdouble wl = sort.get(0) + 2.0 * Math.sqrt(sort.get(sort.size()-1) * r) + r;\n\t\t\twidth += Math.min(wr, wl);\n\n\t\t\tif(width <= box){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tMyScanner sc = new MyScanner();\n\tScanner sc2 = new Scanner(System.in);\n\tint mod = 1000000007;\n\n\tint N;\n\tint[] r;\n\tdouble[][] memo;\n\n\tvoid run() {\n\t\twhile (sc2.hasNext()) {\n\t\t\tString[] input = sc2.nextLine().split(\" \");\n\t\t\tint L = Integer.valueOf(input[0]);\n\t\t\tN = input.length - 1;\n\t\t\tr = new int[N];\n\t\t\tmemo = new double[N][1 << N];\n\n\t\t\tfor (int i = 1; i < N + 1; i++) {\n\t\t\t\tr[i - 1] = Integer.valueOf(input[i]);\n\t\t\t}\n\t\t\tboolean judge = false;\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tdouble ans = tsp(i, 1 << i) + r[i];\n\t\t\t\tif (ans <= L) {\n\t\t\t\t\tjudge = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(judge ? \"OK\" : \"NA\");\n\t\t}\n\t}\n\n\tdouble tsp(int v, int bit) {\n\t\tif (memo[v][bit] != 0) {\n\t\t\treturn memo[v][bit];\n\t\t}\n\t\tif (bit == (1 << N) - 1) {\n\t\t\treturn r[v];\n\t\t}\n\t\tdouble res = 1 << 10;\n\t\tfor (int w = 0; w < N; w++) {\n\t\t\tif ((bit & (1 << w)) != 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdouble dis = Math.sqrt((r[v] + r[w]) * (r[v] + r[w])\n\t\t\t\t\t- (r[v] - r[w]) * (r[v] - r[w]));\n\t\t\tres = Math.min(res, dis + tsp(w, bit | 1 << w));\n\t\t}\n\t\treturn memo[v][bit] = res;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n\n\tvoid debug2(int[][] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tfor (int j = 0; j < array[i].length; j++) {\n\t\t\t\tSystem.out.print(array[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n\tclass MyScanner {\n\t\tint nextInt() {\n\t\t\ttry {\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (c != '-' && (c < '0' || '9' < c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tif (c == '-')\n\t\t\t\t\treturn -nextInt();\n\t\t\t\tint res = 0;\n\t\t\t\tdo {\n\t\t\t\t\tres *= 10;\n\t\t\t\t\tres += c - '0';\n\t\t\t\t\tc = System.in.read();\n\t\t\t\t} while ('0' <= c && c <= '9');\n\t\t\t\treturn res;\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\tStringBuilder res = new StringBuilder(\"\");\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (Character.isWhitespace(c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tdo {\n\t\t\t\t\tres.append((char) c);\n\t\t\t\t} while (!Character.isWhitespace(c = System.in.read()));\n\t\t\t\treturn res.toString();\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class A0120 {\n\tstatic double dp[][][];\n\tstatic int n, a;\n\tstatic double r[];\n\n\tpublic static double f(int left, int right, int bit) {\n\t\tif (0 < dp[left][right][bit]) {\n\t\t\treturn dp[left][right][bit];\n\t\t}\n\t\tint k = check(bit);\n\t\tif (k == 1) {\n\t\t\treturn dp[left][right][bit] = 2.0 * r[left];\n\t\t}\n\t\tif (k == 2) {\n\t\t\treturn dp[left][right][bit] = r[left] + r[right] + 2.0 * Math.sqrt(r[left] * r[right]);\n\t\t}\n\n\t\tdouble min = Double.MAX_VALUE;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (i == left || i == right || (bit & (1 << i)) == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (j == left || j == right || (bit & (1 << j)) == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (3 < k && i == j) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdouble sub = f(i, j, (bit ^ (1 << left)) ^ (1 << right));\n\t\t\t\tsub -= r[i] + r[j];\n\t\t\t\tsub += 2.0 * (Math.sqrt(r[left] * r[i]) + Math.sqrt(r[right] * r[j]));\n\t\t\t\tsub += r[left] + r[right];\n\t\t\t\tmin = Math.min(min, sub);\n\t\t\t}\n\t\t}\n\t\treturn dp[left][right][bit] = min;\n\t}\n\n\tpublic static int check(int bit) {\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < 12; i++) {\n\t\t\tif (0 < (bit & (1 << i))) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString b[] = sc.nextLine().split(\" \");\n\t\t\ta = Integer.parseInt(b[0]);\n\t\t\tn = b.length - 1;\n\t\t\tr = new double[n];\n\t\t\tdp = new double[n][n][1 << n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tr[i] = Integer.parseInt(b[i + 1]);\n\t\t\t}\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\tif (i != j) {\n\t\t\t\t\t\tmin = Math.min(min, f(i, j, (1 << n) - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(min <= a ? \"OK\" : \"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tData\tdata = null;\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\n\t\tdo {\n\t\t\tdouble\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\tif (data.cr[i] == data.cr[i+1]) {\n\t\t\t\t\ttmp += (double)(data.cr[i]*2);\n\t\t\t\t} else {\n\t\t\t\t\ttmp += Math.sqrt(Math.pow((double)data.cr[i]+data.cr[i+1], 2.0)-Math.pow((double)data.cr[i]-data.cr[i+1], 2.0));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic String getPermStr(int[] cr) {\n\t\tString\tres = \"\";\n\n\t\tfor (int i = 0; i < cr.length; i++) {\n\t\t\tres += (i == 0) ? String.valueOf(cr[i]) : \" \" + String.valueOf(cr[i]);\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Double.parseDouble(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (tmp != null) {\n\t\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass Data {\n\tdouble\twi = 0;\n\tint[]\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\tif(str.equals(\"\")){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes % 2 == 1){\n\t\t\t\tif(list.get(0) > list.get(cakes - 2)){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tboolean flag = true;\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif(flag){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t\tflag = false;\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\t\n\t\t\t\tif(list.get(0) > cake_len[cakes/2]){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(list);\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += 2 * Math.sqrt(list.get(i) * list.get(i+1));\n\t\t\t}\n\t\t\t//System.out.println(sum);\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tdouble box = Double.parseDouble(dst[0]);\n\n\t\t\tif(box == 0) break;\n\n\t\t\tint size = dst.length-1;\n\t\t\tint[] rad = new int[size];\n\t\t\tint[] sort = new int[size];\n\t\t\tfor(int n=0; n<size; n++){\n\t\t\t\trad[n] = Integer.parseInt(dst[n+1]);\n\t\t\t}\n\n\t\t\tint m = size/2;\n\t\t\tArrays.sort(rad);\n\t\t\tfor(int i=0; i<m; i++){\n\t\t\t\tsort[2*i] = rad[i];\n\t\t\t\tsort[2*i+1] = rad[size-1-i];\n\t\t\t}\n\t\t\tif(size%2==1){\n\t\t\t\tsort[size-1] = rad[m];\n\t\t\t}\n\n\t\t\tdouble cost = min_cost(sort);\n\t\t\tSystem.out.println(cost);\n\t\t\tif(cost <= box){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic double min_cost(int[] data){\n\t\tRandom rand = new Random(System.currentTimeMillis());\n\t\tdouble e = E(data);\n\t\tdouble ebest = e;\n\t\tdouble enew = e;\n\t\tint[] s = copy(data);\n\t\tint[] snew = copy(data);\n\t\tint[] sbest = copy(data);\n\t\tfor(int n=0; n<10000; n++){\n\t\t\tsnew = swap(s);\n\t\t\tenew = E(snew);\n\t\t\tif(enew < ebest){\n\t\t\t\tebest = enew;\n\t\t\t\tsbest = copy(snew);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(Math.exp((ebest - enew) * 10.0) < rand.nextFloat()){\n\t\t\t\t\ts = copy(snew);\n\t\t\t\t\te = enew;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ebest;\n\t}\n\n\tpublic int[] swap(int[] src){\n\t\tint[] data = copy(src);\n\t\tint n = data.length;\n\t\tRandom rand = new Random(System.currentTimeMillis());\n\t\tint from = rand.nextInt(n);\n\t\tint to = rand.nextInt(n);\n\t\tint dst = data[from];\n\t\tdata[from] = data[to];\n\t\tdata[to] = dst;\n\t\treturn data;\n\t}\n\n\tpublic double E(int[] data){\n\t\tint n = data.length;\n\t\tdouble e = (double)(data[0] + data[n-1]);\n\t\tfor(int i=0; i<n-1; i++){\n\t\t\te += 2.0 * Math.sqrt(data[i] * data[i+1]);\n\t\t}\n\t\treturn e;\n\t}\n\n\tpublic int[] copy(int[] data){\n\t\tint n= data.length;\n\t\tint[] dst = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tdst[i] = data[i];\n\t\t}\n\t\treturn dst;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    static double[][] dis;\n    static double dp[][];\n    static int n;\n    static int g;\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        while (sc.hasNext()) {\n            String tmp[] = sc.nextLine().split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            int rs[] = new int[tmp.length - 1];\n            for (int i = 1; i < tmp.length; i++) {\n                rs[i - 1] = Integer.parseInt(tmp[i]);\n            }\n            n = rs.length;\n            dis = new double[n][n];\n            dp = new double[1 << n][n];\n            for (int i = 0; i < 1 << n; i++) {\n                Arrays.fill(dp[i], -1);\n            }\n            for (int i = 0; i < n; i++) {\n                dis[i][i] = 0;\n            }\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    dis[i][j] = dis[j][i] = 1.0\n                            * (rs[i] + rs[j])\n                            * Math.cos(Math.asin(1.0 * Math.abs(rs[i] - rs[j])\n                                    / (rs[i] + rs[j])));\n                }\n            }\n            boolean flag = false;\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    g = j;\n                    double dis = tsp(0, i);\n                    if (dis + rs[i] + rs[j] <= l) {\n                        flag = true;\n                        i = n;\n                        break;\n                    }\n                }\n            }\n            System.out.println(flag ? \"OK\" : \"NA\");\n\n        }\n    }\n\n    public static double tsp(int S, int v) { // S:既に訪れた頂点、v:現在いる頂点\n        if (dp[S][v] >= 0) {\n            return dp[S][v];\n        }\n        if (S == (1 << n) - 1 && v == g) {\n            return dp[S][v] = 0;\n        }\n        double res = Double.POSITIVE_INFINITY;\n        for (int u = 0; u < n; u++) {\n            if ((S >> u & 1) == 0) {\n                res = Math.min(res, tsp(S | 1 << u, u) + dis[v][u]);\n            }\n        }\n        return dp[S][v] = res;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n\n    static double minRadius;\n    \n    public static void main(String[] args) {\n\n\tfinal Scanner stdin = new Scanner(System.in);\n\n\twhile ( stdin.hasNext() ) {\n\n\t    final String[] input = stdin.nextLine().split(\" \");\n\t    final int[] rads = new int[input.length - 1];\n\t    for (int i = 0; i < rads.length; ++i){\n\t\trads[i] = Integer.parseInt( input[i + 1] );\t\t\n\t    }\n\t    Arrays.sort( rads );\n\t    minRadius = Double.MAX_VALUE;\n\t    \n\t    final int boxSize = Integer.parseInt( input[0] );\n\t    boolean[] visited = new boolean[rads.length];\n\t\t\t\t\t    \n\t    dfs ( 0.0, 0, rads, visited, -1 );\n\t    System.err.println( minRadius );\n\n\t    if ( minRadius > boxSize ) {\n\t\tSystem.out.println( \"NA\" );\n\t    } else {\n\t\tSystem.out.println( \"OK\" );\n\t    }\n\t}\t\n    }\n    \n    static void dfs( final double right, final int index, final int[] rads,\n\t\t     final boolean[] visited, final int last) {\n\n\tif ( index == rads.length ) {\n\t    minRadius = Math.min( right + rads[last], minRadius );\n\t} else if ( right > minRadius ) {\n\t    return;\n\t}\n\tfor ( int i = 0; i < rads.length; ){\n\t    if ( !visited[i] ) {\n\t\tvisited[i] = true;\n\t\tif ( index > 0 ) {\n\t\t    dfs( right + 2 * Math.sqrt( rads[i] * rads[last] ), index + 1, rads, visited, i );\n\t\t} else {\n\t\t    dfs( right + rads[i], index + 1, rads, visited, i );\n\t\t}\n\t\tvisited[i] = false;\n\t\t\n\t\tfinal int current = rads[i];\n\t\twhile ( i < rads.length && current == rads[i] ) {\n\t\t    i++;\n\t\t}\n\t    } else {\n\t\ti++;\n\t    }\n\t}\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tpublic double search(int[] r){\n\t\tsort(r, true);\n\t\tdouble sum1 = 0;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tsum1 += dist(r[i], r[(i+1)%r.length]);\n\t\t}\n\t\tdouble min = 1000000000;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tmin = Math.min(min, sum1 - dist(r[i], r[(i+1)%r.length]) + r[i] + r[(i+1)%r.length]);\n\t\t}\n\t\tsort(r, false);\n\t\tdouble sum2 = r[0] + r[r.length-1];\n\t\tfor(int i = 0; i < r.length-1; i++){\n\t\t\tsum2 += dist(r[i], r[i+1]);\n\t\t}\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tmin = Math.min(min, sum1 - dist(r[i], r[(i+1)%r.length]) + r[i] + r[(i+1)%r.length]);\n\t\t}\n\t\treturn Math.min(sum1, sum2);\n\t}\n\tpublic void sort(int[] r, boolean start){\n\t\tboolean flag = start;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tint key = i;\n\t\t\tfor(int j = i; j < r.length; j++){\n\t\t\t\tif( flag ){\n\t\t\t\t\tif( r[j] > r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( r[j] < r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint temp = r[key];\n\t\t\tr[key] = r[i];\n\t\t\tr[i] = temp;\n\t\t\tflag = (flag) ? false : true;\n\t\t}\n\t}\n\tpublic double dist(int x, int y){\n\t\treturn 2*Math.sqrt(x*y);\n\t}\n\tpublic void solve() throws IOException{\n\t\twhile( stdIn.hasNext() ){\n\t\t\tString[] s = stdIn.nextLine().split(\" \");\n\t\t\tint m = Integer.parseInt(s[0]);\n\t\t\tint[] r = new int[s.length-1];\n\t\t\tfor(int i = 0; i < r.length; i++){\n\t\t\t\tr[i] = Integer.parseInt(s[i+1]);\n\t\t\t}\n\t\t\tdouble sum = search(r);\n\t\t\tSystem.out.println(sum);\n\t\t\tif( sum > m ){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t}\n\t}\t\t\t\n\tpublic static void main (String args[]) throws IOException{\n\t\tnew Main().run();\n\t}\n\t\n\tScanner stdIn;\n\tPrintWriter writer;\n\t\n\tpublic void run() throws IOException{\n\t\tstdIn = null;\n\t\ttry{\n\t\t\tstdIn = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\t\t\twriter = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tstdIn.close();\n\t\t\twriter.close();\n\t\t} catch (Exception e){\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.lang.*;\nimport java.math.*;\nimport java.io.*;\n\nimport static java.lang.Math.*;\nimport static java.util.Arrays.*;\n\npublic class Main{\n\n\tScanner sc=new Scanner(System.in);\n\n\tint INF=1<<28;\n\tdouble EPS=1e-9;\n\n\tint len, n;\n\tint[] a;\n\n\tvoid run(){\n\t\tfor(;sc.hasNext();){\n\t\t\tString[] ss=sc.nextLine().split(\" \");\n\t\t\tlen=Integer.parseInt(ss[0]);\n\t\t\tn=ss.length-1;\n\t\t\ta=new int[n];\n\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\ta[i]=Integer.parseInt(ss[i+1]);\n\t\t\t}\n\t\t\tsolve();\n\t\t}\n\t}\n\n\tvoid solve(){\n\t\tdouble[][] dp=new double[1<<n][n];\n\t\tfor(int j=0; j<1<<n; j++){\n\t\t\tfill(dp[j], INF);\n\t\t}\n\t\tfor(int i=0; i<n; i++){\n\t\t\tdp[1<<i][i]=2*a[i];\n\t\t}\n\t\tfor(int s=1; s<1<<n; s++){\n\t\t\tfor(int j=0; j<n; j++){\n\t\t\t\tif((s>>j&1)==0){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tfor(int i=0; i<n; i++){\n\t\t\t\t\tif((s>>i&1)==0){\n\t\t\t\t\t\tdp[s|1<<i][i]=min(dp[s|1<<i][i],\n\t\t\t\t\t\t\t\tdp[s][j]+2*sqrt(a[j]*a[i])-a[j]+a[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// debug(s,dp[s]);\n\t\t}\n\t\tdouble min=INF;\n\t\tfor(int i=0; i<n; i++){\n\t\t\tmin=min(min, dp[(1<<n)-1][i]);\n\t\t}\n\t\tprintln(min<len+EPS?\"OK\":\"NA\");\n\t}\n\n\tvoid debug(Object... os){\n\t\tSystem.err.println(Arrays.deepToString(os));\n\t}\n\n\tvoid print(String s){\n\t\tSystem.out.print(s);\n\t}\n\n\tvoid println(String s){\n\t\tSystem.out.println(s);\n\t}\n\n\tpublic static void main(String[] args){\n\t\t// System.setOut(new PrintStream(new BufferedOutputStream(System.out)));\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Patisserie\npublic class Main{\n\n\tstatic double[][][] dp;\n\tstatic int[] r;\n\tstatic int n;\n\t\n\tstatic double get(int left, int s, int right){\n\t\tif(dp[left][s][right]!=0)return dp[left][s][right];\n\t\tint c = 0;\n\t\tfor(int i=0;i<n;i++)if((s&(1<<i))>0)c++;\n\t\tif(c==1){\n\t\t\treturn dp[left][s][right] = 2*r[left];\n\t\t}\n\t\tif(c==2){\n\t\t\tif(r[left]==r[right])return dp[left][s][right] = 4*r[left];\n\t\t\telse return dp[left][s][right] = r[left]+r[right]+Math.sqrt(-Math.pow(r[left]-r[right], 2) + Math.pow(r[left]+r[right], 2));\n\t\t}\n\t\tdouble min = Integer.MAX_VALUE;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif((s&(1<<i))==0 || i==left || i==right)continue;\n\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\tif((s&(1<<j))==0 || j==right || j==left)continue;\n\t\t\t\tif(c>3 && i==j)continue;\n\t\t\t\tdouble x = r[left]+r[right]-r[i]-r[j]+get(i, s-(1<<left)-(1<<right),j);\n\t\t\t\tif(r[left]==r[i]){\n\t\t\t\t\tx += 2*r[i];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx += Math.sqrt(Math.pow(r[left]+r[i], 2)-Math.pow(r[left]-r[i], 2));\n\t\t\t\t}\n\t\t\t\tif(r[right]==r[j]){\n\t\t\t\t\tx += 2*r[j];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx += Math.sqrt(Math.pow(r[right]+r[j], 2)-Math.pow(r[right]-r[j], 2));\n\t\t\t\t}\n\t\t\t\tmin = Math.min(min, x);\n\t\t\t}\n\t\t}\n\t\treturn dp[left][s][right] = min;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tn = s.length-1;\n\t\t\tint len = Integer.parseInt(s[0]);\n\t\t\tr = new int[n];\n\t\t\tfor(int i=0;i<n;i++)r[i]=Integer.parseInt(s[i+1]);\n\t\t\tdp = new double[n][1<<n][n];\n\t\t\tdouble min = Integer.MAX_VALUE;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\t\tif(n>1 && i==j)continue;\n\t\t\t\t\tmin = Math.min(min, get(i, (1<<n)-1, j));\n\t\t\t\t\tif(min<=len)break;\n\t\t\t\t}\n\t\t\t\tif(min<=len)break;\n\t\t\t}\n\t\t\tSystem.out.println(min<=len?\"OK\":\"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nimport java.lang.*;\n\nimport java.math.*;\n\n\n\npublic class Main {\n\n\tScanner sc = new Scanner(System.in);\n\n\tdouble calc(int a,int b){\n\n\t\treturn Math.sqrt((a+b)*(a+b) - (a-b)*(a-b));\n\n\t}\n\n\t\n\n\tvoid run(){\n\n\t\tfor(;sc.hasNextLine();){\n\n\t\t\tScanner in = new Scanner(sc.nextLine());\n\n\t\t\tint boxSize = in.nextInt();\n\n\t\t\tLinkedList<Integer> data = new LinkedList<Integer>();\n\n\t\t\tfor(;in.hasNextInt();){\n\n\t\t\t\tdata.push(in.nextInt());\n\n\t\t\t}\t\t\t\n\n\t\t\tdouble[][] dp = new double[1<<data.size()][data.size()];\n\n\t\t\tfor(int i = 1 ; i< 1<<data.size(); i++){\n\n\t\t\t\tArrays.fill(dp[i], Double.MAX_VALUE);\n\n\t\t\t}\n\n\t\t\tfor(int i =0; i < data.size(); i++){\n\n\t\t\t\tdp[1<<i][i] = data.get(i);\n\n\t\t\t}\n\n\t\t\tfor(int i = 1; i< 1<<data.size(); i++){\n\n\t\t\t\tfor(int j = 0; j < data.size();j++){\n\n\t\t\t\t\tint sh = 1<<j;\n\n\t\t\t\t\tif((i & sh) != 0){\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor(int k = 0; k < data.size();k++){\n\n\t\t\t\t\t\tdp[i|sh][j] = Math.min(dp[i][k] + calc(data.get(j),data.get(k)),dp[i|sh][j]);\t\t\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdouble min = Double.MAX_VALUE;\n\n\t\t\tfor(int i = 0; i < data.size();i++){\n\n\t\t\t\tdp[(1<<data.size()) - 1][i] += data.get(i);\n\n\t\t\t\tmin = Math.min(min, dp[(1<<data.size())-1][i]);\n\n\t\t\t}\n\n\t\t\tSystem.out.println(min < boxSize+1e-8 ? \"OK\":\"NA\");\n\n\t\t}\t\t\n\n\t}\n\n\tpublic static void main(String[] args){\n\n\t\tMain m = new Main();\n\n\t\tm.run();\n\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\ttbl.add(data);\n\t\t}\n\n\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = data.cr[0]+data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow(rr[0]*2+j+i, 2)-Math.pow(j-i, 2));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tif (!stdin.equals(\"0 0\")) {\n\t\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\t\tdata = new Data(lines.length-1);\n\t\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\t\tif (i == 0) {\n\t\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrays.sort(data.cr);\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.ArrayDeque;\nimport java.util.Arrays;\nimport java.util.Deque;\nimport java.util.Scanner;\nimport java.util.StringTokenizer;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner scanner = new Scanner(System.in);\n\t\twhile (scanner.hasNext()) {\n\t\t\tStringTokenizer tokenizer = new StringTokenizer(scanner.nextLine());\n\t\t\tint n = Integer.parseInt(tokenizer.nextToken());\n\t\t\tint s = tokenizer.countTokens();\n\t\t\tint[] num = new int[s];\n\t\t\tfor (int i = 0; i < s; i++) {\n\t\t\t\tnum[i] = Integer.parseInt(tokenizer.nextToken());\n\t\t\t}\n\t\t\tArrays.sort(num);\n\t\t\tDeque<Integer> que = new ArrayDeque<Integer>();\n\t\t\tfor (int t : num) {\n\t\t\t\tque.offer(t);\n\t\t\t}\n\t\t\tDeque<Integer> deque = new ArrayDeque<Integer>();\n\t\t\tboolean flag = true;\n\t\t\twhile (!que.isEmpty()) {\n\t\t\t\tif (flag) {\n\t\t\t\t\tdeque.offer(que.pop());\n\t\t\t\t\tif (!que.isEmpty()) {\n\t\t\t\t\t\tdeque.offer(que.pollLast());\n\t\t\t\t\t}\n\t\t\t\t\tflag = false;\n\t\t\t\t} else {\n\t\t\t\t\tdeque.push(que.pollLast());\n\t\t\t\t\tif (!que.isEmpty()) {\n\t\t\t\t\t\tdeque.push(que.pop());\n\t\t\t\t\t}\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tdouble sum = 0;\n\t\t\tsum += deque.getFirst();\n\t\t\tsum += deque.getLast();\n\t\t\tint a = deque.pop();\n\t\t\twhile (!deque.isEmpty()) {\n\t\t\t\tint b = deque.pop();\n\t\t\t\tsum += Math.sqrt(a * b) * 2;\n\t\t\t\ta = b;\n\t\t\t}\n\t\t\tSystem.out.println(sum <= n ? \"OK\" : \"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tboolean flag = true;\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif(flag){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t\tflag = false;\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\t\n\t\t\t\tif(list.get(0) > cake_len[cakes/2]){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(list);\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += 2 * Math.sqrt(list.get(i) * list.get(i+1));\n\t\t\t}\n\t\t\t//System.out.println(sum);\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n\n    static double minRadius;\n    \n    public static void main(String[] args) {\n\n\tfinal Scanner stdin = new Scanner(System.in);\n\n\twhile ( stdin.hasNext() ) {\n\n\t    final String[] input = stdin.nextLine().split(\" \");\n\t    final int[] rads = new int[input.length - 1];\n\t    for (int i = 0; i < rads.length; ++i){\n\t\trads[i] = Integer.parseInt( input[i + 1] );\t\t\n\t    }\n\t    Arrays.sort( rads );\n\t    minRadius = Double.MAX_VALUE;\n\t    \n\t    final int boxSize = Integer.parseInt( input[0] );\n\t    boolean[] visited = new boolean[rads.length];\n\t\t\t\t\t    \n\t    dfs ( 0.0, 0, rads, visited, -1 );\n\n\t    if ( minRadius > boxSize ) {\n\t\tSystem.out.println( \"NA\" );\n\t    } else {\n\t\tSystem.out.println( \"OK\" );\n\t    }\n\t}\t\n    }\n    \n    static void dfs( final double right, final int index, final int[] rads,\n\t\t     final boolean[] visited, final int last) {\n\n\tif ( index == rads.length ) {\n\t    minRadius = Math.min( right + rads[last], minRadius );\n\t} else if ( right > minRadius ) {\n\t    return;\n\t}\n\tint i = 0;\n\twhile ( i < rads.length ){\n\t    if ( !visited[i] ) {\n\t\tvisited[i] = true;\n\t\tif ( index > 0 ) {\n\t\t    dfs( right + 2 * Math.sqrt( rads[i] * rads[last] ), index + 1, rads, visited, i );\n\t\t} else {\n\t\t    dfs( right + rads[i], index + 1, rads, visited, i );\n\t\t}\n\t\tvisited[i] = false;\n\t\t\n\t\tfinal int current = rads[i];\n\t\twhile ( i < rads.length && current == rads[i] ) {\n\t\t    i++;\n\t\t}\n\t    } else {\n\t\ti++;\n\t    }\n\t}\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n//\t\t\ttbl.add(data);\n\t\t}\n\n\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tMyScanner sc = new MyScanner();\n\tScanner sc2 = new Scanner(System.in);\n\tint mod = 1000000007;\n\n\tint N;\n\tint[] r;\n\tdouble[][] memo;\n\n\tvoid run() {\n\t\twhile (sc2.hasNext()) {\n\t\t\tString[] input = sc2.nextLine().split(\" \");\n\t\t\tint L = Integer.valueOf(input[0]);\n\t\t\tN = input.length - 1;\n\t\t\tr = new int[N];\n\t\t\tmemo = new double[N][1 << N];\n\n\t\t\tfor (int i = 1; i < N + 1; i++) {\n\t\t\t\tr[i - 1] = Integer.valueOf(input[i]);\n\t\t\t}\n\t\t\tboolean judge = false;\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tdouble ans = tsp(i, 1 << i) + r[i];\n\t\t\t\tif (ans <= L) {\n\t\t\t\t\tjudge = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(judge ? \"OK\" : \"NA\");\n\t\t}\n\t}\n\n\tdouble tsp(int v, int bit) {\n\t\tif(memo[v][bit] != 0) {\n\t\t\treturn memo[v][bit];\n\t\t}\n\t\tif (bit == (1 << N) - 1) {\n\t\t\treturn r[v];\n\t\t}\n\t\tdouble res = 1 << 10;\n\t\tfor (int w = 0; w < N; w++) {\n\t\t\tif ((bit & (1 << w)) != 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdouble dis = Math.sqrt((r[v] + r[w]) * (r[v] + r[w])\n\t\t\t\t\t- (r[v] - r[w]) * (r[v] - r[w]));\n\t\t\tres = Math.min(res, dis + tsp(w, bit | 1 << w));\n\t\t}\n\t\tmemo[v][bit] = res;\n\t\treturn res;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n\n\tvoid debug2(int[][] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tfor (int j = 0; j < array[i].length; j++) {\n\t\t\t\tSystem.out.print(array[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n\tclass MyScanner {\n\t\tint nextInt() {\n\t\t\ttry {\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (c != '-' && (c < '0' || '9' < c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tif (c == '-')\n\t\t\t\t\treturn -nextInt();\n\t\t\t\tint res = 0;\n\t\t\t\tdo {\n\t\t\t\t\tres *= 10;\n\t\t\t\t\tres += c - '0';\n\t\t\t\t\tc = System.in.read();\n\t\t\t\t} while ('0' <= c && c <= '9');\n\t\t\t\treturn res;\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\tStringBuilder res = new StringBuilder(\"\");\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (Character.isWhitespace(c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tdo {\n\t\t\t\t\tres.append((char) c);\n\t\t\t\t} while (!Character.isWhitespace(c = System.in.read()));\n\t\t\t\treturn res.toString();\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nclass Main{\n\tpublic static void main(String[] args){\n\t\tScanner s=new Scanner(System.in);\n\t\twhile(s.hasNext()){\n\t\t\tString str=s.nextLine();\n\t\t\tString[]arg=str.split(\" \");\n\t\t\tint a=Integer.parseInt(arg[0]);\n\t\t\tint[]b=new int[arg.length-1];\n\t\t\tfor(int i=0;i<arg.length-1;i++)b[i]=Integer.parseInt(arg[i+1]);\n\t\t\tdouble dp[][]=new double[4096][12];\n\t\t\tint n=arg.length-1;\n\t\t\tfor(int i=0;i<4096;i++)\n\t\t\t\tfor(int j=0;j<12;j++)\n\t\t\t\t\tdp[i][j]=999999999;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tdp[1<<i][i]=b[i];\n\t\t\t}\n\t\t\tfor(int i=0;i<(1<<n)-1;i++){\n\t\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\t\tfor(int k=0;k<n;k++){\n\t\t\t\t\t\tif((i&(1<<k))==0){\n\t\t\t\t\t\t\tdp[i+(1<<k)][k]=Math.min(dp[i+(1<<k)][k],dp[i][j]+Math.sqrt((b[j]+b[k])*(b[j]+b[k])-(b[j]-b[k])*(b[j]-b[k])));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tboolean ok=false;\n\t\t//\tfor(int i=0;i<n;i++)System.out.print(dp[(1<<n)-1][i]+\" \");\n\t\t\tfor(int i=0;i<n;i++)if(dp[(1<<n)-1][i]+b[i]<(double)a+0.000001)ok=true;\n\t\t\tif(ok)System.out.println(\"OK\");\n\t\t\telse System.out.println(\"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\t\t\t//if(size == 0) break;\n\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tArrays.sort(radius);\n\n\t\t\tradius = bind(radius);\n\n\t\t\tdouble cakes = calcSize(radius);\n\t\t\tif(cakes <= size){\n\t\t\t\tAns.add(\"OK\");\n\t\t\t}else{\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic int[] bind(int[] data){\n\t\tint n = data.length;\n\t\tint[] dst = new int[n];\n\n\t\tfor(int i=0; i<n/2; i++){\n\t\t\tdst[2*i] = data[i];\n\t\t\tdst[2*i+1] = data[n-i-1];\n\t\t}\n\n\t\tif(n%2 == 1){\n\t\t\tdst[n-1] = data[n/2];\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tpublic double calcSize(int[] data){\n\t\tdouble sum = 0.0;\n\t\tsum += data[0] + data[data.length-1];\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[i] * data[i+1]);\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\npublic class Main {\n    static double INF = 10000000.0;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = \n        new BufferedReader(new InputStreamReader(System.in));\n\n        String line;\n        while ((line = br.readLine()) != null) {\n            String[] temp = line.split(\" \");\n            int w = Integer.parseInt(temp[0]);\n            int[] r = new int[temp.length - 1];\n            for (int i = 0; i < r.length; i++) {\n                r[i] = Integer.parseInt(temp[i + 1]);\n            }\n            \n            int n = r.length;\n            double[][] dp = new double[1 << n][n];\n            for (int i = 0;  i < (1 << n); i++) {\n                for (int j = 0; j < n; j++) {\n                    dp[i][j] = INF;\n                }\n            }\n            \n            for (int i = 0; i < n; i++) {\n                dp[(1 << n) - 1 - (1 << i)][i] = r[i];\n            }\n            for (int s = (1 << n) - 2; s >= 0; s--) {\n                for (int i = 0; i < n; i++) {\n                    if ((s & (1 << i)) != 0) continue;\n                    for (int j = 0; j < n; j++) {\n                        dp[s][i] = Math.min(dp[s][i], dp[s | (1 << i)][j] +  2 * Math.sqrt(r[i] * r[j]));\n                    }\n                }\n            }\n            \n            boolean flag = false;\n            for (int j = 0; j < n; j++) {\n                if (dp[0][j] + r[j] <= w) {\n                    flag = true;\n                }\n            }\n            System.out.println((flag) ? \"OK\" : \"NA\");\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\n\npublic class Main {\n    static double INF = 10000000.0;\n\n    public static void main(String[] args) throws IOException {\n        BufferedReader br = \n        new BufferedReader(new InputStreamReader(System.in));\n\n        String line;\n        while ((line = br.readLine()) != null) {\n            String[] temp = line.split(\" \");\n            int w = Integer.parseInt(temp[0]);\n            int[] r = new int[temp.length - 1];\n            for (int i = 0; i < r.length; i++) {\n                r[i] = Integer.parseInt(temp[i + 1]);\n            }\n            \n            int n = r.length;\n            double[][] dp = new double[1 << n][n];\n            for (int i = 0;  i < (1 << n); i++) {\n                for (int j = 0; j < n; j++) {\n                    dp[i][j] = INF;\n                }\n            }\n\n            dp[(1 << n) - 1][0] = 0.0;\n            for (int s = (1 << n) - 2; s >= 0; s--) {\n                for (int i = 0; i < n; i++) {\n                    for (int j = 0; j < n; j++) {\n                        if (((s >> j) & 1) == 0) {\n                            dp[s][i] = Math.min(dp[s][i], dp[s | (1 << j)][j] +  2 * Math.sqrt(r[i] * r[j]));\n                        }\n                    }\n                }\n            }\n            \n            boolean flag = false;\n            for (int j = 0; j < n; j++) {\n                if (dp[0][j] <= w) {\n                    flag = true;\n                }\n            }\n            System.out.println((flag) ? \"OK\" : \"NA\");\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\tif(str.equals(\"\")){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\tif(list.get(0) > list.get(cakes - 2)){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\t//if(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(s > 0){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += (double)(data[seq[0]] + data[seq[seq.length-1]]);\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\t\n\tpublic static final double INF = Integer.MAX_VALUE;\n\tpublic static void main(String[] args) {\n\t\tdoIt();\n\t}\n\t\n\tpublic static void doIt(){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString s = sc.nextLine();\n\t\t\tString[] ss = s.split(\" \");\n\t\t\tint len = ss.length;\n\t\t\tint box = Integer.parseInt(ss[0]);\n\t\t\tint n = len - 1;\n\t\t\t//System.out.println(\"n = \" + n);\n\t\t\tint[] r = new int[n];\n\t\t\tfor(int i = 1; i < len; i++){\n\t\t\t\tr[i - 1] = Integer.parseInt(ss[i]);\n\t\t\t}\n\t\t\tint max = 1 << n;\n\t\t\t//集合Sが箱に入っていて、nが最後の時の幅の最小値\n\t\t\tdouble[][] dp = new double[max][n];\n\t\t\t//arg1とarg2を並べた時の幅。2sqrt(a1*a2)\n\t\t\tdouble[][] width = new double[n][n];\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\t\n\t\t\t\tfor(int j = i + 1; j < n; j++){\n\t\t\t\t\twidth[i][j] = 2*Math.sqrt(r[i]*r[j]);\n\t\t\t\t\twidth[j][i] = width[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\t//dp[0][0] = 0;\n\t\t\t//init\n\t\t\tfor(double[] a : dp){\n\t\t\t\tArrays.fill(a, INF);\n\t\t\t}\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tdp[1 << i][i] = r[i];\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tfor(int i = 1; i < max; i++){\n\t\t\t\tfor(int j = 0; j < n; j++){\n\t\t\t\t\tif(dp[i][j] != INF){\n\t\t\t\t\t\t//最小値があれば、新たなケーキを足してみる\n\t\t\t\t\t\tfor(int k = 0; k < n; k++){\n\t\t\t\t\t\t\t//既に使われているか？\n\t\t\t\t\t\t\tif(((i >> k) & 1) == 0){\n\t\t\t\t\t\t\t\tdp[i + (1 << k)][k] = Math.min(dp[i + (1 << k)][k], dp[i][j] + width[j][k]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdouble min = INF;\n\t\t\t//最後に半径を足す\n\t\t\tfor(int i = 0; i < n; i++){\n\t\t\t\tmin = Math.min(min, dp[max - 1][i] + r[i]);\n\t\t\t}\n\t\t\t//System.out.println(min);\n\t\t\tSystem.out.println(min > box? \"NA\" : \"OK\");\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    static double[][] dis;\n    static double dp[][];\n    static int n;\n    static int g;\n    static final double EPS = 1.0e-10;\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        while (sc.hasNext()) {\n            String tmp[] = sc.nextLine().split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            int rs[] = new int[tmp.length - 1];\n            for (int i = 1; i < tmp.length; i++) {\n                rs[i - 1] = Integer.parseInt(tmp[i]);\n            }\n            n = rs.length;\n            dis = new double[n][n];\n            dp = new double[1 << n][n];\n\n            for (int i = 0; i < n; i++) {\n                dis[i][i] = 0;\n            }\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    dis[i][j] = dis[j][i] = 1.0 * Math.sqrt((rs[i] + rs[j])\n                            * (rs[i] + rs[j]) - (rs[i] - rs[j])\n                            * (rs[i] - rs[j]));\n                }\n            }\n            boolean flag = false;\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    g = j;\n                    for (int k = 0; k < 1 << n; k++) {\n                        Arrays.fill(dp[k], -1);\n                    }\n                    double dis = tsp(1 << i, i);\n                  //  System.out.println(dis + rs[i] + rs[j]);\n                    if (dis + rs[i] + rs[j] < l\n                            || Math.abs(l - (dis + rs[i] + rs[j])) < EPS) {\n                        flag = true;\n                        i = n;\n                        break;\n                    }\n                }\n            }\n            System.out.println(flag ? \"OK\" : \"NA\");\n\n        }\n    }\n\n    public static double tsp(int S, int v) { // S:既に訪れた頂点、v:現在いる頂点\n        if (dp[S][v] >= 0) {\n            return dp[S][v];\n        }\n        if (S == (1 << n) - 1 && v == g) {\n            return dp[S][v] = 0;\n        }\n        double res = Double.POSITIVE_INFINITY;\n        for (int u = 0; u < n; u++) {\n            if ((S & (1 << u)) == 0) {\n                res = Math.min(res, tsp(S | 1 << u, u) + dis[v][u]);\n            }\n        }\n        return dp[S][v] = res;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tdouble box = Double.parseDouble(dst[0]);\n\n\t\t\t//if(box == 0) break;\n\n\t\t\tint size = dst.length-1;\n\t\t\tint[] rad = new int[size];\n\t\t\tint[] sort = new int[size];\n\t\t\tfor(int n=0; n<size; n++){\n\t\t\t\trad[n] = Integer.parseInt(dst[n+1]);\n\t\t\t}\n\n\t\t\tint m = size/2;\n\t\t\tArrays.sort(rad);\n\t\t\tfor(int i=0; i<m; i++){\n\t\t\t\tsort[2*i] = rad[i];\n\t\t\t\tsort[2*i+1] = rad[size-1-i];\n\t\t\t}\n\t\t\tif(size%2==1){\n\t\t\t\tsort[size-1] = rad[m];\n\t\t\t}\n\n\t\t\tdouble cost = min_cost(sort);\n\t\t\tif(cost <= box){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic double min_cost(int[] data){\n\t\tdouble e = E(data);\n\t\tdouble ebest = e;\n\t\tint[] snew = copy(data);\n\t\tint[] sbest = copy(data);\n\t\tfor(int n=0; n<100; n++){\n\t\t\tswap(sbest);\n\t\t\tdouble enew = E(sbest);\n\t\t\tif(enew < ebest){\n\t\t\t\tebest = enew;\n\t\t\t\tsnew = copy(sbest);\n\t\t\t}else{\n\t\t\t\tsbest = copy(snew);\n\t\t\t}\n\t\t}\n\n\t\treturn ebest;\n\t}\n\n\tpublic void swap(int[] data){\n\t\tint n = data.length;\n\t\tRandom rand = new Random(System.currentTimeMillis());\n\t\tint from = rand.nextInt(n);\n\t\tint to = rand.nextInt(n);\n\t\tint dst = data[from];\n\t\tdata[from] = data[to];\n\t\tdata[to] = dst;\n\t}\n\n\tpublic double E(int[] data){\n\t\tint n = data.length;\n\t\tdouble e = (double)(data[0] + data[n-1]);\n\t\tfor(int i=0; i<n-1; i++){\n\t\t\te += 2.0 * Math.sqrt(data[i] * data[i+1]);\n\t\t}\n\t\treturn e;\n\t}\n\n\tpublic int[] copy(int[] data){\n\t\tint n= data.length;\n\t\tint[] dst = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tdst[i] = data[i];\n\t\t}\n\t\treturn dst;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile(sc.hasNextDouble()){\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tdouble len = Double.parseDouble(s[0]);\n\t\t\tLinkedList<Double> rlist = new LinkedList<Double>();\n\n\t\t\tfor(int i=1;i<s.length;i++){\n\t\t\t\trlist.add(Double.parseDouble(s[i]));\n\t\t\t}\n\n\t\t\tCollections.sort(rlist);\n\t\t\tSystem.out.println(isCorrect(len,rlist) ? \"OK\" : \"NA\");\n\t\t}\n\t}\n\n\tprivate static boolean isCorrect(double len,LinkedList<Double> rlist){\n\t\tdouble[] r = new double[rlist.size()];\n\t\tfor(int i=0;!rlist.isEmpty();i++){\n\t\t\tr[i] = i % 2 == 0 ? rlist.removeFirst() : rlist.removeLast();\n\t\t}\n\n\t\tint n = r.length;\n\t\tdouble sum = r[0] + r[n-1];\n\n\t\tfor(int i=1;i<n;i++){\n\t\t\tdouble rr = Math.pow(r[i-1] + r[i], 2);\n\t\t\tdouble y = Math.pow(r[i-1] - r[i], 2);\n\t\t\tsum += Math.sqrt(rr - y);\n\t\t}\n\n\t\treturn sum > len ? false : true;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n\n    static double minRadius;\n    \n    public static void main(String[] args) {\n\n\tfinal Scanner stdin = new Scanner(System.in);\n\n\twhile ( stdin.hasNext() ) {\n\n\t    final String[] input = stdin.nextLine().split(\" \");\n\t    final int[] rads = new int[input.length - 1];\n\t    for (int i = 0; i < rads.length; ++i){\n\t\trads[i] = Integer.parseInt( input[i + 1] );\t\t\n\t    }\n\t    Arrays.sort( rads );\n\t    minRadius = Double.MAX_VALUE;\n\t    \n\t    final int boxSize = Integer.parseInt( input[0] );\n\t    boolean[] visited = new boolean[rads.length];\n\t\t\t\t\t    \n\t    dfs ( 0.0, 0, rads, visited, -1 );\n\n\t    if ( minRadius > boxSize ) {\n\t\tSystem.out.println( \"NA\" );\n\t    } else {\n\t\tSystem.out.println( \"OK\" );\n\t    }\n\t}\t\n    }\n    \n    static void dfs( final double right, final int index, final int[] rads,\n\t\t     final boolean[] visited, final int last) {\n\n\tif ( index == rads.length ) {\n\t    minRadius = Math.min( right + rads[last], minRadius );\n\t} else if ( right > minRadius ) {\n\t    return;\n\t}\n\tfor ( int i = 0; i < rads.length;){\n\t    if ( !visited[i] ) {\n\t\tvisited[i] = true;\n\t\tif ( index > 0 ) {\n\t\t    dfs( right + 2 * Math.sqrt( rads[i] * rads[last] ), index + 1, rads, visited, i );\n\t\t} else {\n\t\t    dfs( right + rads[i], index + 1, rads, visited, i );\n\t\t}\n\t\tvisited[i] = false;\n\t\t\n\t\tfinal int current = rads[i];\n\t\twhile ( i < rads.length && current == rads[i] ) {\n\t\t    i++;\n\t\t}\n\t    } else {\n\t\ti++;\n\t    }\n\t}\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n \npublic class Main {\n\tpublic static void main(String[] args){\n\t\ttry(Scanner sc=new Scanner(System.in)){\n\t\t\twhile(sc.hasNextLine()) {\n\t\t\t\tString str=sc.nextLine();\n\t\t\t\tString[] tokens=str.split(\" \");\n\t\t\t\tint W=0;\n\t\t\t\tint[] r=new int[13];\n\t\t\t\tint n=0;\n\t\t\t\tfor(String s:tokens) {\n\t\t\t\t\tif(W==0) W=Integer.parseInt(s);\n\t\t\t\t\telse r[n-1]=Integer.parseInt(s);\n\t\t\t\t\tn++;\n\t\t\t\t}\n\t\t\t\tn--;\n\t\t\t\t//dp[今までの頂点][現在地]=左からどこにいるか\n\t\t\t\tdouble[][] dp=new double[1<<n][n];\n\t\t\t\tdouble INF=1<<28;\n\t\t\t\tfor(int i=0; i<(1<<n); i++) {\n\t\t\t\t\tfor(int j=0; j<n; j++) {\n\t\t\t\t\t\tdp[i][j]=INF;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\t\tdp[1<<i][i]=2*r[i];\n\t\t\t\t}\n\t\t\t\tfor(int i=0; i<(1<<n); i++) {\n\t\t\t\t\tfor(int j=0; j<n; j++) {\n\t\t\t\t\t\tif(dp[i][j]==INF)\tcontinue;\n\t\t\t\t\t\tfor(int k=0; k<n; k++) {\n\t\t\t\t\t\t\tif((1&i>>k)==1)\tcontinue;\n\t\t\t\t\t\t\tint nexti=i|(1<<k);\n\t\t\t\t\t\t\tdouble nextdp=dp[i][j]-r[j]+Math.sqrt((r[j]+r[k])*(r[j]+r[k])-(r[j]-r[k])*(r[j]-r[k]))+r[k];\n\t\t\t\t\t\t\tdp[nexti][k]=Math.min(dp[nexti][k], nextdp);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tdouble min=INF;\n\t\t\t\tfor(int i=0; i<n; i++) {\n\t\t\t\t\tmin=Math.min(min, dp[(1<<n)-1][i]);\n\t\t\t\t}\n\t\t\t\tSystem.out.println(min<=W? \"OK\":\"NA\");\n\t\t\t}\n\t\t}\n\t}\t\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\t//if(size == 0) break;\n\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\t//System.out.println(s);\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += data[seq[0]] + data[seq[data.length-1]];\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tList<Integer> sort = new ArrayList<Integer>();\n\t\t\tList<Integer> que = new ArrayList<Integer>();\n\t\t\tdouble box = Double.parseDouble(dst[0]);\n\n\t\t\tif(box == 0) break;\n\n\t\t\tint size = dst.length-1;\n\t\t\tint[] rad = new int[size];\n\t\t\tfor(int i=0; i<size; i++){\n\t\t\t\trad[i] = Integer.parseInt(dst[i+1]);\n\t\t\t}\n\n\t\t\tArrays.sort(rad);\n\n\t\t\tfor(int i=0; i<size-1; i++){\n\t\t\t\tque.add(rad[i]);\n\t\t\t}\n\n\t\t\tint flag = -1;\n\t\t\tdouble width = 0.0;\n\t\t\tsort.add(rad[size-1]);\n\t\t\twhile(que.size() > 1){\n\t\t\t\tif(flag == 1){\n\t\t\t\t\tflag = -1;\n\t\t\t\t\tint num = que.size()-1;\n\t\t\t\t\tint r = que.get(num);\n\t\t\t\t\tque.remove(num);\n\t\t\t\t\tdouble wr = 2.0 * Math.sqrt(r * sort.get(0));\n\t\t\t\t\tdouble wl = 2.0 * Math.sqrt(r * sort.get(sort.size()-1));\n\t\t\t\t\tif(wr < wl){\n\t\t\t\t\t\tsort.add(0, r);\n\t\t\t\t\t\twidth += wr;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsort.add(r);\n\t\t\t\t\t\twidth += wl;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if(flag == -1){\n\t\t\t\t\tflag = 1;\n\t\t\t\t\tint num = 0;\n\t\t\t\t\tint r = que.get(num);\n\t\t\t\t\tque.remove(num);\n\t\t\t\t\tdouble wr = 2.0 * Math.sqrt(r * sort.get(0));\n\t\t\t\t\tdouble wl = 2.0 * Math.sqrt(r * sort.get(sort.size()-1));\n\t\t\t\t\tif(wr < wl){\n\t\t\t\t\t\tsort.add(r);\n\t\t\t\t\t\twidth += wl;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsort.add(0, r);\n\t\t\t\t\t\twidth += wr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint r = que.get(0);\n\t\t\tdouble wr = r + 2.0 * Math.sqrt(r * sort.get(0)) + sort.get(sort.size()-1);\n\t\t\tdouble wl = sort.get(0) + 2.0 * Math.sqrt(sort.get(sort.size()-1) * r) + r;\n\t\t\twidth += Math.min(wr, wl);\n\n\t\t\tif(width <= box){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNextLine()) {\n\t\t\tString[] in = sc.nextLine().split(\" \");\n\t\t\tArrayList<Integer> list = new ArrayList<Integer>();\n\t\t\tint n = in.length-1;\n\t\t\tint s = Integer.parseInt(in[0]);\n\t\t\tfor(int i = 0 ; i < n; i++) {\n\t\t\t\tlist.add(Integer.parseInt(in[i+1]));\n\t\t\t}\n\t\t\t\n\t\t\tdouble[][] dp = new double[1 << n][n];\n\t\t\tfor(int i = 1; i < 1 << n; i++) {\n\t\t\t\tArrays.fill(dp[i], 2 << 27);\n\t\t\t}\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tdp[1 << i][i] = list.get(i);\n\t\t\t}\n\t\t\tfor(int i = 1; i < 1 << n; i++) {\n\t\t\t\tfor(int j = 0; j < n; j++) {\n\t\t\t\t\tfor(int k = 0; k < n; k++) {\n\t\t\t\t\t\tif((i & (1 << k)) == 0) {\n\t\t\t\t\t\t\tdp[i | (1 << k)][k] = Math.min(dp[i | (1 << k)][k], dp[i][j] + Math.sqrt(Math.pow(list.get(j) + list.get(k), 2) - Math.pow(list.get(j) - list.get(k), 2)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdouble min = Integer.MAX_VALUE;\n\t\t\t\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tdouble tmp = dp[(1 << n) -1][i] + list.get(i);\n\t\t\t\tif(min > tmp) {\n\t\t\t\t\tmin = tmp;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(min <= s) {\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t}\n\t}\n\t\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\t\n\t\t\tif(!sc.hasNext()){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes % 2 == 1){\n\t\t\t\tif(list.get(0) > list.get(cakes - 2)){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum < box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\t//if(size == 0) break;\n\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\t\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += data[seq[0]] + data[seq[data.length-1]];\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\nimport java.awt.geom.*;\n\npublic class Main {\n    double box_len;\n    double rs[];\n    BufferedReader br;\n    double[][] dp;\n    int n;\n\n    Main() {\n        br = new BufferedReader(new InputStreamReader(System.in));\n    }\n\n    boolean init() {\n        try {\n            String[] data = br.readLine().split(\" \");\n            box_len = Double.parseDouble(data[0]);\n            rs = new double[data.length-1];\n            n = rs.length;\n            for (int i = 1; i < data.length; i++) \n                rs[i-1] = Double.parseDouble(data[i]);\n\n            dp = new double[n][1<<n]; \n\n            return true;\n        } catch (IOException e) {\n            return false;\n        } catch (NullPointerException e) {\n            return false;\n        }\n    }\n\n    double dist(double a, double b) {\n        return Math.sqrt( (a+b)*(a+b) - (a-b)*(a-b) );\n    }\n\n    double solve(int v, int S) {\n//        System.out.printf(\"%d %d\\n\", v, S);\n        if (S == ((1<<n)-1)) return rs[v];\n        if (dp[v][S] > 0) return dp[v][S];\n\n        double minl = INF;\n        for (int i = 0; i < n; i++) {\n            if ((S & (1<<i)) != 0) continue;\n            minl = Math.min(minl, solve(i, S + (1<<i)) + dist(rs[v], rs[i]));\n        }\n\n        return dp[v][S] = minl;\n    }\n\n    static final double INF = 1e18;\n    void run() {\n        while (init()) {\n            double min_len = INF;\n\n            for (int i = 0; i < n; i++) \n                min_len = Math.min(min_len, solve(i, (1<<i)) + rs[i]);\n\n            if (box_len >= min_len) \n                System.out.println(\"OK\");\n            else\n                System.out.println(\"NA\");\n        }\n    }\n\n    public static void main(String[] args) {\n        new Main().run();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\tpublic static void main(String[] args){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile(sc.hasNextDouble()){\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tdouble len = Double.parseDouble(s[0]);\n\t\t\tLinkedList<Double> rlist = new LinkedList<Double>();\n\n\t\t\tfor(int i=1;i<s.length;i++){\n\t\t\t\trlist.add(Double.parseDouble(s[i]));\n\t\t\t}\n\n\t\t\tSystem.out.println(isCorrect(len,rlist) ? \"OK\" : \"NA\");\n\t\t}\n\t}\n\n\tprivate static boolean isCorrect(double len,LinkedList<Double> rlist){\n\t\tdouble[] r = new double[rlist.size()];\n\t\tfor(int i=0;!rlist.isEmpty();i++){\n\t\t\tr[i] = i % 2 == 0 ? rlist.removeFirst() : rlist.removeLast();\n\t\t}\n\n\t\tint n = r.length;\n\t\tdouble sum = r[0] + r[n-1];\n\n\t\tfor(int i=1;i<n;i++){\n\t\t\tdouble rr = Math.pow(r[i-1] + r[i], 2);\n\t\t\tdouble y = Math.pow(r[i-1] - r[i], 2);\n\t\t\tsum += Math.sqrt(rr - y);\n\t\t}\n\n\t\treturn sum > len ? false : true;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tboolean flag = true;\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif(flag){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t\tflag = false;\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\t\n\t\t\t\tif(Math.abs(list.get(0) - cake_len[cakes/2]) > Math.abs(list.get(cakes-2) - cake_len[cakes/2])){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(list);\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t//System.out.println(sum);\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tint n, len;\n\tdouble min;\n\tint[] r;\n\tdouble[][] cost;\n\t\n\tvoid check(int[] perm){\n\t\tdouble sum = r[0] + r[1];\n\t\t\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tif(i==0) sum += cost[r[0]][r[perm[0]+2]];\n\t\t\telse if(i==n-2) sum += cost[r[perm[n-3]+2]][r[1]];\n\t\t\telse sum += cost[r[perm[i-1]+2]][r[perm[i]+2]];\n\t\t}\n\t\tmin = Math.min(min, sum);\n\t\t\n\t\tfor(int i=0;i<n-1;i++){\n\t\t\tif(i==0) sum += cost[r[1]][r[perm[0]+2]];\n\t\t\telse if(i==n-2) sum += cost[r[perm[n-3]+2]][r[0]];\n\t\t\telse sum += cost[r[perm[i-1]+2]][r[perm[i]+2]];\n\t\t}\n\t\tmin = Math.min(min, sum);\n\t}\n\t\n\tvoid makeperm(int k, int[] perm, boolean[] flag){\n\t\tif(k==n-2){\n\t\t\tcheck(perm);\n\t\t}else{\n\t\t\tfor(int i=0;i<n-2;i++){\n\t\t\t\tif(flag[i]==true) continue;\n\t\t\t\tperm[k] = i;\n\t\t\t\tflag[i] = true;\n\t\t\t\tmakeperm(k+1, perm, flag);\n\t\t\t\tflag[i] = false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\n\t\tcost = new double[11][11];\n\t\tfor(int i=3;i<11;i++){\n\t\t\tfor(int j=i;j<11;j++){\n\t\t\t\tcost[i][j] = Math.sqrt((j+i)*(j+i) - (j-i)*(j-i));\n\t\t\t\tcost[j][i] = cost[i][j];\n\t\t\t}\n\t\t}\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tn = s.length-1;\n\t\t\tlen = Integer.valueOf(s[0]);\n\t\t\tr = new int[n];\n\t\t\tfor(int i=0;i<n;i++) r[i] = Integer.valueOf(s[i+1]);\n\t\t\tArrays.sort(r);\n\t\t\t\n\t\t\tmin = Integer.MAX_VALUE;\n\t\t\tmakeperm(0, new int[n-2], new boolean[n-2]);\n\t\t\t\n\t\t\tif(min<=len) System.out.println(\"OK\");\n\t\t\telse System.out.println(\"NA\");\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main{\n\t\n\tint INF = 1 << 24;\n\t\n\tprivate void doit(){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString [] input = sc.nextLine().split(\" \");\n\t\t\tint size = Integer.parseInt(input[0]);\n\t\t\tint [] r = new int[input.length - 1];\n\t\t\tfor(int i = 1; i < input.length; i++){\n\t\t\t\tr[i-1] = Integer.parseInt(input[i]) ;\n\t\t\t}\n\t\t\tint len = r.length;\n\t\t\tdouble [][] dp = new double[1 << len][len];\n\t\t\tfor(int i = 0; i < (1 << len); i++){\n\t\t\t\tArrays.fill(dp[i], INF);\n\t\t\t}\n\t\t\tfor(int i = 0; i < len; i++){\n\t\t\t\tdp[1 << i][i] = r[i];\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i = 0; i < (1 << len); i++){\n\t\t\t\tfor(int j = 0; j < len; j++){\n\t\t\t\t\tif(dp[i][j] == INF) continue;\n\t\t\t\t\tfor(int k = 0; k < len;k++){\n\t\t\t\t\t\tif((i & (1 << k)) !=0 ) continue;\n\t\t\t\t\t\tint next = (i | (1 << k));\n\t\t\t\t\t\tint c = r[j] + r[k];\n\t\t\t\t\t\tint b = Math.abs(r[j] - r[k]);\n\t\t\t\t\t\tdouble a = Math.sqrt(c * c - b * b);\n\t\t\t\t\t\tdouble value = dp[i][j] + a;\n\t\t\t\t\t\tdp[next][k] = Math.min(dp[next][k], value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble min = INF;\n\t\t\tint len2 = (1 << len) - 1;\n\t\t\tfor(int i = 0 ; i < len ; i++){\n\t\t\t\tmin = Math.min(min, dp[len2][i] + r[i]);\n\t\t\t}\n\t\t\tif(min <= size){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate void debug(Object... o) { System.out.println(\"debug = \" + Arrays.deepToString(o)); }\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().doit();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tstatic double dp[][][];\n\tstatic int n, a;\n\tstatic double r[];\n\n\tpublic static double f(int left, int right, int bit) {\n\t\tif (0 < dp[left][right][bit]) {\n\t\t\treturn dp[left][right][bit];\n\t\t}\n\t\tint k = check(bit);\n\t\tif (k == 1) {\n\t\t\treturn dp[left][right][bit] = 2.0 * r[left];\n\t\t}\n\t\tif (k == 2) {\n\t\t\treturn dp[left][right][bit] = r[left] + r[right] + 2.0 * Math.sqrt(r[left] * r[right]);\n\t\t}\n\n\t\tdouble min = Double.MAX_VALUE;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (i == left || i == right || (bit & (1 << i)) == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (j == left || j == right || (bit & (1 << j)) == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (3 < k && i == j) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdouble sub = f(i, j, (bit ^ (1 << left)) ^ (1 << right));\n\t\t\t\tsub -= r[i] + r[j];\n\t\t\t\tsub += 2.0 * (Math.sqrt(r[left] * r[i]) + Math.sqrt(r[right] * r[j]));\n\t\t\t\tsub += r[left] + r[right];\n\t\t\t\tmin = Math.min(min, sub);\n\t\t\t}\n\t\t}\n\t\treturn dp[left][right][bit] = min;\n\t}\n\n\tpublic static int check(int bit) {\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < 12; i++) {\n\t\t\tif (0 < (bit & (1 << i))) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString b[] = sc.nextLine().split(\" \");\n\t\t\ta = Integer.parseInt(b[0]);\n\t\t\tn = b.length - 1;\n\t\t\tr = new double[n];\n\t\t\tdp = new double[n][n][1 << n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tr[i] = Integer.parseInt(b[i + 1]);\n\t\t\t}\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\tif (i != j) {\n\t\t\t\t\t\tmin = Math.min(min, f(i, j, (1 << n) - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(min <= a ? \"OK\" : \"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tstatic double dp[][][];\n\tstatic int n, a;\n\tstatic double r[];\n\n\tpublic static double f(int left, int right, int bit) {\n\t\tif (0 < dp[left][right][bit]) {\n\t\t\treturn dp[left][right][bit];\n\t\t}\n\t\tint k = check(bit);\n\t\tif (k == 1) {\n\t\t\treturn dp[left][right][bit] = 2.0 * r[left];\n\t\t}\n\t\tif (k == 2) {\n\t\t\treturn dp[left][right][bit] = r[left] + r[right] + 2.0 * Math.sqrt(r[left] * r[right]);\n\t\t}\n\n\t\tdouble min = Double.MAX_VALUE;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tif (i == left || i == right || (bit & (1 << i)) == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tif (j == left || j == right || (bit & (1 << j)) == 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (3 < k && i == j) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdouble sub = f(i, j, (bit ^ (1 << left)) ^ (1 << right));\n\t\t\t\tsub -= r[i] + r[j];\n\t\t\t\tsub += 2.0 * (Math.sqrt(r[left] * r[i]) + Math.sqrt(r[right] * r[j]));\n\t\t\t\tsub += r[left] + r[right];\n\t\t\t\tmin = Math.min(min, sub);\n\t\t\t}\n\t\t}\n\t\treturn dp[left][right][bit] = min;\n\t}\n\n\tpublic static int check(int bit) {\n\t\tint count = 0;\n\n\t\tfor (int i = 0; i < 12; i++) {\n\t\t\tif (0 < (bit & (1 << i))) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile (sc.hasNext()) {\n\t\t\tString b[] = sc.nextLine().split(\" \");\n\t\t\ta = Integer.parseInt(b[0]);\n\t\t\tn = b.length - 1;\n\t\t\tr = new double[n];\n\t\t\tdp = new double[n][n][1 << n];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tr[i] = Integer.parseInt(b[i + 1]);\n\t\t\t}\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\t\tif (n == 1 || i != j) {\n\t\t\t\t\t\tmin = Math.min(min, f(i, j, (1 << n) - 1));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(min <= a ? \"OK\" : \"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayDeque;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\ttbl.add(data);\n\t\t}\n\n\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\t\t\t\tres = \"NA\";\n\t\tdouble\t\t\t\tmin = 0.0;\n\t\tint\t\t\t\t\tlen = data.cr.length;\n\t\tint\t\t\t\t\ttmp = 0;\n\t\tint\t\t\t\t\tnei = 0;\n\t\tArrayDeque<Integer>\tout = new ArrayDeque<Integer>();\n\n\t\tfor (int i = 0, j = 0; out.size() < len; i = (i+1)%4) {\n\t\t\tswitch (i) {\n\t\t\tcase\t0:\n\t\t\t\ttmp = data.cr[j];\n\t\t\t\tif (out.size() > 0) {\n\t\t\t\t\tnei = out.getFirst();\n\t\t\t\t\tmin += cd[tmp-rr[0]][nei-rr[0]];\n\t\t\t\t}\n\t\t\t\tout.addFirst(tmp);\n\t\t\t\tbreak;\n\t\t\tcase\t1:\n\t\t\t\ttmp  = data.cr[len-1-j];\n\t\t\t\tnei  = out.getLast();\n\t\t\t\tmin += cd[tmp-rr[0]][nei-rr[0]];\n\t\t\t\tout.addLast(tmp);\n\t\t\t\tj++;\n\t\t\t\tbreak;\n\t\t\tcase\t2:\n\t\t\t\ttmp  = data.cr[j];\n\t\t\t\tnei  = out.getLast();\n\t\t\t\tmin += cd[tmp-rr[0]][nei-rr[0]];\n\t\t\t\tout.addLast(tmp);\n\t\t\t\tbreak;\n\t\t\tcase\t3:\n\t\t\t\ttmp  = data.cr[len-1-j];\n\t\t\t\tnei  = out.getFirst();\n\t\t\t\tmin += cd[tmp-rr[0]][nei-rr[0]];\n\t\t\t\tout.addFirst(tmp);\n\t\t\t\tj++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tmin += (double)out.getFirst() + (double)out.getLast();\n\n\t\tif (min <= data.wi) {\n\t\t\tres = \"OK\";\n\t\t}\n\n\t\treturn res;\n\t}\n\n\tstatic String getPermStr(int[] cr) {\n\t\tString\tres = \"\";\n\n\t\tfor (int i = 0; i < cr.length; i++) {\n\t\t\tres += (i == 0) ? String.valueOf(cr[i]) : \" \" + String.valueOf(cr[i]);\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Double.parseDouble(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (tmp != null) {\n\t\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tdouble\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) throws IOException{\n\t\t\n\t\t//Scanner sc = new Scanner(System.in);\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\t\n\t\twhile(true){\n\t\t\tString str;\n\t\t\t\n\t\t\tif((str = br.readLine()) == null || str.equals(\"\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes % 2 == 1){\n\t\t\t\tif(list.get(0) > list.get(cakes - 2)){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum < box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Patisserie\npublic class Main{\n\n\tstatic double[][][] dp;\n\tstatic int[] r;\n\tstatic int n;\n\tstatic double[][] cach;\n\t\n\tstatic double get(int left, int s, int right){\n\t\tif(dp[left][s][right]!=0)return dp[left][s][right];\n\t\tint c = 0;\n\t\tfor(int i=0;i<n;i++)if((s&(1<<i))>0)c++;\n\t\tif(c==1){\n\t\t\treturn dp[left][s][right] = 2*r[left];\n\t\t}\n\t\tif(c==2){\n\t\t\tif(r[left]==r[right])return dp[left][s][right] = 4*r[left];\n\t\t\telse return dp[left][s][right] = r[left]+r[right]+cach[left][right];\n\t\t}\n\t\tdouble min = Integer.MAX_VALUE;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif((s&(1<<i))==0 || i==left || i==right)continue;\n\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\tif((s&(1<<j))==0 || j==right || j==left)continue;\n\t\t\t\tif(c>3 && i==j)continue;\n\t\t\t\tdouble x = r[left]+r[right]-r[i]-r[j]+get(i, s-(1<<left)-(1<<right),j) + cach[left][i] + cach[right][j];\n\t\t\t\tmin = Math.min(min, x);\n\t\t\t}\n\t\t}\n\t\treturn dp[left][s][right] = min;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tn = s.length-1;\n\t\t\tint len = Integer.parseInt(s[0]);\n\t\t\tr = new int[n];\n\t\t\tfor(int i=0;i<n;i++)r[i]=Integer.parseInt(s[i+1]);\n\t\t\tcach = new double[n][n];\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\t\tif(i==j)cach[i][j]=2*r[i];\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(r[i]==r[j])cach[i][j]=2*r[i];\n\t\t\t\t\t\telse cach[i][j] = Math.sqrt(Math.pow(r[i]+r[j], 2)-Math.pow(r[i]-r[j], 2));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tdp = new double[n][1<<n][n];\n\t\t\tdouble min = Integer.MAX_VALUE;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\t\tif(n>1 && i==j)continue;\n\t\t\t\t\tmin = Math.min(min, get(i, (1<<n)-1, j));\n\t\t\t\t\tif(min<=len)break;\n\t\t\t\t}\n\t\t\t\tif(min<=len)break;\n\t\t\t}\n\t\t\tSystem.out.println(min<=len?\"OK\":\"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\ttbl.add(data);\n\t\t}\n\n/*\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}*/\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tScanner sc = new Scanner(System.in);\n\n\tint N;\n\tdouble L;\n\tdouble[] r;\n\tdouble[][] memo;\n\n\tvoid run() {\n\t\tL: while (sc.hasNext()) {\n\t\t\tString[] in = sc.nextLine().split(\" \");\n\t\t\tL = Double.valueOf(in[0]);\n\t\t\tN = in.length - 1;\n\t\t\tr = new double[N];\n\t\t\tfor (int i = 0; i < N; i++) r[i] = Double.valueOf(in[i + 1]);\n\n\t\t\tmemo = new double[N][1 << N];\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tif (r[i] + tsp(i, 1 << i) <= L) {\n\t\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t\t\tcontinue L;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(\"NA\");\n\t\t}\n\t}\n\n\tdouble tsp(int v, int mask) {\n\t\tif (memo[v][mask] != 0)   return memo[v][mask];\n\t\tif (mask == (1 << N) - 1) return r[v];\n\n\t\tdouble res = Double.MAX_VALUE;\n\t\tfor (int i = 0; i < N; i++) {\n\t\t\tif ((mask & (1 << i)) != 0) continue;\n\t\t\tdouble rr = Math.sqrt((r[v] + r[i]) * (r[v] + r[i]) - (r[v] - r[i]) * (r[v] - r[i]));\n\t\t\tres = Math.min(res, rr + tsp(i, mask | 1 << i));\n\t\t}\n\t\treturn memo[v][mask] = res;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tboolean flag = true;\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif(flag){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t\tflag = false;\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\t\n\t\t\t\tif(list.get(0) > cake_len[cakes/2]){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tSystem.out.println(list);\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += 2 * Math.sqrt(list.get(i) * list.get(i+1));\n\t\t\t}\n\t\t\t//System.out.println(sum);\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.ArrayList;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\tprivate\tstatic\tdouble[][]\t\tcd = null;\n\tprivate\tstatic\tint[]\t\t\trr = { Integer.MAX_VALUE, Integer.MIN_VALUE };\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tint\t\tsize = 0;\n\t\tData\tdata = null;\n\t\tDataTbl\ttbl  = new DataTbl();\n\t\t\n\t\twhile ((data = parseData()) != null) {\n//\t\t\ttbl.add(data);\n\t\t}\n\n/*\t\tcalcDist();\n\n\t\tsize = tbl.size();\n\t\tfor (int i = 0; i < size; i++) {\n\t\t\tdata = tbl.get(i);\n\t\t\tSystem.out.println(solve(data));\n\t\t}*/\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\t\tdouble\ttmp = 0.0;\n\n\t\tdo {\n\t\t\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\ttmp += cd[data.cr[i]-rr[0]][data.cr[i+1]-rr[0]];\n\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tpublic static void calcDist() {\n\t\tint\tsz = rr[1]-rr[0];\n\n\t\tcd = new double[sz+1][sz+1];\n\t\tfor (int i = 0; i <= sz; i++) {\n\t\t\tfor (int j = i; j <= sz; j++) {\n\t\t\t\tdouble\td = 0.0;\n\t\t\t\tif (i == j) {\n\t\t\t\t\td = (double)((rr[0]+i)*2);\n\t\t\t\t} else {\n\t\t\t\t\td = Math.sqrt(Math.pow((double)(rr[0]*2+j+i), 2.0)-Math.pow((double)(j-i), 2.0));\n\t\t\t\t}\n\t\t\t\tcd[i][j] = d;\n\t\t\t\tcd[j][i] = d;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Integer.parseInt(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t\trr[0] = Math.min(rr[0], data.cr[i-1]);\n\t\t\t\t\trr[1] = Math.max(rr[1], data.cr[i-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass DataTbl extends ArrayList<Data> {\n}\n\nclass Data {\n\tint\t\t\twi = 0;\n\tint[]\t\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Patisserie\npublic class Main{\n\n\tstatic double[][][] dp;\n\tstatic int[] r;\n\tstatic int n;\n\t\n\tstatic double get(int left, int s, int right){\n\t\tif(dp[left][s][right]!=0)return dp[left][s][right];\n\t\tint c = 0;\n\t\tfor(int i=0;i<n;i++)if((s&(1<<i))>0)c++;\n\t\tif(c==1){\n\t\t\treturn dp[left][s][right] = 2*r[left];\n\t\t}\n\t\tif(c==2){\n\t\t\tif(r[left]==r[right])return dp[left][s][right] = 4*r[left];\n\t\t\telse return dp[left][s][right] = r[left]+r[right]+Math.sqrt(-Math.pow(r[left]-r[right], 2) + Math.pow(r[left]+r[right], 2));\n\t\t}\n\t\tdouble min = Integer.MAX_VALUE;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif((s&(1<<i))==0 || i==left || i==right)continue;\n\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\tif((s&(1<<j))==0 || j==right || j==left)continue;\n\t\t\t\tif(c>3 && i==j)continue;\n\t\t\t\tdouble x = r[left]+r[right]-r[i]-r[j]+get(i, s-(1<<left)-(1<<right),j);\n\t\t\t\tif(r[left]==r[i]){\n\t\t\t\t\tx += 2*r[i];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx += Math.sqrt(Math.pow(r[left]+r[i], 2)-Math.pow(r[left]-r[i], 2));\n\t\t\t\t}\n\t\t\t\tif(r[right]==r[j]){\n\t\t\t\t\tx += 2*r[j];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx += Math.sqrt(Math.pow(r[right]+r[j], 2)-Math.pow(r[right]-r[j], 2));\n\t\t\t\t}\n\t\t\t\tmin = Math.min(min, x);\n\t\t\t}\n\t\t}\n\t\treturn dp[left][s][right] = min;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\tString[] s = sc.nextLine().split(\" \");\n\t\t\tn = s.length-1;\n\t\t\tint len = Integer.parseInt(s[0]);\n\t\t\tr = new int[n];\n\t\t\tfor(int i=0;i<n;i++)r[i]=Integer.parseInt(s[i+1]);\n\t\t\tdp = new double[n][1<<n][n];\n\t\t\tdouble min = Integer.MAX_VALUE;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\t\tif(n>1 && i==j)continue;\n\t\t\t\t\tmin = Math.min(min, get(i, (1<<n)-1, j));\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(min<=len?\"OK\":\"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\tMyScanner sc = new MyScanner();\n\tScanner sc2 = new Scanner(System.in);\n\tint mod = 1000000007;\n\n\tint N;\n\tint[] r;\n\n\tvoid run() {\n\t\twhile (sc2.hasNext()) {\n\t\t\tString[] input = sc2.nextLine().split(\" \");\n\t\t\tint L = Integer.valueOf(input[0]);\n\t\t\tN = input.length - 1;\n\t\t\tr = new int[N];\n\n\t\t\tfor (int i = 1; i < N + 1; i++) {\n\t\t\t\tr[i - 1] = Integer.valueOf(input[i]);\n\t\t\t}\n\t\t\tboolean judge = false;\n\t\t\tdebug(r);\n\t\t\tfor (int i = 0; i < N; i++) {\n\t\t\t\tdouble ans = tsp(i, 1 << i) + r[i];\n\t\t\t\tif (ans <= L) {\n\t\t\t\t\tjudge = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(judge ? \"OK\" : \"NA\");\n\t\t}\n\t}\n\n\tdouble tsp(int v, int bit) {\n\t\tif (bit == (1 << N) - 1) {\n\t\t\treturn r[v];\n\t\t}\n\t\tdouble res = 1 << 10;\n\t\tfor (int w = 0; w < N; w++) {\n\t\t\tif ((bit & (1 << w)) != 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdouble dis = Math.sqrt((r[v] + r[w]) * (r[v] + r[w])\n\t\t\t\t\t- (r[v] - r[w]) * (r[v] - r[w]));\n\t\t\tres = Math.min(res, dis + tsp(w, bit | 1 << w));\n\t\t}\n\t\treturn res;\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tvoid debug(Object... o) {\n\t\tSystem.out.println(Arrays.deepToString(o));\n\t}\n\n\tvoid debug2(int[][] array) {\n\t\tfor (int i = 0; i < array.length; i++) {\n\t\t\tfor (int j = 0; j < array[i].length; j++) {\n\t\t\t\tSystem.out.print(array[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n\tclass MyScanner {\n\t\tint nextInt() {\n\t\t\ttry {\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (c != '-' && (c < '0' || '9' < c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tif (c == '-')\n\t\t\t\t\treturn -nextInt();\n\t\t\t\tint res = 0;\n\t\t\t\tdo {\n\t\t\t\t\tres *= 10;\n\t\t\t\t\tres += c - '0';\n\t\t\t\t\tc = System.in.read();\n\t\t\t\t} while ('0' <= c && c <= '9');\n\t\t\t\treturn res;\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tString next() {\n\t\t\ttry {\n\t\t\t\tStringBuilder res = new StringBuilder(\"\");\n\t\t\t\tint c = System.in.read();\n\t\t\t\twhile (Character.isWhitespace(c))\n\t\t\t\t\tc = System.in.read();\n\t\t\t\tdo {\n\t\t\t\t\tres.append((char) c);\n\t\t\t\t} while (!Character.isWhitespace(c = System.in.read()));\n\t\t\t\treturn res.toString();\n\t\t\t} catch (Exception e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tdouble size = Double.parseDouble(dst[0]);\n\n\t\t\t//if(size == 0.0) break;\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<radius.length/2; i++){\n\t\t\t\tseq[i*2] = i;\n\t\t\t\tseq[i*2+1] = radius.length-1-i;\n\t\t\t}\n\t\t\tif(radius.length%2 == 1){\n\t\t\t\tseq[radius.length-1] = radius.length/2;\n\t\t\t}\n\n\t\t\tArrays.sort(radius);\n\t\t\tdouble cakes = calcSize(radius, seq);\n\n\t\t\tif(cakes > size){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tAns.add(\"OK\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += (double)(data[seq[0]] + data[seq[data.length-1]]);\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tboolean flag = true;\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif(flag){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t\tflag = false;\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t\tflag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\t\n\t\t\t\tif(Math.abs(list.get(0) - cake_len[cakes/2]) > Math.abs(list.get(cakes-2) - cake_len[cakes/2])){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(list);\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += 2 * Math.sqrt(list.get(i) * list.get(i+1));\n\t\t\t}\n\t\t\t//System.out.println(sum);\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    static double[][] dis;\n    static double dp[][];\n    static int n;\n    static int g;\n    static final double EPS = 1.0e-10;\n    static int rs[];\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        while (sc.hasNext()) {\n            String tmp[] = sc.nextLine().split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            rs = new int[tmp.length - 1];\n            for (int i = 1; i < tmp.length; i++) {\n                rs[i - 1] = Integer.parseInt(tmp[i]);\n            }\n            n = rs.length;\n            dis = new double[n][n];\n            dp = new double[1 << n][n];\n\n            for (int i = 0; i < n; i++) {\n                dis[i][i] = 0;\n            }\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    dis[i][j] = dis[j][i] = 1.0 * Math.sqrt((rs[i] + rs[j])\n                            * (rs[i] + rs[j]) - (rs[i] - rs[j])\n                            * (rs[i] - rs[j]));\n                }\n            }\n            boolean flag = false;\n            for (int i = 0; i < n; i++) {\n                for (int k = 0; k < 1 << n; k++) {\n                    Arrays.fill(dp[k], -1);\n                }\n                double dis = tsp(1 << i, i);\n                // System.out.println(dis + rs[i]);\n                if (dis + rs[i] < l || Math.abs(l - (dis + rs[i])) < EPS) {\n                    flag = true;\n                    i = n;\n                    break;\n                }\n            }\n            System.out.println(flag ? \"OK\" : \"NA\");\n\n        }\n    }\n\n    public static double tsp(int S, int v) { // S:既に訪れた頂点、v:現在いる頂点\n        if (dp[S][v] >= 0) {\n            return dp[S][v];\n        }\n        if (S == (1 << n) - 1) {\n            return dp[S][v] = rs[v];\n        }\n        double res = Double.POSITIVE_INFINITY;\n        for (int u = 0; u < n; u++) {\n            if ((S & (1 << u)) == 0) {\n                res = Math.min(res, tsp(S | 1 << u, u) + dis[v][u]);\n            }\n        }\n        return dp[S][v] = res;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += data[0] + data[0];\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[0] * data[0]);\n\t\t}\n\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\tString[] arr = sc.nextLine().split(\" \");\n\t\t\tint len = Integer.valueOf(arr[0]);\n\t\t\tint n = arr.length-1;\n\t\t\tint[] r = new int[n];\n\t\t\tfor(int i=0;i<n;i++) r[i] = Integer.valueOf(arr[i+1]);\n\t\t\t\n\t\t\tInteger[] a = new Integer[1<<n];\n\t\t\tfor(int i=0;i<1<<n;i++) a[i] = i;\n\t\t\tArrays.sort(a, new Comparator<Integer>(){\n\t\t\t\tpublic int compare(Integer o1, Integer o2) {\n\t\t\t\t\tString num1 = Integer.toBinaryString(o1);\n\t\t\t\t\tint cnt1 = 0;\n\t\t\t\t\tfor(int i=0;i<num1.length();i++) if(num1.charAt(i)=='1') cnt1++;\n\t\t\t\t\t\n\t\t\t\t\tString num2 = Integer.toBinaryString(o2);\n\t\t\t\t\tint cnt2 = 0;\n\t\t\t\t\tfor(int i=0;i<num2.length();i++) if(num2.charAt(i)=='1') cnt2++;\n\t\t\t\t\t\n\t\t\t\t\treturn cnt1-cnt2;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\t\n\t\t\tdouble[][] dp = new double[1<<n][n];\n\t\t\tfor(int i=0;i<1<<n;i++){\n\t\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\t\tdp[i][j] = Double.MAX_VALUE;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor(int i=0;i<1<<n;i++){\n\t\t\t\tfor(int j=0;j<n;j++){\n\t\t\t\t\tif(i==0){\n\t\t\t\t\t\tdp[1<<j][j] = r[j]*2;\n\t\t\t\t\t}else if((a[i]>>j&1)==1){\n\t\t\t\t\t\tfor(int k=0;k<n;k++){\n\t\t\t\t\t\t\tif((a[i]>>k&1)==0){\n\t\t\t\t\t\t\t\tdouble tmp = dp[a[i]][j] - r[j] + r[k] + Math.sqrt((r[j]+r[k])*(r[j]+r[k]) - (r[j]-r[k])*(r[j]-r[k]));\n\t\t\t\t\t\t\t\tint id = a[i] + (1<<k);\n\t\t\t\t\t\t\t\tdp[id][k] = Math.min(dp[id][k], tmp);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\tdouble min = Double.MAX_VALUE;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tmin = Math.min(min, dp[(1<<n)-1][i]);\n\t\t\t}\n\t\t\t\n\t\t\tif(min<=len) System.out.println(\"OK\");\n\t\t\telse System.out.println(\"NA\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tdouble box = Double.parseDouble(dst[0]);\n\n\t\t\tif(box == 0) break;\n\n\t\t\tint size = dst.length-1;\n\t\t\tint[] rad = new int[size];\n\t\t\tint[] sort = new int[size];\n\t\t\tfor(int n=0; n<size; n++){\n\t\t\t\trad[n] = Integer.parseInt(dst[n+1]);\n\t\t\t}\n\n\t\t\tint m = size/2;\n\t\t\tArrays.sort(rad);\n\t\t\tfor(int i=0; i<m; i++){\n\t\t\t\tsort[2*i] = rad[i];\n\t\t\t\tsort[2*i+1] = rad[size-1-i];\n\t\t\t}\n\t\t\tif(size%2==1){\n\t\t\t\tsort[size-1] = rad[m];\n\t\t\t}\n\n\t\t\tdouble cost = min_cost(sort);\n\t\t\tSystem.out.println(cost);\n\t\t\tif(cost <= box){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic double min_cost(int[] data){\n\t\tRandom rand = new Random(System.currentTimeMillis());\n\t\tdouble e = E(data);\n\t\tdouble ebest = e;\n\t\tdouble enew = e;\n\t\tint[] s = copy(data);\n\t\tint[] snew = copy(data);\n\t\tint[] sbest = copy(data);\n\t\tfor(int n=0; n<10000; n++){\n\t\t\tsnew = swap(s);\n\t\t\tenew = E(snew);\n\t\t\tif(enew < ebest){\n\t\t\t\tebest = enew;\n\t\t\t\tsbest = copy(snew);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(Math.exp((ebest - enew) * 10.0) < rand.nextFloat()){\n\t\t\t\t\ts = copy(snew);\n\t\t\t\t\te = enew;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ebest;\n\t}\n\n\tpublic int[] swap(int[] src){\n\t\tint[] data = copy(src);\n\t\tint n = data.length;\n\t\tRandom rand = new Random(System.currentTimeMillis());\n\t\tint from = rand.nextInt(n);\n\t\tint to = rand.nextInt(n);\n\t\tint dst = data[from];\n\t\tdata[from] = data[to];\n\t\tdata[to] = dst;\n\t\treturn data;\n\t}\n\n\tpublic double E(int[] data){\n\t\tint n = data.length;\n\t\tdouble e = (double)(data[0] + data[n-1]);\n\t\tfor(int i=0; i<n-1; i++){\n\t\t\te += 2.0 * Math.sqrt(data[i] * data[i+1]);\n\t\t}\n\t\treturn e;\n\t}\n\n\tpublic int[] copy(int[] data){\n\t\tint n= data.length;\n\t\tint[] dst = new int[n];\n\t\tfor(int i=0; i<n; i++){\n\t\t\tdst[i] = data[i];\n\t\t}\n\t\treturn dst;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\nclass Main {\n\n    static double minRadius;\n    \n    public static void main(String[] args) {\n\n\tfinal Scanner stdin = new Scanner(System.in);\n\n\twhile ( stdin.hasNext() ) {\n\n\t    final String[] input = stdin.nextLine().split(\" \");\n\t    final int[] rads = new int[input.length - 1];\n\t    for (int i = 0; i < rads.length; ++i){\n\t\trads[i] = Integer.parseInt( input[i + 1] );\t\t\n\t    }\n\t    Arrays.sort( rads );\n\t    minRadius = Double.MAX_VALUE;\n\t    \n\t    final int boxSize = Integer.parseInt( input[0] );\n\t    boolean[] visited = new boolean[rads.length];\n\t\t\t\t\t    \n\t    dfs ( 0.0, 0, rads, visited, -1 );\n\n\t    if ( minRadius > boxSize ) {\n\t\tSystem.out.println( \"NA\" );\n\t    } else {\n\t\tSystem.out.println( \"OK\" );\n\t    }\n\t}\t\n    }\n    \n    static void dfs( final double right, final int index, final int[] rads,\n\t\t     final boolean[] visited, final int last) {\n\n\tif ( index == rads.length ) {\n\t    minRadius = Math.min( right + rads[last], minRadius );\n\t} else if ( right > minRadius ) {\n\t    return;\n\t} \n\tfor (int i = 0; i < rads.length; ++i){\n\t    if ( !visited[i] ) {\n\t\tvisited[i] = true;\n\t\tif ( index > 0 ) {\n\t\t    dfs( right + 2 * Math.sqrt( rads[i] * rads[last] ), index + 1, rads, visited, i );\n\t\t} else {\n\t\t    dfs( right + rads[i], index + 1, rads, visited, i );\n\t\t}\n\t\tvisited[i] = false;\n\t    }\t    \n\t}\n    }\n    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\npublic class Main {\n\tstatic final Scanner stdin = new Scanner(System.in);\n\tstatic final double INF = 1e8;\n\tpublic static void main(String[] args) {\n\t\twhile(stdin.hasNext()){\n\t\t\tString[] line = stdin.nextLine().split(\" \");\n\t\t\tint l = Integer.parseInt(line[0]), n = line.length;\n\t\t\tint[] r = new int[n];\n\t\t\tr[0] = 0;\n\t\t\tfor(int i = 1; i < n; ++i) r[i] = Integer.parseInt(line[i]);\n\t\t\tdouble[][] d = new double[n][n];\n\t\t\tfor(int i = 0; i < n; ++i)\n\t\t\t\tfor(int j = 0; j < n; ++j)\n\t\t\t\t\td[i][j] = (i == j ) ? 0 : \n\t\t\t\t\t\t(i == 0) ? r[j] : \n\t\t\t\t\t\t(j == 0) ? r[i] : \n\t\t\t\t\t\tMath.sqrt(Math.pow(r[i] + r[j], 2) - Math.pow(r[i] - r[j], 2));\n\t\t\tSystem.out.println(TSP(d,0).getLength() <= l ? \"OK\" : \"NA\");\n\t\t}\n\t}\n\t@SuppressWarnings(\"unused\") public static class TSPResult{\n\t\tprivate int s;\t\t//source node (???= destination node)\n\t\tprivate double length;\t//length of shortest Hamilton cycle\n\t\tprivate int[][] prev;\t//back pointers\n\t\tpublic TSPResult(int s, double length, int[][] prev){ set(s, length, prev); }\n\t\tfinal private void set(int s, double length, int[][] prev){ this.s = s; this.length = length; this.prev = prev; }\n\t\tfinal public double getLength(){ return length; }\n\t}\n\tstatic TSPResult TSP(double[][] G, int s){\n\t\tint n = G.length, N = 1 << n;\n\t\tdouble[][] DP = new double[N][n];\n\t\tint[][] prev = new int[N][n];\n\t\tfor(int i = 0; i < N; ++i) Arrays.fill(DP[i], INF);\n\t\tfor(int i = 0; i < n; ++i){\n\t\t\tDP[1<<i][i] = G[s][i];\n\t\t\tprev[1<<i][i] = s;\n\t\t}\n\t\tfor (int S = 1; S < N; ++S) {\n\t\t\tfor (int i = 0; i < n; ++i) {\n\t\t\t\tif ((S & (1<<i)) == 0) continue;\n\t\t\t\tfor (int j = 0; j < n; ++j) {\n\t\t\t\t\tif ((S & (1<<j)) != 0 ) continue;\n\t\t\t\t\t//i in S, j not in S \n\t\t\t\t\tdouble newDist = DP[S][i]+G[i][j];\n\t\t\t\t\tif(DP[S|(1<<j)][j] > newDist) {\n\t\t\t\t\t\tDP[S|(1<<j)][j] = newDist;\n\t\t\t\t\t\tprev[S|(1<<j)][j] = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} \n\t\treturn new TSPResult(s, DP[N-1][s], prev);\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tpublic double search(int[] r){\n\t\tsort(r, true);\n\t\tdouble sum1 = r[0] + r[r.length-1];\n\t\tfor(int i = 0; i < r.length-1; i++){\n\t\t\tsum1 += dist(r[i], r[i+1]);\n\t\t}\n\t\tsort(r, false);\n\t\tdouble sum2 = r[0] + r[r.length-1];\n\t\tfor(int i = 0; i < r.length-1; i++){\n\t\t\tsum2 += dist(r[i], r[i+1]);\n\t\t}\n\t\treturn Math.min(sum1, sum2);\n\t}\n\tpublic void sort(int[] r, boolean start){\n\t\tboolean flag = start;\n\t\tfor(int i = 0; i < r.length; i++){\n\t\t\tint key = i;\n\t\t\tfor(int j = i; j < r.length; j++){\n\t\t\t\tif( flag ){\n\t\t\t\t\tif( r[j] > r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif( r[j] < r[key] ){\n\t\t\t\t\t\tkey = j;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tint temp = r[key];\n\t\t\tr[key] = r[i];\n\t\t\tr[i] = temp;\n\t\t\tflag = (flag) ? false : true;\n\t\t}\n\t}\n\tpublic double dist(int x, int y){\n\t\treturn 2*Math.sqrt(x*y);\n\t}\n\tpublic void solve() throws IOException{\n\t\twhile( stdIn.hasNext() ){\n\t\t\tString[] s = stdIn.nextLine().split(\" \");\n\t\t\tint m = Integer.parseInt(s[0]);\n\t\t\tint[] r = new int[s.length-1];\n\t\t\tfor(int i = 0; i < r.length; i++){\n\t\t\t\tr[i] = Integer.parseInt(s[i+1]);\n\t\t\t}\n\t\t\tdouble sum = search(r);\n\t\t//\tSystem.out.println(sum);\n\t\t\tif( sum > m ){\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}\n\t\t}\n\t}\t\t\t\n\tpublic static void main (String args[]) throws IOException{\n\t\tnew Main().run();\n\t}\n\t\n\tScanner stdIn;\n\tPrintWriter writer;\n\t\n\tpublic void run() throws IOException{\n\t\tstdIn = null;\n\t\ttry{\n\t\t\tstdIn = new Scanner(new BufferedReader(new InputStreamReader(System.in)));\n\t\t\twriter = new PrintWriter(System.out);\n\t\t\tsolve();\n\t\t\tstdIn.close();\n\t\t\twriter.close();\n\t\t} catch (Exception e){\n\t\t\te.printStackTrace();\n\t\t\tSystem.exit(1);\n\t\t}\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.Arrays;\n \npublic class Main {\n\tprivate\tstatic\tBufferedReader\tbr = null;\n\n\tstatic {\n\t\tbr = new BufferedReader(new InputStreamReader(System.in));\n\t}\n \n    /**\n     * @param args\n     */\n\tpublic static void main(String[] args) {\n\t\t// TODO Auto-generated method stub\n\t\tData\tdata = null;\n\t\t\n\t\twhile ((data = parseData()) != null) {\n\t\t\tSystem.out.println(solve(data));\n\t\t}\n\t}\n\n\tpublic static String solve(Data data) {\n\t\tString\tres = \"NA\";\n\t\tdouble\tmin = Double.MAX_VALUE;\n\n\t\tdo {\n\t\t\tdouble\ttmp = (double)data.cr[0]+(double)data.cr[data.cr.length-1];\n\t\t\tfor (int i = 0; i < data.cr.length-1; i++) {\n\t\t\t\tif (data.cr[i] == data.cr[i+1]) {\n\t\t\t\t\ttmp += (double)(data.cr[i]*2);\n\t\t\t\t} else {\n\t\t\t\t\ttmp += Math.sqrt(Math.pow((double)(data.cr[i]+data.cr[i+1]), 2.0)-Math.pow((double)(data.cr[i]-data.cr[i+1]), 2.0));\n\t\t\t\t}\n\t\t\t}\n//\t\t\tif (min >= tmp) {\n//\t\t\t\tmin = tmp;\n//\t\t\t\tSystem.out.println(getPermStr(data.cr) + \" \" + min);\n//\t\t\t}\n\t\t\tmin = Math.min(min, tmp);\n\n\t\t\tif (min <= data.wi) {\n\t\t\t\tres = \"OK\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while(next_perm(data.cr));\n\n\t\treturn res;\n\t}\n\n\tstatic String getPermStr(int[] cr) {\n\t\tString\tres = \"\";\n\n\t\tfor (int i = 0; i < cr.length; i++) {\n\t\t\tres += (i == 0) ? String.valueOf(cr[i]) : \" \" + String.valueOf(cr[i]);\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\n\tstatic boolean next_perm(int[] cr) {\n\t\tint\t\ti;\n\t\tint\t\tj;\n\t\tint\t\tt;\n\t\tint\t\tl = cr.length;\n\t\tboolean\tr = false;\n\t    \n\t\tif (l > 0) {\n\t\t\tfor(i = l - 1; i > 0 && cr[i-1] >= cr[i]; i--);\n\n\t\t\tif (i > 0) {\n\t\t\t\tfor(j = l - 1; j > i && cr[i-1] >= cr[j]; j--);\n\n\t\t\t\t// swap(p,j,i-1);\n\t\t\t\tt = cr[j];\n\t\t\t\tcr[j] = cr[i-1];\n\t\t\t\tcr[i-1] = t;\n\n\t\t\t\tfor(j=l-1; i < j; i++, j--){\n\t\t\t\t\t// swap(p,i,j);\n\t\t\t\t\tt = cr[i];\n\t\t\t\t\tcr[i] = cr[j];\n\t\t\t\t\tcr[j] = t;\n\t\t\t\t}\n\n\t\t\t\tr = true;\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tprivate static Data parseData() {\n\t\tData\tdata  = null;\n\t\tString\tstdin  = null;\n\n\t\tif ((stdin = parseStdin()) != null) {\n\t\t\tString[]\tlines = stdin.split(\" \");\n\n\t\t\tdata = new Data(lines.length-1);\n\t\t\tfor(int i = 0; i < lines.length; i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tdata.wi = Double.parseDouble(lines[i]);\n\t\t\t\t} else {\n\t\t\t\t\tdata.cr[i-1] = Integer.parseInt(lines[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tArrays.sort(data.cr);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tprivate static String parseStdin() {\n\t\tString  stdin = null;\n\n\t\ttry {\n\t\t\tString  tmp = br.readLine();\n\t\t\tif (tmp != null) {\n\t\t\t\tif (!tmp.isEmpty()) stdin = tmp;\n\t\t\t}\n\t\t}\n\t\tcatch (IOException e) {}\n\n\t\treturn stdin;\n\t}\n}\n\nclass Data {\n\tdouble\twi = 0;\n\tint[]\tcr = null;\n\n\tData (int cc) {\n\t\tcr = new int[cc];\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tdouble size = Double.parseDouble(dst[0]);\n\n\t\t\t//if(size == 0.0) break;\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<radius.length/2; i++){\n\t\t\t\tseq[i*2] = i;\n\t\t\t\tseq[i*2+1] = radius.length-1-i;\n\t\t\t}\n\t\t\tif(radius.length%2 == 1){\n\t\t\t\tseq[radius.length-1] = radius.length/2;\n\t\t\t}\n\n\t\t\tArrays.sort(radius);\n\t\t\tdouble cakes = calcSize(radius, seq);\n\n\t\t\tif(cakes > size){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tAns.add(\"OK\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\tsum += (double)(data[seq[0]] + data[seq[data.length-1]]);\n\t\tfor(int i=0; i<data.length-1; i++){\n\t\t\tsum += 2.0 * Math.sqrt(data[seq[i]] * data[seq[i+1]]);\n\t\t}\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main{\n\tpublic static void main(String args[]){\n\t\ttry{\n\t\t\tnew Main();\n\t\t}catch(IOException err){\n\t\t\terr.printStackTrace();\n\t\t}\n\t}\n\n\tpublic Main() throws IOException{\n\t\tBufferedReader in = new BufferedReader(new InputStreamReader(System.in));\n\t\tArrayList<String> Ans = new ArrayList<String>();\n\t\tString line;\n\n\t\twhile((line = in.readLine()) != null){\n\t\t\tString[] dst = line.split(\" \");\n\t\t\tint size = Integer.parseInt(dst[0]);\n\n\t\t\tif(size == 0) break;\n\t\t\tint[] seq = new int[dst.length-1];\n\t\t\tint[] radius = new int[dst.length-1];\n\t\t\tfor(int i=1; i<dst.length; i++){\n\t\t\t\tradius[i-1] = Integer.parseInt(dst[i]);\n\t\t\t}\n\n\t\t\tfor(int i=0; i<dst.length-1; i++){\n\t\t\t\tseq[i] = i;\n\t\t\t}\n\n\t\t\tint ok = 0;\n\t\t\tdo{\n//\t\t\t\tfor(int i=0; i<seq.length; i++){\n//\t\t\t\t\tSystem.out.print(seq[i]);\n//\t\t\t\t}\n//\t\t\t\tSystem.out.println();\n\n\t\t\t\tdouble cakes = calcSize(radius, seq);\n\t\t\t\tif(size >= cakes){\n\t\t\t\t\tAns.add(\"OK\");\n\t\t\t\t\tok = 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}while(nextArray(seq));\n\n\t\t\tif(ok == 0){\n\t\t\t\tAns.add(\"NA\");\n\t\t\t}\n\t\t}\n\n\t\tfor(int n=0; n<Ans.size(); n++){\n\t\t\tSystem.out.println(Ans.get(n));\n\t\t}\n\t}\n\n\tpublic boolean nextArray(int[] seq){\n\t\tint s = seq.length-1;\n\t\twhile(true){\n\t\t\tif(seq[s] > seq[s-1]){\n\t\t\t\tint min = seq[s];\n\t\t\t\tint index = s;\n\t\t\t\tfor(int n=s+1; n<seq.length; n++){\n\t\t\t\t\tif(min > seq[n] && seq[n] > seq[s-1]){\n\t\t\t\t\t\tmin = seq[n];\n\t\t\t\t\t\tindex = n;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tseq[index] = seq[s-1];\n\t\t\t\tseq[s-1] = min;\n\t\t\t\tArrays.sort(seq, s, seq.length-1);\n\t\t\t\treturn true;\n\n\t\t\t}else{\n\t\t\t\ts--;\n\t\t\t}\n\n\t\t\tif(s == 0){\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic double calcSize(int[] data, int[] seq){\n\t\tdouble sum = 0.0;\n\t\t\n\t\t\n\t\treturn sum;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\nimport java.util.Arrays;\n\npublic class Main{\n\tMain(){\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\tString[] str = (sc.nextLine()).split(\" \");\n\t\t\tdouble n = Double.parseDouble(str[0]), t;\n\t\t\tdouble[] rk = new double[str.length-1];\n\t\t\tdouble[] rk2 = new double[str.length];\n\t\t\t\n\t\t\tfor(int i = 1; i < str.length; i++){\n\t\t\t\trk[i-1] = Double.parseDouble(str[i]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(rk);\n\t\t\tboolean f = false;\n\t\t\tfor(int i=0, j=rk.length-1; i <= j; i++, j--){\n\t\t\t\trk2[2*i] = rk[i];\n\t\t\t\trk2[2*i+1] = rk[j];\n\t\t\t}\n\t\t\tt = rk2[0]+rk2[rk.length-1];\n\t\t\tfor(int i = 0; i < rk.length-1; i++){\n\t\t\t\tt += func(rk2[i], rk2[i+1]);\n\t\t\t}\n\n\t\t\tif(t <= n){\n\t\t\t\tf = true;\n\t\t\t}\n\t\t\t\n\t\t\tfor(int i=0, j=rk.length-1; i <= j && !f; i++, j--){\n\t\t\t\trk2[2*i] = rk[j];\n\t\t\t\trk2[2*i+1] = rk[i];\n\t\t\t}\n\t\t\tt = rk2[0]+rk2\t[rk.length-1];\n\t\t\tfor(int i = 0; i < rk.length-1 && !f; i++){\n\t\t\t\tt += func(rk2[i], rk2[i+1]);\n\t\t\t}\n\t\t\tif(t <= n && !f){\n\t\t\t\tf = true;\n\t\t\t}\n\t\t\t\n\t\t\tif(f){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"NA\");\n\t\t\t}\n\t\t}\n\t}\n\t\n\tdouble func(double s, double t){\n\t\tdouble u = s+t, v;\n\t\tif(s == t){\n\t\t\treturn u;\n\t\t}\n\t\tif(s > t){\n\t\t\tv = s - t;\n\t\t} else {\n\t\t\tv = t - s;\n\t\t}\n\t\t\n\t\treturn Math.sqrt(u*u-v*v);\n\t}\n\t\n\tpublic static void main(String[] args){\n\t\tnew Main();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n    static double[][] dis;\n    static double dp[][];\n    static int n;\n    static int g;\n\n    public static void main(String[] args) throws Exception {\n        Scanner sc = new Scanner(System.in);\n        while (sc.hasNext()) {\n            String tmp[] = sc.nextLine().split(\" \");\n            int l = Integer.parseInt(tmp[0]);\n            int rs[] = new int[tmp.length - 1];\n            for (int i = 1; i < tmp.length; i++) {\n                rs[i - 1] = Integer.parseInt(tmp[i]);\n            }\n            n = rs.length;\n            dis = new double[n][n];\n            dp = new double[1 << n][n];\n\n            for (int i = 0; i < n; i++) {\n                dis[i][i] = 0;\n            }\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    dis[i][j] = dis[j][i] = 1.0\n                            * (rs[i] + rs[j])\n                            * Math.cos(Math.asin(1.0 * Math.abs(rs[i] - rs[j])\n                                    / (rs[i] + rs[j])));\n                }\n            }\n            boolean flag = false;\n            for (int i = 0; i < n; i++) {\n                for (int j = i + 1; j < n; j++) {\n                    g = j;\n                    for (int k = 0; k < 1 << n; k++) {\n                        Arrays.fill(dp[k], -1);\n                    }\n                    double dis = tsp(0, i);\n                  //  System.out.println(dis + rs[i] + rs[j]);\n                    if (dis + rs[i] + rs[j] > l) {\n                        ;\n                    } else {\n                        flag = true;\n                        i = n;\n                        break;\n                    }\n                }\n            }\n            System.out.println(flag ? \"OK\" : \"NA\");\n\n        }\n    }\n\n    public static double tsp(int S, int v) { // S:既に訪れた頂点、v:現在いる頂点\n        if (dp[S][v] >= 0) {\n            return dp[S][v];\n        }\n        if (S == (1 << n) - 1 && v == g) {\n            return dp[S][v] = 0;\n        }\n        double res = Double.POSITIVE_INFINITY;\n        for (int u = 0; u < n; u++) {\n            if ((S >> u & 1) == 0) {\n                res = Math.min(res, tsp(S | 1 << u, u) + dis[v][u]);\n            }\n        }\n        return dp[S][v] = res;\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args){\n\t\t\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(sc.hasNext()){\n\t\t\t\n\t\t\tString str = sc.nextLine();\n\t\t\tif(str.equals(\"\")){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t\n\t\t\tString[] params = str.split(\" \");\n\t\t\t\n\t\t\tfinal int box_length = Integer.parseInt(params[0]);\n\t\t\tfinal int cakes = params.length - 1;\n\t\t\tint[] cake_len = new int[cakes];\n\t\t\tfor(int i = 0; i < cakes; i++){\n\t\t\t\tcake_len[i] = Integer.parseInt(params[i+1]);\n\t\t\t}\n\t\t\t\n\t\t\tArrays.sort(cake_len);\n\t\t\t\n\t\t\tList<Integer> list = new ArrayList<Integer>();\n\t\t\tfor(int i = 0; i < cakes/2; i++){\n\t\t\t\tif((i % 2) == 0){\n\t\t\t\t\tlist.add(0, cake_len[i]);\n\t\t\t\t\tlist.add(cake_len[cakes - i - 1]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(0, cake_len[cakes - i - 1]);\n\t\t\t\t\tlist.add(cake_len[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(cakes == 1){\n\t\t\t\tlist.add(cake_len[0]);\n\t\t\t}else if(cakes % 2 == 1){\n\t\t\t\t\n\t\t\t\tif(Math.abs(list.get(0) - cake_len[cakes/2]) > Math.abs(list.get(cakes-2) - cake_len[cakes/2])){\n\t\t\t\t\tlist.add(0, cake_len[cakes/2]);\n\t\t\t\t}else{\n\t\t\t\t\tlist.add(cake_len[cakes/2]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\t//System.out.println(list);\n\t\t\t\n\t\t\tdouble sum = list.get(0) + list.get(cakes-1);\n\t\t\t\n\t\t\tfor(int i = 0; i < cakes-1; i++){\n\t\t\t\tsum += Math.sqrt(list.get(i) * list.get(i+1) * 4);\n\t\t\t}\n\t\t\t\n\t\t\tif(sum <= box_length){\n\t\t\t\tSystem.out.println(\"OK\");\n\t\t\t}else{\n\t\t\t\tSystem.out.println(\"NG\");\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t}\n\t\t\n\t\t\n\t}\n\t\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static readonly double INF = 1e8;\n\n        static void Main(string[] args)\n        {\n            StringBuilder sb = new StringBuilder();\n\n            string input;\n\n            while (!string.IsNullOrEmpty(input = Console.ReadLine()))\n            {\n                string[] temp = input.Split(' ');\n\n                int W = int.Parse(temp[0]);\n\n                List<double> r = new List<double>();\n\n                for (int i = 1; i < temp.Length; i++)\n                {\n                    r.Add(double.Parse(temp[i]));\n                }\n\n                int n = r.Count;\n\n                double[,] dp = new double[1 << n, n];\n\n                for (int i = 0; i < (1 << n); i++)\n                {\n                    for (int j = 0; j < n; j++)\n                    {\n                        dp[i, j] = INF;\n                    }\n                }\n\n                for (int i = 0; i < n; i++)\n                {\n                    dp[(1 << n) - (1 << i) - 1, i] = r[i];\n                }\n\n                for (int i = (1 << n) - 1; i >= 0; i--)\n                {\n                    for (int j = 0; j < n; j++)\n                    {\n                        if ((i & (1 << j)) != 0) continue;\n\n                        for (int k = 0; k < n; k++)\n                        {\n                            double dist = 2 * Math.Sqrt(r[j] * r[k]);\n\n                            dp[i, j] = Math.Min(dp[i, j], dp[i | (1 << j), k] + dist);\n                        }\n                    }\n                }\n\n                double min = INF;\n\n                for (int i = 0; i < n; i++)\n                {\n                    min = Math.Min(min, dp[0, i] + r[i]);\n                }\n                sb.AppendLine(min > W ? \"NA\" : \"OK\");\n            }\n            Console.Write(sb);\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace ConsoleApplication1\n{\n    class Program\n    {\n        static readonly double INF = 1e8;\n\n        static void Main(string[] args)\n        {\n            StringBuilder sb = new StringBuilder();\n\n            string input;\n\n            while (!string.IsNullOrEmpty(input = Console.ReadLine()))\n            {\n                string[] temp = input.Split(' ');\n\n                int W = int.Parse(temp[0]);\n\n                List<double> r = new List<double>();\n\n                for (int i = 1; i < temp.Length; i++)\n                {\n                    r.Add(double.Parse(temp[i]));\n                }\n\n                int n = r.Count;\n\n                double[,] dp = new double[1 << n, n];\n\n                for (int i = 0; i < (1 << n); i++)\n                {\n                    for (int j = 0; j < n; j++)\n                    {\n                        dp[i, j] = INF;\n                    }\n                }\n\n                for (int i = 0; i < n; i++)\n                {\n                    dp[(1 << n) - (1 << i) - 1, i] = r[i];\n                }\n\n                for (int i = (1 << n) - 1; i >= 0; i--)\n                {\n                    for (int j = 0; j < n; j++)\n                    {\n                        if ((i & (1 << j)) != 0) continue;\n\n                        for (int k = 0; k < n; k++)\n                        {\n                            double dist = Math.Sqrt((r[j] + r[k]) * (r[j] + r[k]) - (r[j] - r[k]) * (r[j] - r[k]));\n\n                            dp[i, j] = Math.Min(dp[i, j], dp[i | (1 << j), k] + dist);\n                        }\n                    }\n                }\n\n                double min = INF;\n\n                for (int i = 0; i < n; i++)\n                {\n                    min = Math.Min(min, dp[0, i] + r[i]);\n                }\n                sb.AppendLine(min > W ? \"NA\" : \"OK\");\n            }\n            Console.Write(sb);\n        }\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nclass Solver\n{\n    void Solve()\n    {\n        while (true)\n        {\n            var str = Console.ReadLine();\n            if (string.IsNullOrEmpty(str))\n                return;\n            var input = str.Split(' ');\n            var len = int.Parse(input[0]);\n            var rArray = new int[input.Length - 1];\n            var n = rArray.Length;\n            for (int i = 1; i < input.Length; i++)\n                rArray[i - 1] = int.Parse(input[i]);\n            var dp = new double[12, 1 << n];\n            for (int i = 0; i < 12; i++)\n                for (int j = 0; j < 1 << n; j++)\n                    dp[i, j] = len + 100;\n            for (int i = 0; i < n; i++)\n                dp[rArray[i], 1 << i] = rArray[i];\n\n            for (int p = 0; p <= 10; p++)\n            {\n                for (int i = 1; i <= 10; i++)\n                    for (int j = 0; j < 1 << n; j++)\n                    {\n                        for (int k = 0; k < n; k++)\n                        {\n                            var r = rArray[k];\n                            if (dp[i, j] > len)\n                                continue;\n                            if (((j >> k) & 1) == 1)\n                                continue;\n                            var dy = (i - r) * (i - r);\n                            var d = (i + r) * (i + r);\n                            var dx = Math.Sqrt(d - dy);\n                            dp[r, j | 1 << k] = Math.Min(dp[r, j | 1 << k], dp[i, j] + dx);\n                        }\n                    }\n            }\n            var f = false;\n            for (int i = 1; i <= 10; i++)\n                if (dp[i, (1 << n) - 1] + i <= len)\n                {\n                    f = true;\n                    break;\n                }\n            if (f) Console.WriteLine(\"OK\");\n            else Console.WriteLine(\"NA\");\n\n        }\n    }\n    static void Main()\n    {\n#if DEBUG\n        var oStream = new System.IO.FileStream(\"debug.txt\", System.IO.FileMode.Create, System.IO.FileAccess.Write);\n        var iStream = new System.IO.FileStream(\"input.txt\", System.IO.FileMode.Open, System.IO.FileAccess.Read, System.IO.FileShare.ReadWrite);\n        Console.SetIn(new System.IO.StreamReader(iStream));\n        System.Diagnostics.Debug.AutoFlush = true;\n        System.Diagnostics.Debug.Listeners.Add(new System.Diagnostics.TextWriterTraceListener(new System.IO.StreamWriter(oStream, System.Text.Encoding.UTF8)));\n        try\n        {\n#endif\n            var solver = new Solver();\n            solver.Solve();\n#if DEBUG\n        }\n        catch (Exception ex)\n        {\n            Console.WriteLine(ex.Message);\n            Console.WriteLine(ex.StackTrace);\n        }\n        Console.ReadKey(true);\n#endif\n    }\n\n}\n\n//*/\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace _0120\n{\n    public class Program\n\n    {\n        public static void Main(string[] args)\n        {\n            while (true)\n            {\n\n                string line = Console.ReadLine();\n                if (string.IsNullOrEmpty(line)) return;\n\n                int[] items = Array.ConvertAll(line.Trim().Split(' '), e => int.Parse(e));\n                int w = items[0];\n                int[] r = items.Skip(1).ToArray();\n\n                int n = r.Length;\n                double[,] dp = new double[(1 << n), n];\n                for (int i = 0 ; i < dp.GetLength(0) ; i++)\n                {\n                    for (int j = 0 ; j < dp.GetLength(1) ; j++)\n                    {\n                        dp[i, j] = int.MaxValue;\n                    }\n                }\n\n                for (int i = 0 ; i < dp.GetLength(0) ; i++)\n                {\n                    for (int j = 0 ; j < n ; j++)\n                    {\n                        if (i == 0)\n                        {\n                            dp[(1 << j), j] = Math.Min(dp[(1 << j), j], r[j]);\n                        }\n                        else\n                        {\n                            for (int k = 0 ; k < dp.GetLength(1) ; k++)\n                            {\n                                if (dp[i, k] == int.MaxValue) continue;\n\n                                int next = i | (1 << j);\n                                dp[next, j] = Math.Min(dp[next, j], dp[i, k] + getDistance(r[k], r[j]));\n                            }\n                        }\n                    }\n                }\n\n                double ans = double.MaxValue;\n                for (int i = 0 ; i < n ; i++) ans = Math.Min(ans, dp[(1 << n) - 1, i] + r[i]);\n                Console.WriteLine(ans - 1e-8 <= w ? \"OK\" : \"NA\");\n            }\n        }\n\n        public static double getDistance(double r1, double r2)\n        {\n            return 2 * Math.Sqrt(r1 * r2);\n        }\n\n\n        static string RSt() { return Console.ReadLine(); }\n        static int RInt() { return int.Parse(Console.ReadLine().Trim()); }\n        static long RLong() { return long.Parse(Console.ReadLine().Trim()); }\n        static double RDouble() { return double.Parse(Console.ReadLine()); }\n        static string[] RStAr(char sep = ' ') { return Console.ReadLine().Trim().Split(sep); }\n        static int[] RIntAr(char sep = ' ') { return Array.ConvertAll(Console.ReadLine().Trim().Split(sep), e => int.Parse(e)); }\n        static long[] RLongAr(char sep = ' ') { return Array.ConvertAll(Console.ReadLine().Trim().Split(sep), e => long.Parse(e)); }\n        static double[] RDoubleAr(char sep = ' ') { return Array.ConvertAll(Console.ReadLine().Trim().Split(sep), e => double.Parse(e)); }\n        static string WAr<T>(IEnumerable<T> array, string sep = \" \") { return string.Join(sep, array.Select(x => x.ToString()).ToArray()); }\n    }\n\n}\n\n"
  },
  {
    "language": "Ruby",
    "code": "def cul_length(a, b)\n  a, b = b, a if (a > b)\n  return 2 * (a * b) ** 0.5\nend\nwhile (line = gets)\n  line = line.split(\" \").map(&:to_i)\n  length = line[0]\n  line = line[1..-1].sort\n  left, right = line[0], line[0]\n  for i in 1..(line.size - 1) / 2\n    if (i % 2 == 1)\n      length -= cul_length(line[i], line[-i]) + cul_length(right, line[-i])\n      right = line[i]\n    else\n      length -= cul_length(line[i], line[-i]) + cul_length(left, line[-i])\n      left = line[i]\n    end\n  end\n  if (line.size % 4 == 0)\n    length -= cul_length(left, line[line.size / 2]) + line[line.size / 2] + right\n  elsif (line.size % 4 == 2)\n    length -= cul_length(right, line[line.size / 2]) + line[line.size / 2] + left\n  else\n    length -= right + left\n  end\n  if (length < 0)\n    puts 'NA'\n  else\n    puts 'YES'\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "#include <cstdio>\n#include <vector>\n#include <deque>\n#include <cmath>\n#include <algorithm>\n\nusing namespace std;\n\nint main(void) {\n    int size;\n    while (scanf(\"%d\", &size) != EOF) {\n        deque<int> r;\n        char c;\n        int x;\n        while (1) {\n            scanf(\"%d%c\", &x, &c);\n            r.push_back(x);\n            if (c == '\\n') break;\n        }\n        sort(r.begin(), r.end());\n        bool f = true;\n        vector<int> r2;\n        while (!r.empty()) {\n            if (f) {\n                r2.push_back(r.front());\n                r.pop_front();\n            } else {\n                r2.push_back(r.back());\n                r.pop_back();\n            }\n            f = !f;\n        }\n        double t = 0.0;\n        for (int i = 0; i < r2.size(); i++) {\n            if (i == 0 || i == r2.size() - 1) {\n                t += (double)r2[i];\n            }\n            if (i > 0) {\n                t += 2 * sqrt((double)r2[i] * r2[i - 1]);\n            }\n        }\n        if (t <= (double)size) {\n            printf(\"OK\\n\");\n        } else {\n            printf(\"NA\\n\");\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "Ruby",
    "code": "$stdin.each do |input|\n  a = input.split.map &:to_i\n  s = a.shift\n  a.sort!\n  b = []\n  f = true\n  until a.empty?\n    if f\n      b << a.pop\n    else\n      b << a.shift\n    end\n    f = !f\n  end\n  i = 0\n  c = 0\n  while i < b.size\n    if i == 0 || i == b.size - 1\n      c += b[i]\n    end\n    if i > 0\n      c += 2 * Math.sqrt(b[i] * b[i - 1])\n    end\n  end\n  if c <= s\n    puts \"OK\"\n  else\n    puts \"NA\"\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\n$c={}\ndef f a,s,l\na[0]?($c[a.sort]||=a.map{h,*t=a.rotate!;f(t,s+(4*h*l)**0.5,h)}.min):s+l\nend\nm,*r=$F.map &:to_i\n$_=r.map{h,*t=r.rotate!;f(t,h,h)}.min<=m ?:OK: :NA"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\n$c={}\ndef f a,s,l\na[0]?($c[a.sort]||=a.map{h,*t=a.rotate!;f(t,s+(4*h*l)**0.5,h)}.min):s+l\nend\nm,*r=$F.map &:to_i\n$_=((n=r.map{h,*t=r.rotate!;f(t,h,h)}.min)-m<=[1e-10,1e-10*[m,n].max].max)?:OK: :NA"
  },
  {
    "language": "Ruby",
    "code": "$<.map{|s|\n\tw,*r=s.split.map &:to_f;\n\tr.sort!;\n\ta=[];\n\ti=0;\n\t(a<<r[i];a<<r[r.size-i-1]if i<r.size-i-1;i+=1)while i<=r.size/2;\n\td=a[0];\n\t(1...a.size).map{|i|d+=(a[i-1]*a[i])**0.5*2}\n\td+=a[-1];\n\tputs d>w ? :NA: :OK\n}\n\n"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\ndef f a,s,l\na[0]?a.any?{h,*t=a.rotate!;f(t,s+(4*h*l)**0.5,h)}:s+l<=$m\nend\n$m,*r=$F.map &:to_i\n$_=r.any?{h,*t=r.rotate!;f(t,h,h)}?:OK: :NA"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\n$c={}\ndef f l,*a\na[0]?($c[a.sort<<l]||=a.map{f(*a.rotate!)+(4*a[0]*l)**0.5}.min):l\nend\nm,*r=$F.map &:to_i\n$_=(p r.map{f(*r.rotate!)+r[0]}.min)<=m ?:OK: :NA"
  },
  {
    "language": "Ruby",
    "code": "while str = gets\n    break if str.chomp == \"\"\n    w, *rs = str.chomp.split.map(&:to_i)\n    l, r, *q = rs.sort\n    t = [l]\n    until q.empty?\n        t << q.pop\n        t << q.shift unless q.empty?\n    end\n    t << r\n    m = t.each_cons(2).map{|x, y| ((x+y)**2 - (x-y)**2) ** 0.5}.reduce(:+) + t.first + t.last\n    puts (m <= w) ? \"OK\" : \"NA\"\nend\n"
  },
  {
    "language": "Ruby",
    "code": "while str = gets\n    break if str.chomp == \"\"\n    w, *rs = str.split.map(&:to_i)\n    l, r, *q = rs.sort\n    t = [l]\n    until q.empty?\n        t << q.pop\n        t << q.shift unless q.empty?\n    end\n    t << r\n    m = t.each_cons(2).map{|x, y| ((x+y)**2 - (x-y)**2) ** 0.5}.reduce(:+) + t.first + t.last\n    puts (m <= w) ? \"OK\" : \"NA\"\nend\n"
  },
  {
    "language": "Ruby",
    "code": "class Solver\n  def initialize\n    while data = gets\n      @data = data.chomp.split(' ').map(&:to_i)\n      @length = @data.shift\n      @data.unshift(0)\n      @graph = Array.new(@data.size).map{Array.new(@data.size, 0)}\n      @dp = Array.new(1 << @data.size).map{Array.new(@data.size, -1)}\n      create_graph\n      answer = 9999\n\n      answer = solver( 0, 0 )\n\n      @graph.each do |graph|\n        #p graph\n      end\n      puts (answer <= @length)? \"OK\" : \"NA\"\n    end\n  end\n\n  def create_graph\n    0.upto(@data.size-1) do |id|\n      0.upto(@data.size-1) do |id2|\n        if id == 0\n          @graph[id][id2] = @data[id2]\n        elsif id != id2\n          if id2 == 0\n            @graph[id][0] = @data[id]\n          else\n            @graph[id][id2] = calc_dist(id, id2)\n          end\n        end\n      end\n    end\n  end\n\n  def calc_dist(id1, id2)\n    r1 = @data[id1]\n    r2 = @data[id2]\n    a = r1 + r2\n    b = r1 - r2\n    dist = Math.sqrt(a**2 - b**2)\n  end\n\n  def solver( s, v )\n    return @dp[s][v] if @dp[s][v] >= 0\n\n    return 0 if s == (1 << @data.size) - 1 && v == 0\n\n    res = 9999\n    0.upto(@data.size-1) do |id|\n      if !((s >> id) & 1 == 1)\n        res = [ res, solver( s | (1 << id), id) + @graph[v][id]].min\n      end\n    end\n    @dp[s][v] = res\n  end\nend\n\ns = Solver.new"
  },
  {
    "language": "Ruby",
    "code": "while (line = gets)\n  rs = line.chomp.split(\" \").map{|s| s.to_f}\n\n  bl = rs.shift\n  m = rs.length\n  tf = false\n\n  for rs0 in rs.permutation(m)\n    l = rs0[0] + rs0[m - 1]\n    for i in (1...m)\n      rp = rs0[i - 1] + rs0[i]\n      rm = rs0[i - 1] - rs0[i]\n      l += Math.sqrt(rp * rp - rm * rm)\n    end\n\n    if bl >= l\n      tf = true\n      break\n    end\n  end\n\n  puts tf ? \"OK\" : \"NA\"\nend"
  },
  {
    "language": "Ruby",
    "code": "$<.map{|s|\n\tw,*r=s.split.map &:to_f;\n\tr.sort!;\n\ta=[];\n\ti=0;k=(r.size+1)/2;\n\t(a<<r[i];a<<r[k+i];i+=1)while i+k<r.size;\n\ta<<r[i]if k>i;\n\td=a[0];\n\t(1...a.size).map{|i|d+=(a[i-1]*a[i])**0.5*2}\n\td+=a[-1];\n\tputs d>w ? :NA: :OK\n}\n"
  },
  {
    "language": "Ruby",
    "code": "while (line = gets)\n  rs = line.chomp.split(\" \").map{|s| s.to_f}\n\n  bl = rs.shift\n  m = rs.length\n  rs.sort!\n\n  r0 = r1 = rs.shift\n  nums = [r0]\n\n  while ! rs.empty?\n    rlen = rs.length\n    max_diff0 = max_diff1 = 0.0\n    max_i0 = max_i1 = 0\n\n    for i in (0...rlen)\n      diff0 = (r0 - rs[i]).abs\n      if max_diff0 < diff0\n        max_diff0 = diff0\n        max_i0 = i\n      end\n\n      diff1 = (r1 - rs[i]).abs\n      if max_diff1 < diff1\n        max_diff1 = diff1\n        max_i1 = i\n      end\n    end\n\n    if max_diff0 > max_diff1 ||\n        max_diff0 == max_diff1 && r0 + rs[max_i0] <= r1 + rs[max_i1]\n      r0 = rs.delete_at(max_i0)\n      nums.unshift r0\n    else\n      r1 = rs.delete_at(max_i1)\n      nums.push r1\n    end\n  end\n\n  l = nums[0] + nums[m - 1]\n  for i in (1...m)\n    rp = nums[i - 1] + nums[i]\n    rm = nums[i - 1] - nums[i]\n    l += Math.sqrt(rp * rp - rm * rm)\n  end\n\n  puts (bl >= l) ? \"OK\" : \"NA\"\nend"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\n$c={}\ndef f l,*a\na[0]?($c[a.sort<<l]||=a.map{f(*a.rotate!)+(4*a[0]*l)**0.5}.min):l\nend\nm,*r=$F.map &:to_i\n$_=r.any?{f(*r.rotate!)+r[0]<=m}?:OK:\"NA\""
  },
  {
    "language": "Ruby",
    "code": "def calc(rs)\n  length = rs.first + rs.last\n\n  for i in 1...rs.size\n    left = rs[i - 1]\n    right = rs[i]\n    length += Math.sqrt((left + right)**2 - (left - right)**2)\n  end\n  length\nend\n\nwhile line = gets\n  length, *rs = line.chomp.split.map(&:to_i)\n \n  answer = :NA\n  rs.permutation(rs.size).each do |rs|\n    if length >= calc(rs)\n      answer = :OK\n      break\n    end\n  end\n\n  puts answer\nend"
  },
  {
    "language": "Ruby",
    "code": "$<.map{|s|\n\tw,*r=s.split.map &:to_f;\n\tr.sort!;\n\ta=[];\n\ti=0;\n\t(a<<r[i];a<<r[r.size-i-1]if i<r.size-i-1;i+=1)while i<=r.size/2;\n\td=a[0];\n\t(1...a.size).map{|i|d+=(a[i-1]*a[i])**0.5*2}\n\td+=a[-1];\n\tputs d>=w ? :NA: :OK\n}\n\n"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\nl,*r=$F.map &:to_i\n$_=r.permutation.find{|a|s=a[0]+a[-1];a.each_cons(2){|i,j|s+=(4*i*j)**0.5};s<=l}?:OK: :NA"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\n$c={}\ndef f a,s,l\na[0]?($c[a.sort+[s,l]]||=a.map{h,*t=a.rotate!;f(t,s+(4*h*l)**0.5,h)}.min):s+l\nend\nm,*r=$F.map &:to_i\n$_=(p r.map{h,*t=r.rotate!;f(t,h,h)}.min)<=m ?:OK: :NA"
  },
  {
    "language": "Ruby",
    "code": "while str = gets\n    w, *rs = str.split.map(&:to_i)\n    l, r, *q = rs.sort\n    t = [l]\n    until q.empty?\n        t << q.pop\n        t << q.shift unless q.empty?\n    end\n    t << r\n    m = t.each_cons(2).map{|x, y| ((x+y)**2 - (x-y)**2) ** 0.5}.reduce(:+) + t.first + t.last\n    puts (m <= w) ? \"OK\" : \"NA\"\nend\n"
  },
  {
    "language": "Ruby",
    "code": "#!ruby -pal\n$c={}\ndef f l,*a\na[0]?($c[a.sort<<l]||=a.map{f(*a.rotate!)+(4*a[0]*l)**0.5}.min):l\nend\nm,*r=$F.map &:to_i\n$_=r.map{f(*r.rotate!)+r[0]}.min<=m ?:OK: :NA"
  },
  {
    "language": "Ruby",
    "code": "class Solver\n  def initialize\n    while data = gets\n      @data = data.chomp.split(' ').map(&:to_i)\n      @length = @data.shift\n      @data.unshift(0)\n      @graph = Array.new(@data.size).map{Array.new(@data.size, 0)}\n      @dp = Array.new(1 << @data.size).map{Array.new(@data.size, -1)}\n      create_graph\n      answer = 9999\n\n      answer = solver( 0, 0 )\n\n      @graph.each do |graph|\n        #p graph\n      end\n      puts (answer <= @length)? \"OK\" : \"NA\"\n    end\n  end\n\n  def create_graph\n    0.upto(@data.size-1) do |id|\n      0.upto(@data.size-1) do |id2|\n        if id == 0\n          @graph[id][id2] = @data[id2]\n        elsif id != id2\n          if id2 == 0\n            @graph[id][0] = @data[id]\n          else\n            @graph[id][id2] = calc_dist(id, id2)\n          end\n        end\n      end\n    end\n  end\n\n  def calc_dist(id1, id2)\n    r1 = @data[id1]\n    r2 = @data[id2]\n    a = r1 + r2\n    b = r1 - r2\n    dist = Math.sqrt(a**2 - b**2)\n  end\n\n  def solver( s, v )\n    return @dp[s][v] if @dp[s][v] >= 0\n\n    return @dp[s][v] = 0 if s == (1 << @data.size) - 1 && v == 0\n\n    res = 9999\n    0.upto(@data.size-1) do |id|\n      if !((s >> id) & 1 == 1)\n        res = [ res, solver( s | (1 << id), id) + @graph[v][id]].min\n      end\n    end\n    @dp[s][v] = res\n  end\nend\n\ns = Solver.new"
  },
  {
    "language": "Ruby",
    "code": "INF = 1e9\n\ndef width(r1, r2)\n  r1 + r2 + Math::sqrt((r1 + r2) ** 2 - (r1 - r2).abs ** 2)\nend\n\nwhile list = gets\n  box, *r = list.split.map(&:to_f)\n\n  n = r.size\n  all = (1 << n) - 1\n\n  dp = Array.new(1 << n){Array.new(n, INF)}\n  n.times do |i| dp[1 << i][i] = 2.0 * r[i] end\n  (1 << n).times do |bit|\n    n.times do |from|\n      next if dp[bit][from] == INF\n      n.times do |to|\n        next if bit[to] == 1\n        cost = dp[bit][from] - 2.0 * r[from] + width(r[from], r[to])\n        next_bit = bit | (1 << to)\n        dp[next_bit][to] = [dp[next_bit][to], cost].min\n      end\n    end\n  end\n\n  puts (dp[all].any?{|d| d <= box} ? \"OK\" : \"NA\")\nend"
  },
  {
    "language": "Ruby",
    "code": "$<.map{|s|\n\tw,*r=s.split.map &:to_f;\n\tr.sort!;\n\ta=[];\n\ti=0;\n\t(a<<r[i];a<<r[r.size-i-1]if i<r.size-i-1;i+=1)while i<=r.size/2;\n\td=a[0];\n\t(1...a.size).map{|i|d+=(a[i-1]*a[i])**0.5*2}\n\td+=a[-1];\n\tb=[];\n\ti=0;\n\t(b<<r[r.size-i-1];b<<r[i]if i<r.size-i-1;i+=1)while i<=r.size/2;\n\te=b[0];\n\t(1...b.size).map{|i|e+=(b[i-1]*b[i])**0.5*2}\n\te+=b[-1];\n\tputs d>w&&e>w ? :NA: :OK\n}\n\n"
  },
  {
    "language": "Ruby",
    "code": "class Solver\n  def initialize\n    while data = gets\n      @data = data.chomp.split(' ').map(&:to_i)\n      @length = @data.shift\n      @graph = Array.new(@data.size).map{Array.new(@data.size, 9999)}\n      @dp = Array.new(1 << @data.size).map{Array.new(@data.size, -1)}\n      create_graph\n      answer = 9999\n\n      0.upto(@data.size-1) do |num|\n        answer = [answer, solver( 0 | (1 << num), num ) + @data[num]].min\n      end\n\n      puts (answer <= @length)? \"OK\" : \"NA\"\n    end\n  end\n\n  def create_graph\n    @data.each_with_index do |r, id|\n      0.upto(@data.size-1) do |id2|\n        if id != id2\n          @graph[id][id2] = calc_dist(id, id2)\n        end\n      end\n    end\n  end\n\n  def calc_dist(id1, id2)\n    r1 = @data[id1]\n    r2 = @data[id2]\n    a = r1 + r2\n    b = r1 - r2\n    dist = Math.sqrt(a**2 + b**2)\n  end\n\n  def solver( s, v )\n    return @dp[s][v] if @dp[s][v] >= 0\n\n    return 0 if s == (1 << @data.size) - 1\n\n    res = 9999\n    @data.each_with_index do |r, id|\n      if !((s >> id) & 1 == 1)\n        res = [ res, solver( s | (1 << id), id) + @graph[v][id]].min\n      end\n    end\n    @dp[s][v] = res\n  end\nend\n\ns = Solver.new"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.math;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\n\nconst double eps = 1e-10;\n\nint n;\ndouble length;\ndouble[12] r;\ndouble[12][12] cost;\ndouble[1 << 12][12] memo;\n\nvoid main(){\n\tstring s;\n\twhile (s = readln(), s) {\n\t\tstring[] tmp = split(s);\n\t\tlength = to!double(tmp[0]);\n\t\tfor (int i = 1; i < tmp.length; i++) {\n\t\t\tr[i-1] = to!double(tmp[i]);\n\t\t}\n\t\tn = cast(int)tmp.length - 1;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmemo[i] = -1;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tcost[i][j] = distance(r[i], r[j]);\n\t\t\t}\n\t\t}\n\t\tdouble ans = tsp(0,1);\n\t\tif (length+eps < ans) writeln(\"NA\");\n\t\telse writeln(\"OK\");\n\t}\n}\n\ndouble distance(double r1, double r2){\n\treturn sqrt((r1+r2)*(r1+r2) - (r1-r2)*(r1-r2));\n}\ndouble tsp(int v, int b){\n\tif (b == (1 << n) -1) return cost[v][0];\n\tif (memo[v][b] != -1) return memo[v][b];\n\n\tdouble res = double.max;\n\tfor (int w = 0; w < n; w++) {\n\t\tif (b & (1 << w)) continue;\n\t\tres = min(res, cost[v][w] + tsp(w, b | (1 << w)));\n\t}\n\treturn memo[v][b] = res;\n}"
  },
  {
    "language": "D",
    "code": "\nimport std.stdio, std.math, std.conv, std.algorithm, std.string, std.array;\n\ndouble dp[int[]];\nint[] arr;\n\ndouble length(int[] arr) {\n  double res = arr[0];\n  for(int i = 1; i < arr.length; i++) {\n    res += 2 * sqrt((arr[i - 1] * arr[i]).to!double);\n  }\n  res += arr[$ - 1];\n  return res;\n}\n\ndouble search_min_length(int[] arr, int used, int[] rest) {\n  if (used == ((1 << arr.length) - 1)) return length(rest);\n  if (rest in dp) return dp[rest];\n  double res = int.max;\n  foreach(int i, x; arr) {\n    if (((used >> i) & 1) == 0) {\n      res = min(res, search_min_length(arr, used | (1 << i), [x] ~ rest));\n    }\n  }\n  dp[cast(const int[])rest] = res;\n  return res;\n}\n\nvoid main() {\n  string str;\n  while((str = readln.chomp).length != 0) {\n    arr = str.split(\" \").map!(x => x.dup.to!int).array;\n    double threshold = arr.front.to!double;\n    dp = dp.init;\n    arr.popFront;\n    // search_min_length(arr, 0, []).writeln;\n    writeln(threshold >= search_min_length(arr, 0, []) ? \"OK\" : \"NA\");\n  }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.math;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\n\nint n;\nint length;\ndouble[12] r;\ndouble[12][12] cost;\ndouble[1 << 12][12] memo;\n\nvoid main(){\n\tstring s;\n\twhile (s = readln(), s) {\n\t\tstring[] tmp = split(s);\n\t\tlength = to!int(tmp[0]);\n\t\tfor (int i = 1; i < tmp.length; i++) {\n\t\t\tr[i-1] = to!int(tmp[i]);\n\t\t}\n\t\tn = cast(int)tmp.length - 1;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmemo[i] = -1;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tcost[i][j] = cost[j][i] = distance(r[i], r[j]);\n\t\t\t}\n\t\t}\n\t\tdouble ans = tsp(0,1);\n\t\tif (length < ans) writeln(\"NA\");\n\t\telse writeln(\"OK\");\n\t}\n}\n\ndouble distance(double r1, double r2){\n\treturn sqrt(4*r1*r2);\n}\ndouble tsp(int v, int b){\n\tif(memo[v][b] != -1) return memo[v][b];\n\tif (b == (1 << n) -1) return cost[v][0];\n\n\tdouble res = int.max;\n\tfor (int w = 0; w < n; w++) {\n\t\tif (b & (1 << w)) continue;\n\t\tres = min(res, cost[v][w] + tsp(w, b | (1 << w)));\n\t}\n\treturn memo[v][b] = res;\n}"
  },
  {
    "language": "D",
    "code": "\nimport std.stdio, std.math, std.conv, std.algorithm, std.string, std.array;\n\ndouble[12][1 << 12] dp;\nint[] arr;\n\ndouble search_min_length(int used, int[] rest, int last) {\n  if (used == ((1 << arr.length) - 1)) return arr[last];\n  if (dp[used][last] != -1) return dp[used][last];\n  double res = int.max;\n  foreach(int i, x; arr) {\n    if (((used >> i) & 1) == 0) {\n      double d = 2 * sqrt((arr[last] * arr[i]).to!double);\n      res = min(res, d + search_min_length(used | (1 << i), [x] ~ rest, i));\n    }\n  }\n  dp[used][last] = res;\n  return res;\n}\n\nvoid main() {\n  string str;\n  while((str = readln.chomp).length != 0) {\n    arr = str.split(\" \").map!(x => x.dup.to!int).array;\n    double threshold = arr.front.to!double;\n    double ans = double.max;\n    arr.popFront;\n    foreach(ref d; dp)\n      foreach(ref x; d) x = -1.0;\n    foreach(int i, x; arr) {\n      ans = min(ans, (search_min_length(1 << i, [x], i) + x));\n    }\n    writeln(threshold >= ans ? \"OK\" : \"NA\");\n  }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.algorithm;\nimport std.string;\nimport std.range;\nimport std.array;\nimport std.conv;\nimport std.complex;\nimport std.math;\nimport std.ascii;\nimport std.bigint;\nimport std.container;\n\ndouble offset(int lr, int rr) {\n\treturn sqrt((lr+rr)^^2.-(lr-rr)^^2);\n}\n\nvoid main() {\n\twhile(!stdin.eof()) {\n\t\tauto s = array(map!(a => to!int(a))(readln().strip().split()));\n\t\tif(s.empty())\n\t\t\tbreak;\n\t\tint n = cast(int)s.length-1;\n\t\tint l = s[0];\n\t\tint [] r = s[1..$];\n\t\tdouble[][] dp = new double[][](1L<<12,n);\n\t\tfor(int i; i < 1<<n; ++i){\n\t\t\tfor(int j; j < n; ++j){\n\t\t\t\tdp[i][j] = l+100;\n\t\t\t}\n\t\t}\n\t\tfor(int i; i < n; ++i){\n\t\t\tdp[1<<i][i] = r[i];\n\t\t}\n\t\tfor(int i = 1; i < 1<<n; ++i){\n\t\t\tfor(int j; j < n; ++j) {\n\t\t\t\tif(i & 1<<j)\n\t\t\t\t\tcontinue;\n\t\t\t\tfor(int k; k < n; ++k) {\n\t\t\t\t\tif(i & 1<<k) {\n\t\t\t\t\t\tdp[i|1<<j][j] = min(dp[i|1<<j][j], dp[i][k]+offset(r[k],r[j]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i; i < n; ++i){\n\t\t\tdp[(1<<n)-1][i] += r[i];\n\t\t}\n\t\tif(reduce!(min)(dp[(1<<n)-1]) > l)\n\t\t\twriteln(\"NA\");\n\t\telse\n\t\t\twriteln(\"OK\");\n\t}\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.math;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\n\nint n;\ndouble length;\ndouble[12] r;\ndouble[12][12] cost;\ndouble[1 << 12][12] memo;\n\nvoid main(){\n\tstring s;\n\twhile ((s = readln()).length) {\n\t\tstring[] tmp = split(s);\n\t\tlength = to!double(tmp[0]);\n\t\tfor (int i = 1; i < tmp.length; i++) {\n\t\t\tr[i-1] = to!double(tmp[i]);\n\t\t}\n\t\tn = cast(int)tmp.length - 1;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmemo[i] = -1;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tcost[i][j] = distance(r[i], r[j]);\n\t\t\t}\n\t\t}\n\t\tdouble ans = tsp(0,1);\n\t\tif (length < ans) writeln(\"NA\");\n\t\telse writeln(\"OK\");\n\t}\n}\n\ndouble distance(double r1, double r2){\n\treturn sqrt(4*r1*r2);\n}\ndouble tsp(int v, int b){\n\tif (b == (1 << n) -1) return cost[v][0];\n\tif (memo[v][b] != -1) return memo[v][b];\n\n\tdouble res = double.max;\n\tfor (int w = 0; w < n; w++) {\n\t\tif (b & (1 << w)) continue;\n\t\tres = min(res, cost[v][w] + tsp(w, b | (1 << w)));\n\t}\n\treturn memo[v][b] = res;\n}"
  },
  {
    "language": "D",
    "code": "\nimport std.stdio, std.math, std.conv, std.algorithm, std.string, std.array;\n\ndouble dp[];\n\ndouble length(int[] arr) {\n  double res = arr[0];\n  for(int i = 1; i < arr.length; i++) {\n    res += 2 * sqrt((arr[i - 1] * arr[i]).to!double);\n  }\n  res += arr[$ - 1];\n  return res;\n}\n\ndouble search_min_length(int[] arr, int used, int[] rest) {\n  if (used == ((1 << arr.length) - 1)) return length(rest);\n  double res = int.max;\n  foreach(int i, x; arr) {\n    if (((used >> i) & 1) == 0) {\n      res = min(res, search_min_length(arr, used | (1 << i), [x] ~ rest));\n    }\n  }\n  return dp[used] = res;\n}\n\nvoid main() {\n  string str;\n  while((str = readln.chomp).length != 0) {\n    int[] arr = str.split(\" \").map!(to!int).array;\n    double threshold = arr.front.to!double;\n    arr.popFront;\n    dp = new double[](1 << arr.length);\n    foreach(ref d; dp) d = -1.0;\n    writeln(threshold >= search_min_length(arr, 0, []) ? \"OK\" : \"NA\");\n  }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.math;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\n\nint n;\nint length;\ndouble[12] r;\ndouble[12][12] cost;\ndouble[1 << 12][12] memo;\n\nvoid main(){\n\tstring s;\n\twhile (s = readln(), s) {\n\t\tstring[] tmp = split(s);\n\t\tlength = to!int(tmp[0]);\n\t\tfor (int i = 1; i < tmp.length; i++) {\n\t\t\tr[i-1] = to!int(tmp[i]);\n\t\t}\n\t\tn = cast(int)tmp.length - 1;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmemo[i] = -1;\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tcost[i][j] = cost[j][i] = distance(r[i], r[j]);\n\t\t\t}\n\t\t}\n\t\tdouble ans = tsp(0,1);\n\t\tif (length < ans) writeln(\"NA\");\n\t\telse writeln(\"OK\");\n\t}\n}\n\ndouble distance(double r1, double r2){\n\treturn sqrt(4*r1*r2);\n}\ndouble tsp(int v, int b){\n\tif(memo[v][b] != -1) return memo[v][b];\n\tif (b == (1 << n) -1) return cost[v][0];\n\n\tdouble res = 99999999;\n\tfor (int w = 0; w < n; w++) {\n\t\tif (b & (1 << w)) continue;\n\t\tres = min(res, cost[v][w] + tsp(w, b | (1 << w)));\n\t}\n\treturn memo[v][b] = res;\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.algorithm;\nimport std.string;\nimport std.functional;\nimport std.array;\nimport std.conv;\nimport std.math;\nimport std.typecons;\nimport std.regex;\nimport std.range;\n\nreal[12][1<<12] dp;\nint[] cakes;\nint n;\n\nreal saiki(int u,int v){\n    if(dp[u][v] > 0) return dp[u][v];\n    if( u == ((1<<n) - 1)) return cakes[v];\n\n    real res = 10000000;\n    for(int i=0;i<n;i++){\n\tif(( (1<<i) & u ) == 0){\n\t    res = min(res,saiki(u | (1<<i) ,i) + 2.0 * sqrt(to!real(cakes[i]*cakes[v]) )); \n\t}\n    }\n    return dp[u][v] = res;\n}\n\nvoid main(){\n\n    while(true){\n\tstring s = readln();\n\tif(stdin.eof()) break;\n\tdp = new real[12][1<<12];\n\tauto s1 = s.split().to!(int[]);\n\tn = to!int(s1.length) - 1;\n\tcakes = (s1[1..$]).dup();\n\tcakes ~= 0;\n\treal ans = 1e8;\n\tfor(int i=0;i<n;i++){\n\t    ans = min(saiki(1<<i,i) + cakes[i],ans);\n\t}\n\twriteln(ans <= s1[0] ? \"OK\" : \"NA\");\n\n    }\n\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio;\nimport std.math;\nimport std.string;\nimport std.conv;\nimport std.algorithm;\n\nulong n;\ndouble length;\ndouble[13] r;\ndouble[13][13] cost;\ndouble[1 << 13][13] memo;\n\nvoid main(){\n\tstring s;\n\twhile (s = readln(), s) {\n\t\tstring[] tmp = split(s);\n\t\tlength = to!int(tmp[0]);\n\t\tfor (int i = 1; i < tmp.length; i++) {\n\t\t\tr[i-1] = to!int(tmp[i]);\n\t\t}\n\t\tn = tmp.length- 1;\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tmemo[i] = -1;\n\t\t\tcost[i][n] = cost[n][i] = r[i];\n\t\t\tfor (int j = 0; j < n; j++) {\n\t\t\t\tcost[i][j] = distance(r[i], r[j]);\n\t\t\t}\n\t\t}\n\t\tmemo[n] = -1;\n\t\tn++;\n\t\tdouble ans = tsp(0,1);\n\t\tif (length < ans) writeln(\"NA\");\n\t\telse writeln(\"OK\");\n\t}\n}\n\ndouble distance(double r1, double r2){\n\treturn 2.0*sqrt(r1*r2);\n}\n\ndouble tsp(int v, int b){\n\tif (memo[v][b] != -1) return memo[v][b];\n\tif (b == (1 << n) -1) return cost[v][0];\n\n\tdouble res = double.max;\n\tfor (int w = 0; w < n; w++) {\n\t\tif (!(b & (1 << w))) res = min(res, cost[v][w] + tsp(w, b | (1 << w)));\n\t}\n\treturn memo[v][b] = res;\n}"
  },
  {
    "language": "Python",
    "code": "# AOJ 0120 Patisserie\n# Python3 2018.6.23 bal4u\n\nINF = 0x7fffffff\nR = 100000\nd = [[0 for j in range(13)] for i in range(13)]  # ロールケーキ円心間の水平距離\nfor i in range(3, 11):\n\tii = i*i\n\tfor j in range(i, 11):\n\t\td[i][j] = d[j][i] = int(2*R * ii**0.5)\n\t\tii += i\n\nwhile 1:\n\ttry: r = list(map(int, input().split()))\n\texcept: break\n\tW = r.pop(0)\n\tif 2*sum(r) <= W:\n\t\tprint(\"OK\")\n\t\tcontinue\n\tn = len(r)\n\tW *= R\n\tdp = [[INF for j in range(1<<n)] for i in range(n)]\n\tfor i in range(n): dp[i][1<<i] = r[i]*R\n\tlim = 1<<n\n\tfor k in range(lim):\n\t\tfor i in range(n):\n\t\t\tif k & (1<<i): continue\n\t\t\tfor j in range(n):\n\t\t\t\tdp[i][k|(1<<i)] = min(dp[i][k|(1<<i)], dp[j][k] + d[r[i]][r[j]])\n\tw = 240*R\n\tfor i in range(n):\n\t\tdp[i][lim-1] += r[i]*R\n\t\tif dp[i][lim-1] < w: w = dp[i][lim-1];\n\tprint(\"OK\" if w <= W else \"NA\")\n"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0120\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef calc_width(cakes):\n    # ??±????????????????????????(?????????)????????????????????????????????????????¨??????????\n    if len(cakes) == 1:\n        return cakes[0]*2\n\n    prev_r = cakes[0]\n    width = prev_r\n\n    for r in cakes[1:]:\n        h_diff = abs(prev_r - r)\n        if h_diff == 0:\n            width += prev_r\n            width += r\n        else:\n            w = ((prev_r + r)**2 - h_diff**2)**0.5\n            width += w\n        prev_r = r\n    width += cakes[-1]\n\n    return width\n\n\ndef main(args):\n    for line in sys.stdin:\n        data = [int(x) for x in line.strip().split()]\n        box_size = data[0]\n        temp = data[1:]\n        temp.sort()\n        cakes = []\n\n        head = True\n        while temp:\n            if head:\n                cakes.append(temp[0])\n                temp = temp[1:]\n                head = False\n            else:\n                cakes.append(temp[-1])\n                temp = temp[:-1]\n                head = True\n        result = calc_width(cakes)\n        if result <= box_size:\n            print('OK')\n        else:\n            temp = data[1:]\n            temp.sort(reverse=True)\n            cakes = []\n\n            head = True\n            while temp:\n                if head:\n                    cakes.append(temp[0])\n                    temp = temp[1:]\n                    head = False\n                else:\n                    cakes.append(temp[-1])\n                    temp = temp[:-1]\n                    head = True\n            result = calc_width(cakes)\n            if result <= box_size:\n                print('OK')\n            else:\n                print('NA')\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    "
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0120\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef calc_width(cakes):\n    # ??±????????????????????????(?????????????????????????????????????????????????¨??????????)\n    if len(cakes) == 1:\n        return cakes[0]*2\n\n    prev_r = cakes[0]\n    width = prev_r\n\n    for r in cakes[1:]:\n        h_diff = abs(prev_r - r)\n        if h_diff == 0:\n            width += prev_r\n            width += r\n        else:\n            w = ((prev_r + r)**2 - h_diff**2)**0.5\n            width += w\n        prev_r = r\n    width += cakes[-1]\n\n    return width\n\n\ndef main(args):\n    for line in sys.stdin:\n        data = [int(x) for x in line.split()]\n        box_size = data[0]\n        temp = data[1:]\n        temp.sort()\n        cakes = []\n\n        head = True\n        while temp:\n            if head:\n                cakes.append(temp[0])\n                temp = temp[1:]\n                head = False\n            else:\n                cakes.append(temp[-1])\n                temp = temp[:-1]\n                head = True\n        result = calc_width(cakes)\n        if result <= box_size:\n            print('OK')\n        else:\n            print('NA')\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    "
  },
  {
    "language": "Python",
    "code": "import math\nfrom itertools import permutations\n\ndef get_dist(item):\n    ans = 0\n    for i in range(len(item) - 1):\n        r1, r2 = item[i], item[i+1]\n        x = math.sqrt(pow(r1+r2, 2) - pow(r1-r2,2))\n        ans += x\n    ans += item[0] + item[-1]\n    return ans\n\nwhile True:\n    try:\n        tmp = map(int, raw_input().split())\n    except EOFError:\n        break\n    length = tmp[0]\n    rs = tmp[1:]\n    for item in permutations(rs):\n        if get_dist(item) <= length:\n            print 'OK'\n            break\n    else:\n        print 'NA'"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n \nwhile 1:\n\ttry:\n\t\tCakes=map(int,raw_input().split())\n\t\tsize_max=Cakes.pop(0)\n\t\tsize_min=999\n\t\tfor j in range(len(Cakes)):\n\t\t\tcakes=Cakes[:]\n\t\t\tcake1=cakes.pop(j)\n\t\t\tsize=cake1\n\t\t\twhile cakes:\n\t\t\t\tcos=[L(cake1,i)/(cake1+i) for i in cakes]\n\t\t\t\tcake2=cakes.pop(cos.index(min(cos)))\n\t\t\t\tsize+=L(cake1,cake2)\n\t\t\t\tcake1=cake2\n\t\t\tsize+=cake2\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=size_max else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import sys\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0]\n  a=sorted(a[1:])\n  n=len(a)\n  A=[]\n  A.append(a.pop(0))\n  while a:\n    A=[a.pop()]+A\n    if a==[]: break\n    A+=[a.pop()]\n    if a==[]: break\n    A=[a.pop(0)]+A\n    if a==[]: break\n    A+=[a.pop(0)]\n  a=A[0]+A[-1]\n  for i in range(n-1): a+=2*(A[i]*A[i+1])**.5\n  print [\"OK\",\"NA\"][a>w]"
  },
  {
    "language": "Python",
    "code": "import Queue, math\nwhile True:\n    l = 0; r = []\n    try:\n        inp = map(int, raw_input().split())\n        l = inp[0]\n        r = inp[1:]\n    except EOFError:\n        break\n    n = len(r)\n    if 2*sum(r) <= l:\n        print \"OK\"\n    else:\n        n2 = 2**n-1\n        que = Queue.PriorityQueue()\n        dp = [[1000.0 for i in xrange(n)] for j in xrange(2**n)]\n        que.put((0.0, 0, -1))\n        ok = False\n        while not ok and not que.empty():\n            co, state, last = que.get()\n            if last!=-1 and dp[state][last] < co:\n                continue\n            for i in xrange(n):\n                if (state & (1<<i))==0:\n                    nxt = co + math.sqrt(r[last]*r[i])*2.0 if last!=-1 else r[i]\n                    nst = state | (1<<i)\n                    if nxt + r[i] < l+0.000000001 and nxt < dp[nst][i]:\n                        if nst==n2:\n                            ok = True\n                            break\n                        dp[nst][i] = nxt\n                        que.put((nxt, nst, i))\n        print \"OK\" if ok else \"NA\""
  },
  {
    "language": "Python",
    "code": "import math\n\ndef shortest(chain,length,newr):\n    if length-chain[0]+newr+2*math.sqrt(newr*chain[0])<length-chain[-1]+newr+2*math.sqrt(newr*chain[-1]):\n        a=length-chain[0]+newr+2*math.sqrt(newr*chain[0])\n        nc=[newr]+chain\n    else:\n        a=length-chain[-1]+newr+2*math.sqrt(newr*chain[-1])\n        nc=chain+[newr]\n    for i in range(1,len(chain)):\n        newlength=length-2*math.sqrt(chain[i-1]*chain[i])+2*math.sqrt(chain[i-1]*newr)+2*math.sqrt(newr*chain[i])\n        if newlength<a:\n            a=newlength\n            nc=chain[:i]+[newr]+chain[i:]\n    return (a,nc)\n    \nwhile(1):\n    try:\n        din=[int(x) for x in raw_input().split()]\n    except:\n        break\n    box=din[0]\n    chain=[din[1]]\n    length=2*din[1]\n    if len(din)>2:\n        for newr in din[2:]:\n            (length,chain)=shortest(chain,length,newr)\n    #print chain\n    if box>=length:\n        print 'OK'\n    else:\n        print 'NG'"
  },
  {
    "language": "Python",
    "code": "from collections import deque\n\ndef calcwidth(cks):\n    if len(cks) == 1: return cks[0]*2\n    width = cks[0] + cks[-1]\n    for ck1,ck2 in zip(cks[:-1],cks[1:]):\n        width += ((ck1+ck2)**2-(ck1-ck2)**2)**0.5\n    return width\n\nwhile True:\n    try: W, *rs = list(map(float,input().split()))\n    except: break\n    rs = deque(sorted(rs))\n    dp = [float('inf')]*len(rs)\n    cs = deque([rs.popleft()])\n\n    last_pick_small = -1\n    # if -1: last pick up is smallest, if 0: last pick up is biggest\n    while rs:\n        if last_pick_small: nxt = rs.pop()\n        else: nxt = rs.popleft()\n        if abs(nxt-cs[0]) > abs(nxt-cs[-1]): cs.appendleft(nxt)\n        else: cs.append(nxt)\n        last_pick_small = -1-last_pick_small\n    ret = calcwidth(list(cs))\n    if ret <= W: print('OK')\n    else: print('NA')\n\n\n"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n    return ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n \nwhile 1:\n    try:\n        Cakes=map(int,raw_input().split())\n        size_max=Cakes.pop(0)\n        Cakes=sorted(Cakes)[::-1]\n        size_min=999\n        for j in range(len(Cakes)):\n            cakes=Cakes[:]\n            box=[cakes.pop(j)]\n            while cakes:\n                cos=[L(box[-1],i)/(box[-1]+i) for i in cakes]\n                box.append(cakes.pop(cos.index(min(cos))))\n            size=box[0]+box[-1]\n            for i in range(len(box)-1):\n                size+=L(box[i],box[i+1])\n            size_min=min(size,size_min)\n        print \"OK\" if size_min<=size_max else \"NA\"\n    except:\n        break"
  },
  {
    "language": "Python",
    "code": "import math\n\ndef f1():\n    total = []\n    for i in range(len(c_l)-1):\n        x2 = 0\n        if (i+1) % 2 == 0:\n            x2 = (c_l[i+1]+c_l[i])**2 - (c_l[i+1]-c_l[i])**2\n        else:\n            x2 = (c_l[i]+c_l[i+1])**2 - (c_l[i]-c_l[i+1])**2\n        x = math.sqrt(x2)\n        total.append(x)\n    else:\n        total.append(c_l[0])\n        total.append(c_l[-1])\n    return f3(total)\n        \ndef f2():\n    total = []\n    for i in range(len(c_l)-1):\n        x2 = 0\n        if (i+1) % 2 == 0:\n            x2 = (c_l[i]+c_l[i+1])**2 - (c_l[i]-c_l[i+1])**2\n        else:\n            x2 = (c_l[i+1]+c_l[i])**2 - (c_l[i+1]-c_l[i])**2\n        x = math.sqrt(x2)\n        total.append(x)\n    else:\n        total.append(c_l[0])\n        total.append(c_l[-1])\n    return f3(total)\n        \ndef f3(total):\n    if sum(total) <= l:\n        return True\n    else:\n        return False\n\nwhile True:\n    try:\n        line = map(int, raw_input().split())\n        l = line[0]\n        lis = sorted(line[1:])\n        c_lis = lis[:]\n        c_l = []\n        if len(lis) % 2 == 0:\n            while True:\n                c_l.append(lis[-1])\n                c_l.append(lis[0])\n                del lis[-1]\n                del lis[0]\n                if len(lis) == 0:\n                    break\n            if f1():\n                print 'OK'\n            else:\n                print 'NA'\n        else:\n            while True:\n                c_l.append(lis[-1])\n                c_l.append(lis[0])\n                del lis[-1]\n                del lis[0]\n                if len(lis) == 1:\n                    c_l.append(lis[0])\n                    break\n            if f1():\n                print 'OK'\n            else:\n                c_l = []\n                while True:\n                    c_l.append(c_lis[0])\n                    c_l.append(c_lis[-1])\n                    del c_lis[0]\n                    del c_lis[-1]\n                    if len(c_lis) == 1:\n                        c_l.append(c_lis[0])\n                        break\n                if f2():\n                    print 'OK'\n                else:\n                    print 'NA'\n    except EOFError:\n        break"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\traw_cakes=map(int,raw_input().split())\n\t\tbox=raw_cakes.pop(0)\n\t\traw_cakes=sorted(raw_cakes)[::-1]\n\t\tcakes=[raw_cakes.pop(0)]\n\t\twhile len(raw_cakes)>1:\n\t\t\tcos=[L(cakes[-1],i)/(cakes[-1]+i) for i in raw_cakes]\n\t\t\tcakes.append(raw_cakes.pop(cos.index(min(cos))))\n\t\tcakes.insert(0,raw_cakes.pop())\n\t\tsize=cakes[0]+cakes[-1]\n\t\tfor i in range(len(cakes)-1):\n\t\t\tsize+=L(cakes[i],cakes[i+1])\n\t\tprint \"OK\" if size<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\traw_cakes=map(int,raw_input().split())\n\t\tbox=raw_cakes.pop(0)\n\t\traw_cakes=sorted(raw_cakes)[::-1]\n\t\tcakes=[raw_cakes.pop(-1)]\n\t\twhile raw_cakes:\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop( 0))\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop(-1))\n\t\tsize=cakes[0]+cakes[-1]\n\t\tfor i in range(len(cakes)-1):\n\t\t\tsize+=L(cakes[i],cakes[i+1])\n\t\tprint \"OK\" if size<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import Queue, math\nwhile True:\n    l = 0; r = []\n    try:\n        inp = map(int, raw_input().split())\n        l = inp[0]\n        r = inp[1:]\n    except EOFError:\n        break\n    n = len(r)\n    if 2*sum(r) < l:\n        print \"OK\"\n    else:\n        que = Queue.PriorityQueue()\n        dp = [[1000.0 for i in xrange(n)] for j in xrange(2**n)]\n        que.put((0.0, 0, -1))\n        while not que.empty():\n            co, state, last = que.get()\n            if last!=-1 and dp[state][last] < co:\n                continue\n            for i in xrange(n):\n                if (state & (1<<i))==0:\n                    nxt = co + math.sqrt(r[last]*r[i])*2.0 if last!=-1 else r[i]\n                    if nxt < dp[state | (1<<i)][i]:\n                        dp[state | (1<<i)][i] = nxt\n                        que.put((nxt, state | (1<<i), i))\n        ans = 1000.0\n        for i in xrange(n):\n            ans = min(ans, dp[2**n-1][i]+r[i])\n        print \"OK\" if ans < l+0.000000001 else \"NA\""
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\traw_cakes=map(int,raw_input().split())\n\t\tbox=raw_cakes.pop(0)\n\t\traw_cakes=sorted(raw_cakes)[::-1]\n\t\tcakes=[]\n\t\twhile raw_cakes:\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop(-1))\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop( 0))\n\t\tcakes=cakes[:len(cakes)/2]+cakes[len(cakes)/2:][::-1]\n\t\tprint cakes\n\t\tsize=cakes[0]+cakes[-1]\n\t\tfor i in range(len(cakes)-1):\n\t\t\tsize+=L(cakes[i],cakes[i+1])\n\t\tprint \"OK\" if size<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import math\nwhile True:\n    l = 0; r = []\n    try:\n        inp = map(int, raw_input().split())\n        l = inp[0]\n        r = inp[1:]\n    except EOFError:\n        break\n    n = len(r)\n    if 2*sum(r) <= l:\n        print \"OK\"\n    else:\n        r.sort()\n        s = []\n        for i in xrange(n/2):\n            s = [r[i]] + s[::-1] + [r[-i-1]]\n        if n&1:\n            if abs(s[0]-r[n/2]) < abs(s[-1]-r[n/2]):\n                s.append(r[n/2])\n            else:\n                s = [r[n/2]] + s\n        ans = s[0] + s[-1]\n        for i in xrange(n-1):\n            ans += 2*math.sqrt(s[i]*s[i+1])\n        print \"OK\" if ans < 0.000000001+l else \"NA\""
  },
  {
    "language": "Python",
    "code": "import math\n\ndef shortest(chain,length,newr):\n    if length-chain[0]+newr+2*math.sqrt(newr*chain[0])<length-chain[-1]+newr+2*math.sqrt(newr*chain[-1]):\n        a=length-chain[0]+newr+2*math.sqrt(newr*chain[0])\n        nc=[newr]+chain\n    else:\n        a=length-chain[-1]+newr+2*math.sqrt(newr*chain[-1])\n        nc=chain+[newr]\n    for i in range(1,len(chain)):\n        newlength=length-2*math.sqrt(chain[i-1]*chain[i])+2*math.sqrt(chain[i-1]*newr)+2*math.sqrt(newr*chain[i])\n        if newlength<a:\n            a=newlength\n            nc=chain[:i]+[newr]+chain[i:]\n    return (a,nc)\n    \nwhile(1):\n    try:\n        din=[int(x) for x in raw_input().split()]\n    except:\n        break\n    box=din[0]\n    chain=[din[1]]\n    length=2*din[1]\n    if len(din)>2:\n        for newr in din[2:]:\n            (length,chain)=shortest(chain,length,newr)\n    #print chain\n    if box>=length:\n        print 'OK'\n    else:\n        print 'NA'"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\tCakes=map(int,raw_input().split())\n\t\tsize_max=Cakes.pop(0)\n\t\tsize_min=999\n\t\tfor j in range(len(Cakes)):\n\t\t\tsize=0\n\t\t\tcakes=Cakes[:]\n\t\t\tcake1=size=cakes.pop(j)\n\t\t\twhile cakes:\n\t\t\t\tcos=[L(cake1,i)/(cake1+i) for i in cakes]\n\t\t\t\tcake2=cakes.pop(cos.index(min(cos)))\n\t\t\t\tsize+=L(cake1,cake2)\n\t\t\t\tcake1=cake2\n\t\t\tsize+=cake2\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=size_max else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n \nwhile 1:\n\ttry:\n\t\tCakes=map(int,raw_input().split())\n\t\tsize_max=Cakes.pop(0)\n\t\tsize_min=999\n\t\tfor j in range(len(Cakes)):\n\t\t\tcakes=Cakes[:]\n\t\t\tcake1=size=cakes.pop(j)\n\t\t\twhile cakes:\n\t\t\t\tcos=[L(cake1,i)/(cake1+i) for i in cakes]\n\t\t\t\tcake2=cakes.pop(cos.index(min(cos)))\n\t\t\t\tsize+=L(cake1,cake2)\n\t\t\t\tcake1=cake2\n\t\t\tsize+=cake2\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=size_max else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "def f(rad1, rad2):\n    return float((rad1 + rad2) ** 2 - abs(rad1 - rad2) ** 2) ** 0.5\n\nwhile True:\n    try:\n        data = map(int, raw_input().split())\n    except:\n        break\n    lim, rad, n = data[0], data[1:], len(data) - 1\n    dp = [[0] * (1 << n) for _ in xrange(n)]\n    for r in xrange(n):\n        dp[r][1 << r] = rad[r]\n    for b in xrange(1, 1 << n):\n        for r in xrange(n):\n            if b & (1 << r) == 0:\n                dp[r][b + (1 << r)] = min(f(rad[rr], rad[r]) + dp[rr][b]\n                                            for rr in xrange(n) if ((1 << rr) & b) != 0)\n    print \"OK\" if lim >=  min(dp[r][(1 << n) - 1] + rad[r] for r in xrange(n)) else \"NA\""
  },
  {
    "language": "Python",
    "code": "import sys\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0];\n  a=sorted(a[1:])\n  n=len(a)+1\n  b=a[:]\n  b[0::2]=a[:n/2]\n  b[1::2]=a[n/2:]\n  n-=1\n  s=b[0]+b[n-1]\n  for i in range(n-1): s+=2*(b[i]*b[i+1])**.5\n  print [\"OK\",\"NA\"][s>w]"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\nimport sys\nimport os\nimport math\n\ndef pythagoras(a, b):\n    return 2 * math.sqrt(a * b)\n\nfor s in sys.stdin:\n    lst = list(map(int, s.split()))\n    W = lst[0]\n    R = lst[1:]\n    R.sort()\n    n = len(R)\n    \n    if n == 0:\n        print('OK')\n        exit()\n        \n    if n == 1:\n        if W >= R[0]:\n            print('OK')\n            exit()\n        else:\n            print('NA')\n            exit()\n\n    left = []\n    right = []\n\n    left.append(R.pop(0))\n    right.append(R.pop(0))\n\n    l = left[0] + right[0]\n    while R:\n        min_R = R[0]\n        max_R = R[-1]\n\n        left_R = left[-1]\n        right_R = right[-1]\n\n        if left_R <= right_R:\n            if right_R - min_R >= max_R - left_R:\n                right.append(R.pop(0))\n                l += pythagoras(right_R, min_R)\n            else:\n                left.append(R.pop(-1))\n                l += pythagoras(max_R, left_R)\n        else:\n            if left_R - min_R >= max_R - right_R:\n                left.append(R.pop(0))\n                l += pythagoras(left_R, min_R)\n            else:\n                right.append(R.pop(-1))\n                l += pythagoras(max_R, right_R)\n\n    l += pythagoras(left[-1], right[-1])\n\n    if l <= W:\n        print('OK')\n    else:\n        print('NA')"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0120\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef calc_width(cakes):\n    # ??±????????????????????????(?????????)????????????????????????????????????????¨??????????\n    if len(cakes) == 1:\n        return cakes[0]*2\n\n    prev_r = cakes[0]\n    width = prev_r\n\n    for r in cakes[1:]:\n        h_diff = abs(prev_r - r)\n        w = ((prev_r + r)**2 - h_diff**2)**0.5\n        width += w\n        prev_r = r\n    width += cakes[-1]\n\n    return width\n\n\ndef main(args):\n    for line in sys.stdin:\n        data = [int(x) for x in line.strip().split()]\n        box_size = data[0]\n        temp = data[1:]\n        temp.sort()\n\n        # ??±??????????????????????????????????????????????????????????????????????????????\n        min_width = float('inf')\n\n        cakes = [temp[0]]\n        temp = temp[1:]\n        pick_large = True\n        while temp:\n            if pick_large:\n                pick = temp[-1]\n                temp = temp[:-1]\n                pick_large = False\n                diff_front = abs(pick - cakes[0])\n                diff_rear = abs(pick - cakes[-1])\n                if diff_front > diff_rear:\n                    cakes.insert(0, pick)\n                else:\n                    cakes.append(pick)\n            else:\n                pick = temp[0]\n                temp = temp[1:]\n                pick_large = True\n                diff_front = abs(pick - cakes[0])\n                diff_rear = abs(pick - cakes[-1])\n                if diff_front > diff_rear:\n                    cakes.insert(0, pick)\n                else:\n                    cakes.append(pick)\n\n        result = calc_width(cakes)\n        min_width = min(result, min_width)\n\n        if min_width <= box_size:\n            print('OK')\n        else:\n            print('NA')\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    "
  },
  {
    "language": "Python",
    "code": "from math import sqrt\nwhile 1:\n    try:\n        en=map(int,raw_input().split())\n        w=en[0]\n        r=en[1:]\n        lr=len(r)\n\n        dp=[[float('inf')]*lr for _ in xrange(1<<lr)]\n        for i in xrange(lr):\n            dp[1<<i][i]=r[i]\n        for i in xrange(1<<lr):\n            for j in xrange(lr):\n                if i>>j&1:\n                    for k in xrange(len(dp[i^(1<<j)])):\n                        dp[i][j]=min(dp[i][j],dp[i^(1<<j)][k]+2*sqrt(r[k]*r[j]))\n\n        ans=float('inf')\n        for i in xrange(lr):\n            ans=min(ans,dp[(1<<lr)-1][i]+r[i])\n        if ans<=w:\n            print('OK')\n        else:\n            print('NA')\n    except:break"
  },
  {
    "language": "Python",
    "code": "from math import sqrt\nen=map(int,raw_input().split())\nw=en[0]\nr=en[1:]\nlr=len(r)\n\ndp=[[float('inf')]*lr for _ in xrange(1<<lr)]\nfor i in xrange(lr):\n    dp[1<<i][i]=r[i]\nfor i in xrange(1<<lr):\n    for j in xrange(lr):\n        if i>>j&1:\n            for k in xrange(len(dp[i^(1<<j)])):\n                dp[i][j]=min(dp[i][j],dp[i^(1<<j)][k]+2*sqrt(r[k]*r[j]))\n\nans=float('inf')\nfor i in xrange(lr):\n    ans=min(ans,dp[(1<<lr)-1][i]+r[i])\nif ans<=w:\n    print('OK')\nelse:\n    print('NA')"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\traw_cakes=map(int,raw_input().split())\n\t\tbox=raw_cakes.pop(0)\n\t\traw_cakes=sorted(raw_cakes)[::-1]\n\t\tcakes=[]\n\t\twhile len(raw_cakes)>1:\n\t\t\tif len(raw_cakes)>1: cakes.append(raw_cakes.pop( 0))\n\t\t\tif len(raw_cakes)>1: cakes.append(raw_cakes.pop(-1))\n\t\tcakes.insert(0,raw_cakes.pop())\n\t\tsize=cakes[0]+cakes[-1]\n\t\tfor i in range(len(cakes)-1):\n\t\t\tsize+=L(cakes[i],cakes[i+1])\n\t\tprint \"OK\" if size<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\tCakes=map(int,raw_input().split())\n\t\tsize_max=Cakes.pop(0)\n\t\tsize_min=121\n\t\tfor j in range(len(Cakes)):\n\t\t\tsize=0\n\t\t\tcakes=Cakes[:]\n\t\t\tcake1=size=cakes.pop(j)\n\t\t\twhile cakes:\n\t\t\t\tcos=[L(cake1,i)/(cake1+i) for i in cakes]\n\t\t\t\tcake2=cakes.pop(cos.index(min(cos)))\n\t\t\t\tsize+=L(cake1,cake2)\n\t\t\t\tcake1=cake2\n\t\t\tsize+=cake2\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=size_max else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "from itertools import combinations\ndef mix(seq,start,end):\n    if seq == []:\n        return [start,end]\n    q = [seq.pop(len(seq)/2)]\n    while seq != []:\n        cur = q[-1]\n        if (abs(seq[0]-cur) > abs(seq[-1]-cur)):\n            q.append(seq.pop(0))\n        else:\n            q.append(seq.pop())\n    return [start]+q+[end]\n\ndef get_height(seq):\n    #print \"seq\",seq\n    #print \"sum\",sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n    return sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n\nwhile True:\n    try:\n        inputs = map(int,raw_input().split())\n    except:\n        break\n    #print inputs\n    seq = sorted(inputs[1:])\n    adj = inputs[0]\n    hyp = sum(seq)*2\n    n = len(seq)\n    if n == 0:\n        print \"OK\"\n        continue\n    if n == 1:\n        print \"OK\" if hyp <= adj else \"NA\"\n        continue        \n\n    for a,b in combinations(xrange(n),2):\n        opp = get_height(mix(seq[:a]+seq[a+1:b]+seq[b+1:],seq[a],seq[b]))\n        #print \"hyp,adj,opp\",(hyp-(seq[a]+seq[b]))**2,(adj-(seq[a]+seq[b]))**2,opp**2\n        if (hyp-(seq[a]+seq[b]))**2 - (adj-(seq[a]+seq[b]))**2 <= opp**2:\n            print \"OK\"\n            break\n    else:\n        print \"NA\"        "
  },
  {
    "language": "Python",
    "code": "import math\nwhile True:\n    l = 0; r = []\n    try:\n        inp = map(int, raw_input().split())\n        l = inp[0]\n        r = inp[1:]\n    except EOFError:\n        break\n    n = len(r)\n    if 2*sum(r) <= l:\n        print \"OK\"\n    else:\n        s = []\n        if n>1:\n            r.sort()\n            for i in xrange(n/2):\n                s = [r[i]] + s[::-1] + [r[-i-1]]\n            if n&1:\n                if abs(s[0]-r[n/2]) < abs(s[-1]-r[n/2]):\n                    s.append(r[n/2])\n                else:\n                    s = [r[n/2]] + s\n        else:\n            s = r\n        ans = s[0] + s[-1]\n        for i in xrange(n-1):\n            ans += 2*math.sqrt(s[i]*s[i+1])\n        print \"OK\" if ans < 0.000000001+l else \"NA\""
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n \nwhile 1:\n\ttry:\n\t\tCakes=map(int,raw_input().split())\n\t\tsize_max=Cakes.pop(0)\n\t\tsize_min=999\n\t\tfor j in range(len(Cakes)):\n\t\t\tcakes=Cakes[:]\n\t\t\tsize=cake1=cakes.pop(j)\n\t\t\twhile cakes:\n\t\t\t\tcos=[L(cake1,i)/(cake1+i) for i in cakes]\n\t\t\t\tcake2=cakes.pop(cos.index(min(cos)))\n\t\t\t\tsize+=L(cake1,cake2)\n\t\t\t\tcake1=cake2\n\t\t\tsize+=cake2\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=size_max else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import sys\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0];\n  a=a[1:]\n  n=len(a)+1\n  b=a[:]\n  b[0::2]=a[:n/2]\n  b[1::2]=a[n/2:]\n  n-=1\n  s=b[0]+b[n-1]\n  for i in range(n-1): s+=2*(b[i]*b[i+1])**.5\n  print [\"OK\",\"NA\"][s>w]"
  },
  {
    "language": "Python",
    "code": "import sys\nfrom math import sqrt\n\n\ndef rec(state, v):\n    if state == (1 << N) - 1:\n        return cakes[v]\n    if dp[state][v] != -1:\n        return dp[state][v]\n\n    ret = INF\n    for i in range(N):\n        if state == 0:\n            ret = min(ret, rec(1 << i, i) + cakes[i])\n        elif not (state >> i & 1):\n            ret = min(ret, rec(state | 1 << i, i) + sqrt(pow(cakes[i] + cakes[v], 2) - pow(cakes[i] - cakes[v], 2)))\n    dp[state][v] = ret\n    return ret\n\n\ntestcases = [[int(x) for x in line.split()] for line in sys.stdin.readlines()]\n\nfor testcase in testcases:\n    box, *cakes = testcase\n    N = len(cakes)\n    INF = box + 1\n    dp = [[-1] * N for _ in range(1 << N)]\n    print('OK' if rec(0, 0) <= box else 'NA')"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\nimport sys\nimport os\nimport math\n\nfor s in sys.stdin:\n    lst = list(map(int, s.split()))\n    W = lst[0]\n    R = lst[1:]\n    R.sort()\n\n    # zigzag\n    Z = []\n\n    while R:\n        r = R.pop(0)\n        Z.append(r)\n\n        if R:\n            r = R.pop(-1)\n            Z.append(r)\n\n    #print('Z', Z)\n\n    l = 0\n    n = len(Z)\n    for i in range(0, n-1):\n        r0 = Z[i]\n        r1 = Z[i+1]\n\n        x_length = math.sqrt((r0+r1)**2 - (r0-r1) ** 2)\n        l += x_length\n\n    l += Z[0]\n    l += Z[-1]\n\n    #print(l)\n    if l <= W:\n        print('OK')\n    else:\n        print('NA')"
  },
  {
    "language": "Python",
    "code": "from itertools import combinations\ndef mix(seq,start,end):\n    seq.sort()\n    q = [seq.pop(len(seq)/2)]\n    while seq != []:\n        cur = q[-1]\n        if (abs(seq[0]-cur) > abs(seq[-1]-cur)):\n            q.append(seq.pop(0))\n        else:\n            q.append(seq.pop())\n    return [start]+q+[end]\n\ndef get_height(seq):\n    #print \"seq\",seq\n    #print \"sum\",sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n    return sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n\nwhile True:\n    try:\n        inputs = map(int,raw_input().split())\n    except:\n        break\n    seq = inputs[1:]\n    adj = inputs[0]\n    hyp = sum(seq)*2\n    n = len(seq)\n    if n <= 2:\n        print \"OK\" if hyp <= adj else \"NA\"\n        continue\n    for a,b in combinations(xrange(n),2):\n        opp = get_height(mix(seq[:a]+seq[a+1:b]+seq[b+1:],seq[a],seq[b]))\n        #print \"hyp,adj,opp\",(hyp-(seq[a]+seq[b]))**2,(adj-(seq[a]+seq[b]))**2,opp**2\n        if (hyp-(seq[a]+seq[b]))**2 - (adj-(seq[a]+seq[b]))**2 <= opp**2:\n            print \"OK\"\n            break\n    else:\n        print \"NA\""
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0120\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef calc_width(cakes):\n    # ??±????????????????????????(?????????)????????????????????????????????????????¨??????????\n    if len(cakes) == 1:\n        return cakes[0]*2\n\n    prev_r = cakes[0]\n    width = prev_r\n\n    for r in cakes[1:]:\n        h_diff = abs(prev_r - r)\n        if h_diff == 0:\n            width += prev_r\n            width += r\n        else:\n            w = ((prev_r + r)**2 - h_diff**2)**0.5\n            width += w\n        prev_r = r\n    width += cakes[-1]\n\n    return width\n\n\ndef main(args):\n    for line in sys.stdin:\n        data = [int(x) for x in line.strip().split()]\n        box_size = data[0]\n        temp = data[1:]\n        temp.sort()\n\n        min_width = float('inf')\n        cake = []\n        if len(temp) < 3:\n            cakes = temp[:]\n        elif len(temp) == 3:\n            cakes = [temp[1], temp[2], temp[0]]\n        else:\n            cakes = [temp[1] ,temp[-1], temp[0]]\n            temp = temp[2:-1]\n            tail = True\n            small = False\n            while temp:\n                if tail:\n                    if small:\n                        cakes.append(temp[0])\n                        temp = temp[1:]\n                        tail = False\n                    else:\n                        cakes.append(temp[-1])\n                        temp = temp[:-1]\n                        tail = False\n                else:\n                    if small:\n                        cakes.insert(0, temp[0])\n                        temp = temp[1:]\n                        small = False\n                        tail = True\n                    else:\n                        cakes.insert(0, temp[-1])\n                        temp = temp[:-1]\n                        small = True\n                        tail = True\n\n        result = calc_width(cakes)\n        min_width = min(result, min_width)\n\n        temp = data[1:]\n        temp.sort()\n        cake = []\n        if len(temp) < 3:\n            cakes = temp[:]\n        elif len(temp) == 3:\n            cakes = [temp[1], temp[0], temp[2]]\n        else:\n            cakes = [temp[-2] ,temp[0], temp[-1]]\n            temp = temp[1:-2]\n            tail = True\n            small = True\n            while temp:\n                if tail:\n                    if small:\n                        cakes.append(temp[0])\n                        temp = temp[1:]\n                        tail = False\n                    else:\n                        cakes.append(temp[-1])\n                        temp = temp[:-1]\n                        tail = False\n                else:\n                    if small:\n                        cakes.insert(0, temp[0])\n                        temp = temp[1:]\n                        small = False\n                        tail = True\n                    else:\n                        cakes.insert(0, temp[-1])\n                        temp = temp[:-1]\n                        small = True\n                        tail = True\n        result = calc_width(cakes)\n        min_width = min(result, min_width)\n\n\n\n        if min_width <= box_size:\n            print('OK')\n        else:\n            print('NA')\n\n\nfrom itertools import permutations\ndef main2(args):\n    data = [3, 3, 3, 10, 10]\n\n    p = permutations(data, len(data))\n\n\n    best_fit = float('inf')\n    for cakes in p:\n        result = calc_width(cakes)\n        if result < best_fit:\n            best_fit = result\n            print(cakes)\n            print(result)\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    "
  },
  {
    "language": "Python",
    "code": "INF = 10 ** 20\ndef get_dist(r1, r2):\n  c = r1 + r2\n  b = abs(r1 - r2)\n  return (c ** 2 - b ** 2) ** (1 / 2)\n\ndef minimum_width(rest, r, dic):\n  if (rest, r) in dic:\n    return dic[(rest, r)]\n  if rest == ():\n    return r\n\n  ret = INF\n  lenr = len(rest)\n  for i, c in enumerate(rest):\n    ret = min(ret, minimum_width(tuple(rest[j] for j in range(lenr) if i != j), rest[i], dic) + get_dist(r, rest[i]))\n  dic[(rest, r)] = ret\n  return ret\n\n\nwhile True:\n  try:\n    lst = list(map(int, input().split()))\n    w = lst[0]\n    cakes = lst[1:]\n    cakes.sort()\n    lenc = len(cakes)\n    dic = {}\n    ans = INF\n    for i in range(lenc):\n      ans = min(ans, minimum_width(tuple(cakes[j] for j in range(lenc) if i != j), cakes[i], dic) + cakes[i])\n    if w >= ans:\n      print(\"OK\")\n    else:\n      print(\"NA\")\n  except EOFError:\n    break\n"
  },
  {
    "language": "Python",
    "code": "import sys\nfrom math import sqrt\n\n\ndef rec(state, v):\n    if state == (1 << N) - 1:\n        return cakes[v]\n    if dp[state][v] != -1:\n        return dp[state][v]\n\n    ret = INF\n    for u in range(N):\n        if state == 0:\n            ret = min(ret, rec(1 << u, u) + cakes[u])\n        elif not (state >> u & 1):\n            ret = min(ret, rec(state | 1 << u, u) + sqrt(pow(cakes[u] + cakes[v], 2) - pow(cakes[u] - cakes[v], 2)))\n    dp[state][v] = ret\n    return ret\n\n\ntestcases = [[int(x) for x in line.split()] for line in sys.stdin.readlines()]\n\nfor testcase in testcases:\n    box, *cakes = testcase\n    N = len(cakes)\n    INF = box + 1\n    dp = [[-1] * N for _ in range(1 << N)]\n    print('OK' if rec(0, 0) <= box else 'NA')"
  },
  {
    "language": "Python",
    "code": "import sys\nfrom math import sqrt\n\ntestcases = [[int(x) for x in line.split()] for line in sys.stdin.readlines()]\n\nfor testcase in testcases:\n    box, *cakes = testcase\n    N = len(cakes)\n    INF = box + 1\n    dp = [[INF] * N for _ in range(1 << N)]\n    dp[(1 << N) - 1][0] = 0\n    for state in reversed(range(1 << N)):\n        for v in range(N):\n            if not dp[state][v]:\n                continue\n            for u in range(N):\n                if not (state >> u & 1):\n                    dp[state][v] = min(dp[state][v], dp[state | 1 << u][u] + sqrt(pow(cakes[u] + cakes[v], 2) - pow(cakes[u] - cakes[v], 2)))\n    print('OK' if min(dp[0]) <= box else 'NA')"
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\nimport sys\nimport os\nimport math\n\ndef pythagoras(a, b):\n    return 2 * math.sqrt(a * b)\n\nfor s in sys.stdin:\n    lst = list(map(int, s.split()))\n    W = lst[0]\n    R = lst[1:]\n    R.sort()\n    n = len(R)\n\n    left = []\n    right = []\n\n    left.append(R.pop(0))\n    right.append(R.pop(0))\n\n    l = left[0] + right[0]\n    while R:\n        min_R = R[0]\n        max_R = R[-1]\n\n        left_R = left[-1]\n        right_R = right[-1]\n\n        if left_R <= right_R:\n            if right_R - min_R >= max_R - left_R:\n                right.append(R.pop(0))\n                l += pythagoras(right_R, min_R)\n            else:\n                left.append(R.pop(-1))\n                l += pythagoras(max_R, left_R)\n        else:\n            if left_R - min_R >= max_R - right_R:\n                left.append(R.pop(0))\n                l += pythagoras(left_R, min_R)\n            else:\n                right.append(R.pop(-1))\n                l += pythagoras(max_R, right_R)\n\n    l += pythagoras(left[-1], right[-1])\n\n    if l <= W:\n        print('OK')\n    else:\n        print('NA')"
  },
  {
    "language": "Python",
    "code": "import sys,itertools\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0]\n  n=len(a)-1\n  A=itertools.permutations(a[1:],n)\n  s0=1e9\n  for e in A:\n    s=e[0]+e[-1]\n    for i in range(n-1): s+=2*(e[i]*e[i+1])**.5\n    if s<s0: s0=s\n    if s0<=w: break\n  print [\"OK\",\"NA\"][s0>w]"
  },
  {
    "language": "Python",
    "code": "while 1:\n\ttry:\n\t\traw_cakes=map(int,raw_input().split())\n\t\tbox=raw_cakes.pop(0)\n\t\traw_cakes=sorted(raw_cakes)[::-1]\n\t\tcakes=[raw_cakes.pop(-1)]\n\t\twhile raw_cakes:\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop( 0))\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop(-1))\n\t\tsize=cakes[0]+cakes[-1]\n\t\tfor i in range(len(cakes)-1):\n\t\t\tr=cakes[i]+cakes[i+1]\n\t\t\tcos=(1-(abs(cakes[i]-cakes[i+1])*1.0/r)**2)**0.5\n\t\t\tsize+=r*cos\n\t\tprint \"OK\" if size<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import sys\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0]\n  a=sorted(a[1:])\n  n=len(a)\n  A=[a.pop(0)]\n  while a:\n    A=[a.pop()]+A\n    if a==[]: break\n    A+=[a.pop()]\n    if a==[]: break\n    A=[a.pop(0)]+A\n    if a==[]: break\n    A+=[a.pop(0)]\n  a=A[0]+A[-1]\n  for i in range(n-1): a+=2*(A[i]*A[i+1])**.5\n  print [\"OK\",\"NA\"][a>w]"
  },
  {
    "language": "Python",
    "code": "INF = 10 ** 20\ndef get_dist(r1, r2):\n  return ((r1 + r2) ** 2 - (r1 - r2) ** 2) ** (1 / 2)\n\ndef minimum_width(rest, r, dic):\n  if (rest, r) in dic:\n    return dic[(rest, r)]\n  if rest == ():\n    return r\n\n  ret = INF\n  lenr = len(rest)\n  for c in rest:\n    next_rest = list(rest)\n    next_rest.remove(c)\n    ret = min(ret, minimum_width(tuple(next_rest), c, dic) + get_dist(r, c))\n  dic[(rest, r)] = ret\n  return ret\n\n\nwhile True:\n  try:\n    lst = list(map(int, input().split()))\n    w = lst[0]\n    cakes = lst[1:]\n    cakes.sort()\n    lenc = len(cakes)\n    dic = {}\n    ans = INF\n    for i in range(lenc):\n      ans = min(ans, minimum_width(tuple(cakes[j] for j in range(lenc) if i != j), cakes[i], dic) + cakes[i])\n    if w >= ans:\n      print(\"OK\")\n    else:\n      print(\"NA\")\n  except EOFError:\n    break\n"
  },
  {
    "language": "Python",
    "code": "from itertools import combinations\ndef mix(seq,start,end):\n    seq.sort()\n    q = [seq.pop(len(seq)/2)]\n    while seq != []:\n        cur = q[-1]\n        if (abs(seq[0]-cur) > abs(seq[-1]-cur)):\n            q.append(seq.pop(0))\n        else:\n            q.append(seq.pop())\n    return [start]+q+[end]\n\ndef get_height(seq):\n    return sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n\nwhile True:\n    try:\n        inputs = map(int,raw_input().split())\n    except:\n        break\n    seq = inputs[1:]\n    adj = inputs[0]\n    hyp = sum(seq)*2\n    n = len(seq)\n    if n <= 2:\n        print \"OK\" if hyp < adj else \"NA\"\n        continue\n    for a,b in combinations(xrange(n),2):\n        opp = get_height(mix(seq[:a]+seq[a+1:b]+seq[b+1:],seq[a],seq[b]))\n        if (hyp-(seq[a]+seq[b]))**2 - (adj-(seq[a]+seq[b]))**2 <= opp**2:\n            print \"OK\"\n            break\n    else:\n        print \"NA\""
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n    return ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n \nwhile 1:\n    try:\n        Cakes=map(int,raw_input().split())\n        size_max=Cakes.pop(0)\n        size_min=999\n        for j in range(len(Cakes)):\n            cakes=Cakes[:]\n            cake1=size=cakes.pop(j)\n            while cakes:\n                cos=[L(cake1,i)/(cake1+i) for i in cakes]\n                cake2=cakes.pop(cos.index(min(cos)))\n            \tsize+=L(cake1,cake2)\n            \tcake1=cake2\n            size+=cake2\n            size_min=min(size,size_min)\n        print \"OK\" if size_min<=size_max else \"NA\"\n    except:\n        break"
  },
  {
    "language": "Python",
    "code": "from itertools import combinations\ndef mix(seq,start,end):\n    if seq == []:\n        return [start,end]\n    seq.sort()\n    q = [seq.pop(len(seq)/2)]\n    while seq != []:\n        cur = q[-1]\n        if (abs(seq[0]-cur) > abs(seq[-1]-cur)):\n            q.append(seq.pop(0))\n        else:\n            q.append(seq.pop())\n    return [start]+q+[end]\n\ndef get_height(seq):\n    #print \"seq\",seq\n    #print \"sum\",sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n    return sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n\nwhile True:\n    try:\n        inputs = map(int,raw_input().split())\n    except:\n        break\n    seq = inputs[1:]\n    adj = inputs[0]\n    hyp = sum(seq)*2\n    n = len(seq)\n    if n == 1:\n        print \"OK\" if hyp <= adj else \"NA\"\n        continue        \n    for a,b in combinations(xrange(n),2):\n        opp = get_height(mix(seq[:a]+seq[a+1:b]+seq[b+1:],seq[a],seq[b]))\n        #print \"hyp,adj,opp\",(hyp-(seq[a]+seq[b]))**2,(adj-(seq[a]+seq[b]))**2,opp**2\n        if (hyp-(seq[a]+seq[b]))**2 - (adj-(seq[a]+seq[b]))**2 <= opp**2:\n            print \"OK\"\n            break\n    else:\n        print \"NA\""
  },
  {
    "language": "Python",
    "code": "from collections import deque\n\ndef calcwidth(cks):\n    if len(cks) == 1: return cks[0]*2\n    width = cks[0] + cks[-1]\n    for ck1,ck2 in zip(cks[:-1],cks[1:]):\n        width += ((ck1+ck2)**2-(ck1-ck2)**2)**0.5\n    return width\n\nwhile True:\n    try: W, *rs = list(map(float,input().split()))\n    except: break\n    rs = deque(sorted(rs))\n    dp = [float('inf')]*len(rs)\n    cs = deque([rs.popleft()])\n\n    last_pick_small = -1\n    # if -1: last pick up is smallest, if 0: last pick up is biggest\n    while rs:\n        if last_pick_small: nxt = rs.pop()\n        else: nxt = rs.popleft()\n        if abs(nxt-cs[0]) > abs(nxt-cs[-1]): cs.appendleft(nxt)\n        else: cs.append(nxt)\n        last_pick_small = -1-last_pick_small\n    ret = calcwidth(list(cs))\n    if ret < W: print('OK')\n    else: print('NA')\n\n\n"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n \nwhile 1:\n\ttry:\n\t\tCakes=map(int,raw_input().split())\n\t\tsize_max=Cakes.pop(0)\n\t\tsize_min=999\n\t\tfor j in range(len(Cakes)):\n\t\t\tcakes=Cakes[:]\n\t\t\tsize=cake1=cakes.pop(j)\n\t\t\twhile cakes:\n\t\t\t\tcos,idx=min([(L(cake1,cakes[i])/(cake1+cakes[i]),i) for i in range(len(cakes))])\n\t\t\t\tcake2=cakes.pop(idx)\n\t\t\t\tsize+=L(cake1,cake2)\n\t\t\t\tcake1=cake2\n\t\t\tsize+=cake1\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=size_max else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import math\n\ndef f1():\n    total = []\n    for i in range(len(c_l)-1):\n        x2 = 0\n        if (i+1) % 2 == 0:\n            x2 = (c_l[i+1]+c_l[i])**2 - (c_l[i+1]-c_l[i])**2\n        else:\n            x2 = (c_l[i]+c_l[i+1])**2 - (c_l[i]-c_l[i+1])**2\n        x = math.sqrt(x2)\n        total.append(x)\n    else:\n        total.append(c_l[0])\n        total.append(c_l[-1])\n    return f3(total)\n        \ndef f2():\n    total = []\n    for i in range(len(c_l)-1):\n        x2 = 0\n        if (i+1) % 2 == 0:\n            x2 = (c_l[i]+c_l[i+1])**2 - (c_l[i]-c_l[i+1])**2\n        else:\n            x2 = (c_l[i+1]+c_l[i])**2 - (c_l[i+1]-c_l[i])**2\n        x = math.sqrt(x2)\n        total.append(x)\n    else:\n        total.append(c_l[0])\n        total.append(c_l[-1])\n    return f3(total)\n        \ndef f3(total):\n    if sum(total) <= l:\n        return True\n    else:\n        return False\n\nwhile True:\n    try:\n        line = map(int, raw_input().split())\n        l = line[0]\n        lis = sorted(line[1:])\n        c_lis = lis[:]\n        if len(lis) % 2 == 0:\n            c_l = []\n            while True:\n                c_l.append(lis[-1])\n                c_l.append(lis[0])\n                del lis[-1]\n                del lis[0]\n                if len(lis) == 0:\n                    break\n            if f1():\n                print 'OK'\n            else:\n                print 'NA'\n        else:\n            c_l = []\n            while True:\n                c_l.append(lis[-1])\n                c_l.append(lis[0])\n                del lis[-1]\n                del lis[0]\n                if len(lis) == 1:\n                    c_l.append(lis[0])\n                    break\n            if f1():\n                print 'OK'\n            else:\n                c_l = []\n                while True:\n                    c_l.append(c_lis[0])\n                    c_l.append(c_lis[-1])\n                    del c_lis[0]\n                    del c_lis[-1]\n                    if len(c_lis) == 1:\n                        c_l.append(c_lis[0])\n                        break\n                if f2():\n                    print 'OK'\n                else:\n                    print 'NA'\n    except EOFError:\n        break"
  },
  {
    "language": "Python",
    "code": "import sys\nfrom math import sqrt\n\n\ndef rec(state, v):\n    if state == (1 << N) - 1:\n        return cakes[v]\n    if dp[state][v] != -1:\n        return dp[state][v]\n\n    ret = INF\n    for i in range(N):\n        if not (state >> i & 1):\n            ret = min(ret, rec(state | 1 << i, i) + sqrt(pow(cakes[i] + cakes[v], 2) - pow(cakes[i] - cakes[v], 2)))\n    dp[state][v] = ret\n    return ret\n\n\ntestcases = [[int(x) for x in line.split()] for line in sys.stdin.readlines()]\n\nfor testcase in testcases:\n    box, *cakes = testcase\n    N = len(cakes)\n    INF = box + 1\n    ans = INF\n    for i in range(N):\n        dp = [[-1] * N for _ in range(1 << N)]\n        ans = min(ans, rec(1 << i, i) + cakes[i])\n    print('OK' if ans <= box else 'NA')"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\tRaw_cakes=map(int,raw_input().split())\n\t\tbox=Raw_cakes.pop(0)\n\t\tRaw_cakes=sorted(Raw_cakes)[::-1]\n\t\tsize_min=999\n\t\tfor j in range(len(Raw_cakes)):\n\t\t\tsize=0\n\t\t\traw_cakes=Raw_cakes[:]\n\t\t\tcakes=[raw_cakes.pop(j)]\n\t\t\twhile raw_cakes:\n\t\t\t\tcos=[L(cakes[-1],i)/(cakes[-1]+i) for i in raw_cakes]\n\t\t\t\tcakes.append(raw_cakes.pop(cos.index(min(cos))))\n\t\t\tsize=cakes[0]+cakes[-1]\n\t\t\tfor i in range(len(cakes)-1):\n\t\t\t\tsize+=L(cakes[i],cakes[i+1])\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n \nwhile 1:\n\ttry:\n\t\tCakes=map(int,raw_input().split())\n\t\tsize_max=Cakes.pop(0)\n\t\tsize_min=999\n\t\tfor j in range(len(Cakes)):\n\t\t\tcakes=Cakes[:]\n\t\t\tbox=[cakes.pop(j)]\n\t\t\twhile cakes:\n\t\t\t    cos=[L(box[-1],i)/(box[-1]+i) for i in cakes]\n\t\t\t    box.append(cakes.pop(cos.index(min(cos))))\n\t\t\tsize=box[0]+box[-1]\n\t\t\tfor i in range(len(box)-1):\n\t\t\t\tsize+=L(box[i],box[i+1])\n\t\t\tsize_min=min(size,size_min)\n\t\tprint \"OK\" if size_min<=size_max else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import math\nwhile 1:\n    try:\n        A=map(int, raw_input().split())\n        W=A[0]\n        B=[sorted(A[1:]), sorted(A[1:],reverse=1)]\n        a=[[],[]]\n        dr=1\n        N=len(A[1:])\n        k=0\n        for j in range(N):\n            i=j/2\n            a[0].append(B[k][i])\n            a[1].append(B[not k][i])\n            k= not k\n        ans=99999999999999999999\n        for aa in a:\n            b=aa[0]+aa[-1]\n            for i in range(1,N):\n                b += 2*math.sqrt(aa[i]*aa[i-1])\n            ans=min(ans,b)\n        if ans<=W:\n            print 'OK'\n        else:\n            print 'NA'\n    except:\n        break"
  },
  {
    "language": "Python",
    "code": "import sys\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0];\n  a=sorted(a[1:])\n  n=len(a)\n  b=a[:]\n  c=a[:]\n  b[0::2]=a[n/2:][::-1]\n  b[1::2]=a[:n/2]\n  s1=b[0]+b[n-1]\n\n  n+=1\n  c[1::2]=a[n/2:][::-1]\n  c[0::2]=a[:n/2]\n  n-=1\n  s2=c[0]+c[n-1]\n  for i in range(n-1):\n    s1+=2*(b[i]*b[i+1])**.5\n    s2+=2*(c[i]*c[i+1])**.5\n  s=min(s1,s2)\n  print [\"OK\",\"NA\"][s>w]"
  },
  {
    "language": "Python",
    "code": "import sys\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0]\n  a=sorted(a[1:])\n  A=[]\n  while a:\n    A+=[a.pop(0)]\n    if a==[]: break\n    A=[a.pop()]+A\n    if a==[]: break\n    A+=[a.pop()]\n    if a==[]: break\n    A=[a.pop(0)]+A\n  a=A[0]+A[-1]\n  for i in range(len(A)-1): a+=2*(A[i]*A[i+1])**.5\n  print [\"OK\",\"NA\"][a>w]"
  },
  {
    "language": "Python",
    "code": "#######################################################################################\nimport sys\nfrom math import sqrt\n \n \ndef rec(state, v):\n    if state == (1 << N) - 1:\n        return cakes[v]\n    if dp[state][v] != -1:\n        return dp[state][v]\n \n    ret = INF\n    for u in range(N):\n        if state == 0:\n            ret = min(ret, rec(1 << u, u) + cakes[u])\n        elif not (state >> u & 1):\n            ret = min(ret, rec(state | 1 << u, u) + sqrt(pow(cakes[u] + cakes[v], 2) - pow(cakes[u] - cakes[v], 2)))\n    dp[state][v] = ret\n    return ret\n \n \ntestcases = [[int(x) for x in line.split()] for line in sys.stdin.readlines()]\n \nfor testcase in testcases:\n    box, *cakes = testcase\n    N = len(cakes)\n    INF = box + 1\n    dp = [[-1] * N for _ in range(1 << N)]\n    print('OK' if rec(0, 0) <= box else 'NA')\n"
  },
  {
    "language": "Python",
    "code": "INF = 10 ** 20\n\ndef get_dist(r1, r2):\n  return ((r1 + r2) ** 2 - (r1 - r2) ** 2) ** (1 / 2)\n\ndef minimum_width(rest, r, dic):\n  if (rest, r) in dic:\n    return dic[(rest, r)]\n  if rest == ():\n    return r\n\n  ret = INF\n  lenr = len(rest)\n  for c in rest:\n    next_rest = list(rest)\n    next_rest.remove(c)\n    ret = min(ret, minimum_width(tuple(next_rest), c, dic) + get_dist(r, c))\n  dic[(rest, r)] = ret\n  return ret\n\n\nwhile True:\n  try:\n    lst = list(map(int, input().split()))\n    w = lst[0]\n    cakes = lst[1:]\n    cakes.sort()\n    lenc = len(cakes)\n    dic = {}\n    ans = INF\n    for c in cakes:\n      tmp = cakes[:]\n      tmp.remove(c)\n      ans = min(ans, minimum_width(tuple(tmp), c, dic) + c)\n    if w >= ans:\n      print(\"OK\")\n    else:\n      print(\"NA\")\n  except EOFError:\n    break\n"
  },
  {
    "language": "Python",
    "code": "def L(cake1,cake2):\n\treturn ((cake1+cake2)**2-abs(cake1-cake2)**2)**0.5\n\nwhile 1:\n\ttry:\n\t\traw_cakes=map(int,raw_input().split())\n\t\tbox=raw_cakes.pop(0)\n\t\traw_cakes=sorted(raw_cakes)[::-1]\n\t\tcakes=[]\n\t\twhile raw_cakes:\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop(-1))\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop( 0))\n\t\tcakes=cakes[:len(cakes)/2]+cakes[len(cakes)/2:][::-1]\n\t\tsize=cakes[0]+cakes[-1]\n\t\tfor i in range(len(cakes)-1):\n\t\t\tsize+=L(cakes[i],cakes[i+1])\n\t\tprint \"OK\" if size<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "from itertools import combinations\ndef shuffle(seq,start,end):\n    if seq == [] or len(seq) == 1:\n        return seq\n    a = sorted(range(3,11),key=lambda a:abs(6-a),reverse=True)\n    #print \"init\", seq\n    ret = []\n    n = len(seq)\n\n    while seq != []:\n        for i in a:\n            if i in seq:\n                ret.append(seq.pop(seq.index(i)))\n    \n    #print \"mid\",ret\n    cursor = n-1;\n    while cursor != 0:\n        #print ret\n        if ret[cursor-1] == ret[cursor]:\n            tmp = ret[cursor]\n            for j in xrange(cursor-1,-1,-1):\n                if tmp != ret[j-1]:\n                    tmp = ret.pop(cursor)\n                    ret.insert(j-1,tmp)\n                    cursor += 1\n                    break        \n        cursor -= 1\n    return [start] + ret + [end]\n\n\ndef get_height(seq):\n    #print \"seq\",seq\n    #print \"sum\",sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n    return sum(abs(a-b) for a,b in zip(seq,seq[1:]))\n\n\nwhile True:\n    try:\n        inputs = map(int,raw_input().split())\n    except:\n        break\n    #print \"inputs:\",inputs\n    seq = sorted(inputs[1:])\n    adj = inputs[0]\n    hyp = sum(seq)*2\n    n = len(seq)\n    if n == 0:\n        print \"OK\"\n        continue\n    if n == 1:\n        print \"OK\" if hyp <= adj else \"NA\"\n        continue        \n\n    for a,b in combinations(xrange(n),2):\n        opp = get_height(shuffle(seq[:a]+seq[a+1:b]+seq[b+1:],seq[a],seq[b]))\n        #print \"hyp,adj,opp\",(hyp-(seq[a]+seq[b]))**2,(adj-(seq[a]+seq[b]))**2,opp**2\n        if (hyp-(seq[a]+seq[b]))**2 - (adj-(seq[a]+seq[b]))**2 <= opp**2:\n            print \"OK\"\n            break\n    else:\n        print \"NA\"        "
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\"\"\"\nhttp://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=0120\n\n\"\"\"\nimport sys\nfrom sys import stdin\ninput = stdin.readline\n\n\ndef calc_width(cakes):\n    # ??±????????????????????????(?????????)????????????????????????????????????????¨??????????\n    if len(cakes) == 1:\n        return cakes[0]*2\n\n    prev_r = cakes[0]\n    width = prev_r              #  ??±?????????(???????????±???????????????)\n    for r in cakes[1:]:         #  ???????????±?????????????????????????°´????????¢\n        h_diff = abs(prev_r - r)\n        w = ((prev_r + r)**2 - h_diff**2)**0.5\n        width += w\n        prev_r = r\n    width += cakes[-1]          #  ??±?????????(???????????±???????????????)\n\n    return width\n\n\ndef main(args):\n    for line in sys.stdin:\n        data = [int(x) for x in line.strip().split()]\n        box_size = data[0]\n        temp = data[1:]\n        temp.sort()\n\n        # ??±??????????????????????????????????????????????????????????????????????????????\n        # ????°??????±??????????????????????????§????????´??¨?°?????????´??????????????????????????¢??????????????£????????±????????¨???????????§????????????????????????\n        cakes = [temp[0]]\n        temp = temp[1:]\n        pick_large = True\n        pick = 0\n        while temp:\n            if pick_large:\n                pick = temp[-1]\n                temp = temp[:-1]\n                pick_large = False\n            else:\n                pick = temp[0]\n                temp = temp[1:]\n                pick_large = True\n\n            diff_front = abs(pick - cakes[0])\n            diff_rear = abs(pick - cakes[-1])\n            if diff_front > diff_rear:\n                cakes.insert(0, pick)\n            else:\n                cakes.append(pick)\n\n        # ??±????????¨???????¨????????¨????????????±?????\\???????¢??????????\n        result = calc_width(cakes)\n        if result <= box_size:\n            print('OK')\n        else:\n            print('NA')\n\n\nif __name__ == '__main__':\n    main(sys.argv[1:])\n    "
  },
  {
    "language": "Python",
    "code": "# -*- coding: utf-8 -*-\n\nimport sys\nimport os\nimport math\n\nfor s in sys.stdin:\n    lst = list(map(int, s.split()))\n    W = lst[0]\n    R = lst[1:]\n    R.sort()\n    n = len(R)\n\n    # zigzag\n    Z = [None] * n\n    i = 0\n    j = n - 1\n\n    while R:\n        # smalest append\n        if R:\n            r = R.pop(0)\n            Z[i] = r\n            i += 1\n        if R:\n            r = R.pop(0)\n            Z[j] = r\n            j -= 1\n\n        # biggest append\n        if R:\n            r = R.pop(-1)\n            Z[i] = r\n            i += 1\n        if R:\n            r = R.pop(-1)\n            Z[j] = r\n            j -= 1\n\n    #print('Z', Z)\n\n    l = 0\n    for i in range(0, n-1):\n        r0 = Z[i]\n        r1 = Z[i+1]\n\n        x_length = math.sqrt((r0+r1)**2 - (r0-r1) ** 2)\n        l += x_length\n\n    l += Z[0]\n    l += Z[-1]\n\n    #print(l)\n    if l <= W:\n        print('OK')\n    else:\n        print('NA')"
  },
  {
    "language": "Python",
    "code": "import sys\nfrom math import sqrt\n\ntestcases = [[int(x) for x in line.split()] for line in sys.stdin.readlines()]\n\nfor testcase in testcases:\n    box, *cakes = testcase\n    N = len(cakes)\n    INF = box + 1\n    dp = [[INF] * N for _ in range(1 << N)]\n    dp[(1 << N) - 1][0] = 0\n    for state in reversed(range(1 << N)):\n        for v in range(N):\n            for u in range(N):\n                if not (state >> u & 1):\n                    dp[state][v] = min(dp[state][v], dp[state | 1 << u][u] + sqrt(pow(cakes[u] + cakes[v], 2) - pow(cakes[u] - cakes[v], 2)))\n    print(*dp[0])\n    print('OK' if min(dp[0]) <= box else 'NA')"
  },
  {
    "language": "Python",
    "code": "while 1:\n\ttry:\n\t\traw_cakes=sorted(map(int,raw_input().split()))[::-1]\n\t\tbox=raw_cakes.pop(0)\n\t\tcakes=[raw_cakes.pop(-1)]\n\t\twhile raw_cakes:\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop( 0))\n\t\t\tif raw_cakes: cakes.append(raw_cakes.pop(-1))\n\t\t\t\n\t\tsize=cakes[0]+cakes[-1]\n\t\tfor i in range(len(cakes)-1):\n\t\t\tr=cakes[i]+cakes[i+1]\n\t\t\tcos=(1-(abs(cakes[i]-cakes[i+1])*1.0/r)**2)**0.5\n\t\t\tsize+=r*cos\n\t\tprint \"OK\" if size<=box else \"NA\"\n\texcept:\n\t\tbreak"
  },
  {
    "language": "Python",
    "code": "import sys\nfor s in sys.stdin:\n  a=map(int,s.split(\" \"))\n  w=a[0]\n  a=sorted(a[1:])\n  A=[]\n  try:\n    while a:\n      A+=[a.pop(0)]\n      A=[a.pop()]+A\n      A+=[a.pop()]\n      A=[a.pop(0)]+A\n  except: pass\n  a=A[0]+A[-1]\n  for i in range(len(A)-1): a+=2*(A[i]*A[i+1])**.5\n  print [\"OK\",\"NA\"][a>w]"
  },
  {
    "language": "Rust",
    "code": "fn main(){\n   let eps: f64 = 0.000000001;\n   \n   loop {\n     let mut buf = String::new();\n     if let Ok(c) = std::io::stdin().read_line(&mut buf) {\n       \n       if c < 2 { break; }\n       \n       let wr: Vec<usize> = buf.split_whitespace().map(|e| e.parse().unwrap()).collect();\n       let w = wr[0] as f64;\n       let l: usize = wr.len() - 1;\n       let rv: Vec<f64> = (1 .. l+1).map(|i| wr[i] as f64).collect();\n       \n       let mut dp: Vec<Vec<f64>> = vec![vec![2000.0; l]; 1 << l];\n\n       for i in 0 .. l {\n         dp[1 << i][i] = rv[i];\n       }\n\n       for s in 1 .. (1 << l) {\n         for i in 0 .. l {\n           if s & (1 << i) > 0 {\n             for j in 0 .. l {\n               if s & (1 << j) == 0 {\n                 let nw = dp[s][i] + dist(rv[i], rv[j]);\n                 dp[s | (1 << j)][j] = if nw < dp[s | (1 << j)][j] { nw } else {dp[s | (1 << j)][j]};\n               }\n             }\n           }\n         }\n       }\n       \n       for i in 0 .. l {\n           dp[(1<<l)-1][i] += rv[i];\n       }\n\n       let mut mnl: f64 = dp[(1<<l)-1][0];\n       \n       for i in 1 .. l {\n           if mnl > dp[(1<<l)-1][i] {\n              mnl = dp[(1<<l)-1][i];\n           }\n       }\n       \n       println!(\"{}\", if (w - mnl).abs() < eps || w > mnl {\"OK\"} else {\"NA\"});\n     }\n   }\n}\n\nfn dist(r1: f64, r2: f64) -> f64 {\n   2.0 * (r1 * r2).sqrt()\n}\n\n"
  }
]