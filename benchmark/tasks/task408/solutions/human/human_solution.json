[
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),17);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tif(S[j]=='0')continue;\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-25;k<=25;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\t\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tif(U[0]=='0')ret=solve(\"1\"+U);\n\t\telse ret=solve(U);\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = __int128_t;\n\nistream &operator>>(istream &is, Int &val){\n    string s;\n    is>>s;\n    val=0;\n    for(int i=0;i<(int)s.size();i++)\n      if(isdigit(s[i])) val=val*10+s[i]-'0';\n    if(s[0]=='-') val*=-1;\n    return is;\n}\n\n\n\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    if(s==\"0\") ans=11;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string((long long)(x-1));\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string((long long)++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)-j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<(long long)ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll INF=(1LL<<63)-1;\n\nll to_ll(const string &s){\n\tll a;\n\tsscanf(s.c_str(),\"%lld\",&a);\n\treturn a;\n}\n\nstring to_string(ll a){\n\tchar s[32];\n\tsprintf(s,\"%lld\",a);\n\treturn s;\n}\n\nll calc_index(ll a){\n\tll res=0,ten=1,len=1;\n\twhile(1){\n\t\tif(a<10*ten){\n\t\t\tres+=(a-ten)*len;\n\t\t\treturn res;\n\t\t}\n\t\tres+=9*len*ten;\n\t\tten*=10;\n\t\tlen++;\n\t}\n}\n\nint main(){\n\tfor(string s;cin>>s,s[0]!='#';){\n\t\tint n=s.length();\n\n\t\tif(count(s.begin(),s.end(),'0')==s.length()){ // s=\"000...0\" のときは例外\n\t\t\tcout<<calc_index(to_ll('1'+s))+2<<endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tll ans=INF;\n\t\tint ofset;\n\t\t// 注目する数が s に完全に含まれるケース ( 341235123612 など )\n\t\trep(i,n) for(int j=i+1;j<=n;j++) {\n\t\t\tstring t=s.substr(i,j-i);\n\t\t\tif(t[0]=='0' || t.length()>16) continue;\n\n\t\t\tll a=to_ll(t);\n\t\t\tint len=0;\n\t\t\tstring r=t;\n\t\t\tfor(int k=1;k<20;k++){\n\t\t\t\tif(a-k>0){\n\t\t\t\t\tr=to_string(a-k)+r;\n\t\t\t\t\tlen+=to_string(a-k).length();\n\t\t\t\t}\n\t\t\t\tr=r+to_string(a+k);\n\t\t\t}\n\t\t\tif(len-i>=0 && r.substr(len-i,s.length())==s && ans>a) ans=a, ofset=i;\n\t\t}\n\n\t\t// そうでないケース 3456712345\n\t\tfor(int i=1;i<n;i++){\n\t\t\tstring t=s.substr(0,i),r=s.substr(i);\n\t\t\tif(r[0]=='0' || t.length()>16 || r.length()>16) continue;\n\n\t\t\tt=to_string(to_ll(t)+1);\n\t\t\tif(t[0]=='1' && count(t.begin()+1,t.end(),'0')==t.length()-1) t=t.substr(1);\n\n\t\t\trep(d,min(t.length(),r.length())+1){\n\t\t\t\tif(r.substr(r.length()-d,d)==t.substr(0,d) && t.length()+r.length()-d<=16){\n\t\t\t\t\tll a=to_ll(r+t.substr(d));\n\t\t\t\t\tif(ans>a) ans=a, ofset=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout<<calc_index(ans)-ofset+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m <= N; ++m) {\n      for(int L = m; L < W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000000LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < (int)s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nchar str[110];\nint b[110];\nlong long pow10[17];\nchar to[110];\nint main(){\n\tpow10[0]=1;\n\tfor(int i=1;i<17;i++)pow10[i]=pow10[i-1]*10;\n\twhile(1){\n\t\tscanf(\"%s\",str);\n\t\tif(str[0]=='#')break;\n\t\tlong long ret=9999999999999999LL;\n\t\tint n=strlen(str);\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tif(str[j]=='0')continue;\n\t\t\t\tlong long fi=0;\n\t\t\t\tfor(int k=0;k<i-j;k++){\n\t\t\t\t\tfi*=10;\n\t\t\t\t\tfi+=str[j+k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long la=0;\n\t\t\t\tfor(int k=0;k<j;k++){\n\t\t\t\t\tla*=10;\n\t\t\t\t\tla+=str[k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long s=la+1;\n\t\t\t\tlong long t=fi;\n\t\t\t//\tprintf(\"%lld %lld\\n\",s,t);\n\t\t\t\twhile(s%10==0)s/=10;\n\t\t\t\twhile(t%10==0)t/=10;\n\t\t\t\tlong long f=fi*pow10[j]+la;\n\t\t\t\tif(s==1){\n\t\t\t\t\tif(t==1){\n\t\t\t\t\t\tf=pow10[i]-1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tf=(fi-1)*pow10[j]+la;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tlong long F=f;\n\t\t\t\tbool ok=true;\n\t\t\t\tint at=j;\n\t\t\t\twhile(at<n){\n\t\t\t\t\tsprintf(to,\"%lld\",f);\n\t\t\t\t\tint len=strlen(to);\n\t\t\t\t\tfor(int k=0;k<len;k++){\n\t\t\t\t\t\tif(at>=n)break;\n\t\t\t\t\t\tif(to[k]!=str[at])ok=false;\n\t\t\t\t\t\tat++;\n\t\t\t\t\t}\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tif(ok){\n\t\t\t\t\tlong long at=-j;\n\t\t\t\t\tfor(int k=1;k<i;k++){\n\t\t\t\t\t\tat+=(pow10[k]-pow10[k-1])*k;\n\t\t\t\t\t}\n\t\t\t\t\tat+=(F-pow10[i-1])*i;\n\t\t\t\t\tret=min(ret,at+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),17);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tif(S[j]=='0')continue;\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-30;k<=30;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tif(U[0]=='0'){\n\t\t\tfor(int k=0;k<17;k++){\n\t\t\t\tfor(int i=1;i<=9;i++){\n\t\t\t\t\tstring ADD=\"\";ADD+=(char)('0'+i);\n\t\t\t\t\tfor(int j=0;j<k;j++)ADD+=\"0\";\n\t\t\t\t\tret=min(ret,solve(ADD+U)+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse ret=solve(U);\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 16;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m < N; ++m) {\n      for(int L = m; L <= W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000000LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include <iostream>\n#define LL long long\n\nusing namespace std;\n\nLL f[22];\nchar str[111];\nint n;\n\nLL ans;\nvoid update_ans(LL key)\n{\n    ans = min(ans, key);\n    return ;\n}\n\nLL get(int l, int r)\n{\n    LL res = 0;\n    for (int i=l; i<=r; i++)\n    {\n        res = res * 10 + str[i]-'0';\n    }\n    return res;\n}\n\nint get_len(LL n)\n{\n    int res = 0;\n    while (n)\n    {\n        res ++;\n        n/=10;\n    }\n    return res;\n}\n\nLL solve(LL n)\n{\n    if (n == 0) return 1;\n\n    long long a = n, ans = 1, tmp = 0, flag = 9;\n    while (a) {a /= 10, tmp++;}\n    for (int i = 1; i < tmp; i++) {ans += i * flag, flag *= 10;}\n    ans += (n - (long long)pow(10, tmp - 1) + 1) * tmp;\n\n    return ans-1;\n}\n\n\n    int da[22];\n    int db[22];\n    int la = 0;\n    int lb = 0;\nbool judge(LL a, LL b)\n{\n    while (a)\n    {\n        da[++la] = a % 10;\n        a/=10;\n    }\n    while (b)\n    {\n        db[++lb] = b % 10;\n        b/=10;\n    }\n\n    while (la && lb)\n    {\n        if (da[la] == db[lb]){\n            la--;\n            lb--;\n        }else{\n            return false;\n        }\n    }\n    return true;\n}\n\nLL niuniu(LL a, LL b,int len , int j)\n{\n    return a * f[len - get_len(a)+1] + b;\n}\nvoid calc(int len)\n{\n  //  printf(\"************ %d\\n\",len);\n    for (int i=0; i<=min(len, n); i++)\n    {\n        LL a = get(0, i - 1);\n        LL b = -1, c;\n        LL d = -1;\n        int j = i;\n        //printf(\"        i = %d  a = %lld\\n\",i,a);\n        while (j < n)\n        {\n            c  = get(j, min(n, j + len)-1);\n            //printf(\"  j %d c %lld\\n\",j,c);\n            if (b == -1)\n            {\n               // puts(\"niuniu\");\n                if (j+len > n)\n                {\n                  //  puts(\"ai\");\n                    //niuniu\n                    if (i==0){\n                        d = c + 1;\n                        break;\n                    }\n                    if (len >= n){\n                       // puts(\"len\");\n\n                        if (c != 0) //ok\n                            d = niuniu(c, a, len,j) + 1;\n                        else\n                            d = -1;\n                       // printf(\"d %lld\\n\",d);\n                        break;//no\n                    }else{\n\n                        int k = n - len;\n                        if (a == f[j+1] - 1){\n                            if (c % f[k+1] == 0){\n                                d = (c/f[k+1]) * f[j+1] ;\n                                //ok\n                            }else{\n                                d = -1;\n                                break;\n                            }\n                        }else{\n                            if ((c % f[k + 1]) == (a / f[j-k+1])){\n                                d = (c / f[k+1] )*f[j+1] + a + 1;\n                                break;\n                            }else{\n                                d = -1;\n                                break;\n                            }\n                        }\n                    }\n                    //hanchunrui\n                }\n                else\n                {\n                   // puts(\"now\");\n                    if (i > 0){\n                        if ((c - 1) % f[i+1] == a){\n                            d = c ;\n                            //ok;\n                        }else{\n                            d = -1;\n                            break;\n                        }\n                    }else{\n                     //   puts(\"be\");\n                        //ok;\n                        d = c + 1;\n                       // printf(\"%d\\n\",d);\n                    }\n                }\n            }\n            else\n            {\n\n                if (j+len > n){\n                    if (c != 0 && judge(b+1, c)){\n                    //    printf(\"    %lld %lld      fuck\\n\",b+1,c);\n                        //ok\n                    }else{\n                        //no\n                        d = -1;\n                        break;\n                    }\n                }\n                else\n                {\n                    if (b + 1 == c){\n                        //ok\n                    }else{\n                        //no\n                        d = -1;\n                        break;\n                    }\n                }\n            }\n\n            j += len;\n            b = c;\n            if (get_len(b) != get_len(b+1))\n            {\n                len++;\n            }\n        }\n\n        if (d!=-1){\n        //    printf(\"    d %lld i %d\\n\",d,i);\n            if (i == 0){\n                update_ans(solve(d-2) + 1);\n            }else{\n                update_ans(solve(d-1) - i + 1);\n            }\n        }\n    }\n    return ;\n}\nint main()\n{\n//    printf(\"%d\\n\",judge(123,2));\n    f[0] = 0;\n    f[1] = 1;\n    for (int i=2; i<=18; i++)\n    {\n        f[i] = f[i-1]*10;\n    }\n  //  printf(\"gaga %lld\\n\",niuniu(14159265358979,3,15,1));\n\n    //printf(\"%lld\\n\",solve(141592653589793));\n //141592653589793 141592653589794\n //314159265358979\n //931415926535897\n //79\n    //cout<<get_len(2012778692735799)<<endl;\n//4601277869273575\n//2012778692735799\n    while (scanf(\"%s\",str)==1)\n    {\n        if (str[0]=='#')\n        {\n            break;\n        }\n        n = strlen(str);\n\n        ans = f[18];\n        for (int k=1; k<=min(n,16); k++)\n        {\n            calc(k);\n        }\n\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n//// < \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\a.txt\" > \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\b.answer\"\n\nlong long int powint(long long int a, long long int b) {\n\tassert(b >= 0);\n\tif (b == 0)return 1;\n\tif (b == 1)return a;\n\tlong long int ans = 1;\n\tlong long int aa = powint(a, b / 2);\n\tans *= aa*aa;\n\tif (b % 2)ans *= a;\n\treturn ans;\n}\nvector<long long int>memo(18);\nlong long int getans(const long long int num) {\n\tconst int keta = to_string(num).size();\n\tif (keta >= 2) {\n\t\treturn (num - powint(10, keta - 1) + 1)*keta + memo[keta - 1];\n\t}\n\telse {\n\t\treturn num + 1;\n\t}\n}\nlong long int getnum(const pair<long long int, int>&p) {\n\tif (p.first == 0)return p.second;\n\treturn getans(p.first - 1) - p.second;\n}\nbool check(const int f,const long long int num, const string st) {\n\tstring pre = st.substr(0, f);\n\tconst string  prenumst = to_string(num - 1);\n\tif (prenumst.substr(prenumst.size() - pre.size(), pre.size()) != pre)return false;\n\telse {\n\t\t int nf = f;\n\t\t long long int nnum = num;\n\t\twhile (nf<st.size()) {\n\t\t\tstring nnumst = to_string(nnum);\n\t\t\tstring next = st.substr(nf, nnumst.size());\n\t\t\t bool same = (next == nnumst.substr(0, next.size()));\n\t\t\t if (!same) {\n\t\t\t\t return false;\n\t\t\t }\n\t\t\tnf += nnumst.size();\n\t\t\tnnum++;\n\t\t}\n\t\treturn true;\n\t}\n}\nlong long int check2(const string from, const string to, const int keta) {\n\t\n\tint f_size = from.size();\n\tint t_size = to.size();\n\tint kaburi = f_size + t_size - keta;\n\tif (all_of(from.begin() + kaburi, from.end(), [](const char&c) {return c == '9'; })) {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tkaburif = kaburif.empty()?\"1\":to_string(stol(kaburif) + 1);\n\t\tif (kaburif.size() != kaburi) {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif.substr(1) != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to_string(stol(to.substr(0,t_size-kaburi))-1);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\telse {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\tif (kaburif != kaburit)ok = false;\n\t\tif (ok) {\n\t\t\tstring ans;\n\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\tans += from;\n\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t}\n\t\telse {\n\t\t\treturn 3e18;\n\t\t}\n\t}\n}\n\nlong long int  solve(string st) {\n\tif (st == \"0\")return 0;\n\tif (all_of(st.begin(), st.end(), [](const char&ch) {\n\t\treturn ch == '0';\n\t})) {\n\t\treturn getnum(make_pair(stoll('1' + st), -1));\n\t}\n\tlong long int ans (1e18);\n\tfor (int keta = 1; keta <= st.size(); ++keta) {\n\t\tfor (int f = 0; f < min(keta,int(st.size())); ++f) {\n\t\t\tstring ast = st.substr(f, keta);\n\t\t\tif (ast.size() < keta) {\n\t\t\t\tstring from = st.substr(0, f);\n\t\t\t\tstring to = st.substr(f,st.size()-f);\n\t\t\t\tif (to[0] != '0') {\n\t\t\t\t\tans = min(ans, check2(from, to, keta));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ast.size()==1||ast[0] != '0') {\n\n\t\t\t\t\tlong long int num = stoll(ast);\n\t\t\t\t\tif (check(f, num, st)) {\n\t\t\t\t\t\tans = min(ans, getnum(make_pair(num, f)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tmemo[1] = 10;\n\tmemo[2] = 190;\n\tfor (int i = 2; i <18; ++i) {\n\t\tmemo[i] = powint(10,i-1) * (i) * 9 + memo[i - 1];\n\t}\n\t/*for (int i = 1; i <1001; ++i) {\n\t\tcout << i<<\":\"<<getans(i) << endl;\n\t}*/\n\twhile (1) {\n\n\t\tstring st; cin >> st;\n\t\tif (st != \"#\") {\n\n\t\t\tlong long int ans = solve(st);\n\t\t\tcout << ans << endl;\n\t\t}\n\t\telse {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = __int128_t;\n\nistream &operator>>(istream &is, Int &val){\n    string s;\n    is>>s;\n    val=0;\n    for(int i=0;i<(int)s.size();i++)\n      if(isdigit(s[i])) val=val*10+s[i]-'0';\n    if(s[0]=='-') val*=-1;\n    return is;\n}\n\n\n\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    if(s==\"0\") ans=11;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string((long long)(x-1));\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string((long long)++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)+j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<(long long)ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string(x-1);\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string(++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)+j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 10000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return INF;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n  \n  while((int)first.size()<si){\n    if(num-cc<0)return INF;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while((int)second.size()<len-ti){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n  //  cout<<s<<endl;\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    if(s[i]=='0')continue;\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n  //  cout<<first<<' '<<second<<endl;\n  //  cout<<fnum<<' '<<snum<<endl;\n  \n  string nsecond=compute(second, ll2s(snum) );\n  if(nsecond.size()>16)return INF;\n\n\n  if( isZero(first) ){\n    string tmp=first;\n    tmp[ (int)tmp.size()-1 ]='1';\n    nsecond=compute(second,tmp);\n  }else if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n\n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n\n  //  assert(0);\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nint main(){\n  while(1){\n    cin>>s;\n    if(s==\"#\")break;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cctype>\nusing namespace std;\ntypedef long long int LL;\nconst int maxn = 105;\nconst LL INF = 1LL << 62;\nLL L[maxn];\n\nint main()\n{\n    char s[maxn], tmps[maxn];\n\n    LL _j = 1, _J[maxn];\n\n    _J[1] = 0; _J[2] = 10;\n    for(int i = 3; i < 20; i++) _J[i] = _J[i-1] * 10;\n\n    L[1] = 0;\n    for(int i = 2; i < 20; i++, _j *= 10) {\n        L[i] = (i-1) * (_J[i] - _J[i-1]) + L[i-1];\n    }\n    //for(int i = 1; i <10; i++) cout << L[i] <<endl;\n\n\n    while(1)\n    {\n        scanf(\"%s\", s);\n        if(!isdigit(s[0])) break;\n\n        int sti, stj, ansi, ansj, len = strlen(s);\n        LL ans = INF;\n        bool ok = 0;\n\n        if(len <= 16) {\n            for(int i = 1; i < len; i++) {\n                int c = 0;\n                for(int j = i; j < len; j++) tmps[c++] = s[j];\n                for(int j = 0; j < i; j++) tmps[c++] = s[j];\n                tmps[c] = 0;\n\n                LL tmp;\n                sscanf(tmps, \"%lld\", &tmp);\n                if(++tmp < ans) {\n                    ans = tmp; ansi = i; ansj = len;\n                }\n            }\n        }\n\n        for(sti = 0; sti < 16 && sti < len; sti++) {\n            for(stj = sti+1; stj <= 16 && sti+stj <= len; stj++) {\n                for(int i = sti, j = 0; j < stj; j++, i++) tmps[j] = s[i]; tmps[stj] = 0;\n                //cout << tmps << endl;\n                long long tmp, _tmp;\n                bool tmpok = 1;\n                sscanf(tmps, \"%lld\", &tmp);\n                sprintf(tmps, \"%lld\", tmp-1);\n                for(int i = sti-1, j = stj-1; i >= 0; i--, j--)\n                    if(tmps[j] != s[i]) { tmpok = 0; break; }\n                if(tmpok == 0) continue;\n                //cout << sti << ' ' << stj << endl;\n                _tmp = tmp;\n\n                sprintf(tmps, \"%lld\", ++tmp);\n                int tmplen = strlen(tmps);\n\n                for(int i = sti+stj, j = 0; i < len; i++, j++) {\n\n                    if(j == tmplen) {\n                        sprintf(tmps, \"%lld\", ++tmp);\n                        tmplen = strlen(tmps);\n                        j = 0;\n                    }\n                    //printf(\"-----%s %c %c\\n\", tmps, s[i], tmps[j]);\n                    if(s[i] != tmps[j]) { tmpok = 0; break; }\n                }\n\n                if(tmpok && _tmp < ans) {\n                    ans = _tmp; ansi = sti; ansj = stj;\n                    ok = 1;\n                }\n            }\n        }\n        //cout << ans << ' ' << ansi << ' ' << ansj <<endl;\n\n        LL tot = L[ansj]; _j = 1;\n        //cout << tot << ' ' << ans - _J[ansj] << endl;\n\n        tot += (ans - _J[ansj]) * ansj;\n\n        //cout << tot << endl;\n        tot -= ansi;\n        cout << tot << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define HUGE_NUM 99999999999999999\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\nll POW[17];\nstring line;\n\nstring get_string(ll num){\n\n\tstring ret;\n\tstack<ll> S;\n\n\twhile(true){\n\t\tS.push(num%10);\n\t\tnum /= 10;\n\t\tif(num == 0)break;\n\t}\n\n\twhile(!S.empty()){\n\t\tret.append(to_string(S.top()));\n\t\tS.pop();\n\t}\n\n\treturn ret;\n}\n\nll getNUM(string tmp_str){\n\n\tll ret = 0;\n\n\tfor(int i = 0; i < tmp_str.length(); i++){\n\t\tret = 10*ret+(tmp_str[i]-'0');\n\t}\n\n\treturn ret;\n}\n\nll get_pos(ll num){\n\n\tll ret = 0;\n\tll tmp_num = 0;\n\n\tfor(int digit = 1; digit <= 16; digit++){\n\n\t\tif(tmp_num+9*POW[digit-1] >= num){\n\t\t\tret += (num-POW[digit-1])*digit;\n\t\t\tbreak;\n\t\t}\n\t\ttmp_num += 9*POW[digit-1];\n\t\tret += digit*9*POW[digit-1];\n\t}\n\treturn ret;\n}\n\nbool is_match(string A,string B,int left,int right){\n\n\tfor(int i = left; i <= right; i++){\n\t\tif(A[i] != B[i]){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nbool is_all_9(string tmp_str){\n\n\tfor(int i = 0; i < tmp_str.length(); i++){\n\t\tif(tmp_str[i] != '9'){\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nvoid func(){\n\n\tint LENGTH = line.length();\n\tll ans = HUGE_NUM;\n\n\tif(getNUM(line) == 0){\n\n\t\tans = get_pos(getNUM(\"1\"+line))+2;\n\t\tprintf(\"%lld\\n\",ans);\n\t\treturn;\n\t}\n\n\tll tmp_num;\n\tint tmp_length;\n\n\tfor(int digit = 1; digit <= min(LENGTH,16); digit++){\n\t\tfor(int start_pos = 0; start_pos < digit && start_pos+digit <= LENGTH; start_pos++){\n\n\t\t\tif(line[start_pos] == '0')continue;\n\n\t\t\tstring tmp_str = line.substr(start_pos,digit);\n\t\t\ttmp_num = getNUM(tmp_str);\n\n\t\t\tif(start_pos > 0){\n\t\t\t\tstring left_str = get_string(tmp_num-1);\n\t\t\t\ttmp_str = left_str+tmp_str;\n\n\t\t\t\ttmp_str = tmp_str.substr(tmp_str.length()-(start_pos+digit));\n\t\t\t\tif(!is_match(line,tmp_str,0,start_pos+digit-1)){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttmp_length = tmp_str.length();\n\n\t\t\tfor(int diff = 1; tmp_str.length() < LENGTH; diff++){\n\t\t\t\ttmp_str += get_string(tmp_num+diff);\n\t\t\t}\n\t\t\ttmp_str = tmp_str.substr(0,LENGTH);\n\n\t\t\tif(is_match(line,tmp_str,0,LENGTH-1)){\n\t\t\t\tans = min(ans,get_pos(tmp_num)-start_pos+1);\n\t\t\t}\n\t\t}\n\t\tif(ans != HUGE_NUM)break;\n\t}\n\n\tif(LENGTH >= 31){\n\t\tprintf(\"%lld\\n\",ans);\n\t\treturn;\n\t}\n\n\tint min_digit,max_digit = 16;\n\n\tfor(int left_right = 0; left_right <= LENGTH-2; left_right++){\n\n\t\tstring left_str = line.substr(0,left_right+1);\n\t\tstring right_str = line.substr(left_right+1);\n\n\t\tif(right_str[0] == '0')continue;\n\n\t\tmin_digit = max(left_str.length(),right_str.length())+1;\n\n\t\tfor(int digit = min_digit; digit <= max_digit && left_str.length()+right_str.length() >= digit; digit++){\n\n\t\t\tstring tmp_diff = left_str.substr(left_str.length()-(digit-right_str.length()));\n\t\t\tstring line_tail = tmp_diff;\n\t\t\ttmp_num = getNUM(tmp_diff);\n\t\t\ttmp_diff = get_string(tmp_num+1);\n\t\t\twhile(tmp_diff.length() < (digit-right_str.length())){\n\t\t\t\ttmp_diff = \"0\"+tmp_diff;\n\t\t\t}\n\t\t\ttmp_diff = tmp_diff.substr(tmp_diff.length()-(digit-right_str.length()));\n\n\t\t\tstring tmp_right = right_str+tmp_diff;\n\t\t\tstring tmp_left = get_string(getNUM(tmp_right)-1);\n\t\t\ttmp_left = tmp_left.substr(0,tmp_left.length()-left_str.length())+left_str;\n\n\t\t\tif(getNUM(tmp_right)-getNUM(tmp_left) == 1){\n\t\t\t\tans = min(ans,get_pos(getNUM(tmp_right))-left_right);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tprintf(\"%lld\\n\",ans);\n}\n\nint main(){\n\n\tPOW[0] = 1;\n\n\tfor(int i = 1; i <= 16; i++){\n\t\tPOW[i] = POW[i-1]*10;\n\t}\n\n\twhile(true){\n\n\t\tgetline(cin,line);\n\n\t\tif(line[0] == '#')break;\n\n\t\tfunc();\n\t}\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\n \nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n \n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n   \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n \n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n    s[i]='0';\n    continue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n   \n  string s;\n   \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n    string x=inc(t),y=u;\n    //cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n    x=string(j-t.size(),'$')+x;\n    y=y+string(j-u.size(),'$');\n    bool f=0;\n    for(Int k=0;k<j;k++){\n      if(k+1!=j){\n        f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n      }\n      f|=(x[k]=='$'&&y[k]=='$');\n    }\n    if(f) continue;\n    if(y.back()!='$'){\n      if(x.back()-'0'!=y.back()-'0') continue;\n    }\n     \n    for(Int k=0;k<j;k++){\n      if(y[k]!='$') continue;\n      y[k]=isdigit(x[k])?x[k]:'0';\n    }\n    if(y==\"1\") continue;\n    Int tmp=calc(stoll(y)-1)-i;\n    //cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n    ans=min(ans,tmp);\n     \n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n    if(j+i>(Int)s.size()) continue;\n    string t=s.substr(j,i);\n    if(t.front()=='0') continue;\n    Int x=stoll(t);\n    //cout<<t<<\" \"<<x<<endl;\n    if(j){\n      if(x==1) continue;\n      string u=to_string((long long)(x-1));\n      //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n      if(s.substr(0,j)!=sub(u,j)) continue;\n    }\n    Int p=j+i;\n    bool f=1;\n    while(p<(Int)s.size()){\n      string u=to_string((long long)++x);\n      string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n      //cout<<u<<\":\"<<v<<endl;\n      u=u.substr(0,v.size());\n      f&=(u==v);\n      p+=u.size();\n    }\n    if(!f) continue;\n    Int tmp=calc(stoll(t)-1)-j;\n    //cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n    ans=min(ans,tmp);\n      }\n    }\n    if(ans==1e18){\n      ans=calc(stoll(\"1\"+s)-1)+1;\n    }\n    cout<<(long long)ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll INF=(1LL<<63)-1;\n\nll to_ll(const string &s){\n\tll a;\n\tsscanf(s.c_str(),\"%lld\",&a);\n\treturn a;\n}\n\nstring to_string(ll a){\n\tchar s[32];\n\tsprintf(s,\"%lld\",a);\n\treturn s;\n}\n\nll calc_index(ll a){\n\tll res=0,ten=1,len=1;\n\twhile(1){\n\t\tif(a<10*ten){\n\t\t\tres+=(a-ten)*len;\n\t\t\treturn res;\n\t\t}\n\t\tres+=9*len*ten;\n\t\tten*=10;\n\t\tlen++;\n\t}\n}\n\nint main(){\n\tfor(string s;cin>>s,s[0]!='#';){\n\t\tint n=s.length();\n\n\t\tif(count(s.begin(),s.end(),'0')==s.length()){ // s=\"000...0\" のときは例外\n\t\t\tcout<<calc_index(to_ll('1'+s))+2<<endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tll ans=INF;\n\t\tint ofset;\n\t\t// 注目する数が s に完全に含まれるケース ( 341235123612 など )\n\t\trep(i,n) for(int j=i+1;j<=n;j++) {\n\t\t\tstring t=s.substr(i,j-i);\n\t\t\tif(t[0]=='0' || t.length()>16) continue;\n\n\t\t\tll a=to_ll(t);\n\t\t\tint len=0;\n\t\t\tstring r=t;\n\t\t\tfor(int k=1;k<30;k++){\n\t\t\t\tif(a-k>0){\n\t\t\t\t\tr=to_string(a-k)+r;\n\t\t\t\t\tlen+=to_string(a-k).length();\n\t\t\t\t}\n\t\t\t\tr=r+to_string(a+k);\n\t\t\t}\n\t\t\tif(len-i>=0 && r.substr(len-i,s.length())==s && ans>a) ans=a, ofset=i;\n\t\t}\n\n\t\t// そうでないケース 3456712345\n\t\tfor(int i=1;i<n;i++){\n\t\t\tstring t=s.substr(0,i),r=s.substr(i);\n\t\t\tif(t[0]=='0' || t.length()>16 || r.length()>16) continue;\n\n\t\t\tt=to_string(to_ll(t)+1);\n\t\t\tif(count(t.begin(),t.end(),'9')==t.length()) t=t.substr(1);\n\t\t\trep(d,min(t.length(),r.length())+1){\n\t\t\t\tif(r.substr(r.length()-d,d)==t.substr(0,d) && t.length()+r.length()-d<=16){\n\t\t\t\t\tll a=to_ll(r+t.substr(d));\n\t\t\t\t\tif(ans>a) ans=a, ofset=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout<<calc_index(ans)-ofset+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n\nusing namespace std;\n\nstring get(long long start){\n\tstring res=\"\";\n\tfor(int i=0;;i++){\n\t\tstringstream ss;\n\t\tss<<start+i;\n\t\tstring add;\n\t\tss>>add;\n\t\tres+=add;\n\t\tif(res.size()>140) break;\n\t}\n\treturn res;\n}\n\nlong long tens[18];\n\nlong long count(long long x){\n\tif(x<10) return x;\n\tint dig=lower_bound(tens,tens+18,x)-tens;\n\tdig--;\n\tlong long res=0;\n\tfor(int i=0;i<dig;i++){\n\t\tres+=tens[i]*9*(i+1);\n\t}\n\tlong long rem=x-tens[dig];\n\tres+=rem*(dig+1);\n//\tcout<<x<<\" \"<<res<<\"\\n\";\n\treturn res+1;\n}\n\nlong long solve2(int n){\n\tlong long res=0;\n\tfor(int i=0;i<n;i++) res+=tens[i]*9*(i+1);\n\tres+=2;\n\treturn res;\n}\n\nbool all_zero(string str){\n\tfor(int i=0;i<str.size();i++) if(str[i]!='0') return false;\n\treturn true;\n}\n\nlong long solve(string str){\n\tif(str==\"1\") return 1;\n\tint N=str.size();\n\tint n=min(N,33);\n\tlong long res=-1;\n\tfor(int i=0;i<n;i++) for(int j=i+1;j<=min(n,i+16);j++){\n\t\tlong long cur=0;\n\t\tfor(int k=i;k<j;k++){\n\t\t\tcur*=10;\n\t\t\tcur+=(str[k]-'0');\n\t\t}\n\t//\tif(i==0&&j==n) cout<<\"cur=\"<<cur<<\"\\n\";\n\t\tif(cur-1<=0) continue;\n\t\tstring cand=get(cur-1);\n\t\tint id=-1;\n\t//\tcout<<cand<<\"\\n\";\n\t\tfor(int m=0;m+str.size()<cand.size();m++){\n\t\t\tbool ok=true;\n\t\t\tfor(int p=0;p<str.size();p++){\n\t\t\t\tif(cand[m+p]!=str[p]){\n\t\t\t\t\tok=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok){\n\t\t\t\tid=m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(id==-1) continue;\n\t\tlong long tmp=count(cur-1);\n\t\ttmp+=id;\n\t\tif(res==-1||res>tmp) res=tmp;\n\t}\n\tif(str.size()<=34){\n\t//\tcout<<\"str=\"<<str<<\"\\n\";\n\t\tstring firstHalf,secondHalf;\n\t\tfor(int i=1;i+1<str.size();i++){\n\t\t\tfirstHalf=\"\";secondHalf=\"\";\n\t\t\tfor(int j=0;j<i;j++) firstHalf+=str[j];\n\t\t\tfor(int j=i;j<str.size();j++) secondHalf+=str[j];\n\t\t\tstring nxt=firstHalf;\n\t\t//\tcout<<\"i=\"<<i<<\"fi=\"<<firstHalf<<\"se=\"<<secondHalf<<\"\\n\";\n\t\t\tbool flg=false;\n\t\t\tfor(int j=firstHalf.size()-1;j>=0;j--){\n\t\t\t\tif(firstHalf[j]!='9'){\n\t\t\t\t\tflg=true;\n\t\t\t\t\tnxt[j]++;\n\t\t\t\t\tfor(int k=j+1;k<firstHalf.size();k++) nxt[k]='0';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flg==false){\n\t\t\t\tnxt=\"\";\n\t\t\t\tfor(int k=0;k<firstHalf.size();k++) nxt+='0';\n\t\t\t}\n\t//\t\tcout<<\"cand:\"<<firstHalf<<\" \"<<nxt<<\" \"<<secondHalf<<\"\\n\";\n\t\t\tint m=min(nxt.size(),secondHalf.size());\n\t\t\tfor(int j=m;j>=0;j--){\n\t\t\t\tstring str1=nxt.substr(0,j);\n\t\t\t\tstring str2=secondHalf.substr(secondHalf.size()-j,j);\n\t\t\t\tif(str1!=str2) continue;\n\t\t\t\tstring cur=secondHalf+nxt.substr(j,1000);\n\t\t\t\tif(cur.size()>=17) break;\n\t\t\t\tlong long t;\n\t\t\t\tstringstream ss;\n\t\t\t\tss<<cur;\n\t\t\t\tss>>t;\n\t\t\t\tstring a=get(t-1);\n\t\t\t\tint id=-1;\n\t\t//\t\tcout<<t<<\"\\n\";\n\t\t\t\tfor(int k=0;k+str.size()<a.size();k++){\n\t\t\t\t\tbool ok=true;\n\t\t\t\t\tfor(int m=0;m<str.size();m++){\n\t\t\t\t\t\tif(str[m]!=a[m+k]){\n\t\t\t\t\t\t\tok=false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(ok){\n\t\t\t\t\t\tid=k;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(id!=-1){\n\t\t//\t\t\tcout<<t<<\" \"<<id<<\"\\n\";\n\t\t\t\t\tlong long a=count(t-1);\n\t\t\t\t\tif(res==-1||res>a+id) res=a+id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tif(all_zero(str)){\n\t\tlong long tmp=solve2(str.size());\n\t\tif(res==-1||res>tmp) res=tmp;\n\t}\n\treturn res;\n}\n\nint main(){\n\ttens[0]=1;\n\tfor(int i=1;i<18;i++) tens[i]=tens[i-1]*10;\n\tstring str;\n\twhile(true){\n\t\tcin>>str;\n\t\tif(str==\"#\") break;\n\t\tlong long ans=solve(str);\n\t\tcout<<ans<<\"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\n\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if(x.back()-'0'!=y.back()-'0') continue;\n\t}\n\t\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tif(y==\"1\") continue;\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string((long long)(x-1));\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string((long long)++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)-j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    if(ans==1e18){\n      ans=calc(stoll(\"1\"+s)-1)+1;\n    }\n    cout<<(long long)ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nchar str[110];\nint b[110];\nlong long pow10[17];\nchar to[110];\nchar rg[210]=\"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162\";\nint main(){\n\tpow10[0]=1;\n\tfor(int i=1;i<17;i++)pow10[i]=pow10[i-1]*10;\n\twhile(1){\n\t\tscanf(\"%s\",str);\n\t\tif(str[0]=='#')break;\n\t\tlong long ret=9999999999999999LL;\n\t\tint n=strlen(str);\n\t\tbool OK=true;\n\t\tfor(int i=0;i<n;i++)if(rg[i]!=str[i])OK=false;\n\t\tif(OK){\n\t\t\tprintf(\"1\\n\");continue;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tif(str[j]=='0')continue;\n\t\t\t\tlong long fi=0;\n\t\t\t\tfor(int k=0;k<i-j;k++){\n\t\t\t\t\tfi*=10;\n\t\t\t\t\tfi+=str[j+k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long la=0;\n\t\t\t\tfor(int k=0;k<j;k++){\n\t\t\t\t\tla*=10;\n\t\t\t\t\tla+=str[k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long s=la+1;\n\t\t\t\tlong long t=fi;\n\t\t\t//\tprintf(\"%lld %lld\\n\",s,t);\n\t\t\t\twhile(s%10==0)s/=10;\n\t\t\t\twhile(t%10==0)t/=10;\n\t\t\t\tlong long f=fi*pow10[j]+la;\n\t\t\t\tif(s==1){\n\t\t\t\t\tif(t==1){\n\t\t\t\t\t\tf=pow10[i]-1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tf=(fi-1)*pow10[j]+la;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tlong long F=f;\n\t\t\t\tbool ok=true;\n\t\t\t\tint at=j;\n\t\t\t\twhile(at<n){\n\t\t\t\t\tsprintf(to,\"%lld\",f);\n\t\t\t\t\tint len=strlen(to);\n\t\t\t\t\tfor(int k=0;k<len;k++){\n\t\t\t\t\t\tif(at>=n)break;\n\t\t\t\t\t\tif(to[k]!=str[at])ok=false;\n\t\t\t\t\t\tat++;\n\t\t\t\t\t}\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tif(ok){\n\t\t\t\t\tlong long at=-j;\n\t\t\t\t\tfor(int k=1;k<i;k++){\n\t\t\t\t\t\tat+=(pow10[k]-pow10[k-1])*k;\n\t\t\t\t\t}\n\t\t\t\t\tat+=(F-pow10[i-1])*i;\n\t\t\t\t\tret=min(ret,at+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m <= N; ++m) {\n      for(int L = m; L < W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000001LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < (int)s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll INF=(1LL<<63)-1;\n\nll to_ll(const string &s){\n\tll a;\n\tsscanf(s.c_str(),\"%lld\",&a);\n\treturn a;\n}\n\nstring to_string(ll a){\n\tchar s[32];\n\tsprintf(s,\"%lld\",a);\n\treturn s;\n}\n\nll calc_index(ll a){\n\tll res=0,ten=1,len=1;\n\twhile(1){\n\t\tif(a<10*ten){\n\t\t\tres+=(a-ten)*len;\n\t\t\treturn res;\n\t\t}\n\t\tres+=9*len*ten;\n\t\tten*=10;\n\t\tlen++;\n\t}\n}\n\nint main(){\n\tfor(string s;cin>>s,s[0]!='#';){\n\t\tint n=s.length();\n\n\t\tll ans=INF;\n\t\tint ofset;\n\t\t// 注目する数が s に完全に含まれるケース ( 341235123612 など )\n\t\trep(i,n) for(int j=i+1;j<=n;j++) {\n\t\t\tstring t=s.substr(i,j-i);\n\t\t\tif(t[0]=='0') continue;\n\n\t\t\tll a=to_ll(t);\n\t\t\tint len=0;\n\t\t\tstring r=t;\n\t\t\tfor(int k=1;k<30;k++){\n\t\t\t\tif(a-k>0){\n\t\t\t\t\tr=to_string(a-k)+r;\n\t\t\t\t\tlen+=to_string(a-k).length();\n\t\t\t\t}\n\t\t\t\tr=r+to_string(a+k);\n\t\t\t}\n\t\t\tif(len-i>=0 && r.substr(len-i,s.length())==s && ans>a) ans=a, ofset=i;\n\t\t}\n\n\t\t// そうでないケース 3456712345\n\t\tfor(int i=1;i<n;i++){\n\t\t\tstring t=s.substr(0,i),r=s.substr(i);\n\t\t\tif(t[0]=='0') continue;\n\n\t\t\tt=to_string(to_ll(t)+1);\n\t\t\tif(count(t.begin(),t.end(),'9')==t.length()) t=t.substr(1);\n\t\t\trep(d,min(t.length(),r.length())+1){\n\t\t\t\tif(r.substr(r.length()-d,d)==t.substr(0,d)){\n\t\t\t\t\tll a=to_ll(r+t.substr(d));\n\t\t\t\t\tif(ans>a) ans=a, ofset=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout<<calc_index(ans)-ofset+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include <iostream>\n#define LL long long\n#define debug 0\nusing namespace std;\n\nLL f[22];\nchar str[111];\nint n;\n\nLL ans;\nvoid update_ans(LL key)\n{\n    ans = min(ans, key);\n    return ;\n}\n\nLL get(int l, int r)\n{\n    LL res = 0;\n    for (int i=l; i<=r; i++)\n    {\n        res = res * 10 + str[i]-'0';\n    }\n    return res;\n}\n\nint get_len(LL n)\n{\n    int res = 0;\n    while (n)\n    {\n        res ++;\n        n/=10;\n    }\n    return res;\n}\n\nLL solve(LL n)\n{\n    if (n <= 0) return 0;\n\n    long long a = n, ans = 1, tmp = 0, flag = 9;\n    while (a)\n    {\n        a /= 10, tmp++;\n    }\n    for (int i = 1; i < tmp; i++)\n    {\n        ans += i * flag, flag *= 10;\n    }\n    ans += (n - (long long)f[(int)tmp] + 1) * tmp;\n\n    // printf(\"        solve %lld %lld\\n\",n,ans);\n    return ans-1;\n}\n\n\nint da[22];\nint db[22];\nint la = 0;\nint lb = 0;\nbool judge(LL a, LL b)\n{\n    la = 0;\n    lb = 0;\n    while (a)\n    {\n        da[++la] = a % 10;\n        a/=10;\n    }\n    while (b)\n    {\n        db[++lb] = b % 10;\n        b/=10;\n    }\n\n    while (la && lb)\n    {\n        if (da[la] == db[lb])\n        {\n            la--;\n            lb--;\n        }\n        else\n        {\n            return false;\n        }\n    }\n    return true;\n}\n\nLL niuniu(LL a, LL b,int len , int j)\n{\n    return a * f[len - get_len(a)+1] + b;\n}\nvoid calc(int len)\n{\n    //   printf(\"************ %d\\n\",len);\n    int tt = len;\n    for (int i=0; i<=min(len, n); i++)\n    {\n        len = tt;\n        LL a = get(0, i - 1);\n        LL b = -1, c;\n        LL d = -1;\n        int j = i;\n        if (debug)\n            printf(\"      len %d  i = %d  a = %lld\\n\",len,  i,a);\n        while (j < n)\n        {\n            if (str[j]=='0')\n            {\n                d = -1;\n                break;\n            }\n            c  = get(j, min(n, j + len)-1);\n            if (debug)   printf(\"  j %d c %lld\\n\",j,c);\n            if (b == -1)\n            {\n                if (debug) puts(\"niuniu\");\n                if (j+len > n)\n                {\n                    if (debug)puts(\"ai\");\n\n                    if (i==0)\n                    {\n                        d = c + 1;\n                        break;\n                    }\n\n                    if (len >= n)\n                    {\n                        if (debug)printf(\"len %d n %d\\n\",len, n);\n\n                        if (c != 0) //ok\n                        {\n                            if (a == f[j+1]-1)\n                            {\n                                d = c*f[len - get_len(c)+1];\n                            }\n                            else\n                            {\n                                d = niuniu(c, a, len,j) + 1;\n                            }\n                        }\n                        else\n                            d = -1;\n                        if (debug) printf(\"d %lld\\n\",d);\n                        break;//no\n                    }\n                    else\n                    {\n                        //len < n\n                        if (debug)puts(\"      li\");\n                        int k = n - len;\n                        if (a == f[j+1] - 1)\n                        {\n                            if (debug)   printf(\"         jkfjd %d\\n\",a);\n                            if (c!=0 && c % f[k+1] == 0)\n                            {\n                                d = (c/f[k+1]) * f[j+1] ;\n                                //ok\n                            }\n                            else\n                            {\n                                d = -1;\n                                break;\n                            }\n                        }\n                        else\n                        {\n                            if ((c % f[k + 1]) == ((a+1) / f[j-k+1]))\n                            {\n                                d = (c / f[k+1] )*f[j+1] + a + 1;\n                                break;\n                            }\n                            else\n                            {\n                                d = -1;\n                                break;\n                            }\n                        }\n                    }\n                    //hanchunrui\n                }\n                else if (j + len == n)\n                {\n                    if (i!=0)\n                    {\n                        if ((c-1) % f[i+1] == a)\n                        {\n                            d = c;\n                        }\n                        else\n                        {\n                            d = -1;\n                            break;\n                        }\n\n                    }\n                    else\n                    {\n                        d = c + 1;\n                    }\n                }\n                else\n                {\n                    if (debug)   puts(\"now\");\n                    if (i > 0)\n                    {\n                        if ((c - 1) % f[i+1] == a)\n                        {\n                            if (debug)  puts(\"ds\");\n                            d = c ;\n                            //break;\n                            //ok;\n                        }\n                        else\n                        {\n                            d = -1;\n                            break;\n                        }\n                    }\n                    else\n                    {\n                        if (debug)   puts(\"be\");\n                        //ok;\n                        d = c + 1;\n                        // printf(\"%d\\n\",d);\n                    }\n                }\n            }\n            else\n            {\n                if (j+len > n)\n                {\n                    if (c != 0 && judge(b+1, c))\n                    {\n                        if (debug)    printf(\"    %lld %lld      fuck\\n\",b+1,c);\n                        //ok\n                    }\n                    else\n                    {\n                        //no\n                        d = -1;\n                        break;\n                    }\n                }\n                else\n                {\n                    if (b + 1 == c)\n                    {\n                        //ok\n                    }\n                    else\n                    {\n                        //no\n                        d = -1;\n                        break;\n                    }\n                }\n            }\n\n            j += len;\n            b = c;\n            if (get_len(b) != get_len(b+1))\n            {\n                len++;\n            }\n        }\n\n        if (d!=-1)\n        {\n            if (debug)   printf(\"  YYYYYYYYYYY  d %lld i %d\\n\",d,i);\n            if (i == 0)\n            {\n                update_ans(solve(d-2) + 1);\n            }\n            else\n            {\n                update_ans(solve(d-1) - i + 1);\n            }\n        }\n    }\n    return ;\n}\nbool teshu()\n{\n    if (strcmp(str,\"01\")==0)\n    {\n        puts(\"11\");\n        return true;\n    }\n    int flag = 0;\n    for (int i=0; i<n; i++)\n    {\n        if (str[i]!='0')\n        {\n            flag = 1;\n            break;\n        }\n    }\n    if (flag)\n        return false;\n\n    printf(\"%lld\\n\",solve(f[n+1]-1) + 2);\n    return true;\n}\nint main()\n{\n//    printf(\"%d\\n\",judge(123,2));\n    f[0] = 0;\n    f[1] = 1;\n    for (int i=2; i<=19; i++)\n    {\n        f[i] = f[i-1]*10;\n    }\n    //  printf(\"gaga %lld\\n\",niuniu(14159265358979,3,15,1));\n\n//    printf(\"%lld\\n\",(long long)pow(10,18));\n    if (debug)printf(\"%lld\\n\",solve(f[16]));\n//141592653589793 141592653589794\n//314159265358979\n//931415926535897\n//79\n    //cout<<get_len(2012778692735799)<<endl;\n//4601277869273575\n//2012778692735799\n    while (scanf(\"%s\",str)==1)\n    {\n        if (str[0]=='#')\n        {\n            break;\n        }\n        n = strlen(str);\n        if (teshu())\n        {\n            continue;\n        }\n\n        ans = f[19];\n        for (int k=1; k<=min(n,17); k++)\n        {\n            calc(k);\n        }\n\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n  \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n  \n  //  cout<<s<<endl;\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    if(s[i]=='0')continue;\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n  //  cout<<first<<' '<<second<<endl;\n  //  cout<<fnum<<' '<<snum<<endl;\n  \n  string nsecond=compute(second, ll2s(snum) );\n\n\n  if( isZero(first) ){\n    string tmp=first;\n    tmp[ (int)tmp.size()-1 ]='1';\n    nsecond=compute(second,tmp);\n  }else if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>16)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n\n  //  assert(0);\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nint main(){\n  while(1){\n    cin>>s;\n    if(s==\"#\")break;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m < N; ++m) {\n      for(int L = m; L < W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000000LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < (int)s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nchar str[110];\nint b[110];\nlong long pow10[17];\nchar to[110];\nchar rg[210]=\"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162\";\nint main(){\n\tpow10[0]=1;\n\tfor(int i=1;i<17;i++)pow10[i]=pow10[i-1]*10;\n\twhile(1){\n\t\tscanf(\"%s\",str);\n\t\tif(str[0]=='#')break;\n\t\tlong long ret=9999999999999999LL;\n\t\tint n=strlen(str);\n\t\tbool OK=true;\n\t\tfor(int i=0;i<n;i++)if(rg[i]!=str[i])OK=false;\n\t\tif(OK){\n\t\t\tprintf(\"1\\n\");continue;\n\t\t}\n\t\tbool oz=true;\n\t\tfor(int i=0;i<n;i++)if(str[i]!='0')oz=false;\n\t\tif(oz){\n\t\t\tlong long at=2;\n\t\t\tfor(int i=1;i<=n;i++)at+=(pow10[i]-pow10[i-1])*i;\n\t\t\tprintf(\"%lld\\n\",at);continue;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tif(str[j]=='0')continue;\n\t\t\t\tlong long fi=0;\n\t\t\t\tfor(int k=0;k<i-j;k++){\n\t\t\t\t\tfi*=10;\n\t\t\t\t\tfi+=str[j+k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long la=0;\n\t\t\t\tfor(int k=0;k<j;k++){\n\t\t\t\t\tla*=10;\n\t\t\t\t\tla+=str[k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long s=la+1;\n\t\t\t\tlong long t=fi;\n\t\t\t//\tprintf(\"%lld %lld\\n\",s,t);\n\t\t\t\twhile(s%10==0)s/=10;\n\t\t\t\twhile(t%10==0)t/=10;\n\t\t\t\tlong long f=fi*pow10[j]+la;\n\t\t\t\tif(s==1&&(j==0||la)){\n\t\t\t\t\tif(t==1){\n\t\t\t\t\t\tf=pow10[i]-1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tf=(fi-1)*pow10[j]+la;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tlong long F=f;\n\t\t\t\tbool ok=true;\n\t\t\t\tint at=j;\n\t\t\t\twhile(at<n){\n\t\t\t\t\tsprintf(to,\"%lld\",f);\n\t\t\t\t\tint len=strlen(to);\n\t\t\t\t\tfor(int k=0;k<len;k++){\n\t\t\t\t\t\tif(at>=n)break;\n\t\t\t\t\t\tif(to[k]!=str[at])ok=false;\n\t\t\t\t\t\tat++;\n\t\t\t\t\t}\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tif(ok){\n\t\t\t\t\tlong long at=-j;\n\t\t\t\t\tfor(int k=1;k<i;k++){\n\t\t\t\t\t\tat+=(pow10[k]-pow10[k-1])*k;\n\t\t\t\t\t}\n\t\t\t\t\tat+=(F-pow10[i-1])*i;\n\t\t\t\t\tif(at<0)continue;\n\t\t\t\t\tret=min(ret,at+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),17);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-25;k<=25;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\t\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tstring F[10]={\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"};\n\t\tfor(int i=1;i<=9;i++){ret=min(ret,solve(F[i]+U)+1);}\n\t\tfor(int i=1;i<=9;i++){ret=min(ret,solve(U+F[i]));}\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"\";\n\tfor(int i=0;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),16);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-25;k<=25;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\t\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tcout<<solve(U)<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> P;\n\n#define fi first\n#define se second\n#define repl(i,a,b) for(ll i=(ll)(a);i<(ll)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define all(x) (x).begin(),(x).end()\n#define dbg(x) cout<<#x\"=\"<<x<<endl\n#define mmax(x,y) (x>y?x:y)\n#define mmin(x,y) (x<y?x:y)\n#define maxch(x,y) x=mmax(x,y)\n#define minch(x,y) x=mmin(x,y)\n#define uni(x) x.erase(unique(all(x)),x.end())\n#define exist(x,y) (find(all(x),y)!=x.end())\n#define bcnt __builtin_popcountll\n\n#define INF 9e18\n#define mod 1000000007\n\nstring increment(string A) {\n  for(int i = A.size() - 1; i >= 0; --i) {\n    if(A[i] < '9') {\n      A[i]++;\n      break;\n    } else {\n      A[i] = '0';\n    }\n  }\n  if(A[0] == '0') {\n    return \"1\"+A;\n  } else {\n    return A;\n  }\n}\n\nint main(){\n  while(1){\n    string S;\n    cin>>S;\n    if(S==\"#\")break;\n    if(S==\"0\"){\n      cout<<11<<endl;\n      continue;\n    }\n    int N=S.size();\n    ll res=INF;\n    repl(d,1,N+1){\n      repl(i,1,d+1){\n        string suf=S.substr(0,i),prf=S.substr(i,d-i);\n        bool all9=true;\n        rep(j,suf.size())if(suf[j]!='9')all9=false;\n        string ini;\n        if(all9&&(int)prf.size()>0){\n          bool plus1=true;\n          if(prf[0]!='1')plus1=false;\n          repl(j,1,prf.size()){\n            if(prf[j]!='0')plus1=false;\n          }\n          if(plus1){\n            ini=prf; rep(j,i+1)ini+='0';\n          }else{\n            ini=prf; rep(j,i)ini+='0';\n          }\n        }else{\n          ini=prf+suf; ini=increment(ini);\n        }\n        string crt=suf,con=ini;\n        while((int)crt.size()<N){\n          crt+=con; con=increment(con);\n        }\n        if(crt.substr(0,N)==S){\n          ll pos=0,num=stoll(ini);\n          repl(j,1,ini.size())pos+=j*(pow(10,j-1)*9);\n          pos+=(num-pow(10,(ll)ini.size()-1))*(ll)ini.size();\n          pos-=(ll)suf.size();\n          minch(res,pos+1);\n        }\n      }\n      if(res<INF)break;\n    }\n    if(res>=10000000000000000)res=10000000000000000-1;\n    cout<<res<<endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iomanip>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n#pragma comment(linker, \"/STACK:400000000\")\n\n#define EPS 1e-9\n#define INF MOD\n#define MOD 1000000007LL\n#define fir first\n#define foreach(it,X) for(it=X.begin();it!=X.end();it++)\n#define iss istringstream\n#define ite iterator\n#define ll long long\n#define mp make_pair\n#define rep(i,n) rep2(i,0,n)\n#define rep2(i,m,n) for(int i=m;i<n;i++)\n#define pi pair<int,int>\n#define pb push_back\n#define sec second\n#define sst stringstream\n#define sz size()\n#define vc vector\ntypedef vc<int> vi;\ntypedef vc<ll> vl;\ntypedef vc<string> vs;\n\nstring s;\nint n;\n\nll toLL(string s){\n\tif(s==\"\")return 0;\n\tiss is(s);\n\tll x;\n\tis>>x;\n\treturn x;\n}\n\nstring toStr(ll x){\n\tsst ss;\n\tss<<x;\n\treturn ss.str();\n}\n\nint main(){\n\twhile(cin>>s && s!=\"#\"){\n\t\tll ans=0;\n\t\tn=s.sz;\n\t\tint allzero=1;\n\t\trep(i,n)if(s[i]!='0')allzero=0;\n\t\tif(allzero)s=\"1\"+s,n++,ans++;\n\t\t\n\t\tll firstnum=INF*INF,pos=-1;\n\t\t\n\t\trep(a,16)rep2(b,1,n+1){\n\t\t\tif(a+b>16)continue;\n\t\t\tif(a==0 && s[0]=='0')continue;\n\t\t\tif(b<n && s[b]=='0')continue;\n\t\t\tstring pref=s.substr(0,b);\n\t\t\tstring rest=s.substr(b);\n\t\t\tif(rest.sz>=a){\n\t\t\t\trep(i,2){\n\t\t\t\t\tll head=toLL(rest.substr(0,a))-i;\n\t\t\t\t\tif(head<0)continue;\n\t\t\t\t\tll num=toLL(toStr(head)+pref);\n\t\t\t\t\tll num0=num;\n\t\t\t\t\t//cout<<a<<\" \"<<b<<\" \"<<i<<\" \"<<head<<\" \"<<num<<endl;\n\t\t\t\t\twhile(rest.sz>0){\n\t\t\t\t\t\tnum++;\n\t\t\t\t\t\tstring t=toStr(num);\n\t\t\t\t\t\trep(i,min(rest.sz,t.sz)){\n\t\t\t\t\t\t\tif(rest[i] != t[i]){\n\t\t\t\t\t\t\t\tgoto out;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(rest.sz<t.sz)rest=\"\";\n\t\t\t\t\t\telse rest=rest.substr(t.sz);\n\t\t\t\t\t}\n\t\t\t\t\tout:;\n\t\t\t\t\t//cout<<\"[\"<<rest<<\"]\"<<endl;\n\t\t\t\t\tif(rest==\"\"){\n\t\t\t\t\t\tif(num0 < firstnum || num0 == firstnum && a < pos){\n\t\t\t\t\t\t\tfirstnum=num0;\n\t\t\t\t\t\t\tpos=a;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//cout<<firstnum<<\" \"<<pos<<endl;\n\t\tans+=pos;\n\t\tll p10=10,dig=1;\n\t\twhile(1){\n\t\t\tif(firstnum-1<=p10-1){\n\t\t\t\tans+=dig*(firstnum-1 - p10/10+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tans+=dig*(p10-1 - p10/10+1);\n\t\t\tp10*=10;\n\t\t\tdig++;\n\t\t}\n\t\tcout<<ans+1<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n  \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n\n    \n  while((int)first.size()<si){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while((int)second.size()<len-(si+ti)){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=15;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      if(i+b.size() > a.size()){\n        return a.substr(0,i)+b;\n      }\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>15 || second.size()>15)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n\n  string ssnum=ll2s(snum);\n  \n  while(ssnum.size()<first.size())\n    ssnum=\"0\"+ssnum;\n  \n  string nsecond=compute(second, ssnum );\n\n\n  if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>15)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  string fi=\"\";\n  for(int i=1;i<(int)s.size();i++){\n    fi.push_back(s[i-1]);\n    if(fi.size()>15)break;\n    \n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nint main(){\n  while(1){\n    cin>>s;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\null B=5575777;\null Key;\n\null getHash(string &s){\n  ull res=0;\n  for(int i=0;i<(int)s.size();i++)\n    res=res*B+s[i];\n  return res;\n}\n\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n  \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n\n    \n  while((int)first.size()<si){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while((int)second.size()<len-(si+ti)){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n\n  ll res=f(begin);\n  string base=first+tmp+second;\n  ull val=0,bc=1;\n  for(int i=0;i<(int)base.size();i++){\n    val=val*B+base[i];\n    if(val==Key)return res+i;\n    \n    if(i-len>=0){\n      val-=bc*base[i-len];\n    }else{\n      bc*=B;\n    }\n    \n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=15;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      if(i+b.size() > a.size()){\n        return a.substr(0,i)+b;\n      }\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>15 || second.size()>15)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n\n  string ssnum=ll2s(snum);\n  \n  while(ssnum.size()<first.size())\n    ssnum=\"0\"+ssnum;\n  \n  string nsecond=compute(second, ssnum );\n\n\n  if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>15)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n\n  ull val=0,bc=1;\n  for(int i=0;i<(int)base.size();i++){\n    val=val*B+base[i];\n    if(val==Key)return f(A)+i;\n    \n    if(i-len>=0){\n      val-=bc*base[i-len];\n    }else{\n      bc*=B;\n    }\n    \n  }\n\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  string fi=\"\";\n  for(int i=1;i<(int)s.size();i++){\n    fi.push_back(s[i-1]);\n    if(fi.size()>15)break;\n    \n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nint main(){\n  while(1){\n    cin>>s;\n    len=s.size();\n    if(s==\"#\")break;\n    Key=getHash(s);\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = __int128_t;\n\nistream &operator>>(istream &is, Int &val){\n    string s;\n    is>>s;\n    val=0;\n    for(int i=0;i<(int)s.size();i++)\n      if(isdigit(s[i])) val=val*10+s[i]-'0';\n    if(s[0]=='-') val*=-1;\n    return is;\n}\n\n\n\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if(x.back()-'0'!=y.back()-'0') continue;\n\t}\n\t\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tif(y==\"1\") continue;\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string((long long)(x-1));\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string((long long)++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)-j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    if(ans==1e18){\n      ans=calc(stoll(\"1\"+s)-1)+1;\n    }\n    cout<<(long long)ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"\";\n\tfor(int i=0;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),16);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-25;k<=25;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\t\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tstring F[10]={\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"};\n\t\tfor(int i=1;i<=9;i++){ret=min(ret,solve(F[i]+U));}\n\t\tfor(int i=1;i<=9;i++){ret=min(ret,solve(U+F[i]));}\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n//// < \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\a.txt\" > \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\b.answer\"\n\nlong long int powint(long long int a, long long int b) {\n\tassert(b >= 0);\n\tif (b == 0)return 1;\n\tif (b == 1)return a;\n\tlong long int ans = 1;\n\tlong long int aa = powint(a, b / 2);\n\tans *= aa*aa;\n\tif (b % 2)ans *= a;\n\treturn ans;\n}\nvector<long long int>memo(18);\nlong long int getans(const long long int num) {\n\tconst int keta = to_string(num).size();\n\tif (keta >= 2) {\n\t\treturn (num - powint(10, keta - 1) + 1)*keta + memo[keta - 1];\n\t}\n\telse {\n\t\treturn num + 1;\n\t}\n}\nlong long int getnum(const pair<long long int, int>&p) {\n\tif (p.first == 0)return p.second;\n\treturn getans(p.first - 1) - p.second;\n}\nbool check(const int f,const long long int num, const string st) {\n\tstring pre = st.substr(0, f);\n\tconst string  prenumst = to_string(num - 1);\n\tif (prenumst.substr(prenumst.size() - pre.size(), pre.size()) != pre)return false;\n\telse {\n\t\t int nf = f;\n\t\t long long int nnum = num;\n\t\twhile (nf<st.size()) {\n\t\t\tstring nnumst = to_string(nnum);\n\t\t\tstring next = st.substr(nf, nnumst.size());\n\t\t\t bool same = (next == nnumst.substr(0, next.size()));\n\t\t\t if (!same) {\n\t\t\t\t return false;\n\t\t\t }\n\t\t\tnf += nnumst.size();\n\t\t\tnnum++;\n\t\t}\n\t\treturn true;\n\t}\n}\nlong long int check2(const string from, const string to, const int keta) {\n\t\n\tint f_size = from.size();\n\tint t_size = to.size();\n\tint kaburi = f_size + t_size - keta;\n\tif (all_of(from.begin() + kaburi, from.end(), [](const char&c) {return c == '9'; })) {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tkaburif = kaburif.empty()?\"1\":to_string(stol(kaburif) + 1);\n\t\tif (kaburif.size() != kaburi) {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif.substr(1) != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to_string(stol(to.substr(0,t_size-kaburi))-1);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\telse {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\tif (kaburif != kaburit)ok = false;\n\t\tif (ok) {\n\t\t\tstring ans;\n\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\tans += from;\n\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t}\n\t\telse {\n\t\t\treturn 3e18;\n\t\t}\n\t}\n}\n\nlong long int  solve(string st) {\n\tif (st == \"0\")return 11;\n\tif (all_of(st.begin(), st.end(), [](const char&ch) {\n\t\treturn ch == '0';\n\t})) {\n\t\treturn getnum(make_pair(stoll('1' + st), -1));\n\t}\n\tlong long int ans (1e18);\n\tfor (int keta = 1; keta <= min(17,int(st.size())); ++keta) {\n\t\tfor (int f = 0; f < min(keta,int(st.size())); ++f) {\n\t\t\tstring ast = st.substr(f, keta);\n\t\t\tif (ast.size() < keta) {\n\t\t\t\tstring from = st.substr(0, f);\n\t\t\t\tstring to = st.substr(f,st.size()-f);\n\t\t\t\tif (to[0] != '0') {\n\t\t\t\t\tans = min(ans, check2(from, to, keta));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ast[0] != '0') {\n\n\t\t\t\t\tlong long int num = stoll(ast);\n\t\t\t\t\tif (check(f, num, st)) {\n\t\t\t\t\t\tans = min(ans, getnum(make_pair(num, f)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tmemo[1] = 10;\n\tmemo[2] = 190;\n\tfor (int i = 2; i <18; ++i) {\n\t\tmemo[i] = powint(10,i-1) * (i) * 9 + memo[i - 1];\n\t}\n\t/*for (int i = 1; i <1001; ++i) {\n\t\tcout << i<<\":\"<<getans(i) << endl;\n\t}*/\n\twhile (1) {\n\n\t\tstring st; cin >> st;\n\t\tif (st != \"#\") {\n\n\t\t\tlong long int ans = solve(st);\n\t\t\tcout << ans << endl;\n\t\t}\n\t\telse {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll INF=(1LL<<63)-1;\n\nll to_ll(const string &s){\n\tll a;\n\tsscanf(s.c_str(),\"%lld\",&a);\n\treturn a;\n}\n\nstring to_string(ll a){\n\tchar s[32];\n\tsprintf(s,\"%lld\",a);\n\treturn s;\n}\n\nll calc_index(ll a){\n\tll res=0,ten=1,len=1;\n\twhile(1){\n\t\tif(a<10*ten){\n\t\t\tres+=(a-ten)*len;\n\t\t\treturn res;\n\t\t}\n\t\tres+=9*len*ten;\n\t\tten*=10;\n\t\tlen++;\n\t}\n}\n\nint main(){\n\tfor(string s;cin>>s,s[0]!='#';){\n\t\tint n=s.length();\n\n\t\tif(count(s.begin(),s.end(),'0')==s.length()){ // s=\"000...0\" のときは例外\n\t\t\tcout<<calc_index(to_ll('1'+s))<<endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tll ans=INF;\n\t\tint ofset;\n\t\t// 注目する数が s に完全に含まれるケース ( 341235123612 など )\n\t\trep(i,n) for(int j=i+1;j<=n;j++) {\n\t\t\tstring t=s.substr(i,j-i);\n\t\t\tif(t[0]=='0' || t.length()>16) continue;\n\n\t\t\tll a=to_ll(t);\n\t\t\tint len=0;\n\t\t\tstring r=t;\n\t\t\tfor(int k=1;k<30;k++){\n\t\t\t\tif(a-k>0){\n\t\t\t\t\tr=to_string(a-k)+r;\n\t\t\t\t\tlen+=to_string(a-k).length();\n\t\t\t\t}\n\t\t\t\tr=r+to_string(a+k);\n\t\t\t}\n\t\t\tif(len-i>=0 && r.substr(len-i,s.length())==s && ans>a) ans=a, ofset=i;\n\t\t}\n\n\t\t// そうでないケース 3456712345\n\t\tfor(int i=1;i<n;i++){\n\t\t\tstring t=s.substr(0,i),r=s.substr(i);\n\t\t\tif(t[0]=='0' || t.length()>16 || r.length()>16) continue;\n\n\t\t\tt=to_string(to_ll(t)+1);\n\t\t\tif(count(t.begin(),t.end(),'9')==t.length()) t=t.substr(1);\n\t\t\trep(d,min(t.length(),r.length())+1){\n\t\t\t\tif(r.substr(r.length()-d,d)==t.substr(0,d) && t.length()+r.length()-d<=16){\n\t\t\t\t\tll a=to_ll(r+t.substr(d));\n\t\t\t\t\tif(ans>a) ans=a, ofset=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout<<calc_index(ans)-ofset+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <string.h>\n#include <queue>\nusing namespace std;\n#define MP(x,y) make_pair(x,y)\n#define FI first\n#define SE second\n#define INF 1LL<<60\n\nconst int MAXN = 110;\nint len;\nchar str[MAXN],st[MAXN];\nlong long ans,pos;\n\nlong long trans_stoi(int l,int r)\n{\n\tlong long res=0;\n\tfor (int i=l;i<r;i++)\n\t\tres=res*10+str[i]-'0';\n\treturn res;\n}\n\nvoid trans_itos(long long x)\n{\n\tint num=0;\n\tint tmp[MAXN];\n\twhile (x)\n\t{\n\t\ttmp[num++]=x%10;\n\t\tx/=10;\n\t}\n\tfor (int i=0;i<num;i++)\n\t\tst[i]=tmp[num-i-1]+'0';\n\tst[num]='\\0';\n}\n\nlong long cal(long long ans)\n{\n    if (ans<=0) return 0;\n\tint num=1;\n\tlong long mul=9,p=1,res=0;\n\twhile (ans>p*10)\n\t{\n\t\tres+=num*mul;\n\t\tnum++;\n\t\tmul*=10;\n\t\tp*=10;\n\t}\n\tres+=(ans-p)*num;\n\treturn res;\n}\n\nvoid judge_0()\n{\n\tlong long p=1;\n\tfor (int i=1;i<=len;i++)\n\t{\n\t\tif (str[i]!='0') return;\n\t\tp*=10;\n\t}\n\tans=p;\n\tpos=1;\n}\n\nvoid judge_1()\n{\n\tfor (int i=1;i<min(17,len);i++)\n\t{\n\t\tfor (int j=1;j<=i;j++) st[j]=str[j];\n\t\tst[i+1]='\\0';\n\t\tint add=1,l=i;\n\t\twhile (add&&l>0)\n\t\t{\n\t\t\tif (st[l]=='9') st[l]='0',add=1;\n\t\t\telse st[l]=st[l]+1,add=0;\n\t\t\tl--;\n\t\t}\n\t\tfor (int j=max(1,2*i-len);j<=i;j++)\n\t\t{\n\t\t\tint flag=1;\n\t\t\tfor (int p=len,q=i-j;q>=1;p--,q--)\n\t\t\t\tif (str[p]!=st[q])\n\t\t\t\t{\n\t\t\t\t\tflag=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (flag)\n\t\t\t{\n\t\t\t\tlong long tmp=0;\n\t\t\t\tif (str[i+1]=='0') continue;\n\t\t\t\tif (j+len-i>=18) continue;\n\t\t\t\tfor (int k=i+1;k<=len;k++) tmp=tmp*10+str[k]-'0';\n\t\t\t\tfor (int k=i-j+1;k<=i;k++) tmp=tmp*10+st[k]-'0';\n\t\t\t\tif (ans>tmp) ans=tmp,pos=1-i;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint cal_len(long long x)\n{\n    int res=0;\n    while (x)\n    {\n        x/=10;\n        res++;\n    }\n    return res;\n}\n\n//char test[10000005];\n//int check()\n//{\n//    for (int i=0;i<10000000;i++)\n//    {\n//        int flag=1;\n//        for (int j=1;j<=len;j++)\n//            if (str[j]!=test[i+j-1]) flag=0;\n//        if (flag) return i+1;\n//    }\n//    return 0;\n//}\n\nint main()\n{\n//    int ttt=1,LL=0;\n//    while (LL<10000000)\n//    {\n//        trans_itos(ttt++);\n//        for (int i=0;st[i];i++) test[LL++]=st[i];\n//    }\n//\n//\tfreopen(\"in.txt\",\"r\",stdin);\n//\tint ca=0;\n\twhile (scanf(\"%s\",str+1)!=-1)\n\t{\n\t\tif (str[1]=='#') break;\n\t\tlen=strlen(str+1);\n//\t\tttt=check();\n\t\tans=INF;\n\t\tfor (int s=1;s<=len;s++)\n\t\t\tfor (int l=s;l<=17&&s+l-1<=len;l++)\n\t\t\t{\n\t\t\t\tif (str[s]=='0') continue;\n\t\t\t\tlong long tt=trans_stoi(s,s+l);\n\t\t\t\tlong long tmp=tt+1;\n\t\t\t\ttrans_itos(tmp);\n\t\t\t\tint flag=1;\n\t\t\t\tint p=s+l,q=p+strlen(st)-1;\n\t\t\t\twhile (flag)\n\t\t\t\t{\n\t\t\t\t\tif (q>len) break;\n\t\t\t\t\tfor (int i=p,j=0;i<=q;i++,j++)\n\t\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tif (!flag) break;\n\t\t\t\t\ttmp++;\n\t\t\t\t\ttrans_itos(tmp);\n\t\t\t\t\tp=q+1,q=p+strlen(st)-1;\n\t\t\t\t}\n\t\t\t\tif (!flag) continue;\n\t\t\t\tfor (int i=p,j=0;i<=len;i++,j++)\n\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\ttrans_itos(tt-1);\n\t\t\t\tfor (int i=s-1,j=strlen(st)-1;i>0;i--,j--)\n\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tif (ans>tt)\n\t\t\t\t\t{\n                    ans=tt-1,pos=cal_len(ans)-s+2;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tjudge_1();\n\t\tjudge_0();\n\t\t//printf(\"%lld %lld\\n\",ans,pos);\n\t\tprintf(\"%lld\\n\",cal(ans)+pos);\n//\t\tlong long tmp=cal(ans)+pos;\n//\t\tca++;\n//\t\tif (ttt!=0&&tmp!=ttt)\n//        {\n//            printf(\"%d\\n\",ca);\n//            printf(\"%lld %lld\\n\",ans,pos);\n//            printf(\"%lld %lld\\nWA\\n\",tmp,ttt);\n//            break;\n//        }\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define int long long\nusing namespace std;\n\nstring add(string s){\n\tstring res = s;\n\tres[res.size() - 1]++;\n\tfor(int i = s.size() - 1; i >= 0; i--){\n\t\tif(res[i] > '9'){\n\t\t\tres[i] = '0';\n\t\t\tif(i != 0){\n\t\t\t\tres[i - 1]++;\n\t\t\t}else{\n\t\t\t\tres = \"1\" + res;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nint chint(string s){\n\tint res = 0;\n\trep(i, 0, s.size()){\n\t\tres = res * 10 + (s[i] - '0');\t\n\t}\n\treturn res;\n}\n\nint calc(string s){\n\tint res = 0;\n\tint kosuu = 9;\n\tint MIN = 1;\n\tint num = chint(s);\n\tfor(int i = 1; i <= s.size(); i++){\n\t\tif(i == s.size()) res += i * (num - MIN);\n\t\telse res += i * kosuu;\n\t\tMIN *= 10;\n\t\tkosuu *= 10;\n\t}\n\treturn res + 1;\n}\n\n\nsigned main(){\n\twhile(1){\n\t\tstring s;\n\t\tcin >> s;\n\t\tif(s == \"#\") break;\n\t\t//cout << s << endl;\n\t\t//cout << calc(s) << endl;\n\t\t//cout << add(s) << endl;\n\t\t\n\t\tint MIN = 1e18;\n\t\trep(i, 1, min((int)16, (int)s.size() + 1)){\n\t\t\tstring r = s;\n\t\t\tstring fst = s.substr(0, i);\n\t\t\tstring sch = add(fst);\n\t\t\tr = r.substr(i);\n\t\t\t//cout << fst << endl;\n\t\t\t//cout << \"in \" << r << endl;\n\t\t\t//cout << \"search \" << sch << endl;\n\t\t\tint idx = r.find(sch);\n\t\t\t\n\t\t\t\t//2ko--------------\n\t\t\tstring tmp2 = s.substr(i) + s.substr(0, i);\n\t\t\tif(tmp2[0] != '0'){\n\t\t\t\tint tmp3 = calc(tmp2) + s.size() - i;\n\t\t\t\tMIN = min(MIN, tmp3);\n\t\t\t\t//cout << \"2ko \" << tmp3 << endl;\n\t\t\t}\n\t\t\t//-----------------\n\t\t\t//continue;\n\t\t\tif(idx == string::npos){\n\t\t\t\t//cout<< \"NA\" << endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstring tmp = r.substr(0, idx + sch.size());\n\t\t\tfst = r.substr(0, idx) + s.substr(0, i);\n\t\t\t//r = r.substr(idx + sch.size());\n\t\t\t\n\t\t\t//cout << tmp << \" \" << r << endl;\n\t\t\t//cout << \"seek \" << fst << endl;\n\t\t\t\n\t\t\t\n\t\t\tif(fst[0] == '0') continue;\n\t\t\tbool f = true;\n\t\t\tstring search = fst;\n\t\t\twhile(r.size()){\n\t\t\t\tsearch = add(search);\n\t\t\t\t//cout << \"--search \" << search << \" in \" << r << endl;\n\t\t\t\tfor(int j = 0; j < search.size(); j++){\n\t\t\t\t\tif(j == r.size()){f = true; break;}\n\t\t\t\t\tif(r[j] != search[j]){f = false; break;}\t\n\t\t\t\t}\n\t\t\t\tif(f == false) break;\n\t\t\t\tif(search.size() >= r.size()) break;\n\t\t\t\tr = r.substr(search.size());\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\t//cout << \"ans:  \" << fst << \" \";\n\t\t\t\tint ans = calc(fst) + idx;\n\t\t\t\t//cout << calc(fst) << \" \" << idx << \" \" << ans << endl;\n\t\t\t\tMIN = min(MIN, ans);\n\t\t\t}else{\n\t\t\t\t//cout << \"WA\" << endl;\n\t\t\t}\n\t\t\t//cout << \"---------------\" << endl;\n\t\t}\n\t\tcout << MIN << endl;\n\t\t//cout << \"===========================\" << endl;\n\t\t\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nchar str[110];\nint b[110];\nlong long pow10[17];\nchar to[110];\nchar rg[210]=\"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162\";\nint main(){\n\tpow10[0]=1;\n\tfor(int i=1;i<17;i++)pow10[i]=pow10[i-1]*10;\n\twhile(1){\n\t\tscanf(\"%s\",str);\n\t\tif(str[0]=='#')break;\n\t\tlong long ret=9999999999999999LL;\n\t\tint n=strlen(str);\n\t\tbool OK=true;\n\t\tfor(int i=0;i<n;i++)if(rg[i]!=str[i])OK=false;\n\t\tif(OK){\n\t\t\tprintf(\"1\\n\");continue;\n\t\t}\n\t\tbool oz=true;\n\t\tfor(int i=0;i<n;i++)if(str[i]!='0')oz=false;\n\t\tif(oz){\n\t\t\tlong long at=2;\n\t\t\tfor(int i=1;i<=n;i++)at+=(pow10[i]-pow10[i-1])*i;\n\t\t\tprintf(\"%lld\\n\",at);continue;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tif(str[j]=='0')continue;\n\t\t\t\tlong long fi=0;\n\t\t\t\tfor(int k=0;k<i-j;k++){\n\t\t\t\t\tfi*=10;\n\t\t\t\t\tfi+=str[j+k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long la=0;\n\t\t\t\tfor(int k=0;k<j;k++){\n\t\t\t\t\tla*=10;\n\t\t\t\t\tla+=str[k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long s=la+1;\n\t\t\t\tlong long t=fi;\n\t\t\t//\tprintf(\"%lld %lld\\n\",s,t);\n\t\t\t\twhile(s%10==0)s/=10;\n\t\t\t\twhile(t%10==0)t/=10;\n\t\t\t\tlong long f=fi*pow10[j]+la;\n\t\t\t\tif(s==1&&la){\n\t\t\t\t\tif(t==1){\n\t\t\t\t\t\tf=pow10[i]-1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tf=(fi-1)*pow10[j]+la;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tlong long F=f;\n\t\t\t\tbool ok=true;\n\t\t\t\tint at=j;\n\t\t\t\twhile(at<n){\n\t\t\t\t\tsprintf(to,\"%lld\",f);\n\t\t\t\t\tint len=strlen(to);\n\t\t\t\t\tfor(int k=0;k<len;k++){\n\t\t\t\t\t\tif(at>=n)break;\n\t\t\t\t\t\tif(to[k]!=str[at])ok=false;\n\t\t\t\t\t\tat++;\n\t\t\t\t\t}\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tif(ok){\n\t\t\t\t\tlong long at=-j;\n\t\t\t\t\tfor(int k=1;k<i;k++){\n\t\t\t\t\t\tat+=(pow10[k]-pow10[k-1])*k;\n\t\t\t\t\t}\n\t\t\t\t\tat+=(F-pow10[i-1])*i;\n\t\t\t\t\tret=min(ret,at+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> P;\n\n#define fi first\n#define se second\n#define repl(i,a,b) for(ll i=(ll)(a);i<(ll)(b);i++)\n#define rep(i,n) repl(i,0,n)\n#define all(x) (x).begin(),(x).end()\n#define dbg(x) cout<<#x\"=\"<<x<<endl\n#define mmax(x,y) (x>y?x:y)\n#define mmin(x,y) (x<y?x:y)\n#define maxch(x,y) x=mmax(x,y)\n#define minch(x,y) x=mmin(x,y)\n#define uni(x) x.erase(unique(all(x)),x.end())\n#define exist(x,y) (find(all(x),y)!=x.end())\n#define bcnt __builtin_popcountll\n\n#define INF 9e18\n#define mod 1000000007\n\nstring increment(string A) {\n  for(int i = A.size() - 1; i >= 0; --i) {\n    if(A[i] < '9') {\n      A[i]++;\n      break;\n    } else {\n      A[i] = '0';\n    }\n  }\n  if(A[0] == '0') {\n    return \"1\"+A;\n  } else {\n    return A;\n  }\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  while(1){\n    string S;\n    cin>>S;\n    if(S==\"#\")break;\n    int N=S.size();\n    ll res=INF;\n    repl(d,1,N+1){\n      repl(i,1,d+1){\n        string suf=S.substr(0,i),prf=S.substr(i,d-i);\n        bool all9=true;\n        rep(j,suf.size())if(suf[j]!='9')all9=false;\n        string ini;\n        if(all9&&(int)prf.size()>0){\n          bool plus1=true;\n          if(prf[0]!='1')plus1=false;\n          repl(j,1,prf.size()){\n            if(prf[j]!='0')plus1=false;\n          }\n          if(plus1){\n            ini=prf; rep(j,i+1)ini+='0';\n          }else{\n            ini=prf; rep(j,i)ini+='0';\n          }\n        }else{\n          ini=prf+suf; ini=increment(ini);\n        }\n        string crt=suf,con=ini;\n        while((int)crt.size()<N){\n          crt+=con; con=increment(con);\n        }\n        if(crt.substr(0,N)==S){\n          ll pos=0,num=stoll(ini);\n          repl(j,1,ini.size())pos+=j*(pow(10,j-1)*9);\n          pos+=(num-pow(10,(ll)ini.size()-1))*(ll)ini.size();\n          pos-=(ll)suf.size();\n          minch(res,pos+1);\n        }\n      }\n      if(res<INF)break;\n    }\n    cout<<res<<endl;\n  }\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n  \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n\n    for(int j=1;i+j<=len && j<=16;j++){\n      if(s[i]=='0'&&j>1)continue;\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n  \n  string nsecond=compute(second, ll2s(snum) );\n\n\n  if( isZero(first) ){\n    string tmp=first;\n    tmp[ (int)tmp.size()-1 ]='1';\n    nsecond=compute(second,tmp);\n  }else if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>16)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\n\nint main(){\n  while(1){\n    cin>>s;\n    if(s==\"#\")break;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),17);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tif(S[j]=='0')continue;\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tint R=j-1,D=Y.size()-1;\n\t\t\t\twhile(R>=0 && D>=0){Y[D]=S[R];R--;D--;}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-30;k<=30;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tif(U[0]=='0'){\n\t\t\tfor(int k=0;k<17;k++){\n\t\t\t\tfor(int i=1;i<=9;i++){\n\t\t\t\t\tstring ADD=\"\";ADD+=(char)('0'+i);\n\t\t\t\t\tfor(int j=0;j<k;j++)ADD+=\"0\";\n\t\t\t\t\tret=min(ret,solve(ADD+U)+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse ret=solve(U);\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m <= N; ++m) {\n      for(int L = m; L < W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        //if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000000LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < (int)s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i, a, n) for(int i = a; i < n; i++)\n#define int long long\nusing namespace std;\n\nstring add(string s){\n\tstring res = s;\n\tres[res.size() - 1]++;\n\tfor(int i = s.size() - 1; i >= 0; i--){\n\t\tif(res[i] > '9'){\n\t\t\tres[i] = '0';\n\t\t\tif(i != 0){\n\t\t\t\tres[i - 1]++;\n\t\t\t}else{\n\t\t\t\tres = \"1\" + res;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nint chint(string s){\n\tint res = 0;\n\trep(i, 0, s.size()){\n\t\tres = res * 10 + (s[i] - '0');\t\n\t}\n\treturn res;\n}\n\nint calc(string s){\n\tint res = 0;\n\tint kosuu = 9;\n\tint MIN = 1;\n\tint num = chint(s);\n\tfor(int i = 1; i <= s.size(); i++){\n\t\tif(i == s.size()) res += i * (num - MIN);\n\t\telse res += i * kosuu;\n\t\tMIN *= 10;\n\t\tkosuu *= 10;\n\t}\n\treturn res + 1;\n}\n\n\nsigned main(){\n\twhile(1){\n\t\tstring s;\n\t\tcin >> s;\n\t\tif(s == \"#\") break;\n\t\t//cout << s << endl;\n\t\t//cout << calc(s) << endl;\n\t\t//cout << add(s) << endl;\n\t\t\n\t\tint MIN = 1e18;\n\t\trep(i, 1, s.size() + 1){\n\t\t\tstring r = s;\n\t\t\tstring fst = s.substr(0, i);\n\t\t\tstring sch = add(fst);\n\t\t\tr = r.substr(i);\n\t\t\t//cout << fst << endl;\n\t\t\t//cout << \"in \" << r << endl;\n\t\t\t//cout << \"search \" << sch << endl;\n\t\t\tint idx = r.find(sch);\n\t\t\t\n\t\t\t\t//2ko--------------\n\t\t\tstring tmp2 = s.substr(i) + s.substr(0, i);\n\t\t\tif(tmp2[0] != '0'){\n\t\t\t\tint tmp3 = calc(tmp2) + s.size() - i;\n\t\t\t\tMIN = min(MIN, tmp3);\n\t\t\t\t//cout << \"2ko \" << tmp3 << endl;\n\t\t\t}\n\t\t\t//-----------------\n\t\t\t//continue;\n\t\t\tif(idx == string::npos){\n\t\t\t\t//cout<< \"NA\" << endl;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tstring tmp = r.substr(0, idx + sch.size());\n\t\t\tfst = r.substr(0, idx) + s.substr(0, i);\n\t\t\t//r = r.substr(idx + sch.size());\n\t\t\t\n\t\t\t//cout << tmp << \" \" << r << endl;\n\t\t\t//cout << \"seek \" << fst << endl;\n\t\t\t\n\t\t\t\n\t\t\tif(fst[0] == '0') continue;\n\t\t\tbool f = true;\n\t\t\tstring search = fst;\n\t\t\twhile(r.size()){\n\t\t\t\tsearch = add(search);\n\t\t\t\t//cout << \"--search \" << search << \" in \" << r << endl;\n\t\t\t\tfor(int j = 0; j < search.size(); j++){\n\t\t\t\t\tif(j == r.size()){f = true; break;}\n\t\t\t\t\tif(r[j] != search[j]){f = false; break;}\t\n\t\t\t\t}\n\t\t\t\tif(f == false) break;\n\t\t\t\tif(search.size() >= r.size()) break;\n\t\t\t\tr = r.substr(search.size());\n\t\t\t}\n\t\t\tif(f){\n\t\t\t\t//cout << \"ans:  \" << fst << \" \";\n\t\t\t\tint ans = calc(fst) + idx;\n\t\t\t\t//cout << calc(fst) << \" \" << idx << \" \" << ans << endl;\n\t\t\t\tMIN = min(MIN, ans);\n\t\t\t}else{\n\t\t\t\t//cout << \"WA\" << endl;\n\t\t\t}\n\t\t\t//cout << \"---------------\" << endl;\n\t\t}\n\t\tcout << MIN << endl;\n\t\t//cout << \"===========================\" << endl;\n\t\t\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = __int128_t;\n\nistream &operator>>(istream &is, Int &val){\n    string s;\n    is>>s;\n    val=0;\n    for(int i=0;i<(int)s.size();i++)\n      if(isdigit(s[i])) val=val*10+s[i]-'0';\n    if(s[0]=='-') val*=-1;\n    return is;\n}\n\n\n\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    if(s==\"0\") ans=11;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if(x.back()-'0'!=y.back()-'0') continue;\n\t}\n\t\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tif(y==\"1\") continue;\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string((long long)(x-1));\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string((long long)++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)-j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<(long long)ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  string s;\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<(Int)min(17u,s.size());i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(int j=(int)max(t.size(),u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string(x-1);\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string(++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)+j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),17);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tif(S[j]=='0')continue;\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-25;k<=25;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\t\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tif(U[0]=='0'){\n\t\t\tfor(int i=1;i<=9;i++){\n\t\t\t\tstring ADD=\"\";ADD+=(char)('0'+i);\n\t\t\t\tret=solve(ADD+U)+1;\n\t\t\t}\n\t\t}\n\t\telse ret=solve(U);\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nint n;\nchar input[1000];\nchar temp[1000];\nchar temp2[1000];\nchar temp3[1000];\nchar champernowne[1000000];\n\nvoid PrintChampernowne(int index, int len) {\n  REP(i, len) {\n    putchar(champernowne[index + i - 1]);\n  }\n  puts(\"\");\n}\n\nll Convert(pair<ll, ll> ans) {\n  //cout << ans.first << \" \" << ans.second << endl;\n  ll ret = ans.second + 1;\n  ll base = 1;\n  ll cnt = 1;\n  ans.first--;\n  while (true) {\n    if (base * 10 <= ans.first) {\n      ret += cnt * base * 9;\n    } else {\n      ret += cnt * (ans.first - base + 1);\n      break;\n    }\n    cnt++;\n    base *= 10;\n  }\n  return ret;\n}\n\nvoid Plus(char *str) {\n  (*str)++;\n  if (*str > '9') { *str = '0'; Plus(str - 1); }\n}\n\nint main() {\n  FOREQ(i, 1, 10000) {\n    sprintf(champernowne + strlen(champernowne), \"%d\", i);\n  }\n  while (scanf(\"%s\", input), input[0] != '#') {\n    pair<ll, ll> ans(1LL << 60, 1LL << 60);\n    n = strlen(input);\n    // one\n    if (n < 17) {\n      if (input[0] == '0') {\n        sprintf(temp, \"1%s\", input);\n        ans = min(ans, make_pair(atoll(temp), 1LL));\n      } else {\n        ans = min(ans, make_pair(atoll(input), 0LL));\n      }\n    }\n    // two\n    if (n < 34) {\n      FOREQ(i, 1, n) {\n        if (input[i] == '0') { continue; }\n        int start = 100;\n        MEMSET(temp2, '0');\n        memcpy(temp2 + start, input, i);\n        temp2[start + i] = 0;\n        sprintf(temp, \"%s\", temp2 + start);\n        Plus(temp2 + start + i - 1);\n        if (temp2[start - 1] == '1') { start--; }\n        if ((int)strlen(temp) >= n) { continue; }\n        FOREQ(j, 0, i + 1) {\n          if (i + j > n) { continue; }\n          memcpy(temp2 + start - (n - i - j), input + i, n - i - j);\n          sprintf(temp + i, \"%s\", temp2 + start - (n - i - j));\n          temp[n] = '\\0';\n          if (strcmp(input, temp) == 0) {\n            ll v = atoll(temp2 + start - (n - i - j)) - 1;\n            sprintf(temp3, \"%lld\", v);\n            ll len = strlen(temp3);\n            if (len >= 17) { continue; }\n            ll offset = len - i;\n            //cout << i << \" \" << j << \" \" << v << \" \" << offset << endl;\n            ans = min(ans, make_pair(v, offset));\n          }\n        }\n      }\n    }\n    // more than\n    FOREQ(i, 1, n) {\n      FOREQ(j, 1, n) {\n        memcpy(temp, input + j, i);\n        temp[i] = '\\0';\n        ll start = atoll(temp) - 1;\n        if (start <= 0) { continue; }\n        ll v = start;\n        sprintf(temp2, \"%lld\", v);\n        int len = strlen(temp2);\n        if (len < j) { continue; }\n        ll offset = len - j;\n        sprintf(temp, \"%s\", temp2 + offset);\n        int cnt = 1;\n        while ((int)strlen(temp) < n) {\n          v++;\n          cnt++;\n          sprintf(temp + strlen(temp), \"%lld\", v);\n        }\n        if (cnt < 3) { continue; }\n        temp[n] = 0;\n        if (strcmp(input, temp) == 0) {\n          ans = min(ans, make_pair(start, offset));\n        }\n      }\n    }\n    // edge\n    FOREQ(i, 1, 17) {\n      REP(offset, i) {\n        ll start = 1;\n        REP(j, i) { start *= 10; }\n        start--;\n        REP(j, i - offset) {\n          temp[j] = '9';\n        }\n        temp[i - offset] = '\\0';\n        ll v = start;\n        while ((int)strlen(temp) < n) {\n          v++;\n          sprintf(temp + strlen(temp), \"%lld\", v);\n        }\n        temp[n] = 0;\n        if (strcmp(temp, input) == 0) {\n          ans = min(ans, make_pair(start, (ll)offset));\n        }\n      }\n    }\n    //PrintChampernowne(2887, 10);\n    printf(\"%lld\\n\", Convert(ans));\n    //cout << input << endl;\n    //PrintChampernowne(Convert(ans), n);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll INF=(1LL<<63)-1;\n\nll to_ll(const string &s){\n\tll a;\n\tsscanf(s.c_str(),\"%lld\",&a);\n\treturn a;\n}\n\nstring to_string(ll a){\n\tchar s[32];\n\tsprintf(s,\"%lld\",a);\n\treturn s;\n}\n\nll calc_index(ll a){\n\tll res=0,ten=1,len=1;\n\twhile(1){\n\t\tif(a<10*ten){\n\t\t\tres+=(a-ten)*len;\n\t\t\treturn res;\n\t\t}\n\t\tres+=9*len*ten;\n\t\tten*=10;\n\t\tlen++;\n\t}\n}\n\nint main(){\n\tfor(string s;cin>>s,s[0]!='#';){\n\t\tint n=s.length();\n\n\t\tif(count(s.begin(),s.end(),'0')==s.length()){ // s=\"000...0\" のときは例外\n\t\t\tcout<<calc_index(to_ll('1'+s))<<endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tll ans=INF;\n\t\tint ofset;\n\t\t// 注目する数が s に完全に含まれるケース ( 341235123612 など )\n\t\trep(i,n) for(int j=i+1;j<=n;j++) {\n\t\t\tstring t=s.substr(i,j-i);\n\t\t\tif(t[0]=='0') continue;\n\n\t\t\tll a=to_ll(t);\n\t\t\tint len=0;\n\t\t\tstring r=t;\n\t\t\tfor(int k=1;k<30;k++){\n\t\t\t\tif(a-k>0){\n\t\t\t\t\tr=to_string(a-k)+r;\n\t\t\t\t\tlen+=to_string(a-k).length();\n\t\t\t\t}\n\t\t\t\tr=r+to_string(a+k);\n\t\t\t}\n\t\t\tif(len-i>=0 && r.substr(len-i,s.length())==s && ans>a) ans=a, ofset=i;\n\t\t}\n\n\t\t// そうでないケース 3456712345\n\t\tfor(int i=1;i<n;i++){\n\t\t\tstring t=s.substr(0,i),r=s.substr(i);\n\t\t\tif(t[0]=='0') continue;\n\n\t\t\tt=to_string(to_ll(t)+1);\n\t\t\tif(count(t.begin(),t.end(),'9')==t.length()) t=t.substr(1);\n\t\t\trep(d,min(t.length(),r.length())+1){\n\t\t\t\tif(r.substr(r.length()-d,d)==t.substr(0,d)){\n\t\t\t\t\tll a=to_ll(r+t.substr(d));\n\t\t\t\t\tif(ans>a) ans=a, ofset=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout<<calc_index(ans)-ofset+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n\nusing namespace std;\n\nstring get(long long start){\n\tstring res=\"\";\n\tfor(int i=0;;i++){\n\t\tstringstream ss;\n\t\tss<<start+i;\n\t\tstring add;\n\t\tss>>add;\n\t\tres+=add;\n\t\tif(res.size()>140) break;\n\t}\n\treturn res;\n}\n\nlong long tens[18];\n\nlong long count(long long x){\n\tif(x<10) return x;\n\tint dig=lower_bound(tens,tens+18,x)-tens;\n\tdig--;\n\tlong long res=0;\n\tfor(int i=0;i<dig;i++){\n\t\tres+=tens[i]*9*(i+1);\n\t}\n\tlong long rem=x-tens[dig];\n\tres+=rem*(dig+1);\n//\tcout<<x<<\" \"<<res<<\"\\n\";\n\treturn res+1;\n}\n\nlong long solve(string str){\n\tif(str==\"1\") return 1;\n\tint N=str.size();\n\tint n=min(N,33);\n\tlong long res=-1;\n\tfor(int i=0;i<n;i++) for(int j=i+1;j<=min(n,i+16);j++){\n\t\tlong long cur=0;\n\t\tfor(int k=i;k<j;k++){\n\t\t\tcur*=10;\n\t\t\tcur+=(str[k]-'0');\n\t\t}\n\t//\tif(i==0&&j==n) cout<<\"cur=\"<<cur<<\"\\n\";\n\t\tif(cur-1<=0) continue;\n\t\tstring cand=get(cur-1);\n\t\tint id=-1;\n\t//\tcout<<cand<<\"\\n\";\n\t\tfor(int m=0;m+str.size()<cand.size();m++){\n\t\t\tbool ok=true;\n\t\t\tfor(int p=0;p<str.size();p++){\n\t\t\t\tif(cand[m+p]!=str[p]){\n\t\t\t\t\tok=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok){\n\t\t\t\tid=m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(id==-1) continue;\n\t\tlong long tmp=count(cur-1);\n\t\ttmp+=id;\n\t\tif(res==-1||res>tmp) res=tmp;\n\t}\n\tif(str.size()<=34){\n\t//\tcout<<\"str=\"<<str<<\"\\n\";\n\t\tstring firstHalf,secondHalf;\n\t\tfor(int i=1;i+1<str.size();i++){\n\t\t\tfirstHalf=\"\";secondHalf=\"\";\n\t\t\tfor(int j=0;j<i;j++) firstHalf+=str[j];\n\t\t\tfor(int j=i;j<str.size();j++) secondHalf+=str[j];\n\t\t\tstring nxt=firstHalf;\n\t\t//\tcout<<\"i=\"<<i<<\"fi=\"<<firstHalf<<\"se=\"<<secondHalf<<\"\\n\";\n\t\t\tbool flg=false;\n\t\t\tfor(int j=firstHalf.size()-1;j>=0;j--){\n\t\t\t\tif(firstHalf[j]!='9'){\n\t\t\t\t\tflg=true;\n\t\t\t\t\tnxt[j]++;\n\t\t\t\t\tfor(int k=j+1;k<firstHalf.size();k++) nxt[k]='0';\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flg==false){\n\t\t\t\tnxt=\"\";\n\t\t\t\tfor(int k=0;k<firstHalf.size();k++) nxt+='0';\n\t\t\t}\n\t//\t\tcout<<\"cand:\"<<firstHalf<<\" \"<<nxt<<\" \"<<secondHalf<<\"\\n\";\n\t\t\tint m=min(nxt.size(),secondHalf.size());\n\t\t\tfor(int j=m;j>=0;j--){\n\t\t\t\tstring str1=nxt.substr(0,j);\n\t\t\t\tstring str2=secondHalf.substr(secondHalf.size()-j,j);\n\t\t\t\tif(str1!=str2) continue;\n\t\t\t\tstring cur=secondHalf+nxt.substr(j,1000);\n\t\t\t\tif(cur.size()>=17) break;\n\t\t\t\tlong long t;\n\t\t\t\tstringstream ss;\n\t\t\t\tss<<cur;\n\t\t\t\tss>>t;\n\t\t\t\tstring a=get(t-1);\n\t\t\t\tint id=-1;\n\t\t//\t\tcout<<t<<\"\\n\";\n\t\t\t\tfor(int k=0;k+str.size()<a.size();k++){\n\t\t\t\t\tbool ok=true;\n\t\t\t\t\tfor(int m=0;m<str.size();m++){\n\t\t\t\t\t\tif(str[m]!=a[m+k]){\n\t\t\t\t\t\t\tok=false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(ok){\n\t\t\t\t\t\tid=k;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(id!=-1){\n\t\t//\t\t\tcout<<t<<\" \"<<id<<\"\\n\";\n\t\t\t\t\tlong long a=count(t-1);\n\t\t\t\t\tif(res==-1||res>a+id) res=a+id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nint main(){\n\ttens[0]=1;\n\tfor(int i=1;i<18;i++) tens[i]=tens[i-1]*10;\n\tstring str;\n\twhile(true){\n\t\tcin>>str;\n\t\tif(str==\"#\") break;\n\t\tlong long ans=solve(str);\n\t\tcout<<ans<<\"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  string s;\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<(Int)min(17u,s.size());i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=(Int)max(t.size(),u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string(x-1);\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string(++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)+j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\n#include <sstream>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  stringstream ss;\n  ss << x;\n  string res;\n  ss >> res;\n  return res;\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m <= N; ++m) {\n      for(int L = m; L < W; ++L) {\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n      }\n    }\n\n    lli res = 10000000000000001LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < (int)s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\nlong long int powint(long long int a, long long int b) {\n\tassert(b >= 0);\n\tif (b == 0)return 1;\n\tif (b == 1)return a;\n\tlong long int ans = 1;\n\tlong long int aa = powint(a, b / 2);\n\tans *= aa*aa;\n\tif (b % 2)ans *= a;\n\treturn ans;\n}\nvector<long long int>memo(18);\nlong long int getans(const long long int num) {\n\tconst int keta = to_string(num).size();\n\tif (keta >= 2) {\n\t\treturn (num - powint(10, keta - 1) + 1)*keta + memo[keta - 1];\n\t}\n\telse {\n\t\treturn num + 1;\n\t}\n}\nlong long int getnum(const pair<long long int, int>&p) {\n\tif (p.first == 0)return p.second;\n\treturn getans(p.first - 1) - p.second;\n}\nbool check(const int f,const long long int num, const string st) {\n\tstring pre = st.substr(0, f);\n\tconst string  prenumst = to_string(num - 1);\n\tif (prenumst.substr(prenumst.size() - pre.size(), pre.size()) != pre)return false;\n\telse {\n\t\t int nf = f;\n\t\t long long int nnum = num;\n\t\twhile (nf<st.size()) {\n\t\t\tstring nnumst = to_string(nnum);\n\t\t\tstring next = st.substr(nf, nnumst.size());\n\t\t\t bool same = (next == nnumst.substr(0, next.size()));\n\t\t\t if (!same) {\n\t\t\t\t return false;\n\t\t\t }\n\t\t\tnf += nnumst.size();\n\t\t\tnnum++;\n\t\t}\n\t\treturn true;\n\t}\n}\nlong long int check2(const string from, const string to, const int keta) {\n\t\n\tint f_size = from.size();\n\tint t_size = to.size();\n\tint kaburi = f_size + t_size - keta;\n\tif (all_of(from.begin() + kaburi, from.end(), [](const char&c) {return c == '9'; })) {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tkaburif = kaburif.empty()?\"1\":to_string(stol(kaburif) + 1);\n\t\tif (kaburif.size() != kaburi) {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif.substr(1) != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to_string(stol(to.substr(0,t_size-kaburi))-1);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\telse {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\tif (kaburif != kaburit)ok = false;\n\t\tif (ok) {\n\t\t\tstring ans;\n\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\tans += from;\n\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t}\n\t\telse {\n\t\t\treturn 3e18;\n\t\t}\n\t}\n}\n\nlong long int  solve(string st) {\n\tif (st == \"0\")return 11;\n\tif (all_of(st.begin(), st.end(), [](const char&ch) {\n\t\treturn ch == '0';\n\t})) {\n\t\treturn getnum(make_pair(stoll('1' + st), -1));\n\t}\n\tlong long int ans (1e18);\n\tfor (int keta = 1; keta <= min(17,int(st.size())); ++keta) {\n\t\tfor (int f = 0; f < min(keta,int(st.size())); ++f) {\n\t\t\tstring ast = st.substr(f, keta);\n\t\t\tif (ast.size() < keta) {\n\t\t\t\tstring from = st.substr(0, f);\n\t\t\t\tstring to = st.substr(f,st.size()-f);\n\t\t\t\tif (to[0] != '0') {\n\t\t\t\t\tans = min(ans, check2(from, to, keta));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ast[0] != '0') {\n\t\t\t\t\tlong long int num = stoll(ast);\n\t\t\t\t\tif (check(f, num, st)) {\n\t\t\t\t\t\tans = min(ans, getnum(make_pair(num, f)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tmemo[1] = 10;\n\tfor (int i = 2; i <18; ++i) {\n\t\tmemo[i] = powint(10,i-1) * (i) * 9 + memo[i - 1];\n\t}\n\twhile (1) {\n\n\t\tstring st; cin >> st;\n\t\tif (st != \"#\") {\n\n\t\t\tlong long int ans = solve(st);\n\t\t\tcout << ans << endl;\n\t\t}\n\t\telse {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<algorithm>\n\nusing namespace std;\n\nstring get(long long start){\n\tstring res=\"\";\n\tfor(int i=0;;i++){\n\t\tstringstream ss;\n\t\tss<<start+i;\n\t\tstring add;\n\t\tss>>add;\n\t\tres+=add;\n\t\tif(res.size()>140) break;\n\t}\n\treturn res;\n}\n\nlong long tens[18];\n\nlong long count(long long x){\n\tif(x<10) return x;\n\tint dig=lower_bound(tens,tens+18,x)-tens;\n\tdig--;\n\tlong long res=0;\n\tfor(int i=0;i<dig;i++){\n\t\tres+=tens[i]*9*(i+1);\n\t}\n\tlong long rem=x-tens[dig];\n\tres+=rem*(dig+1);\n//\tcout<<x<<\" \"<<res<<\"\\n\";\n\treturn res+1;\n}\n\nlong long solve(string str){\n\tif(str==\"1\") return 1;\n\tint N=str.size();\n\tint n=min(N,33);\n\tlong long res=-1;\n\tfor(int i=0;i<n;i++) for(int j=i+1;j<=min(n,i+16);j++){\n\t\tlong long cur=0;\n\t\tfor(int k=i;k<j;k++){\n\t\t\tcur*=10;\n\t\t\tcur+=(str[k]-'0');\n\t\t}\n\t//\tif(i==0&&j==n) cout<<\"cur=\"<<cur<<\"\\n\";\n\t\tif(cur-1<=0) continue;\n\t\tstring cand=get(cur-1);\n\t\tint id=-1;\n\t//\tcout<<cand<<\"\\n\";\n\t\tfor(int m=0;m+str.size()<cand.size();m++){\n\t\t\tbool ok=true;\n\t\t\tfor(int p=0;p<str.size();p++){\n\t\t\t\tif(cand[m+p]!=str[p]){\n\t\t\t\t\tok=false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(ok){\n\t\t\t\tid=m;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(id==-1) continue;\n\t\tlong long tmp=count(cur-1);\n\t\ttmp+=id;\n\t\tif(res==-1||res>tmp) res=tmp;\n\t}\n\tif(str.size()<=34){\n\t\tstring firstHalf,secondHalf;\n\t\tfor(int i=1;i+1<str.size();i++){\n\t\t\tfor(int j=0;j<i;j++) firstHalf+=str[j];\n\t\t\tfor(int j=i;j<str.size();j++) secondHalf+=str[j];\n\t\t\tstring nxt=firstHalf;\n\t\t\tbool flg=false;\n\t\t\tfor(int j=firstHalf.size()-1;j>=0;j--){\n\t\t\t\tif(firstHalf[j]!='9'){\n\t\t\t\t\tflg=true;\n\t\t\t\t\tnxt[j]++;\n\t\t\t\t\tfor(int k=j+1;k<firstHalf.size();k++) nxt[k]='0';\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(flg==false){\n\t\t\t\tnxt=\"\";\n\t\t\t\tfor(int k=0;k<firstHalf.size();k++) nxt+='0';\n\t\t\t}\n\t\t\tint m=min(nxt.size(),secondHalf.size());\n\t\t\tfor(int j=m;j>=0;j--){\n\t\t\t\tstring str1=nxt.substr(0,j);\n\t\t\t\tstring str2=secondHalf.substr(secondHalf.size()-j,j);\n\t\t\t\tif(str1!=str2) continue;\n\t\t\t\tstring cur=secondHalf+nxt.substr(j,1000);\n\t\t\t\tif(cur.size()>=17) break;\n\t\t\t\tlong long t;\n\t\t\t\tstringstream ss;\n\t\t\t\tss<<cur;\n\t\t\t\tss>>t;\n\t\t\t\tstring a=get(t-1);\n\t\t\t\tint id=-1;\n\t\t//\t\tcout<<t<<\"\\n\";\n\t\t\t\tfor(int k=0;k+str.size()<a.size();k++){\n\t\t\t\t\tbool ok=true;\n\t\t\t\t\tfor(int m=0;m<str.size();m++){\n\t\t\t\t\t\tif(str[m]!=a[m+k]){\n\t\t\t\t\t\t\tok=false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(ok){\n\t\t\t\t\t\tid=k;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(id!=-1){\n\t\t//\t\t\tcout<<t<<\" \"<<id<<\"\\n\";\n\t\t\t\t\tlong long a=count(t-1);\n\t\t\t\t\tif(res==-1||res>a+id) res=a+id;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn res;\n}\n\nint main(){\n\ttens[0]=1;\n\tfor(int i=1;i<18;i++) tens[i]=tens[i-1]*10;\n\tstring str;\n\twhile(true){\n\t\tcin>>str;\n\t\tif(str==\"#\") break;\n\t\tlong long ans=solve(str);\n\t\tcout<<ans<<\"\\n\";\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <string.h>\n#include <queue>\nusing namespace std;\n#define MP(x,y) make_pair(x,y)\n#define FI first\n#define SE second\n#define INF 1LL<<60\n\nconst int MAXN = 110;\nint len;\nchar str[MAXN],st[MAXN];\nlong long ans,pos;\n\nlong long trans_stoi(int l,int r)\n{\n\tlong long res=0;\n\tfor (int i=l;i<r;i++)\n\t\tres=res*10+str[i]-'0';\n\treturn res;\n}\n\nvoid trans_itos(long long x)\n{\n\tint num=0;\n\tint tmp[MAXN];\n\twhile (x)\n\t{\n\t\ttmp[num++]=x%10;\n\t\tx/=10;\n\t}\n\tfor (int i=0;i<num;i++)\n\t\tst[i]=tmp[num-i-1]+'0';\n\tst[num]='\\0';\n}\n\nlong long cal(long long ans)\n{\n\tint num=1;\n\tlong long mul=9,p=1,res=0;\n\twhile (ans>p*10)\n\t{\n\t\tres+=num*mul;\n\t\tnum++;\n\t\tmul*=10;\n\t\tp*=10;\n\t}\n\tres+=(ans-p)*num;\n\treturn res;\n}\n\nvoid judge_0()\n{\n\tlong long p=1;\n\tfor (int i=1;i<=len;i++)\n\t{\n\t\tif (str[i]!='0') return;\n\t\tp*=10;\n\t}\n\tans=p;\n\tpos=1;\n}\n\nvoid judge_1()\n{\n\tfor (int i=1;i<len;i++)\n\t{\n\t\tfor (int j=1;j<=i;j++) st[j]=str[j];\n\t\tst[i+1]='\\0';\n\t\tint add=1,l=i;\n\t\twhile (add&&l>0)\n\t\t{\n\t\t\tif (st[l]=='9') st[l]='0',add=1;\n\t\t\telse st[l]=st[l]+1,add=0;\n\t\t\tl--;\n\t\t}\n\t\tfor (int j=1;j<=i;j++)\n\t\t{\n\t\t\tint flag=1;\n\t\t\tfor (int p=len,q=i-j;q>=1;p--,q--)\n\t\t\t\tif (str[p]!=st[q])\n\t\t\t\t{\n\t\t\t\t\tflag=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (flag)\n\t\t\t{\n\t\t\t\tlong long tmp=0;\n\t\t\t\tif (str[i+1]=='0') continue;\n\t\t\t\tfor (int k=i+1;k<=len;k++) tmp=tmp*10+str[k]-'0';\n\t\t\t\tfor (int k=i-j+1;k<=i;k++) tmp=tmp*10+st[k]-'0';\n\t\t\t\t//tmp--;\n\t\t\t\tif (ans>tmp) ans=tmp,pos=i-1;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint main()\n{\n\t//freopen(\"/home/caesar11/0425/d.in\",\"r\",stdin);\n\twhile (scanf(\"%s\",str+1)!=-1)\n\t{\n\t\tif (str[1]=='#') break;\n\t\tlen=strlen(str+1);\n\t\tans=INF;\n\t\tfor (int s=1;s<=len;s++)\n\t\t\tfor (int l=s;l<=17&&s+l-1<=len;l++)\n\t\t\t{\n\t\t\t\tif (str[s]=='0') continue;\n\t\t\t\tlong long tt=trans_stoi(s,s+l);\n\t\t\t\tlong long tmp=tt+1;\n\t\t\t\ttrans_itos(tmp);\n\t\t\t\tint flag=1;\n\t\t\t\tint p=s+l,q=p+strlen(st)-1;\n\t\t\t\twhile (flag)\n\t\t\t\t{\n\t\t\t\t\tif (q>len) break;\n\t\t\t\t\tfor (int i=p,j=0;i<=q;i++,j++)\n\t\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tif (!flag) break;\n\t\t\t\t\ttmp++;\n\t\t\t\t\ttrans_itos(tmp);\n\t\t\t\t\tp=q+1,q=p+strlen(st)-1;\n\t\t\t\t}\n\t\t\t\tif (!flag) continue;\n\t\t\t\tfor (int i=p,j=0;i<=len;i++,j++)\n\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\ttrans_itos(tt-1);\n\t\t\t\tfor (int i=s-1,j=strlen(st)-1;i>0;i--,j--)\n\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tif (ans>tt)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (s==1) ans=tt;\n\t\t\t\t\t\telse ans=tt-1;\n\t\t\t\t\t\tpos=s;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\tjudge_1();\n\t\tjudge_0();\n\t\t//printf(\"%lld\\n\",ans);\n\t\tprintf(\"%lld\\n\",cal(ans)+pos);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstdlib>\n#include <string.h>\n#include <queue>\nusing namespace std;\n#define MP(x,y) make_pair(x,y)\n#define FI first\n#define SE second\n#define INF 1LL<<60\n\nconst int MAXN = 110;\nint len;\nchar str[MAXN],st[MAXN];\nlong long ans,pos;\n\nlong long trans_stoi(int l,int r)\n{\n\tlong long res=0;\n\tfor (int i=l;i<r;i++)\n\t\tres=res*10+str[i]-'0';\n\treturn res;\n}\n\nvoid trans_itos(long long x)\n{\n\tint num=0;\n\tint tmp[MAXN];\n\twhile (x)\n\t{\n\t\ttmp[num++]=x%10;\n\t\tx/=10;\n\t}\n\tfor (int i=0;i<num;i++)\n\t\tst[i]=tmp[num-i-1]+'0';\n\tst[num]='\\0';\n}\n\nlong long cal(long long ans)\n{\n    if (ans<=0) return 0;\n\tint num=1;\n\tlong long mul=9,p=1,res=0;\n\twhile (ans>p*10)\n\t{\n\t\tres+=num*mul;\n\t\tnum++;\n\t\tmul*=10;\n\t\tp*=10;\n\t}\n\tres+=(ans-p)*num;\n\treturn res;\n}\n\nvoid judge_0()\n{\n\tlong long p=1;\n\tfor (int i=1;i<=len;i++)\n\t{\n\t\tif (str[i]!='0') return;\n\t\tp*=10;\n\t}\n\tans=p;\n\tpos=2;\n}\n\nvoid judge_1()\n{\n\tfor (int i=1;i<min(17,len);i++)\n\t{\n\t\tfor (int j=1;j<=i;j++) st[j]=str[j];\n\t\tst[i+1]='\\0';\n\t\tint add=1,l=i;\n\t\twhile (add&&l>0)\n\t\t{\n\t\t\tif (st[l]=='9') st[l]='0',add=1;\n\t\t\telse st[l]=st[l]+1,add=0;\n\t\t\tl--;\n\t\t}\n\t\tfor (int j=max(1,2*i-len);j<=i;j++)\n\t\t{\n\t\t\tint flag=1;\n\t\t\tfor (int p=len,q=i-j;q>=1;p--,q--)\n\t\t\t\tif (str[p]!=st[q])\n\t\t\t\t{\n\t\t\t\t\tflag=0;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\tif (flag)\n\t\t\t{\n\t\t\t\tlong long tmp=0;\n\t\t\t\tif (str[i+1]=='0') continue;\n\t\t\t\tif (j+len-i>=18) continue;\n\t\t\t\tfor (int k=i+1;k<=len;k++) tmp=tmp*10+str[k]-'0';\n\t\t\t\tfor (int k=i-j+1;k<=i;k++) tmp=tmp*10+st[k]-'0';\n\t\t\t\tif (ans>tmp) ans=tmp,pos=1-i;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint cal_len(long long x)\n{\n    int res=0;\n    while (x)\n    {\n        x/=10;\n        res++;\n    }\n    return res;\n}\n\nint main()\n{\n\tint ca=0;\n\twhile (scanf(\"%s\",str+1)!=-1)\n\t{\n\t\tif (str[1]=='#') break;\n\t\tlen=strlen(str+1);\n\t\tans=INF;\n\t\tfor (int s=1;s<=len;s++)\n\t\t\tfor (int l=s;l<=17&&s+l-1<=len;l++)\n\t\t\t{\n\t\t\t\tif (str[s]=='0') continue;\n\t\t\t\tlong long tt=trans_stoi(s,s+l);\n\t\t\t\tlong long tmp=tt+1;\n\t\t\t\ttrans_itos(tmp);\n\t\t\t\tint flag=1;\n\t\t\t\tint p=s+l,q=p+strlen(st)-1;\n\t\t\t\twhile (flag)\n\t\t\t\t{\n\t\t\t\t\tif (q>len) break;\n\t\t\t\t\tfor (int i=p,j=0;i<=q;i++,j++)\n\t\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tif (!flag) break;\n\t\t\t\t\ttmp++;\n\t\t\t\t\ttrans_itos(tmp);\n\t\t\t\t\tp=q+1,q=p+strlen(st)-1;\n\t\t\t\t}\n\t\t\t\tif (!flag) continue;\n\t\t\t\tfor (int i=p,j=0;i<=len;i++,j++)\n\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\ttrans_itos(tt-1);\n\t\t\t\tfor (int i=s-1,j=strlen(st)-1;i>0;i--,j--)\n\t\t\t\t\tif (str[i]!=st[j])\n\t\t\t\t\t{\n\t\t\t\t\t\tflag=0;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tif (flag)\n\t\t\t\t{\n\t\t\t\t\tif (ans>tt)\n                        ans=tt-1,pos=cal_len(ans)-s+2;\n\t\t\t\t}\n\t\t\t}\n\t\tjudge_1();\n\t\tjudge_0();\n\t\tprintf(\"%lld\\n\",cal(ans)+pos);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return INF;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n  \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n  \n  //  cout<<s<<endl;\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    if(s[i]=='0')continue;\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n  //  cout<<first<<' '<<second<<endl;\n  //  cout<<fnum<<' '<<snum<<endl;\n  \n  string nsecond=compute(second, ll2s(snum) );\n\n\n  if( isZero(first) ){\n    string tmp=first;\n    tmp[ (int)tmp.size()-1 ]='1';\n    nsecond=compute(second,tmp);\n  }else if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>16)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n\n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n\n  //  assert(0);\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nint main(){\n  while(1){\n    cin>>s;\n    if(s==\"#\")break;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n  \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n\n    \n  while((int)first.size()<si){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while((int)second.size()<len-(si+ti)){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      if(i+b.size() > a.size()){\n        return a.substr(0,i)+b;\n      }\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n\n  string ssnum=ll2s(snum);\n  \n  while(ssnum.size()<first.size())\n    ssnum=\"0\"+ssnum;\n  \n  string nsecond=compute(second, ssnum );\n\n\n  if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>16)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  string fi=\"\";\n  for(int i=1;i<(int)s.size();i++){\n    fi.push_back(s[i-1]);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nint main(){\n  while(1){\n    cin>>s;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m < N; ++m) {\n      for(int L = m; L < W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000000LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),17);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tif(S[j]=='0')continue;\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-30;k<=30;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tif(U[0]=='0'){\n\t\t\tfor(int i=1;i<=9;i++){\n\t\t\t\tstring ADD=\"\";ADD+=(char)('0'+i);\n\t\t\t\tret=min(ret,solve(ADD+U)+1);\n\t\t\t}\n\t\t}\n\t\telse ret=solve(U);\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m < N; ++m) {\n      for(int L = m; L < W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000000LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n  \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n\n    \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n\n  string ssnum=ll2s(snum);\n  \n  while(ssnum.size()<first.size())\n    ssnum=\"0\"+ssnum;\n  \n  string nsecond=compute(second, ssnum );\n\n\n  if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>16)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nstring bb=\"\";\nll bf(){\n  for(int i=0;i+len<=(int)bb.size();i++)\n    if(bb.substr(i,len)==s)return i;\n  return -1;\n}\n\nint main(){\n  for(int i=0;i<10000;i++)\n    bb+=ll2s(i);\n  \n  while(1){\n    cin>>s;\n    if(s==\"#\")break;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n    cout<<ans<<endl;\n    cout<<bf()<<endl<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m < N; ++m) {\n      for(int L = m; L <= W; ++L) {\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n      }\n    }\n\n    lli res = 10000000000000000LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<string.h>\n#include<math.h>\n#include<algorithm>\n#include <iostream>\n#define LL long long\n\nusing namespace std;\n\nLL f[18];\nchar str[111];\nint n;\n\nLL ans;\nvoid update_ans(LL key)\n{\n    ans = min(ans, key);\n    return ;\n}\n\nLL get(int l, int r)\n{\n    LL res = 0;\n    for (int i=l; i<=r; i++)\n    {\n        res = res * 10 + str[i]-'0';\n    }\n    return res;\n}\n\nint get_len(LL n)\n{\n    int res = 0;\n    while (n)\n    {\n        res ++;\n        n/=10;\n    }\n    return res;\n}\n\nLL solve(LL n)\n{\n    if (n == 0) return 1;\n\n    long long a = n, ans = 1, tmp = 0, flag = 9;\n    while (a) {a /= 10, tmp++;}\n    for (int i = 1; i < tmp; i++) {ans += i * flag, flag *= 10;}\n    ans += (n - (long long)pow(10, tmp - 1) + 1) * tmp;\n\n    return ans;\n}\n\n\n    int da[22];\n    int db[22];\n    int la = 0;\n    int lb = 0;\nbool judge(LL a, LL b)\n{\n    while (a)\n    {\n        da[++la] = a % 10;\n        a/=10;\n    }\n    while (b)\n    {\n        db[++lb] = b % 10;\n        b/=10;\n    }\n\n    while (la && lb)\n    {\n        if (da[la] == db[lb]){\n            la--;\n            lb--;\n        }else{\n            return false;\n        }\n    }\n    return true;\n}\n\nLL niuniu(LL a, LL b,int len , int j)\n{\n    return a * f[len - j+1] + b;\n}\nvoid calc(int len)\n{\n    for (int i=0; i<min(len, n); i++)\n    {\n        LL a = get(0, i - 1);\n        LL b = -1, c;\n        LL d = -1;\n        int j = i;\n        while (j < n)\n        {\n            c  = get(j, min(n, j + len)-1);\n            if (b == -1)\n            {\n                if (j+len >= n)\n                {\n                    //niuniu\n                    if (i==0){\n                        d = c;\n                        break;\n                    }\n                    if (len >= n){\n                        //ok\n                        d = niuniu(a, c, len,j);\n                        break;\n                    }else{\n                        if (a == f[j+2] - 1){\n                            if (b % f[n - j] == 0){\n                                d = (c/f[n-j]) * f[len+1] ;\n                                //ok\n                            }else{\n                                d = -1;\n                                break;\n                            }\n                        }else{\n                            if (a / f[n - len + 1] == (c % f[(len) - (n-j) + 1])){\n                                d = c * f[j - (n - len) + 1] + (c % f[(len) - (n-j) + 1]);\n                                break;\n                            }else{\n                                d = -1;\n                                break;\n                            }\n                        }\n                    }\n                    //hanchunrui\n                }\n                else\n                {\n                    if (i > 0){\n                        if ((c - 1) % f[i+1] == a){\n                            d = c;\n                            //ok;\n                        }else{\n                            d = -1;\n                            break;\n                        }\n                    }\n                }\n            }\n            else\n            {\n                if (j+len > n){\n                    if (judge(b+1, c)){\n                        //ok\n                    }else{\n                        //no\n                        d = -1;\n                        break;\n                    }\n                }\n                else\n                {\n                    if (b + 1 == c){\n                        //ok\n                    }else{\n                        //no\n                        d = -1;\n                        break;\n                    }\n                }\n            }\n\n            j += len;\n            b = c;\n            if (get_len(b) != get_len(b+1))\n            {\n                len++;\n            }\n        }\n\n        if (d!=-1){\n            update_ans(solve(d-2) + i);\n        }\n    }\n    return ;\n}\nint main()\n{\n//    printf(\"%d\\n\",judge(123,2));\n    f[0] = 0;\n    f[1] = 1;\n    for (int i=2; i<18; i++)\n    {\n        f[i] = f[i-1]*10;\n    }\n    //printf(\"%lld\\n\",niuniu(12,34,5,2));\n\n//    printf(\"%lld\\n\",solve(101));\n\n    while (scanf(\"%s\",str)==1)\n    {\n        if (str[0]=='#')\n        {\n            break;\n        }\n        n = strlen(str);\n\n        ans = f[17];\n        for (int k=1; k<=16; k++)\n        {\n            calc(k);\n        }\n\n        printf(\"%lld\\n\",ans + 1);\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n \nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n \n \nstring s;\nint len;\n \nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n \n \nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n   \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n \n     \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n \n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n \n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n   \n}\n \nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n \nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n \n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>a.size())return res;\n    }\n  }\n  return a+b;\n}\n \nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n \nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n \nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n \n \n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n \n  string ssnum=ll2s(snum);\n   \n  while(ssnum.size()<first.size())\n    ssnum=\"0\"+ssnum;\n   \n  string nsecond=compute(second, ssnum );\n \n \n  if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n   \n  if(nsecond.size()>16)return INF;\n   \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n   \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n \n  return INF;\n}\n \nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n \nstring bb=\"\";\nll bf(){\n  for(int i=0;i+len<=(int)bb.size();i++)\n    if(bb.substr(i,len)==s)return i;\n  return -1;\n}\n \nint main(){\n  for(int i=0;i<100000;i++)\n    bb+=ll2s(i);\n   \n  while(1){\n    cin>>s;\n    len=s.size();\n    if(s==\"#\")break;\n    \n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n \n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<(Int)min(17u,s.size());i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=(Int)max(t.size(),u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string(x-1);\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string(++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)+j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\n\n\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    if(s==\"0\") ans=11;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string(x-1);\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string(++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)-j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nchar str[110];\nint b[110];\nlong long pow10[17];\nchar to[110];\nchar rg[210]=\"1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162\";\nint main(){\n\tpow10[0]=1;\n\tfor(int i=1;i<17;i++)pow10[i]=pow10[i-1]*10;\n\twhile(1){\n\t\tscanf(\"%s\",str);\n\t\tif(str[0]=='#')break;\n\t\tlong long ret=9999999999999999LL;\n\t\tint n=strlen(str);\n\t\tbool OK=true;\n\t\tfor(int i=0;i<n;i++)if(rg[i]!=str[i])OK=false;\n\t\tif(OK){\n\t\t\tprintf(\"1\\n\");continue;\n\t\t}\n\t\tbool oz=true;\n\t\tfor(int i=0;i<n;i++)if(str[i]!='0')oz=false;\n\t\tif(oz){\n\t\t\tlong long at=2;\n\t\t\tfor(int i=1;i<=n;i++)at+=(pow10[i]-pow10[i-1])*i;\n\t\t\tprintf(\"%lld\\n\",at);continue;\n\t\t}\n\t\tfor(int i=1;i<=n;i++){\n\t\t\tfor(int j=0;j<i;j++){\n\t\t\t\tif(str[j]=='0')continue;\n\t\t\t\tlong long fi=0;\n\t\t\t\tfor(int k=0;k<i-j;k++){\n\t\t\t\t\tfi*=10;\n\t\t\t\t\tfi+=str[j+k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long la=0;\n\t\t\t\tfor(int k=0;k<j;k++){\n\t\t\t\t\tla*=10;\n\t\t\t\t\tla+=str[k]-'0';\n\t\t\t\t}\n\t\t\t\tlong long s=la+1;\n\t\t\t\tlong long t=fi;\n\t\t\t//\tprintf(\"%lld %lld\\n\",s,t);\n\t\t\t\twhile(s%10==0)s/=10;\n\t\t\t\twhile(t%10==0)t/=10;\n\t\t\t\tlong long f=fi*pow10[j]+la;\n\t\t\t\tif(s==1&&(j==0||la)){\n\t\t\t\t\tif(t==1){\n\t\t\t\t\t\tf=pow10[i]-1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tf=(fi-1)*pow10[j]+la;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tf++;\n\t\t\t\tlong long F=f;\n\t\t\t\tbool ok=true;\n\t\t\t\tint at=j;\n\t\t\t\twhile(at<n){\n\t\t\t\t\tsprintf(to,\"%lld\",f);\n\t\t\t\t\tint len=strlen(to);\n\t\t\t\t\tfor(int k=0;k<len;k++){\n\t\t\t\t\t\tif(at>=n)break;\n\t\t\t\t\t\tif(to[k]!=str[at])ok=false;\n\t\t\t\t\t\tat++;\n\t\t\t\t\t}\n\t\t\t\t\tf++;\n\t\t\t\t}\n\t\t\t\tif(ok){\n\t\t\t\t\tlong long at=-j;\n\t\t\t\t\tfor(int k=1;k<i;k++){\n\t\t\t\t\t\tat+=(pow10[k]-pow10[k-1])*k;\n\t\t\t\t\t}\n\t\t\t\t\tat+=(F-pow10[i-1])*i;\n\t\t\t\t\tret=min(ret,at+1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tprintf(\"%lld\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  char buf[1024];\n  sprintf(buf, \"%lld\", x);\n  return string(buf);\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m <= N; ++m) {\n      for(int L = m; L < W; ++L) {\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n      }\n    }\n\n    lli res = 10000000000000001LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < (int)s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return INF;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n  \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n  \n  //  cout<<s<<endl;\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    if(s[i]=='0')continue;\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n  //  cout<<first<<' '<<second<<endl;\n  //  cout<<fnum<<' '<<snum<<endl;\n  \n  string nsecond=compute(second, ll2s(snum) );\n  if(nsecond.size()>16)return INF;\n\n\n  if( isZero(first) ){\n    string tmp=first;\n    tmp[ (int)tmp.size()-1 ]='1';\n    nsecond=compute(second,tmp);\n  }else if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n\n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n\n  //  assert(0);\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nint main(){\n  while(1){\n    cin>>s;\n    if(s==\"#\")break;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <bitset>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <iomanip>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <stack>\n#include <sstream>\n#include <string>\n#include <vector>\nusing namespace std;\n\n#pragma comment(linker, \"/STACK:400000000\")\n\n#define EPS 1e-9\n#define INF MOD\n#define MOD 1000000007LL\n#define fir first\n#define foreach(it,X) for(it=X.begin();it!=X.end();it++)\n#define iss istringstream\n#define ite iterator\n#define ll long long\n#define mp make_pair\n#define rep(i,n) rep2(i,0,n)\n#define rep2(i,m,n) for(int i=m;i<n;i++)\n#define pi pair<int,int>\n#define pb push_back\n#define sec second\n#define sst stringstream\n#define sz size()\n#define vc vector\ntypedef vc<int> vi;\ntypedef vc<ll> vl;\ntypedef vc<string> vs;\n\nstring s;\nint n;\n\nll toLL(string s){\n\tif(s==\"\")return 0;\n\tiss is(s);\n\tll x;\n\tis>>x;\n\treturn x;\n}\n\nstring toStr(ll x){\n\tsst ss;\n\tss<<x;\n\treturn ss.str();\n}\n\nint main(){\n\twhile(cin>>s && s!=\"#\"){\n\t\tll ans=0;\n\t\tn=s.sz;\n\t\tint allzero=1;\n\t\trep(i,n)if(s[i]!='0')allzero=0;\n\t\tif(allzero)s=\"1\"+s,n++,ans++;\n\t\t\n\t\tll firstnum=INF*INF,pos=-1;\n\t\t\n\t\trep(a,16)rep2(b,1,n+1){\n\t\t\tif(a+b>16)continue;\n\t\t\tif(a==0 && s[0]=='0')continue;\n\t\t\tif(b<n && s[b]=='0')continue;\n\t\t\tstring pref=s.substr(0,b);\n\t\t\tstring rest=s.substr(b);\n\t\t\tif(rest.sz>=a){\n\t\t\t\trep(i,2){\n\t\t\t\t\tll head=toLL(rest.substr(0,a))-i;\n\t\t\t\t\tif(head<0)continue;\n\t\t\t\t\tint oneless=0;\n\t\t\t\t\tif(toStr(head).sz == a-1) oneless=1;\n\t\t\t\t\tll num=toLL(toStr(head)+pref);\n\t\t\t\t\tll num0=num;\n\t\t\t\t\t//cout<<a<<\" \"<<b<<\" \"<<i<<\" \"<<head<<\" \"<<num<<endl;\n\t\t\t\t\twhile(rest.sz>0){\n\t\t\t\t\t\tnum++;\n\t\t\t\t\t\tstring t=toStr(num);\n\t\t\t\t\t\trep(i,min(rest.sz,t.sz)){\n\t\t\t\t\t\t\tif(rest[i] != t[i]){\n\t\t\t\t\t\t\t\tgoto out;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(rest.sz<t.sz)rest=\"\";\n\t\t\t\t\t\telse rest=rest.substr(t.sz);\n\t\t\t\t\t}\n\t\t\t\t\tout:;\n\t\t\t\t\t//cout<<\"[\"<<rest<<\"]\"<<endl;\n\t\t\t\t\tif(rest==\"\"){\n\t\t\t\t\t\tif(num0 < firstnum || num0 == firstnum && a - oneless < pos){\n\t\t\t\t\t\t\t//cout<<a<<\" \"<<b<<\" \"<<i<<\" \"<<head<<\" \"<<num<<endl;\n\t\t\t\t\t\t\tfirstnum=num0;\n\t\t\t\t\t\t\tpos=a - oneless;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t//cout<<firstnum<<\" \"<<pos<<endl;\n\t\tans+=pos;\n\t\tll p10=10,dig=1;\n\t\twhile(1){\n\t\t\tif(firstnum-1<=p10-1){\n\t\t\t\tans+=dig*(firstnum-1 - p10/10+1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tans+=dig*(p10-1 - p10/10+1);\n\t\t\tp10*=10;\n\t\t\tdig++;\n\t\t}\n\t\tcout<<ans+1<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n \nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n \n \nstring s;\nint len;\n \nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n \n \nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n   \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n \n     \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n \n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n \n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n   \n}\n \nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n \nstring compute(string a,string b,bool flag=false){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n \n    if(!flg)continue;\n\n    if(flag){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }else{\n      string res=a.substr(0,i)+b;\n      if(res.size()>a.size())return res;\n    }\n  }\n  return a+b;\n}\n \nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n \nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n \nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n \n \n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n \n  string ssnum=ll2s(snum);\n   \n  while(ssnum.size()<first.size())\n    ssnum=\"0\"+ssnum;\n   \n  string nsecond=compute(second, ssnum );\n \n \n  if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp,true);\n  }\n   \n  if(nsecond.size()>16)return INF;\n   \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n   \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n \n  return INF;\n}\n \nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n \nstring bb=\"\";\nll bf(){\n  for(int i=0;i+len<=(int)bb.size();i++)\n    if(bb.substr(i,len)==s)return i;\n  return -1;\n}\n \nint main(){\n  for(int i=0;i<100000;i++)\n    bb+=ll2s(i);\n   \n  while(1){\n    cin>>s;\n    len=s.size();\n    if(s==\"#\")break;\n    \n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n \n    cout<<ans<<endl;\n    \n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstdio>\n#include <cstdlib>\n#include <sstream>\nusing namespace std;\ntypedef long long lli;\n\nconst lli W = 17;\nlli ten[W];\nlli begin[W];\n\nlli getA(string a, string b) {\n  while(a.size() < b.size()) a.insert(0, \"0\");\n  while(b.size() < a.size()) b.insert(0, \"0\");\n  a.insert(0, \"0\");\n  b.insert(0, \"0\");\n  int n = a.size();\n  for(int i = n-1, t = 1; i >= 0; --i) {\n    if(a[i] == 'X') break;\n    int d = (a[i]-'0') + t;\n    a[i] = '0' + d % 10;\n    t = d / 10;\n  }\n  for(int i = n-1; i >= 0; --i) {\n    if(a[i] == 'X' && b[i] == 'X') {\n      if(i == 0) a[i] = '1';\n      else a[i] = '0';\n    } else if(a[i] == 'X') {\n      a[i] = b[i];\n    } else if(b[i] == 'X') {\n      //a[i] = a[i];\n    } else if(a[i] == b[i]) {\n      //a[i] = a[i];\n    } else {\n      return -1LL;\n    }\n  }\n  return atoll(a.c_str()) - 1LL;\n}\n\nstring toString(lli x) {\n  stringstream ss;\n  ss << x;\n  string res;\n  ss >> res;\n  return res;\n}\n\nlli getPos(lli x) {\n  if(x == 0) return 0;\n  lli digits = 0;\n  lli t = x;\n  while(t) {\n    ++digits;\n    t /= 10;\n  }\n  lli dist = x - ten[digits-1];\n  return begin[digits-1] + dist * digits;\n}\n\nint main() {\n  // init\n  ten[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    ten[i] = ten[i-1] * 10LL;\n  }\n  begin[0] = 1;\n  for(int i = 1; i < W; ++i) {\n    begin[i] = begin[i-1] + i * (ten[i] - ten[i-1]);\n  }\n\n  string s;\n  while(cin >> s && s != \"#\") {\n    int N = s.size();\n    vector<lli> as;\n    vector<lli> bs;\n    for(int m = 1; m <= N; ++m) {\n      for(int L = m; L < W; ++L) {\n        as.push_back(ten[L]-1LL);\n        bs.push_back(L-m);\n\n        string a = s.substr(0, m);\n        string b = s.substr(m, min((int)s.size()-m, L));\n        while(a.size() < L) a.insert(0, \"X\");\n        while(b.size() < L) b += 'X';\n        if(a[0] == '0' || b[0] == '0') continue;\n        lli A = getA(a, b);\n        if(A != -1LL) {\n          as.push_back(A);\n          bs.push_back(L-m);\n        }\n      }\n    }\n\n    lli res = 10000000000000001LL;\n    for(int i = 0; i < as.size(); ++i) {\n      string t;\n      lli na = as[i];\n      while((int)t.size()-bs[i] < (int)s.size()) {\n        t += toString(na++);\n      }\n      if(t.substr(bs[i], s.size()) == s) {\n        res = min(res, getPos(as[i]) + bs[i]);\n      }\n    }\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n  \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n\n    \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n\n  string ssnum=ll2s(snum);\n  \n  while(ssnum.size()<first.size())\n    ssnum=\"0\"+ssnum;\n  \n  string nsecond=compute(second, ssnum );\n\n\n  if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>16)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nstring bb=\"\";\nll bf(){\n  for(int i=0;i+len<=(int)bb.size();i++)\n    if(bb.substr(i,len)==s)return i;\n  return -1;\n}\n\nint main(){\n  for(int i=0;i<100000;i++)\n    bb+=ll2s(i);\n  \n  while(1){\n    cin>>s;\n    len=s.size();\n    \n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <cctype>\nusing namespace std;\ntypedef long long int LL;\nconst int maxn = 105;\nconst LL INF = 1LL << 62;\nLL L[maxn];\n\nint main()\n{\n    char s[maxn], tmps[maxn];\n\n    LL _j = 1, _J[maxn];\n\n    _J[1] = 0; _J[2] = 10;\n    for(int i = 3; i < 20; i++) _J[i] = _J[i-1] * 10;\n\n    L[1] = 0;\n    for(int i = 2; i < 20; i++, _j *= 10) {\n        L[i] = (i-1) * (_J[i] - _J[i-1]) + L[i-1];\n    }\n    //for(int i = 1; i <10; i++) cout << L[i] <<endl;\n\n\n    while(1)\n    {\n        scanf(\"%s\", s);\n        if(!isdigit(s[0])) break;\n\n        int sti, stj, ansi, ansj, len = strlen(s);\n        LL ans = INF;\n        bool ok = 0;\n\n        for(int i = 0; i < len; i++) if(s[i] != '0') {\n            ok = 1; break;\n        }\n        if(!ok) {\n            s[len] = '1'; len++;\n        }\n\n        if(len <= 32) {\n            //cout << s << endl;\n            for(int i = 1; i < len; i++) if(s[i] != '0') {\n                    //printf(\"______%d\\n\", i);\n                int c = 0;\n                for(int j = i; j < len; j++) tmps[c++] = s[j];\n                for(int j = 0; j < i; j++) tmps[c++] = s[j];\n                tmps[c] = 0;\n                //printf(\"--%d %s\\n\", i, tmps);\n                int ll = len, tt = len-i, gao = 0, a, l, r;\n\n                for(a = 1; !gao && a < tt; a++) {\n                    for(l = a, r = tt; l < tt && r < len-1; l++, r++)\n                        if(tmps[l] != tmps[r]) break;\n                    if(l == tt) {\n                        //cout << '%' << a << ' ' <<l << ' ' << r << endl;\n                        ll -= tt - a;\n                        for(l = tt; r < len; r++, l++) tmps[l] = tmps[r];\n                        tmps[l] = 0;\n                        gao = 1;\n                        //cout << tmps <<endl;\n                        break;\n                    }\n                }\n                //cout << ll <<endl;\n                if(ll > 16) continue;\n                LL tmp;\n                sscanf(tmps, \"%lld\", &tmp);\n                if(++tmp < ans) {\n                    ans = tmp; ansi = i; ansj = ll;\n                }\n            }\n        }\n\n        for(sti = 0; sti < 16 && sti < len; sti++) if(s[sti] != '0') {\n            for(stj = sti+1; stj <= 16 && sti+stj <= len; stj++) {\n                for(int i = sti, j = 0; j < stj; j++, i++) tmps[j] = s[i]; tmps[stj] = 0;\n                //cout << tmps << endl;\n                long long tmp, _tmp;\n                bool tmpok = 1;\n                sscanf(tmps, \"%lld\", &tmp);\n                sprintf(tmps, \"%lld\", tmp-1);\n                for(int i = sti-1, j = stj-1; i >= 0; i--, j--)\n                    if(tmps[j] != s[i]) { tmpok = 0; break; }\n                if(tmpok == 0) continue;\n                //cout << sti << ' ' << stj << endl;\n                _tmp = tmp;\n\n                sprintf(tmps, \"%lld\", ++tmp);\n                int tmplen = strlen(tmps);\n\n                for(int i = sti+stj, j = 0; i < len; i++, j++) {\n\n                    if(j == tmplen) {\n                        sprintf(tmps, \"%lld\", ++tmp);\n                        tmplen = strlen(tmps);\n                        j = 0;\n                    }\n                    //printf(\"-----%s %c %c\\n\", tmps, s[i], tmps[j]);\n                    if(s[i] != tmps[j]) { tmpok = 0; break; }\n                }\n\n                if(tmpok && _tmp < ans) {\n                    ans = _tmp; ansi = sti; ansj = stj;\n                    ok = 1;\n                }\n            }\n        }\n        //cout << ans << ' ' << ansi << ' ' << ansj <<endl;\n\n        LL tot = L[ansj]; _j = 1;\n        //cout << tot << ' ' << ans - _J[ansj] << endl;\n\n        tot += (ans - _J[ansj]) * ansj;\n\n        //cout << tot << endl;\n        tot -= ansi;\n        cout << tot << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nint n;\nchar input[1000];\nchar temp[1000];\nchar temp2[1000];\nchar champernowne[1000000];\n\nvoid PrintChampernowne(int index, int len) {\n  REP(i, len) {\n    putchar(champernowne[index + i - 1]);\n  }\n  puts(\"\");\n}\n\nll Convert(pair<ll, ll> ans) {\n  //cout << ans.first << \" \" << ans.second << endl;\n  ll ret = ans.second + 1;\n  ll base = 1;\n  ll cnt = 1;\n  ans.first--;\n  while (true) {\n    if (base * 10 <= ans.first) {\n      ret += cnt * base * 9;\n    } else {\n      ret += cnt * (ans.first - base + 1);\n      break;\n    }\n    cnt++;\n    base *= 10;\n  }\n  return ret;\n}\n\nvoid Plus(char *str) {\n  (*str)++;\n  if (*str > '9') { *str = '0'; Plus(str - 1); }\n}\n\nint main() {\n  FOREQ(i, 1, 10000) {\n    sprintf(champernowne + strlen(champernowne), \"%d\", i);\n  }\n  while (scanf(\"%s\", input), input[0] != '#') {\n    pair<ll, ll> ans(1LL << 60, 1LL << 60);\n    n = strlen(input);\n    // one\n    if (n < 17) {\n      if (input[0] == '0') {\n        sprintf(temp, \"1%s\", input);\n        ans = min(ans, make_pair(atoll(temp), 1LL));\n      } else {\n        ans = min(ans, make_pair(atoll(input), 0LL));\n      }\n    }\n    // two\n    if (n < 34) {\n      FOREQ(i, 1, n) {\n        if (input[i] == '0') { continue; }\n        int start = 100;\n        MEMSET(temp2, '0');\n        memcpy(temp2 + start, input, i);\n        temp2[start + i] = 0;\n        sprintf(temp, \"%s\", temp2 + start);\n        Plus(temp2 + start + i - 1);\n        if (temp2[start - 1] == '1') { start--; }\n        FOREQ(j, 0, i + 1) {\n          if (i + j > n) { continue; }\n          memcpy(temp2 + start - (n - i - j), input + i, n - i - j);\n          sprintf(temp + i, \"%s\", temp2 + start - (n - i - j));\n          temp[n] = '\\0';\n          if (strcmp(input, temp) == 0) {\n            ll len = strlen(temp2 + start - (n - i - j));\n            if (len >= 17) { continue; }\n            ll v = atoll(temp2 + start - (n - i - j)) - 1;\n            ll offset = len - i;\n            //cout << i << \" \" << j << \" \" << v << \" \" << offset << endl;\n            ans = min(ans, make_pair(v, offset));\n          }\n        }\n      }\n    }\n    // more than\n    FOREQ(i, 1, n) {\n      FOREQ(j, 1, n) {\n        memcpy(temp, input + j, i);\n        temp[i] = '\\0';\n        ll start = atoll(temp) - 1;\n        if (start <= 0) { continue; }\n        ll v = start;\n        sprintf(temp2, \"%lld\", v);\n        int len = strlen(temp2);\n        if (len < j) { continue; }\n        ll offset = len - j;\n        sprintf(temp, \"%s\", temp2 + offset);\n        int cnt = 1;\n        while ((int)strlen(temp) < n) {\n          v++;\n          cnt++;\n          sprintf(temp + strlen(temp), \"%lld\", v);\n        }\n        if (cnt < 3) { continue; }\n        temp[n] = 0;\n        if (strcmp(input, temp) == 0) {\n          ans = min(ans, make_pair(start, offset));\n        }\n      }\n    }\n    printf(\"%lld\\n\", Convert(ans));\n    //cout << input << endl;\n    //PrintChampernowne(Convert(ans), n);\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nint memo[17];\n\nvoid init(){\n  \n  ll x=1;\n  \n  for(int i=1;i<17;i++){\n    memo[i]=(x*10-x)*i;\n    x*=10;\n  }\n  \n  for(int i=2;i<17;i++) memo[i]+=memo[i-1];\n}\n\nll cal(int n){\n  ll res=1;\n  for(int i=1;i<n;i++) res*=10;\n  return res;\n}\n\nll get_num(string s){\n  return memo[s.size()-1]+(stoll(s)-cal(s.size())+1)*s.size();\n}\n\nstring lltos(ll num){\n\n  string res;\n  \n  if(num==0) return \"0\";\n  \n  while(num){\n    res=(char)(num%10+'0')+res;\n    num/=10;\n  }\n  \n  return res;\n}\n\nbool check(string s, int idx, int keta, int add){\n  \n  ll com = stoll(s.substr(idx,keta));\n  \n  string firstnum = lltos(com-1);\n  \n  ll firstketa = keta-add;\n  \n  \n}\n\nint main(){\n  \n  init();\n\n  while(1){\n    \n    string s;\n    cin>>s;\n    \n    int sz=min(16,(int)s.size());\n    \n    for(int i=1;i<=sz;i++){\n      \n      for(int j=1;j<sz;j++){\n\n\tif(j+i<=s.size()&&check(s,j,i,0)){\n\t  \n\t}\n\t\n\tif(j+i+1<=s.size()&&check(s,j,i+1,1)){\n\t  \n\t}\n\t\n\tif(j+i>s.size()){\n\t  \n\t}\n      }\n      \n    }  \n    \n  }\n\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),17);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tif(S[j]=='0')continue;\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-25;k<=25;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\t\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tif(U[0]=='0')ret=solve(\"1\"+U)+1;\n\t\telse ret=solve(U);\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nlong long search(long long Z){\n\tstring W=to_string(Z);\n\tlong long H1=9,H2=1,H3=1;\n\tfor(int i=0;i<(int)W.size()-1;i++){H2+=H1*(i+1);H1*=10;H3*=10;}\n\tH1/=10;\n\tlong long K=H2+(Z-H3)*W.size();\n\treturn K;\n}\nlong long solve(string S){\n\tstring T=\"-\";\n\tfor(int i=1;i<=10009;i++)T+=to_string(i);\n\tfor(int i=0;i<=(int)(T.size()-S.size());i++){\n\t\tif(T.substr(i,S.size())==S)return i;\n\t}\n\tlong long minx=1LL<<62;\n\tfor(int i=5;i<=min((int)S.size(),16);i++){\n\t\tfor(int j=0;j<i;j++){\n\t\t\tstring Y=S.substr(j,S.size()-j);\n\t\t\tif((int)Y.size()>i)Y=Y.substr(0,i);\n\t\t\tif((int)Y.size()<i){\n\t\t\t\twhile((int)Y.size()<i){Y+=S[j-(i-Y.size())];}\n\t\t\t\tlong long J=stoll(Y);J++;Y=to_string(J);\n\t\t\t}\n\t\t\tstring R=\"\";int J=0;\n\t\t\tfor(int k=-25;k<=25;k++){if(k==0)J=R.size();R+=to_string(stoll(Y)+k);}\n\t\t\tR=R.substr(J-j,S.size());\n\t\t\t\n\t\t\tif(R!=S)continue;\n\t\t\tminx=min(minx,search(stoll(Y))-j);\n\t\t}\n\t}\n\treturn minx;\n}\nint main(){\n\twhile(true){\n\t\tstring U;cin>>U;if(U==\"#\")break;\n\t\tlong long ret=1LL<<62;\n\t\tstring F[10]={\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\"};\n\t\tfor(int i=1;i<=9;i++){ret=min(ret,solve(F[i]+U)+1);}\n\t\tfor(int i=1;i<=9;i++){ret=min(ret,solve(U+F[i]));}\n\t\tcout<<ret<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\nconst ll INF = (1LL<<60);\nconst ll MAX = 100000000000000000LL;\nll s2ll(string s){\n  stringstream ss;\n  ss<<s;\n  ll res;\n  ss>>res;\n  return res;\n}\n\nstring ll2s(ll x){\n  stringstream ss;\n  ss<<x;\n  string res;\n  ss>>res;\n  return res;\n}\n\n\nstring s;\nint len;\n\nll f(ll n){\n  if(n==0)return 0;\n  if(n>=MAX)return MAX;\n  ll sum=1,cc=1;\n  for(ll i=1;;i*=10LL){\n    //cout<<\"i=\"<<i<<\" sum=\"<<sum<<\" cc=\"<<cc<<endl;\n    if(n<=i*10LL){\n      return sum+cc*(n-i);\n    }\n    sum+=(cc*9LL*i);\n    cc++;\n  }\n  assert(0);\n}\n\n\nll check(int si,int ti){\n  string tmp=s.substr(si,ti);\n  if(tmp[0]=='0'&&tmp.size()>1)tmp=\"1\"+tmp;\n  \n  ll num=s2ll(tmp);\n  string first=\"\",second=\"\";\n  ll begin=num, cc=1;\n\n    \n  while(first.size()<100){\n    if(num-cc<0)break;\n    first=ll2s(num-cc)+first;\n    begin=num-cc;\n    cc++;\n  }\n\n  cc=1;\n  while(second.size()<100){\n    second=second+ll2s(num+cc);\n    cc++;\n  }\n\n  ll res=f(begin);\n  string base=first+tmp+second;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if( base.substr(i,len) == s ){\n      return res+i;\n    }\n  }\n  return INF;\n  \n}\n\nll solve(){\n  ll res=INF;\n  for(int i=0;i<len;i++){\n    for(int j=1;i+j<=len && j<=16;j++){\n      res=min(res, check(i,j));\n    }\n  }\n  return res;\n}\n\nstring compute(string a,string b){\n  for(int i=0;i<(int)a.size();i++){\n    bool flg=true;\n    for(int j=0;j<(int)b.size();j++){\n      if(i+j>=(int)a.size())break;\n      if(a[i+j]!=b[j])flg=false;\n    }\n\n    if(flg){\n      string res=a.substr(0,i)+b;\n      if(res.size()>=a.size())return res;\n    }\n  }\n  return a+b;\n}\n\nbool isZero(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='0')return false;\n  return true;\n}\n\nbool isNine(string s){\n  for(int i=0;i<(int)s.size();i++)\n    if(s[i]!='9')return false;\n  return true;\n}\n\nll check(string first,string second){\n  if(first.size()>16 || second.size()>16)return INF;\n  if(second[0]=='0')return INF;\n\n\n  ll fnum=s2ll(first);\n  ll snum=fnum+1;\n  \n  string nsecond=compute(second, ll2s(snum) );\n\n\n  if( isZero(first) ){\n    string tmp=first;\n    tmp[ (int)tmp.size()-1 ]='1';\n    nsecond=compute(second,tmp);\n  }else if( isNine(first) ){\n    string tmp=first;\n    for(int i=0;i<(int)tmp.size();i++)tmp[i]='0';\n    nsecond=compute(second,tmp);\n  }\n  \n  if(nsecond.size()>16)return INF;\n  \n  ll B=s2ll(nsecond);\n  ll A=B-1;\n  if(A<0)return INF;\n  \n  string base=ll2s(A)+nsecond;\n  for(int i=0;i+len<=(int)base.size();i++){\n    if(base.substr(i,len)==s){\n      return f(A)+i;\n    }\n  }\n\n  return INF;\n}\n\nll solve2(){\n  ll res=INF;\n  for(int i=1;i<(int)s.size();i++){\n    string fi=s.substr(0,i);\n    string se=s.substr(i);\n    res=min(res, check(fi,se) );\n  }\n  return res;\n}\n\nstring bb=\"\";\nll bf(){\n  for(int i=0;i+len<=(int)bb.size();i++)\n    if(bb.substr(i,len)==s)return i;\n  return -1;\n}\n\nint main(){\n  for(int i=0;i<10000;i++)\n    bb+=ll2s(i);\n  \n  while(1){\n    cin>>s;\n    if(s==\"#\")break;\n    len=s.size();\n    ll ans=INF;\n    ans=min(ans,solve());\n    ans=min(ans,solve2());\n    cout<<ans<<endl;\n    //    cout<<bf()<<endl<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = __int128_t;\n\nistream &operator>>(istream &is, Int &val){\n    string s;\n    is>>s;\n    val=0;\n    for(int i=0;i<(int)s.size();i++)\n      if(isdigit(s[i])) val=val*10+s[i]-'0';\n    if(s[0]=='-') val*=-1;\n    return is;\n}\n\n\n\nsigned main(){  \n  cin.tie(0);\n  ios::sync_with_stdio(0);\n  auto calc=[](Int x){\n    if(x <= 9) return x + 1;\n    Int res=10;\n    Int t = 10;\n    Int k = 2;\n    while( t * 10 <= x){\n      res += k * (t * 9);\n      k++;\n      t *= 10;\n    }\n    return res + (x - t + 1) * k;\n  };\n\n  //cout<<calc(101)<<endl;\n  //cout<<calc(13)<<endl;\n  \n  auto sub=[](string s,Int k){\n    return s.substr(s.size()-k);\n  };\n\n  auto inc=[](string s){\n    for(Int i=s.size()-1;i>=0;i--){\n      if(s[i]=='9'){\n\ts[i]='0';\n\tcontinue;\n      }\n      s[i]++;\n      break;\n    }\n    return s;\n  };\n  \n  string s;\n  \n  while(cin>>s,s!=\"#\"){\n    Int ans=1e18;\n    for(Int i=1;i<min(Int(17),Int(s.size()));i++){\n      string t=s.substr(0,i),u=s.substr(i);\n      if(u.front()=='0'||u.size()>16) continue; \n      //cout<<t<<\"::\"<<u<<endl;\n      for(Int j=max((Int)t.size(),(Int)u.size());j<17;j++){\n\tstring x=inc(t),y=u;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<endl;\n\tx=string(j-t.size(),'$')+x;\n\ty=y+string(j-u.size(),'$');\n\tbool f=0;\n\tfor(Int k=0;k<j;k++){\n\t  if(k+1!=j){\n\t    f|=(isdigit(x[k])&&isdigit(y[k])&&x[k]!=y[k]);\n\t  }\n\t  f|=(x[k]=='$'&&y[k]=='$');\n\t}\n\tif(f) continue;\n\tif(y.back()!='$'){\n\t  if((x.back()-'0'+1)%10!=y.back()-'0') continue;\n\t}\n\tfor(Int k=0;k<j;k++){\n\t  if(y[k]!='$') continue;\n\t  y[k]=isdigit(x[k])?x[k]:'0';\n\t}\n\tInt tmp=calc(stoll(y)-1)-i;\n\t//cout<<i<<\" \"<<j<<\":\"<<x<<\":\"<<y<<\":\"<<tmp<<endl;\n\tans=min(ans,tmp);\n\t\n      }\n    }\n    //cout<<\"SPL\"<<endl;\n    for(Int i=1;i<17;i++){\n      for(Int j=0;j<i;j++){\n\tif(j+i>(Int)s.size()) continue;\n\tstring t=s.substr(j,i);\n\tif(t.front()=='0') continue;\n\tInt x=stoll(t);\n\t//cout<<t<<\" \"<<x<<endl;\n\tif(j){\n\t  if(x==1) continue;\n\t  string u=to_string((long long)(x-1));\n\t  //cout<<s.substr(0,j)<<\":\"<<u<<\" \"<<sub(u,j)<<endl;\n\t  if(s.substr(0,j)!=sub(u,j)) continue;\n\t}\n\tInt p=j+i;\n\tbool f=1;\n\twhile(p<(Int)s.size()){\n\t  string u=to_string((long long)++x);\n\t  string v=s.substr(p,min((Int)u.size(),(Int)s.size()-p));\n\t  //cout<<u<<\":\"<<v<<endl;\n\t  u=u.substr(0,v.size());\n\t  f&=(u==v);\n\t  p+=u.size();\n\t}\n\tif(!f) continue;\n\tInt tmp=calc(stoll(t)-1)+j;\n\t//cout<<i<<\" \"<<j<<\" \"<<\":\"<<t<<\" \"<<tmp<<endl;\n\tans=min(ans,tmp);\n      }\n    }\n    cout<<(long long)ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<iostream>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst ll INF=(1LL<<63)-1;\n\nll to_ll(const string &s){\n\tll a;\n\tsscanf(s.c_str(),\"%lld\",&a);\n\treturn a;\n}\n\nstring to_string(ll a){\n\tchar s[32];\n\tsprintf(s,\"%lld\",a);\n\treturn s;\n}\n\nll calc_index(ll a){\n\tll res=0,ten=1,len=1;\n\twhile(1){\n\t\tif(a<10*ten){\n\t\t\tres+=(a-ten)*len;\n\t\t\treturn res;\n\t\t}\n\t\tres+=9*len*ten;\n\t\tten*=10;\n\t\tlen++;\n\t}\n}\n\nint main(){\n\tfor(string s;cin>>s,s[0]!='#';){\n\t\tint n=s.length();\n\n\t\tif(count(s.begin(),s.end(),'0')==s.length()){ // s=\"000...0\" のときは例外\n\t\t\tcout<<calc_index(to_ll('1'+s))+2<<endl;\n\t\t\tcontinue;\n\t\t}\n\n\t\tll ans=INF;\n\t\tint ofset;\n\t\t// 注目する数が s に完全に含まれるケース ( 341235123612 など )\n\t\trep(i,n) for(int j=i+1;j<=n;j++) {\n\t\t\tstring t=s.substr(i,j-i);\n\t\t\tif(t[0]=='0' || t.length()>16) continue;\n\n\t\t\tll a=to_ll(t);\n\t\t\tint len=0;\n\t\t\tstring r=t;\n\t\t\tfor(int k=1;k<30;k++){\n\t\t\t\tif(a-k>0){\n\t\t\t\t\tr=to_string(a-k)+r;\n\t\t\t\t\tlen+=to_string(a-k).length();\n\t\t\t\t}\n\t\t\t\tr=r+to_string(a+k);\n\t\t\t}\n\t\t\tif(len-i>=0 && r.substr(len-i,s.length())==s && ans>a) ans=a, ofset=i;\n\t\t}\n\n\t\t// そうでないケース 3456712345\n\t\tfor(int i=1;i<n;i++){\n\t\t\tstring t=s.substr(0,i),r=s.substr(i);\n\t\t\tif(r[0]=='0' || t.length()>16 || r.length()>16) continue;\n\n\t\t\tt=to_string(to_ll(t)+1);\n\t\t\tif(t[0]=='1' && count(t.begin()+1,t.end(),'0')==t.length()-1) t=t.substr(1);\n\n\t\t\trep(d,min(t.length(),r.length())+1){\n\t\t\t\tif(r.substr(r.length()-d,d)==t.substr(0,d) && t.length()+r.length()-d<=16){\n\t\t\t\t\tll a=to_ll(r+t.substr(d));\n\t\t\t\t\tif(ans>a) ans=a, ofset=i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcout<<calc_index(ans)-ofset+1<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n\n//// < \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\a.txt\" > \"D:\\D_Download\\Visual Studio 2015\\Projects\\programing_contest_c++\\Debug\\b.answer\"\n\nlong long int powint(long long int a, long long int b) {\n\tassert(b >= 0);\n\tif (b == 0)return 1;\n\tif (b == 1)return a;\n\tlong long int ans = 1;\n\tlong long int aa = powint(a, b / 2);\n\tans *= aa*aa;\n\tif (b % 2)ans *= a;\n\treturn ans;\n}\nvector<long long int>memo(18);\nlong long int getans(const long long int num) {\n\tconst int keta = to_string(num).size();\n\tif (keta >= 2) {\n\t\treturn (num - powint(10, keta - 1) + 1)*keta + memo[keta - 1];\n\t}\n\telse {\n\t\treturn num + 1;\n\t}\n}\nlong long int getnum(const pair<long long int, int>&p) {\n\tif (p.first == 0)return p.second;\n\treturn getans(p.first - 1) - p.second;\n}\nbool check(const int f,const long long int num, const string st) {\n\tstring pre = st.substr(0, f);\n\tconst string  prenumst = to_string(num - 1);\n\tif (prenumst.substr(prenumst.size() - pre.size(), pre.size()) != pre)return false;\n\telse {\n\t\t int nf = f;\n\t\t long long int nnum = num;\n\t\twhile (nf<st.size()) {\n\t\t\tstring nnumst = to_string(nnum);\n\t\t\tstring next = st.substr(nf, nnumst.size());\n\t\t\t bool same = (next == nnumst.substr(0, next.size()));\n\t\t\t if (!same) {\n\t\t\t\t return false;\n\t\t\t }\n\t\t\tnf += nnumst.size();\n\t\t\tnnum++;\n\t\t}\n\t\treturn true;\n\t}\n}\nlong long int check2(const string from, const string to, const int keta) {\n\t\n\tint f_size = from.size();\n\tint t_size = to.size();\n\tint kaburi = f_size + t_size - keta;\n\tif (all_of(from.begin() + kaburi, from.end(), [](const char&c) {return c == '9'; })) {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tkaburif = kaburif.empty()?\"1\":to_string(stol(kaburif) + 1);\n\t\tif (kaburif.size() != kaburi) {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif.substr(1) != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to_string(stol(to.substr(0,t_size-kaburi))-1);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\t\tif (kaburif != kaburit)ok = false;\n\t\t\tif (ok) {\n\t\t\t\tstring ans;\n\t\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\t\tans += from;\n\t\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 3e18;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\telse {\n\t\tbool ok = true;\n\t\tstring kaburif = from.substr(0, kaburi);\n\t\tstring kaburit = to.substr(t_size - kaburi, kaburi);\n\t\tif (kaburif != kaburit)ok = false;\n\t\tif (ok) {\n\t\t\tstring ans;\n\t\t\tans += to.substr(0, t_size - kaburi);\n\t\t\tans += from;\n\t\t\treturn getnum(make_pair(stoll(ans), from.size() - keta));\n\t\t}\n\t\telse {\n\t\t\treturn 3e18;\n\t\t}\n\t}\n}\n\nlong long int  solve(string st) {\n\tif (st == \"0\")return 0;\n\tif (all_of(st.begin(), st.end(), [](const char&ch) {\n\t\treturn ch == '0';\n\t})) {\n\t\treturn getnum(make_pair(stoll('1' + st), -1));\n\t}\n\tlong long int ans (1e18);\n\tfor (int keta = 1; keta <= min(17,int(st.size())); ++keta) {\n\t\tfor (int f = 0; f < min(keta,int(st.size())); ++f) {\n\t\t\tstring ast = st.substr(f, keta);\n\t\t\tif (ast.size() < keta) {\n\t\t\t\tstring from = st.substr(0, f);\n\t\t\t\tstring to = st.substr(f,st.size()-f);\n\t\t\t\tif (to[0] != '0') {\n\t\t\t\t\tans = min(ans, check2(from, to, keta));\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (ast.size()==1||ast[0] != '0') {\n\n\t\t\t\t\tlong long int num = stoll(ast);\n\t\t\t\t\tif (check(f, num, st)) {\n\t\t\t\t\t\tans = min(ans, getnum(make_pair(num, f)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn ans;\n}\nint main() {\n\tmemo[1] = 10;\n\tmemo[2] = 190;\n\tfor (int i = 2; i <18; ++i) {\n\t\tmemo[i] = powint(10,i-1) * (i) * 9 + memo[i - 1];\n\t}\n\t/*for (int i = 1; i <1001; ++i) {\n\t\tcout << i<<\":\"<<getans(i) << endl;\n\t}*/\n\twhile (1) {\n\n\t\tstring st; cin >> st;\n\t\tif (st != \"#\") {\n\n\t\t\tlong long int ans = solve(st);\n\t\t\tcout << ans << endl;\n\t\t}\n\t\telse {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\nprivate class InfiniteSequence {\n    private BigInteger patternBInt;    \n    private String patternStr;\n    private int patternLen;\n    private LinkedList<String> seqNumList = new LinkedList<String>();\n    private int patternOffset; \n    public BigInteger indexOf(String pattern) throws NumberFormatException {        \n        if (pattern.startsWith(\"0\")) {\n            throw new NumberFormatException();\n        }   \n        patternBInt = new BigInteger(pattern);        \n        patternStr = pattern;\n        patternLen = pattern.length(); \n        BigInteger result = null;\n        LinkedList<String> tempNumList = new LinkedList<String>();\n        for (int exp = 1; exp <= patternLen; exp++) {            \n            for (int offset = 0; offset < exp; offset++) { \n                tempNumList.clear();                           \n                BigInteger curPos = checkNumSequence(exp, offset, tempNumList);                \n                if ((curPos != null) && (result == null || \n                        result != null && result.compareTo(curPos) > 0)) {\n                    result = curPos; \n                    seqNumList.clear();\n                    seqNumList.addAll(tempNumList);       \n                    patternOffset = offset;\n                }                            \n            }\n            if (result != null) break;\n        }\n        return result;\n    }\n    public String getFoundFragment() {               \n        String output = \"[\";        \n        if (seqNumList.size() > 1) {\n            int dgtsCount = 0;\n            for (int i = 0; i < seqNumList.size(); i++) {                \n                String item = seqNumList.get(i);\n                if (i == 0) {\n                    if (patternOffset > 0) {\n                        dgtsCount = item.length() - patternOffset;\n                        output += item.substring(0, dgtsCount) + \"->\" +\n                            item.substring(dgtsCount, item.length());\n                        dgtsCount = item.length() - dgtsCount;\n                    } else {                    \n                        output += \"->\" + item;\n                        dgtsCount = item.length();\n                    }                                   \n                } else if (i == seqNumList.size() - 1) {\n                    dgtsCount += item.length();\n                    int suffixLen = dgtsCount - patternLen;\n                    output += item.substring(0, item.length() - suffixLen) + \"<-\" +\n                            item.substring(item.length() - suffixLen, item.length()) + \"]\";   \n                } else {\n                    output += item;\n                    dgtsCount += item.length();\n                }  \n                if (i < seqNumList.size() - 1) {\n                    output += \", \";\n                }                \n            }\n        } else {\n            output += \"->\" + seqNumList.get(0) + \"<-]\";\n        } \n        return output;        \n    }\n    private BigInteger getSequenceItemPos(BigInteger item) {\n        BigInteger startPos = BigInteger.ZERO;   \n        int itemLen = item.toString().length();\n        for (int i = 1; i < itemLen; i++) {            \n            startPos = startPos.add(\n                    bint(i * 9).multiply(pow10BI(i - 1)));\n        }        \n        BigInteger offset = item.subtract(pow10BI(itemLen - 1)); \n        return startPos.add(offset.multiply(bint(itemLen))).add(bint(1));                \n    }      \n    private BigInteger completeLastNum(String unCmplNumStr, \n                                        String prevNumLastDgts) {        \n        BigInteger pow10 = pow10BI(prevNumLastDgts.length());\n        BigInteger unCmplNum = new BigInteger(unCmplNumStr);\n        BigInteger lastDgts = new BigInteger(prevNumLastDgts);\n        return lastDgts.compareTo(pow10.subtract(BigInteger.ONE)) == -1 ?\n                unCmplNum.multiply(pow10).add(lastDgts.add(BigInteger.ONE)) :\n                unCmplNum.multiply(pow10);\n    }\n    private BigInteger checkNumSequence(int numExp, int offset, \n                                        LinkedList<String> numStrList) {\n        String seqOf9 = repeatStr(\"9\", numExp);       \n        String curNumStr = null;\n        BigInteger curNum = null;\n        BigInteger prevNum = null;\n        BigInteger firstNum = null;      \n        int i = offset;\n        while(i < patternLen) {    \n            prevNum = curNum;\n            if (i + numExp <= patternLen) { \n                curNumStr = patternStr.substring(i, i + numExp);\n                if (curNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                curNum = new BigInteger(curNumStr);\n            } else {\n                int unkDgtCount = i + numExp - patternLen;     \n                String lastNumStr = \n                        patternStr.substring(i, i + numExp - unkDgtCount); \n                if (lastNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                if (i > offset) {                    \n                    curNum = completeLastNum(lastNumStr,\n                        curNumStr.substring(curNumStr.length() - unkDgtCount, \n                                            curNumStr.length()));                \n                } else {                    \n                    curNum = completeLastNum(lastNumStr,\n                        patternStr.substring(offset - unkDgtCount, offset));                     \n                }                \n                curNumStr = String.valueOf(curNum);           \n            }\n            numStrList.add(curNumStr); \n            if (i > offset && curNum.subtract(prevNum).intValue() != 1) {\n                return null;                \n            } \n            if (i == offset) { // 1st iteration\n                firstNum = curNum;   \n                if (offset > 0) { \n                    String offsetDgts = patternStr.substring(0, offset);\n                    String testNumStr = curNum.subtract(BigInteger.ONE).toString();\n                    int lastDgtsStart = testNumStr.length() - offsetDgts.length();                    \n                    if (! offsetDgts.equals(testNumStr.substring(\n                            lastDgtsStart < 0 ? 0 : lastDgtsStart, \n                            testNumStr.length()))) {\n                        return null;\n                    }\n                    numStrList.addFirst(testNumStr);\n                }                \n            }            \n            i += numExp;\n            if (curNumStr.equals(seqOf9)) {                             \n                numExp++;                \n                seqOf9 += \"9\";\n            }\n        }\n        return getSequenceItemPos(firstNum).subtract(bint(offset));\n    }\n    private static BigInteger pow10BI(int pow) {\n        BigInteger biPow = BigInteger.TEN;        \n        return biPow.pow(pow);\n    }\n    private static BigInteger bint(long value) {\n        return BigInteger.valueOf(value);\n    }\n    private static String repeatStr(String s, int n) {\n        String result = s;\n        for (int i = 1; i < n; i++) {\n            result += s;\n        }\n        return result;\n    }\n    public static void main(String[] args) {             \n        try {\n            BufferedReader bufReader = \n                    new BufferedReader(new InputStreamReader(System.in, \"UTF-8\"));\n            InfiniteSequence infSeq = new InfiniteSequence();                        \n            String numStr;  \n            while((numStr = bufReader.readLine()) != null) {                \n                try {\n                     System.out.println( infSeq.indexOf(numStr));\n                } catch (NumberFormatException e) {\n                }\n            }\n        } catch (FileNotFoundException e) {          \n        } catch (IOException e) {\n        }\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Revenge of Champernowne Constant\npublic class Main{\n\n\tlong DIGIT_LIMIT = 1000000000000000000L;\n\tlong MAX_NUMBER = 59477124183006535L;\n\tlong[] endK;\n\tlong[] ten;\n\t\n\tvoid init(){\n\t\tendK = new long[20];\n\t\tendK[0] = 0;\n\t\tlong num = 9;\n\t\tfor(int k=1;k<=17;k++,num*=10){\n\t\t\tendK[k] = endK[k-1]+k*num;\n\t\t}\n\t\tendK[18] = DIGIT_LIMIT;\n\t\tendK[0] = -1;\n\t\tten = new long[20];\n\t\tten[0] = 0;\n\t\tten[1] = 10;\n\t\tfor(int k=2;k<=17;k++)ten[k]=ten[k-1]*10;\n\t}\n\t\n\tlong findNumber(long x){\n\t\tif(x<=0||MAX_NUMBER<x)return DIGIT_LIMIT;\n\t\tif(x<10)return x;\n\t\tint k = (x+\"\").length()-1;\n\t\treturn endK[k]+1+(k+1)*(x-ten[k]);\n\t}\n\t\n\tlong findString(String target){\n\t\tboolean allzero = true;\n\t\tfor(char ch:target.toCharArray())allzero&=ch=='0';\n\t\tif(allzero)return findNumber(Long.parseLong(\"1\"+target))+1;\n\t\tint len = target.length();\n\t\tif(len==1){\n\t\t\treturn findNumber(Long.parseLong(target));\n\t\t}\n\t\tlong res = DIGIT_LIMIT;\n\t\tint lenMax = Math.min(17, len);\n\t\tfor(int h=0;h<lenMax;h++)for(int k=1;k<=lenMax;k++)res = Math.min(res, findStringSub(target, h, k));\n\t\treturn res;\n\t}\n\t\n\tlong findStringSub(String target, int h, int k){\n\t\tif(target.charAt(h)=='0')return DIGIT_LIMIT;\n\t\tString sub = target.substring(0, h);\n\t\tString s = \"\";\n\t\tfor(int i=h;i<h+k;i++){\n\t\t\tif(i<target.length())s+=target.charAt(i);\n\t\t\telse {\n\t\t\t\tint L = h+k-i;\n\t\t\t\tString r = (Long.parseLong(sub.substring(sub.length()-L))+1)+\"\";\n\t\t\t\twhile(r.length()-L<0)r=\"0\"+r;\n\t\t\t\ts+=r.substring(r.length()-L); break;\n\t\t\t}\n\t\t}\n\t\tlong base = Long.parseLong(s);\n\t\tif(MAX_NUMBER<base)return DIGIT_LIMIT;\n\t\tString match = base+\"\";\n\t\tint pos = h, addLen = 0;\n\t\tlong b = base-1;\n\t\twhile(pos>0){\n\t\t\tif(b<=0)return DIGIT_LIMIT;\n\t\t\tString add = b-- +\"\";\n\t\t\tpos-=add.length();\n\t\t\taddLen+=add.length();\n\t\t\tmatch = add+match;\n\t\t}\n\t\tb = base+1;\n\t\tpos = h+k;\n\t\twhile(pos < target.length()){\n\t\t\tString add = b++ +\"\";\n\t\t\tpos+=add.length();\n\t\t\tmatch+=add;\n\t\t}\n\t\tfor(int i=0;i<target.length();i++)if(target.charAt(i)!=match.charAt(addLen-h+i))return DIGIT_LIMIT;\n\t\treturn findNumber(base)-h;\n\t}\n\t\n\tvoid run(){\n\t\tinit();\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tString s = sc.next();\n\t\t\tif(\"#\".equals(s))break;\n\t\t\tSystem.out.println(findString(s));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\npublic class InfiniteSequence {\n    private BigInteger patternBInt;    \n    private String patternStr;\n    private int patternLen;\n    private LinkedList<String> seqNumList = new LinkedList<String>();\n    private int patternOffset; \n    public BigInteger indexOf(String pattern) throws NumberFormatException {        \n        if (pattern.startsWith(\"0\")) {\n            throw new NumberFormatException();\n        }   \n        patternBInt = new BigInteger(pattern);        \n        patternStr = pattern;\n        patternLen = pattern.length(); \n        BigInteger result = null;\n        LinkedList<String> tempNumList = new LinkedList<String>();\n        for (int exp = 1; exp <= patternLen; exp++) {            \n            for (int offset = 0; offset < exp; offset++) { \n                tempNumList.clear();                           \n                BigInteger curPos = checkNumSequence(exp, offset, tempNumList);                \n                if ((curPos != null) && (result == null || \n                        result != null && result.compareTo(curPos) > 0)) {\n                    result = curPos; \n                    seqNumList.clear();\n                    seqNumList.addAll(tempNumList);       \n                    patternOffset = offset;\n                }                            \n            }\n            if (result != null) break;\n        }\n        return result;\n    }\n    public String getFoundFragment() {               \n        String output = \"[\";        \n        if (seqNumList.size() > 1) {\n            int dgtsCount = 0;\n            for (int i = 0; i < seqNumList.size(); i++) {                \n                String item = seqNumList.get(i);\n                if (i == 0) {\n                    if (patternOffset > 0) {\n                        dgtsCount = item.length() - patternOffset;\n                        output += item.substring(0, dgtsCount) + \"->\" +\n                            item.substring(dgtsCount, item.length());\n                        dgtsCount = item.length() - dgtsCount;\n                    } else {                    \n                        output += \"->\" + item;\n                        dgtsCount = item.length();\n                    }                                   \n                } else if (i == seqNumList.size() - 1) {\n                    dgtsCount += item.length();\n                    int suffixLen = dgtsCount - patternLen;\n                    output += item.substring(0, item.length() - suffixLen) + \"<-\" +\n                            item.substring(item.length() - suffixLen, item.length()) + \"]\";   \n                } else {\n                    output += item;\n                    dgtsCount += item.length();\n                }  \n                if (i < seqNumList.size() - 1) {\n                    output += \", \";\n                }                \n            }\n        } else {\n            output += \"->\" + seqNumList.get(0) + \"<-]\";\n        } \n        return output;        \n    }\n    private BigInteger getSequenceItemPos(BigInteger item) {\n        BigInteger startPos = BigInteger.ZERO;   \n        int itemLen = item.toString().length();\n        for (int i = 1; i < itemLen; i++) {            \n            startPos = startPos.add(\n                    bint(i * 9).multiply(pow10BI(i - 1)));\n        }        \n        BigInteger offset = item.subtract(pow10BI(itemLen - 1)); \n        return startPos.add(offset.multiply(bint(itemLen))).add(bint(1));                \n    }      \n    private BigInteger completeLastNum(String unCmplNumStr, \n                                        String prevNumLastDgts) {        \n        BigInteger pow10 = pow10BI(prevNumLastDgts.length());\n        BigInteger unCmplNum = new BigInteger(unCmplNumStr);\n        BigInteger lastDgts = new BigInteger(prevNumLastDgts);\n        return lastDgts.compareTo(pow10.subtract(BigInteger.ONE)) == -1 ?\n                unCmplNum.multiply(pow10).add(lastDgts.add(BigInteger.ONE)) :\n                unCmplNum.multiply(pow10);\n    }\n    private BigInteger checkNumSequence(int numExp, int offset, \n                                        LinkedList<String> numStrList) {\n        String seqOf9 = repeatStr(\"9\", numExp);       \n        String curNumStr = null;\n        BigInteger curNum = null;\n        BigInteger prevNum = null;\n        BigInteger firstNum = null;      \n        int i = offset;\n        while(i < patternLen) {    \n            prevNum = curNum;\n            if (i + numExp <= patternLen) { \n                curNumStr = patternStr.substring(i, i + numExp);\n                if (curNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                curNum = new BigInteger(curNumStr);\n            } else {\n                int unkDgtCount = i + numExp - patternLen;     \n                String lastNumStr = \n                        patternStr.substring(i, i + numExp - unkDgtCount); \n                if (lastNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                if (i > offset) {                    \n                    curNum = completeLastNum(lastNumStr,\n                        curNumStr.substring(curNumStr.length() - unkDgtCount, \n                                            curNumStr.length()));                \n                } else {                    \n                    curNum = completeLastNum(lastNumStr,\n                        patternStr.substring(offset - unkDgtCount, offset));                     \n                }                \n                curNumStr = String.valueOf(curNum);           \n            }\n            numStrList.add(curNumStr); \n            if (i > offset && curNum.subtract(prevNum).intValue() != 1) {\n                return null;                \n            } \n            if (i == offset) { // 1st iteration\n                firstNum = curNum;   \n                if (offset > 0) { \n                    String offsetDgts = patternStr.substring(0, offset);\n                    String testNumStr = curNum.subtract(BigInteger.ONE).toString();\n                    int lastDgtsStart = testNumStr.length() - offsetDgts.length();                    \n                    if (! offsetDgts.equals(testNumStr.substring(\n                            lastDgtsStart < 0 ? 0 : lastDgtsStart, \n                            testNumStr.length()))) {\n                        return null;\n                    }\n                    numStrList.addFirst(testNumStr);\n                }                \n            }            \n            i += numExp;\n            if (curNumStr.equals(seqOf9)) {                             \n                numExp++;                \n                seqOf9 += \"9\";\n            }\n        }\n        return getSequenceItemPos(firstNum).subtract(bint(offset));\n    }\n    private static BigInteger pow10BI(int pow) {\n        BigInteger biPow = BigInteger.TEN;        \n        return biPow.pow(pow);\n    }\n    private static BigInteger bint(long value) {\n        return BigInteger.valueOf(value);\n    }\n    private static String repeatStr(String s, int n) {\n        String result = s;\n        for (int i = 1; i < n; i++) {\n            result += s;\n        }\n        return result;\n    }\n    public static void main(String[] args) {             \n        try {\n            BufferedReader bufReader = \n                    new BufferedReader(new InputStreamReader(System.in, \"UTF-8\"));\n            InfiniteSequence infSeq = new InfiniteSequence();                        \n            String numStr;  \n            while((numStr = bufReader.readLine()) != null) {                \n                try {\n                     System.out.println( infSeq.indexOf(numStr));\n                } catch (NumberFormatException e) {\n                }\n            }\n        } catch (FileNotFoundException e) {          \n        } catch (IOException e) {\n        }\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\npublic class InfiniteSequence {\n    private BigInteger patternBInt;    \n    private String patternStr;\n    private int patternLen;\n    private LinkedList<String> seqNumList = new LinkedList<String>();\n    private int patternOffset; \n    public BigInteger indexOf(String pattern) throws NumberFormatException {        \n        if (pattern.startsWith(\"0\")) {\n            throw new NumberFormatException();\n        }   \n        patternBInt = new BigInteger(pattern);        \n        patternStr = pattern;\n        patternLen = pattern.length(); \n        BigInteger result = null;\n        LinkedList<String> tempNumList = new LinkedList<String>();\n        for (int exp = 1; exp <= patternLen; exp++) {            \n            for (int offset = 0; offset < exp; offset++) { \n                tempNumList.clear();                           \n                BigInteger curPos = checkNumSequence(exp, offset, tempNumList);                \n                if ((curPos != null) && (result == null || \n                        result != null && result.compareTo(curPos) > 0)) {\n                    result = curPos; \n                    seqNumList.clear();\n                    seqNumList.addAll(tempNumList);       \n                    patternOffset = offset;\n                }                            \n            }\n            if (result != null) break;\n        }\n        return result;\n    }\n    public String getFoundFragment() {               \n        String output = \"[\";        \n        if (seqNumList.size() > 1) {\n            int dgtsCount = 0;\n            for (int i = 0; i < seqNumList.size(); i++) {                \n                String item = seqNumList.get(i);\n                if (i == 0) {\n                    if (patternOffset > 0) {\n                        dgtsCount = item.length() - patternOffset;\n                        output += item.substring(0, dgtsCount) + \"->\" +\n                            item.substring(dgtsCount, item.length());\n                        dgtsCount = item.length() - dgtsCount;\n                    } else {                    \n                        output += \"->\" + item;\n                        dgtsCount = item.length();\n                    }                                   \n                } else if (i == seqNumList.size() - 1) {\n                    dgtsCount += item.length();\n                    int suffixLen = dgtsCount - patternLen;\n                    output += item.substring(0, item.length() - suffixLen) + \"<-\" +\n                            item.substring(item.length() - suffixLen, item.length()) + \"]\";   \n                } else {\n                    output += item;\n                    dgtsCount += item.length();\n                }  \n                if (i < seqNumList.size() - 1) {\n                    output += \", \";\n                }                \n            }\n        } else {\n            output += \"->\" + seqNumList.get(0) + \"<-]\";\n        } \n        return output;        \n    }\n    private BigInteger getSequenceItemPos(BigInteger item) {\n        BigInteger startPos = BigInteger.ZERO;   \n        int itemLen = item.toString().length();\n        for (int i = 1; i < itemLen; i++) {            \n            startPos = startPos.add(\n                    bint(i * 9).multiply(pow10BI(i - 1)));\n        }        \n        BigInteger offset = item.subtract(pow10BI(itemLen - 1)); \n        return startPos.add(offset.multiply(bint(itemLen))).add(bint(1));                \n    }      \n    private BigInteger completeLastNum(String unCmplNumStr, \n                                        String prevNumLastDgts) {        \n        BigInteger pow10 = pow10BI(prevNumLastDgts.length());\n        BigInteger unCmplNum = new BigInteger(unCmplNumStr);\n        BigInteger lastDgts = new BigInteger(prevNumLastDgts);\n        return lastDgts.compareTo(pow10.subtract(BigInteger.ONE)) == -1 ?\n                unCmplNum.multiply(pow10).add(lastDgts.add(BigInteger.ONE)) :\n                unCmplNum.multiply(pow10);\n    }\n    private BigInteger checkNumSequence(int numExp, int offset, \n                                        LinkedList<String> numStrList) {\n        String seqOf9 = repeatStr(\"9\", numExp);       \n        String curNumStr = null;\n        BigInteger curNum = null;\n        BigInteger prevNum = null;\n        BigInteger firstNum = null;      \n        int i = offset;\n        while(i < patternLen) {    \n            prevNum = curNum;\n            if (i + numExp <= patternLen) { \n                curNumStr = patternStr.substring(i, i + numExp);\n                if (curNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                curNum = new BigInteger(curNumStr);\n            } else {\n                int unkDgtCount = i + numExp - patternLen;     \n                String lastNumStr = \n                        patternStr.substring(i, i + numExp - unkDgtCount); \n                if (lastNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                if (i > offset) {                    \n                    curNum = completeLastNum(lastNumStr,\n                        curNumStr.substring(curNumStr.length() - unkDgtCount, \n                                            curNumStr.length()));                \n                } else {                    \n                    curNum = completeLastNum(lastNumStr,\n                        patternStr.substring(offset - unkDgtCount, offset));                     \n                }                \n                curNumStr = String.valueOf(curNum);           \n            }\n            numStrList.add(curNumStr); \n            if (i > offset && curNum.subtract(prevNum).intValue() != 1) {\n                return null;                \n            } \n            if (i == offset) { // 1st iteration\n                firstNum = curNum;   \n                if (offset > 0) { \n                    String offsetDgts = patternStr.substring(0, offset);\n                    String testNumStr = curNum.subtract(BigInteger.ONE).toString();\n                    int lastDgtsStart = testNumStr.length() - offsetDgts.length();                    \n                    if (! offsetDgts.equals(testNumStr.substring(\n                            lastDgtsStart < 0 ? 0 : lastDgtsStart, \n                            testNumStr.length()))) {\n                        return null;\n                    }\n                    numStrList.addFirst(testNumStr);\n                }                \n            }            \n            i += numExp;\n            if (curNumStr.equals(seqOf9)) {                             \n                numExp++;                \n                seqOf9 += \"9\";\n            }\n        }\n        return getSequenceItemPos(firstNum).subtract(bint(offset));\n    }\n    private static BigInteger pow10BI(int pow) {\n        BigInteger biPow = BigInteger.TEN;        \n        return biPow.pow(pow);\n    }\n    private static BigInteger bint(long value) {\n        return BigInteger.valueOf(value);\n    }\n    private static String repeatStr(String s, int n) {\n        String result = s;\n        for (int i = 1; i < n; i++) {\n            result += s;\n        }\n        return result;\n    }\n    public static void main(String[] args) {             \n        try {\n            BufferedReader bufReader = \n                    new BufferedReader(new InputStreamReader(System.in, \"UTF-8\"));\n            InfiniteSequence infSeq = new InfiniteSequence();                        \n            String numStr;  \n            while((numStr = bufReader.readLine()) != null) {                \n                try {\n                     System.out.println( infSeq.indexOf(numStr));\n                } catch (NumberFormatException e) {\n                }\n            }\n        } catch (FileNotFoundException e) {          \n        } catch (IOException e) {\n        }\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Revenge of Champernowne Constant\npublic class Main{\n\n\tlong DIGIT_LIMIT = 1000000000000000000L;\n\tlong MAX_NUMBER = 59477124183006535L;\n\tlong[] endK;\n\tlong[] ten;\n\t\n\tvoid init(){\n\t\tendK = new long[20];\n\t\tendK[0] = 0;\n\t\tlong num = 9;\n\t\tfor(int k=1;k<=17;k++,num*=10){\n\t\t\tendK[k] = endK[k-1]+k*num;\n\t\t}\n\t\tendK[18] = DIGIT_LIMIT;\n\t\tendK[0] = -1;\n\t\tten = new long[20];\n\t\tten[0] = 0;\n\t\tten[1] = 10;\n\t\tfor(int k=2;k<=17;k++)ten[k]=ten[k-1]*10;\n\t}\n\t\n\tlong findNumber(long x){\n\t\tif(x<=0||MAX_NUMBER<x)return DIGIT_LIMIT;\n\t\tif(x<10)return x;\n\t\tint k = (x+\"\").length()-1;\n\t\treturn endK[k]+1+(k+1)*(x-ten[k]);\n\t}\n\t\n\tlong findString(String target){\n\t\tboolean allzero = true;\n\t\tfor(char ch:target.toCharArray())allzero&=ch=='0';\n\t\tif(allzero)return findNumber(Long.parseLong(\"1\"+target))+1;\n\t\tint len = target.length();\n\t\tif(len==1){\n\t\t\treturn findNumber(Long.parseLong(target));\n\t\t}\n\t\tlong res = DIGIT_LIMIT;\n\t\tint lenMax = Math.min(17, len);\n\t\tfor(int h=0;h<lenMax;h++)for(int k=1;k<=lenMax;k++)res = Math.min(res, findStringSub(target, h, k));\n\t\treturn res;\n\t}\n\t\n\tlong findStringSub(String target, int h, int k){\n\t\tif(target.charAt(h)=='0')return DIGIT_LIMIT;\n\t\tString sub = target.substring(0, h);\n\t\tString s = \"\";\n\t\tfor(int i=h;i<h+k;i++){\n\t\t\tif(i<target.length())s+=target.charAt(i);\n\t\t\telse {\n\t\t\t\tint L = h+k-i;\n\t\t\t\tString r = (Long.parseLong(sub.substring(sub.length()-L))+1)+\"\";\n\t\t\t\twhile(r.length()-L<0)r=\"0\"+r;\n\t\t\t\ts+=r.substring(r.length()-L); break;\n\t\t\t}\n\t\t}\n\t\tlong base = Long.parseLong(s);\n\t\tif(MAX_NUMBER<base)return DIGIT_LIMIT;\n\t\tString match = base+\"\";\n\t\tint pos = h, addLen = 0;\n\t\tlong b = base-1;\n\t\twhile(pos>0){\n\t\t\tif(b<=0)return DIGIT_LIMIT;\n\t\t\tString add = b-- +\"\";\n\t\t\tpos-=add.length();\n\t\t\taddLen+=add.length();\n\t\t\tmatch = add+match;\n\t\t}\n\t\tb = base+1;\n\t\tpos = h+k;\n\t\twhile(pos < target.length()){\n//\t\t\tif(MAX_NUMBER<b)return DIGIT_LIMIT;\n\t\t\tString add = b++ +\"\";\n\t\t\tpos+=add.length();\n\t\t\tmatch+=add;\n\t\t}\n\t\tfor(int i=0;i<target.length();i++)if(target.charAt(i)!=match.charAt(addLen-h+i))return DIGIT_LIMIT;\n//\t\tlong res = findNumber(base);\n//\t\twhile(h--!=0)res--;\n\t\treturn findNumber(base)-h;\n\t}\n\t\n\tvoid run(){\n\t\tinit();\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tString s = sc.next();\n\t\t\tif(\"#\".equals(s))break;\n\t\t\tSystem.out.println(findString(s));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\npublic class Main {\n    private BigInteger patternBInt;    \n    private String patternStr;\n    private int patternLen;\n    private LinkedList<String> seqNumList = new LinkedList<String>();\n    private int patternOffset; \n    public BigInteger indexOf(String pattern) throws NumberFormatException {        \n        if (pattern.startsWith(\"0\")) {\n            throw new NumberFormatException();\n        }   \n        patternBInt = new BigInteger(pattern);        \n        patternStr = pattern;\n        patternLen = pattern.length(); \n        BigInteger result = null;\n        LinkedList<String> tempNumList = new LinkedList<String>();\n        for (int exp = 1; exp <= patternLen; exp++) {            \n            for (int offset = 0; offset < exp; offset++) { \n                tempNumList.clear();                           \n                BigInteger curPos = checkNumSequence(exp, offset, tempNumList);                \n                if ((curPos != null) && (result == null || \n                        result != null && result.compareTo(curPos) > 0)) {\n                    result = curPos; \n                    seqNumList.clear();\n                    seqNumList.addAll(tempNumList);       \n                    patternOffset = offset;\n                }                            \n            }\n            if (result != null) break;\n        }\n        return result;\n    }\n    public String getFoundFragment() {               \n        String output = \"[\";        \n        if (seqNumList.size() > 1) {\n            int dgtsCount = 0;\n            for (int i = 0; i < seqNumList.size(); i++) {                \n                String item = seqNumList.get(i);\n                if (i == 0) {\n                    if (patternOffset > 0) {\n                        dgtsCount = item.length() - patternOffset;\n                        output += item.substring(0, dgtsCount) + \"->\" +\n                            item.substring(dgtsCount, item.length());\n                        dgtsCount = item.length() - dgtsCount;\n                    } else {                    \n                        output += \"->\" + item;\n                        dgtsCount = item.length();\n                    }                                   \n                } else if (i == seqNumList.size() - 1) {\n                    dgtsCount += item.length();\n                    int suffixLen = dgtsCount - patternLen;\n                    output += item.substring(0, item.length() - suffixLen) + \"<-\" +\n                            item.substring(item.length() - suffixLen, item.length()) + \"]\";   \n                } else {\n                    output += item;\n                    dgtsCount += item.length();\n                }  \n                if (i < seqNumList.size() - 1) {\n                    output += \", \";\n                }                \n            }\n        } else {\n            output += \"->\" + seqNumList.get(0) + \"<-]\";\n        } \n        return output;        \n    }\n    private BigInteger getSequenceItemPos(BigInteger item) {\n        BigInteger startPos = BigInteger.ZERO;   \n        int itemLen = item.toString().length();\n        for (int i = 1; i < itemLen; i++) {            \n            startPos = startPos.add(\n                    bint(i * 9).multiply(pow10BI(i - 1)));\n        }        \n        BigInteger offset = item.subtract(pow10BI(itemLen - 1)); \n        return startPos.add(offset.multiply(bint(itemLen))).add(bint(1));                \n    }      \n    private BigInteger completeLastNum(String unCmplNumStr, \n                                        String prevNumLastDgts) {        \n        BigInteger pow10 = pow10BI(prevNumLastDgts.length());\n        BigInteger unCmplNum = new BigInteger(unCmplNumStr);\n        BigInteger lastDgts = new BigInteger(prevNumLastDgts);\n        return lastDgts.compareTo(pow10.subtract(BigInteger.ONE)) == -1 ?\n                unCmplNum.multiply(pow10).add(lastDgts.add(BigInteger.ONE)) :\n                unCmplNum.multiply(pow10);\n    }\n    private BigInteger checkNumSequence(int numExp, int offset, \n                                        LinkedList<String> numStrList) {\n        String seqOf9 = repeatStr(\"9\", numExp);       \n        String curNumStr = null;\n        BigInteger curNum = null;\n        BigInteger prevNum = null;\n        BigInteger firstNum = null;      \n        int i = offset;\n        while(i < patternLen) {    \n            prevNum = curNum;\n            if (i + numExp <= patternLen) { \n                curNumStr = patternStr.substring(i, i + numExp);\n                if (curNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                curNum = new BigInteger(curNumStr);\n            } else {\n                int unkDgtCount = i + numExp - patternLen;     \n                String lastNumStr = \n                        patternStr.substring(i, i + numExp - unkDgtCount); \n                if (lastNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                if (i > offset) {                    \n                    curNum = completeLastNum(lastNumStr,\n                        curNumStr.substring(curNumStr.length() - unkDgtCount, \n                                            curNumStr.length()));                \n                } else {                    \n                    curNum = completeLastNum(lastNumStr,\n                        patternStr.substring(offset - unkDgtCount, offset));                     \n                }                \n                curNumStr = String.valueOf(curNum);           \n            }\n            numStrList.add(curNumStr); \n            if (i > offset && curNum.subtract(prevNum).intValue() != 1) {\n                return null;                \n            } \n            if (i == offset) { // 1st iteration\n                firstNum = curNum;   \n                if (offset > 0) { \n                    String offsetDgts = patternStr.substring(0, offset);\n                    String testNumStr = curNum.subtract(BigInteger.ONE).toString();\n                    int lastDgtsStart = testNumStr.length() - offsetDgts.length();                    \n                    if (! offsetDgts.equals(testNumStr.substring(\n                            lastDgtsStart < 0 ? 0 : lastDgtsStart, \n                            testNumStr.length()))) {\n                        return null;\n                    }\n                    numStrList.addFirst(testNumStr);\n                }                \n            }            \n            i += numExp;\n            if (curNumStr.equals(seqOf9)) {                             \n                numExp++;                \n                seqOf9 += \"9\";\n            }\n        }\n        return getSequenceItemPos(firstNum).subtract(bint(offset));\n    }\n    private static BigInteger pow10BI(int pow) {\n        BigInteger biPow = BigInteger.TEN;        \n        return biPow.pow(pow);\n    }\n    private static BigInteger bint(long value) {\n        return BigInteger.valueOf(value);\n    }\n    private static String repeatStr(String s, int n) {\n        String result = s;\n        for (int i = 1; i < n; i++) {\n            result += s;\n        }\n        return result;\n    }\n    public static void main(String[] args) {             \n        try {\n            BufferedReader bufReader = \n                    new BufferedReader(new InputStreamReader(System.in, \"UTF-8\"));\n            InfiniteSequence infSeq = new InfiniteSequence();                        \n            String numStr;  \n            while((numStr = bufReader.readLine()) != null) {                \n                try {\n                     System.out.println( infSeq.indexOf(numStr));\n                } catch (NumberFormatException e) {\n                }\n            }\n        } catch (FileNotFoundException e) {          \n        } catch (IOException e) {\n        }\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.io.*;\npublic class Main {\n    private BigInteger patternBInt;    \n    private String patternStr;\n    private int patternLen;\n    private LinkedList<String> seqNumList = new LinkedList<String>();\n    private int patternOffset; \n    public BigInteger indexOf(String pattern) throws NumberFormatException {        \n        if (pattern.startsWith(\"0\")) {\n            throw new NumberFormatException();\n        }   \n        patternBInt = new BigInteger(pattern);        \n        patternStr = pattern;\n        patternLen = pattern.length(); \n        BigInteger result = null;\n        LinkedList<String> tempNumList = new LinkedList<String>();\n        for (int exp = 1; exp <= patternLen; exp++) {            \n            for (int offset = 0; offset < exp; offset++) { \n                tempNumList.clear();                           \n                BigInteger curPos = checkNumSequence(exp, offset, tempNumList);                \n                if ((curPos != null) && (result == null || \n                        result != null && result.compareTo(curPos) > 0)) {\n                    result = curPos; \n                    seqNumList.clear();\n                    seqNumList.addAll(tempNumList);       \n                    patternOffset = offset;\n                }                            \n            }\n            if (result != null) break;\n        }\n        return result;\n    }\n    public String getFoundFragment() {               \n        String output = \"[\";        \n        if (seqNumList.size() > 1) {\n            int dgtsCount = 0;\n            for (int i = 0; i < seqNumList.size(); i++) {                \n                String item = seqNumList.get(i);\n                if (i == 0) {\n                    if (patternOffset > 0) {\n                        dgtsCount = item.length() - patternOffset;\n                        output += item.substring(0, dgtsCount) + \"->\" +\n                            item.substring(dgtsCount, item.length());\n                        dgtsCount = item.length() - dgtsCount;\n                    } else {                    \n                        output += \"->\" + item;\n                        dgtsCount = item.length();\n                    }                                   \n                } else if (i == seqNumList.size() - 1) {\n                    dgtsCount += item.length();\n                    int suffixLen = dgtsCount - patternLen;\n                    output += item.substring(0, item.length() - suffixLen) + \"<-\" +\n                            item.substring(item.length() - suffixLen, item.length()) + \"]\";   \n                } else {\n                    output += item;\n                    dgtsCount += item.length();\n                }  \n                if (i < seqNumList.size() - 1) {\n                    output += \", \";\n                }                \n            }\n        } else {\n            output += \"->\" + seqNumList.get(0) + \"<-]\";\n        } \n        return output;        \n    }\n    private BigInteger getSequenceItemPos(BigInteger item) {\n        BigInteger startPos = BigInteger.ZERO;   \n        int itemLen = item.toString().length();\n        for (int i = 1; i < itemLen; i++) {            \n            startPos = startPos.add(\n                    bint(i * 9).multiply(pow10BI(i - 1)));\n        }        \n        BigInteger offset = item.subtract(pow10BI(itemLen - 1)); \n        return startPos.add(offset.multiply(bint(itemLen))).add(bint(1));                \n    }      \n    private BigInteger completeLastNum(String unCmplNumStr, \n                                        String prevNumLastDgts) {        \n        BigInteger pow10 = pow10BI(prevNumLastDgts.length());\n        BigInteger unCmplNum = new BigInteger(unCmplNumStr);\n        BigInteger lastDgts = new BigInteger(prevNumLastDgts);\n        return lastDgts.compareTo(pow10.subtract(BigInteger.ONE)) == -1 ?\n                unCmplNum.multiply(pow10).add(lastDgts.add(BigInteger.ONE)) :\n                unCmplNum.multiply(pow10);\n    }\n    private BigInteger checkNumSequence(int numExp, int offset, \n                                        LinkedList<String> numStrList) {\n        String seqOf9 = repeatStr(\"9\", numExp);       \n        String curNumStr = null;\n        BigInteger curNum = null;\n        BigInteger prevNum = null;\n        BigInteger firstNum = null;      \n        int i = offset;\n        while(i < patternLen) {    \n            prevNum = curNum;\n            if (i + numExp <= patternLen) { \n                curNumStr = patternStr.substring(i, i + numExp);\n                if (curNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                curNum = new BigInteger(curNumStr);\n            } else {\n                int unkDgtCount = i + numExp - patternLen;     \n                String lastNumStr = \n                        patternStr.substring(i, i + numExp - unkDgtCount); \n                if (lastNumStr.startsWith(\"0\")) {\n                    return null;\n                }\n                if (i > offset) {                    \n                    curNum = completeLastNum(lastNumStr,\n                        curNumStr.substring(curNumStr.length() - unkDgtCount, \n                                            curNumStr.length()));                \n                } else {                    \n                    curNum = completeLastNum(lastNumStr,\n                        patternStr.substring(offset - unkDgtCount, offset));                     \n                }                \n                curNumStr = String.valueOf(curNum);           \n            }\n            numStrList.add(curNumStr); \n            if (i > offset && curNum.subtract(prevNum).intValue() != 1) {\n                return null;                \n            } \n            if (i == offset) { // 1st iteration\n                firstNum = curNum;   \n                if (offset > 0) { \n                    String offsetDgts = patternStr.substring(0, offset);\n                    String testNumStr = curNum.subtract(BigInteger.ONE).toString();\n                    int lastDgtsStart = testNumStr.length() - offsetDgts.length();                    \n                    if (! offsetDgts.equals(testNumStr.substring(\n                            lastDgtsStart < 0 ? 0 : lastDgtsStart, \n                            testNumStr.length()))) {\n                        return null;\n                    }\n                    numStrList.addFirst(testNumStr);\n                }                \n            }            \n            i += numExp;\n            if (curNumStr.equals(seqOf9)) {                             \n                numExp++;                \n                seqOf9 += \"9\";\n            }\n        }\n        return getSequenceItemPos(firstNum).subtract(bint(offset));\n    }\n    private static BigInteger pow10BI(int pow) {\n        BigInteger biPow = BigInteger.TEN;        \n        return biPow.pow(pow);\n    }\n    private static BigInteger bint(long value) {\n        return BigInteger.valueOf(value);\n    }\n    private static String repeatStr(String s, int n) {\n        String result = s;\n        for (int i = 1; i < n; i++) {\n            result += s;\n        }\n        return result;\n    }\n    public static void main(String[] args) {             \n        try {\n            BufferedReader bufReader = \n                    new BufferedReader(new InputStreamReader(System.in, \"UTF-8\"));\n            Main infSeq = new Main();                        \n            String numStr;  \n            while((numStr = bufReader.readLine()) != null) {                \n                try {\n                     System.out.println( infSeq.indexOf(numStr));\n                } catch (NumberFormatException e) {\n                }\n            }\n        } catch (FileNotFoundException e) {          \n        } catch (IOException e) {\n        }\n    }    \n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//Revenge of Champernowne Constant\npublic class Main{\n\n\tlong DIGIT_LIMIT = 1000000000000000000L;\n\tlong MAX_NUMBER = 59477124183006535L;\n\tlong[] endK;\n\tlong[] ten;\n\t\n\tvoid init(){\n\t\tendK = new long[20];\n\t\tendK[0] = 0;\n\t\tlong num = 9;\n\t\tfor(int k=1;k<=17;k++,num*=10){\n\t\t\tendK[k] = endK[k-1]+k*num;\n\t\t}\n\t\tendK[18] = DIGIT_LIMIT;\n\t\tendK[0] = -1;\n\t\tten = new long[20];\n\t\tten[0] = 0;\n\t\tten[1] = 10;\n\t\tfor(int k=2;k<=17;k++)ten[k]=ten[k-1]*10;\n\t}\n\t\n\tlong findNumber(long x){\n\t\tif(x<=0||MAX_NUMBER<x)return DIGIT_LIMIT;\n\t\tif(x<10)return x;\n\t\tint k = (x+\"\").length()-1;\n\t\treturn endK[k]+1+(k+1)*(x-ten[k]);\n\t}\n\t\n\tlong findString(String target){\n\t\tboolean allzero = true;\n\t\tfor(char ch:target.toCharArray())allzero&=ch=='0';\n\t\tif(allzero)return findNumber(Long.parseLong(\"1\"+target))+1;\n\t\tint len = target.length();\n\t\tif(len==1){\n\t\t\treturn findNumber(Long.parseLong(target));\n\t\t}\n\t\tlong res = DIGIT_LIMIT;\n\t\tint lenMax = Math.min(17, len);\n\t\tfor(int h=0;h<lenMax;h++)for(int k=1;k<=lenMax;k++)res = Math.min(res, findStringSub(target, h, k));\n\t\treturn res;\n\t}\n\t\n\tlong findStringSub(String target, int h, int k){\n\t\tif(target.charAt(h)=='0')return DIGIT_LIMIT;\n\t\tString sub = target.substring(0, h);\n\t\tString s = \"\";\n\t\tfor(int i=h;i<h+k;i++){\n\t\t\tif(i<target.length())s+=target.charAt(i);\n\t\t\telse {\n\t\t\t\tint L = h+k-i;\n\t\t\t\tString r = (Long.parseLong(sub.substring(sub.length()-L))+1)+\"\";\n\t\t\t\twhile(r.length()-L<0)r=\"0\"+r;\n\t\t\t\ts+=r.substring(r.length()-L); break;\n\t\t\t}\n\t\t}\n\t\tlong base = Long.parseLong(s);\n\t\tif(MAX_NUMBER<base)return DIGIT_LIMIT;\n\t\tString match = base+\"\";\n\t\tint pos = h, addLen = 0;\n\t\tlong b = base-1;\n\t\twhile(pos>0){\n\t\t\tif(b<=0)return DIGIT_LIMIT;\n\t\t\tString add = b-- +\"\";\n\t\t\tpos-=add.length();\n\t\t\taddLen+=add.length();\n\t\t\tmatch = add+match;\n\t\t}\n\t\tb = base+1;\n\t\tpos = h+k;\n\t\twhile(pos < target.length()){\n\t\t\tif(MAX_NUMBER<b)return DIGIT_LIMIT;\n\t\t\tString add = b++ +\"\";\n\t\t\tpos+=add.length();\n\t\t\tmatch+=add;\n\t\t}\n\t\tfor(int i=0;i<target.length();i++)if(target.charAt(i)!=match.charAt(addLen-h+i))return DIGIT_LIMIT;\n\t\tlong res = findNumber(base);\n\t\twhile(h--!=0)res--;\n\t\treturn res;\n\t}\n\t\n\tvoid run(){\n\t\tinit();\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tString s = sc.next();\n\t\t\tif(\"#\".equals(s))break;\n\t\t\tSystem.out.println(findString(s));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\n\t //10^18\n\t//at(DIGIT_LIMIT) = 594771241830065 [3] 5\n\tlong DIGIT_LIMIT = 1000000000000000000L;\n\t\n\t//DIGIT_LIMITを含む整数MAX_NUMBER\n\t//この整数の先頭は 999999999999999985 番目である\n\t//[10^17, MAX_NUMBER]\n\tlong MAX_NUMBER = 59477124183006535L;\n\t\n\t//endK[k]: 10^k未満の末尾までのインデックス数\n\t//便宜的にendK[18]=DIGIT_LIMIT, endK[0]=-1;\n\tlong[] endK;\n\t\n\t//k==0: ten[0] = 0\n\t//1<=k: ten[k] = 10^k\n\tlong[] ten;\n\t\n\t//チャンパーノウンクラスの機能を使う前に1度だけ呼び出す初期化処理\n\tvoid init(){\n\t\tendK = new long[20];\n\t\tendK[0] = 0;\n\t\tlong num = 9;\n\t\tfor(int k=1;k<=17;k++,num*=10){\n\t\t\tendK[k] = endK[k-1]+k*num;\n\t\t}\n\t\tendK[18] = DIGIT_LIMIT;\n\t\tendK[0] = -1;\n\t\tten = new long[20];\n\t\tten[0] = 0;\n\t\tten[1] = 10;\n\t\tfor(int k=2;k<=17;k++)ten[k]=ten[k-1]*10;\n\t}\n\t\n\t//Verify: AOJ2177 Euler040\n\t//x番目の桁の数字を得る\n\t//条件: 1 <= x <= 10^18\n\tint at(long x){\n\t\t//x番目の桁を含むような整数の区間[L, R)\n\t\t//R==MAX_NUMBERの場合は閉区間になるけど、どーでもいい\n\t\tlong L=0, R=0;\n\t\tint k;\n\t\t//LとRの値を決めるため、 xを含むインデックス数の閉区間 [endK[k]+1, endK[k+1]] のkを求める\n\t\tfor(k=17;k>=0;k--)if(endK[k] < x){\n\t\t\t//xを含む数値の両端を計算\n\t\t\t//LとRの数値の桁数は全て同じで、その桁数は(k+1)\n\t\t\tL = ten[k];\n\t\t\tR = k==17?MAX_NUMBER:ten[k+1];\n\t\t\tbreak;\n\t\t}\n\t\t//2分探索によってxの場所を検索\n\t\tfor(;;){\n\t\t\tlong m = (R+L)/2;\n\t\t\t//数値mの開始インデックス p を計算\n\t\t\tlong p = endK[k]+1+(k+1)*(m-ten[k]);\n\t\t\t//インデックスxは数値mの中にあるかチェック\n\t\t\tif(p<=x&&x<p+k+1){\n\t\t\t\tString s = m+\"\";\n\t\t\t\tfor(int i=0;i<s.length();i++)if(p+i==x)return s.charAt(i)-'0';\n\t\t\t}\n\t\t\telse if(x < p)R=m;\n\t\t\telse L=m;\n\t\t}\n\t}\n\t//Verify: AOJ2323\n\t//数xが現れる位置を求める\n\tlong findNumber(long x){\n\t\tif(x<=0||MAX_NUMBER<x)return DIGIT_LIMIT;\n\t\tif(x<10)return x;\n\t\tint k = (x+\"\").length()-1;\n\t\treturn endK[k]+1+(k+1)*(x-ten[k]);\n\t}\n\t//Verify: AOJ2323(答えが10^16未満に限定)\n\t//文字列targetが現れる位置を求める\n\t//targetにMAX_NUMBERを超える文字列が入っている場合はサポート外なので、DIGIT_LIMIT付近が答えになるtargetは動作保証はない\n\tlong findString(String target){\n\t\tboolean allzero = true;\n\t\tfor(char ch:target.toCharArray())allzero&=ch=='0';\n\t\t//targetがk個の0が並んでいる形の場合、targetが出現するのは10^kの中である\n\t\tif(allzero)return findNumber(Long.parseLong(\"1\"+target))+1;\n\t\tint len = target.length();\n\t\t//targetが\"1\"〜\"9\"の場合、ただちに答えが求まる\n\t\tif(len==1){\n\t\t\treturn findNumber(Long.parseLong(target));\n\t\t}\n\t\tlong res = DIGIT_LIMIT;\n\t\tint lenMax = Math.min(17, len);\n\t\tfor(int h=0;h<lenMax;h++)for(int k=1;k<=lenMax;k++)res = Math.min(res, findStringSub(target, h, k));\n\t\treturn res;\n\t}\n\t//findStringの補助メソッド\n\tprivate long findStringSub(String target, int h, int k){\n\t\t//リーディング0ならアウト\n\t\tif(target.charAt(h)=='0')return DIGIT_LIMIT;\n\t\t//targetのprefix部分\n\t\tString sub = target.substring(0, h);\n\t\t//targetの[h, k)にくる数字を計算\n\t\tString s = \"\";\n\t\tfor(int i=h;i<h+k;i++){\n\t\t\t//targetをはみ出さないならそのまま追記する\n\t\t\tif(i<target.length())s+=target.charAt(i);\n\t\t\t//targetをはみ出すなら、prefix部分の末尾から足りない文字数を取ってくる。足りない文字数はLである\n\t\t\t//このとき、prefixの後ろL文字を整数として解釈し、+1したものをsに追記する\n\t\t\telse {\n\t\t\t\tint L = h+k-i;\n\t\t\t\tString r = (Long.parseLong(sub.substring(sub.length()-L))+1)+\"\";\n\t\t\t\t//prefixの後ろL文字がリーディング0の場合、不具合が生じるので0をパディングする\n\t\t\t\twhile(r.length()-L<0)r=\"0\"+r;\n\t\t\t\ts+=r.substring(r.length()-L); break;\n\t\t\t}\n\t\t}\n\t\t//targetの位置hから始まる整数はbaseとする\n\t\tlong base = Long.parseLong(s);\n\t\t//MAX_NUMBERを超えるのはサポート外なので解なしとする\n\t\tif(MAX_NUMBER<base)return DIGIT_LIMIT;\n\t\t//targetと比較する文字列matchを作る\n\t\t//targetとうまく比較するために、matchの前にくっつける文字列と、後ろにくっつける文字列を考える\n\t\tString match = base+\"\";\n\t\tint pos = h;\n\t\t//matchの前に何文字くっつけたかは必要な情報になるのでaddLenに入れておく\n\t\tint addLen = 0;\n\t\t//matchの前にくっつけるべき整数 b\n\t\tlong b = base-1;\n\t\t//必要な文字数分だけくっつける\n\t\twhile(pos>0){\n\t\t\t//負の数になってしまった場合は無効な文字列なので解なし\n\t\t\tif(b<=0)return DIGIT_LIMIT;\n\t\t\tString add = b-- +\"\";\n\t\t\tpos-=add.length();\n\t\t\taddLen+=add.length();\n\t\t\tmatch = add+match;\n\t\t}\n\t\t//同様に後ろの部分を考える\n\t\tb = base+1;\n\t\tpos = h+k;\n\t\twhile(pos < target.length()){\n\t\t\t//このif文は要らない気がしてきたのでカット\n//\t\t\tif(MAX_NUMBER<b)return DIGIT_LIMIT;\n\t\t\tString add = b++ +\"\";\n\t\t\tpos+=add.length();\n\t\t\tmatch+=add;\n\t\t}\n\t\t//targetとmatchの比較\n\t\tfor(int i=0;i<target.length();i++)if(target.charAt(i)!=match.charAt(addLen-h+i))return DIGIT_LIMIT;\n\t\t//findNumber(base)が、hの位置のインデックスなので、hだけ引けばすなわちtargetの先頭の位置のインデックスになる\n\t\treturn findNumber(base)-h;\n\t}\n\t\n//MAX_NUMBERを算出したときの産物、ゴミともいう\n//\tvoid calc_maxnum(){\n//\t\tinit();\n//\t\tlong L = ten[16], R = L*10;\n//\t\twhile(R-L>1){\n//\t\t\tlong m = (R+L)/2;\n//\t\t\tlong p = endK[16]+1 + 17*(m-ten[16]);\n//\t\t\tSystem.out.println(\"M:\"+m+\" P:\"+p);\n//\t\t\tif(p<=DIGIT_LIMIT && DIGIT_LIMIT<p+17){\n//\t\t\t\tSystem.out.println(\"M:\"+m);\n//\t\t\t\tbreak;\n//\t\t\t}\n//\t\t\tif(DIGIT_LIMIT < p)R=m;\n//\t\t\telse L=m;\n//\t\t}\n//\t}\n\t//使い方例\n\tvoid test(){\n\t\t//初期化処理を最初に呼ぶ\n\t\tinit();\n\t\t//N番目からK文字を出力する (AOJ2177)\n\t\tScanner cin = new Scanner(System.in);\n\t\tfor(;;){\n\t\t\tString s = cin.next();\n\t\t\tif(s.equals(\"#\"))break;\n\t\t\n\t\t\tSystem.out.println(findString(s));\t\n\t\t}\n\t\t\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().test();\n\t}\n}"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\n\nm = [] #???°???????? ???????´?????? ?´?°????????\ns = str(input())  #???????°???? ??????????????????\nprint(s)"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\n\nm = [] #???°???????? ???????´?????? ?´?°????????\ns = str(input())  #???????°???? ??????????????????\nwhile s!='': # ???????????? ?´?°???????? ?´?? ???????????? ????????????\n    if s.isdigit(): #???????? ???????????° ?????´?????¶???? ???????????? ?????????°, ???°???????????°???? ????\n        m.append(s)\n    else:\n        print('String is not a sequence of numbers')\n\nfor i in range(len(m)): # ?????????°???? ?´???? ???°?¶?´???? ????????????\n    print(last(m[i]))"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\n\nm = [] #???°???????? ???????´?????? ?´?°????????\ns = str(input())  #???????°???? ??????????????????\nwhile s!='': # ???????????? ?´?°???????? ?´?? ???????????? ????????????\n    if s.isdigit(): #???????? ???????????° ?????´?????¶???? ???????????? ?????????°, ???°???????????°???? ????\n        m.append(s)\n    else:\n        print('String is not a sequence of numbers')\n    s = str(input())\n\nfor i in range(len(m)): # ?????????°???? ?´???? ???°?¶?´???? ????????????\n    print(last(m[i]))"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\n\nm = [] #???°???????? ???????´?????? ?´?°????????\ns = str(input())  #???????°???? ??????????????????\nwhile s!='#': # ???????????? ?´?°???????? ?´?? ???????????? ????????????\n    if s.isdigit(): #???????? ???????????° ?????´?????¶???? ???????????? ?????????°, ???°???????????°???? ????\n        m.append(s)\n    else:\n        print('String is not a sequence of numbers')\n    s = str(input())\n\nfor i in range(len(m)): # ?????????°???? ?´???? ???°?¶?´???? ????????????\n    print(last(m[i]))"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\n\nm = [] #???°???????? ???????´?????? ?´?°????????\ns = str(input())  #???????°???? ??????????????????\nprint(s)"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\ns = str(input())  #???????°???? ??????????????????\nprint(s)"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\n\nm = [] #???°???????? ???????´?????? ?´?°????????\ns = str(input())  #???????°???? ??????????????????\n\nprint(s)"
  },
  {
    "language": "Python",
    "code": "# ???????????????????°?? ???????????´?????°??????????????????\n#?????????????? ?±???????????????????? ???????????????? ???????????´?????°??????????????????, ???±???°???????°???????? ?????????????°???????? ???????????´?????°?????????????? ?????????¶???????????????? ??????????:\n# S = 123456789101112131415...\n#?????????´?????????? ???????????? ???????¶?´???????? ???°?´?°???????? ?????´???????????´?????°?????????????????? A ?? ?±???????????????????? ???????????´?????°?????????????????? S (???????????°?????? ???°???????°???????? ?? 1).\n\n#???????????°?????° ?´?????¶???° ???????°???? ?´?°???????? ???? stdin ?? ?????????´?????? ???????????? ?? stdout.\n\n#???????????? ???????´?????? ?´?°???????? (???? ???´?????? ?????´???????????´?????°?????????????????? ???° ????????????, ???°?????????°???????°?? ?´???????° ?????´???????????´?????°?????????????????? ??? 50 ????????????????):\n#6789\n#111\n\n#???????????? ?????????´?????? ?´?°????????:\n#6\n#12\n\n# ?????????????? ?????????????????? ?´?? ?????????° ????????????, ?????? ?????? ???????????´?????°?????????????????? ???? ???°???´???????????? ??????????\ndef prov(pos,s):\n    ch = int(s[:pos])+1\n    k1 = pos\n    k2 = pos + len(str(ch))\n    while k2 < len(s):\n        if str(ch) == s[k1:k2]:\n            ch = ch +1\n            k1 = k2\n            k2 = k1 + len(str(ch))\n        else:\n            return -1\n    if str(ch)[:len(s)-k1]!=s[k1:]:\n        return -1\n    return 0\n\n#?????????????? ?????????????????? ?´???? ?????????????? ???????????????° ?????????° ?????? ?????????? ?? ???????????´?????°??????????????????\ndef sf(ch):\n    #print(ch)\n    s = '1'\n    for i in range(len(str(ch)) - 1):\n        s = s + '0'\n    l = len(str(ch))\n    otv = (ch - int(s)) * l + 1\n    l = l - 1\n    while l > 0:\n        otv = otv + (int(s[:l + 1]) - int(s[:l])) * l\n        l = l - 1\n    return otv\n\n# ??-?????? ?????±?????????????? ???°???±?????°???? ???????????? ???° ???????????????? ???????????´?????°??????????????????\ndef last(s):\n    if (len(s) == 1) & (s != '0'):\n        return int(s)\n    if (s == '0'):\n        return 11\n    for pos in range(1,len(s)): # pos - ?????????´?????????? ?????????´???? ?????????°\n        for start in range (pos+1): # start - ???°???°???? ?????????????? ???? ???°???±?????????? ???????????´?????°???????????????????? ?????????°\n            if start == 0: # ???????? ???????°???°????, ?????? ???????????´?????°?????????????????? ???°???????°???????? ?? ?????????°\n                if prov(pos,s)!= -1:\n                    return sf(int(s[start:start+pos]))\n                if s[:1] == '0': # ???????? ?????? ???????????° ????????\n                    if s == '0'*len(s):\n                        return sf(int('1'+s))+1\n            else: # ???????? ???????? ???????????? ?????????? ???? ?????°???°???° ???????????´?????°??????????????????\n                if start + pos <len(s):\n                    if (s[:start] == str(int(s[start:start+pos])-1)[len(str(int(s[start:start+pos])-1))-start:]):\n                        if prov(pos, s[start:]) != -1:\n                            return sf(int(s[start:start + pos])-1)+len(str(int(s[start:start + pos])-1))-start\n                else:\n                    if (pos + start > len(s) - 1) & (start > 0): # ?´???? ?????????°???? ???????´?° ???????????° ?????´?????¶???? ?????????? ?´???° ?????????° ?? ?????? ???±?° ???? ????????????\n                        ch = str(int(s[:start]) + 1)\n                        if len(ch) > len(s[:start]):\n                            ch = ch[1:]\n                        ch1 = s[start:]\n                        i = len(ch)\n                        if ch == ch1[len(ch1) - len(ch):]:\n                            return sf(int(ch1)-1)+len(str(int(ch1)-1))-start\n                        while (i > 0) & (ch[:i] != ch1[len(ch1) - i:]):\n                            i = i - 1\n                        ich = -1\n                        if s[:len(ch[:i])] == ch[:len(ch[:i])]:\n                            ich = int(s[:len(s)-len(ch[:i])])\n                            s1 = s[len(ch[:i])+1:len(s)-len((ch[:i]))]\n                            k = len(ch[:i])+1\n                        else:\n                            s1 = s[len(ch[:i]):len(s)-len((ch[:i]))]\n                            k = len(ch[:i])\n                        if i != 0:\n                            x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']\n                            for j in range(9):\n                                if s1.find(x[j])!= -1:\n                                    k = k + s1.find(x[j])\n                                    break\n                            if (ich!=-1)&(ich<int(s[k:len(s)-len((ch[:i]))]+s[:k])):\n                                return sf(ich)\n                            else:\n                                return sf(int(s[k:len(s)-len((ch[:i]))]+s[:k]))+len(str(int(s[k:len(s)-len((ch[:i]))]+s[:k])))-k\n\n    x = ['1', '2', '3', '4', '5', '6', '7', '8', '9']  #???????? ???? ???°?????? ???°???????° ???° ???????????´?????°??????????????????, ???????????? ???? ???????????????????? ???????????°?????????? ??????????\n    for i in range(9):\n        if s.find(x[i]) != -1:\n            ch = int(s[s.find(x[i]):] + s[:s.find(x[i])])\n            k = s.find(x[i])\n            pos = k\n            while s[k:].find(x[i]) != -1:\n                if int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])]) < ch:\n                    ch = int(s[s[k:].find(x[i]):] + s[:s[k:].find(x[i])])\n                    pos = k\n                k = k + s[k:].find(x[i]) + 1\n            return sf(int(s[s.find(x[i]):] + s[:s.find(x[i])]))+len(s[s.find(x[i]):] + s[:s.find(x[i])]) - pos\n    return 0\n\n\nm = [] #???°???????? ???????´?????? ?´?°????????\ns = str(input())  #???????°???? ??????????????????\nprint(s)"
  }
]