[
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n#define all(a)a.begin(),a.end()\n//using ll=long long;\n//const int INF = 1<<30;\n//const ll INFll =1LL<<62;\n//const int mod= int(1e9)+7;\n//using P = pair<ll,ll>;\n//using ld=long double;\n\nint main(){\n    priority_queue<pair<int,int>>que;\n    int n,k;cin >>n>>k;\n    vector<int>a(n);\n    for (int i = 0; i < n; ++i) {\n        cin >>a[i];\n    }\n    for (int i = 0; i <=k; ++i) {\n        que.push({a[i], -i});\n    }\n    int now=1;\n    vector<int>ans;\n    while(ans.size()!=n-k){\n        auto p=que.top();que.pop();\n//        cout <<p.second<<endl;\n        if(p.second<now){\n            ans.push_back(p.first);\n            now=p.second;\n            que.push({a[k+ans.size()],-(k+ans.size())});\n        }\n    }\n//    cout <<ans.size()<<endl;\n    for (int i = 0; i < ans.size(); ++i) {\n        cout <<ans[i];\n    }\n    cout <<endl;\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define all(vec) vec.begin(), vec.end()\nusing namespace std;\nusing ll = long long;\nusing P = pair<ll, ll>;\nconstexpr ll INF = (1LL << 30) - 1LL;\nconstexpr ll LINF = (1LL << 60) - 1LL;\nconstexpr ll MOD = 1e9 + 7;\ntemplate <typename T> void chmin(T &a, T b) { a = min(a, b); }\ntemplate <typename T> void chmax(T &a, T b) { a = max(a, b); }\nint main() {\n    cin.tie(0);\n    ios::sync_with_stdio(false);\n    vector<vector<int>> idx(10);\n    int n, k;\n    cin >> n >> k;\n    for (int i = 0; i < n; i++) {\n        int a;\n        cin >> a;\n        idx[a].push_back(i);\n    }\n    vector<int> id(10);\n    int b = -1;\n    string s = \"\";\n    for (int i = 0; i < n - k; i++) {\n        for (int j = 9; j >= 1; j--) {\n            while (id[j] < idx[j].size() && idx[j][id[j]] <= b) {\n                id[j]++;\n            }\n            if (id[j] >= idx[j].size()) {\n                continue;\n            }\n            if (idx[j][id[j]] > b && n - 1 - idx[j][id[j]] >= n - k - 1 - i) {\n                b = idx[j][id[j]];\n                s += (char)('0' + j);\n                id[j]++;\n                break;\n            }\n        }\n    }\n    cout << s << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing Int = long long;\ntemplate<typename T1,typename T2> inline void chmin(T1 &a,T2 b){if(a>b) a=b;}\ntemplate<typename T1,typename T2> inline void chmax(T1 &a,T2 b){if(a<b) a=b;}\n\n\n//INSERT ABOVE HERE\nsigned main(){\n  int n,k;\n  cin>>n>>k;\n  vector<int> as(n);\n  for(int i=0;i<n;i++) cin>>as[i];\n\n  vector< set<int> > L(10);\n  for(int i=0;i<n;i++) L[as[i]].emplace(i);\n  for(int d=0;d<10;d++) L[d].emplace(n);\n\n  int len=n-k,pos=-1;\n  while(len){\n    for(int d=9;d>0;d--){\n      if(*L[d].rbegin()<=pos) continue;\n      int nxt=*L[d].upper_bound(pos);\n      if(n-nxt>=len){\n        cout<<d;\n        pos=nxt;\n        break;\n      }\n    }\n    len--;\n  }\n\n  cout<<endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint N, K;\nlist<int> Digits;\n\nvoid solve() {\n\tint deletedCnt, rest;\n\tlist<int>::iterator curPos, nextPos;\n\n\tdeletedCnt = 0;\n\tcurPos = Digits.begin();\n\tnextPos = ++Digits.begin();\n\twhile (nextPos != Digits.end()) {\n\t\tif (deletedCnt == K) {\n\t\t\tbreak;\n\t\t}\n\t\tif (*curPos >= *nextPos) {\n\t\t\t++curPos;\n\t\t\t++nextPos;\n\t\t\tcontinue;\n\t\t}\n\t\t++deletedCnt;\n\t\tnextPos = Digits.erase(curPos);\n\t\tcurPos = nextPos;\n\t\tif (curPos != Digits.begin()) {\n\t\t\t--curPos;\n\t\t}\n\t\telse {\n\t\t\t++nextPos;\n\t\t}\n\t}\n\n\trest = N - K;\n\tfor (int i = 0; i < rest; ++i) {\n\t\tcout << Digits.front();\n\t\tDigits.pop_front();\n\t\t//cout << *Digits.begin();\n\t\t//Digits.erase(Digits.begin());\n\t}\n\tcout << endl;\n}\n\nint main() {\n\tint a;\n\n\tcin >> N >> K;\n\tfor (int i = 0; i < N; ++i) {\n\t\tcin >> a;\n\t\tDigits.push_back(a);\n\t}\n\tsolve();\n\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <cstring>\n\n#include <iostream>\n#include <complex>\n#include <string>\n#include <algorithm>\n#include <numeric>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <unordered_map>\n#include <unordered_set>\n#include <bitset>\n\n#include <functional>\n#include <cassert>\n\ntypedef long long ll;\nusing namespace std;\n\n#ifndef LOCAL\n#define debug(x) ;\n#else\n#define debug(x) cerr << __LINE__ << \" : \" << #x << \" = \" << (x) << endl;\n\ntemplate <typename T1, typename T2>\nostream &operator<<(ostream &out, const pair<T1, T2> &p) {\n  out << \"{\" << p.first << \", \" << p.second << \"}\";\n  return out;\n}\n\ntemplate <typename T>\nostream &operator<<(ostream &out, const vector<T> &v) {\n  out << '{';\n  for (const T &item : v) out << item << \", \";\n  out << \"\\b\\b}\";\n  return out;\n}\n#endif\n\n#define mod 1000000007 //1e9+7(prime number)\n#define INF 1000000000 //1e9\n#define LLINF 2000000000000000000LL //2e18\n#define SIZE 200010\n\nint a[SIZE], ans[SIZE];\n\nint main(){\n  int N, K;\n\n  cin >> N >> K;\n\n  for (int i=0; i<N; i++)\n    cin >> a[i];\n\n  priority_queue<pair<int,int>> pq;\n\n  for (int i=0; i<K; i++)\n    pq.push({a[i], -i});\n\n  int index = 0;\n  for (int i=0; i<N-K; i++) {\n    pq.push({a[i+K], -(i+K)});\n\n    while(pq.size() && -pq.top().second < index) {\n      pq.pop();\n    }\n\n    auto p = pq.top(); pq.pop();\n\n    index = -p.second;\n    ans[i] = p.first;\n  }\n\n  for (int i=0; i<N-K; i++)\n    printf(\"%d\", ans[i]);\n\n  puts(\"\");\n\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<queue>\nusing namespace std;\ntypedef pair<int,int> pii;\n\nint main(){\n    int n, k;\n    cin >> n >> k;\n    int a[n];\n    for(int i = 0; i < n; i++)  cin >> a[i];\n    priority_queue<pii> pq;\n    for(int i = 0; i <= k; i++)   pq.push({a[i], -i});\n    int ret[n-k], rind = 0, next = k+1, now = 0;\n    while(true){\n        pii p = pq.top();   pq.pop();\n        if(now > -p.second) continue;\n        ret[rind++] = p.first;\n        now = -p.second;\n        if(rind == n-k) break;\n        pq.push({a[next], -next});\n        next++;\n    }\n    for(int i = 0; i < n-k; i++)    cout << ret[i];\n    cout << endl;\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nusing UL=unsigned int;\nusing LL=long long;\nusing ULL=unsigned long long;\n#define rep(i,n) for(UL i=0; i<(n); i++)\n\nint main(){\n UL N,K; scanf(\"%u%u\",&N,&K);\n UL D[200000]; rep(i,N) scanf(\"%u\",&D[i]);\n priority_queue<pair<UL,int>> Q;\n rep(i,K) Q.push({D[i],-(int)i});\n int q=0;\n vector<UL> ans;\n rep(p,N-K){\n  Q.push({D[p+K],-(int)(p+K)});\n  while(true){\n   pair<UL,int> P=Q.top(); Q.pop();\n   if(P.second > q) continue;\n   ans.push_back(P.first);\n   q=P.second;\n   break;\n  }\n }\n rep(i,ans.size()) printf(\"%u\",ans[i]); printf(\"\\n\");\n return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define Would\n#define you\n#define all(n)  n.begin(),n.end()\n#define rall(n) n.rbegin(),n.rend()\ntypedef long long ll;\nconst ll INF = 1e10;\nconst ll MOD = 1e9 + 7;\nconst double EPS = 1e-10;\nconst double pi = acos(-1);//3.1415926535897932384626433832795028...\nconst ll SIZE = 2000005;\nint dx[] = { 1,0,-1,0 }, dy[] = { 0,1,0,-1 }, alp[30];\nll fac[SIZE], finv[SIZE], inv[SIZE];\nvector<ll>dij;\nstruct edge { ll to, cost; };\nvector<vector<edge> >G;\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return true; } return false; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return true; } return false; }\n\nll mod_pow(ll a, ll b) {\n\tll res = 1, mul = a;\n\tfor (int i = 0; i < 31; ++i) {\n\t\tif (b >> i & 1) {\n\t\t\tres *= mul;\n\t\t\tres %= MOD;\n\t\t}\n\t\tmul = (mul * mul) % MOD;\n\t}\n\treturn res;\n}\n\nvoid addedge(int from, int to, int cost) {\n\tG[from].push_back({ to,cost });\n\tG[to].push_back({ from,cost });\n}\n\ntemplate<typename T>\nvector<T> make_v(size_t a) { return vector<T>(a); }\n\ntemplate<typename T, typename... Ts>\nauto make_v(size_t a, Ts... ts) {\n\treturn vector<decltype(make_v<T>(ts...))>(a, make_v<T>(ts...));\n}\n\ntemplate<typename T, typename V>\ntypename enable_if<is_class<T>::value == 0>::type\nfill_v(T & t, const V & v) { t = v; }\n\ntemplate<typename T, typename V>\ntypename enable_if<is_class<T>::value != 0>::type\nfill_v(T & t, const V & v) {\n\tfor (auto& e : t) fill_v(e, v);\n}\n\ntemplate<typename T>\nvoid outp(vector<T>v) {\n\tfor (int i = 0; i < v.size(); ++i) {\n\t\tcout << v[i];\n\t\tif (i != v.size() - 1) { cout << \" \"; }\n\t}\n}\n\ndouble add(double a, double b) {\n\tif (abs(a + b) < EPS * (abs(a) + abs(b))) { return 0; }\n\treturn a + b;\n}\n\ndouble len(int a, int b, int c, int d) {\n\treturn (double)sqrt((a - c) * (a - c) + (b - d) * (b - d));\n}\n\n//Range Max Query\nclass SegmentTree {\nprivate:\n\tll n;\n\tvector<ll>node;\n\npublic:\n\tvoid init(ll size) {\n\t\tn = 1;\n\t\twhile (n < size) { n *= 2; }\n\t\tnode.resize(2 * n - 1, -1);\n\t}\n\n\t// node[i] = x \n\tvoid update(ll i, ll x) {\n\t\ti += n - 1;\n\t\tnode[i] = x;\n\t\twhile (i > 0) {\n\t\t\ti = (i - 1) / 2;\n\t\t\tnode[i] = max(node[2 * i + 1], node[2 * i + 2]);\n\t\t}\n\t}\n\n\t// max([a, b))\n\tll get_max(ll a, ll b, ll k = 0, ll l = 0, ll r = -1) {\n\t\tif (r < 0) { r = n; }\n\t\tif (r <= a || b <= l) { return -1; }\n\t\tif (a <= l && r <= b) { return node[k]; }\n\t\tll vl = get_max(a, b, 2 * k + 1, l, (l + r) / 2);\n\t\tll vr = get_max(a, b, 2 * k + 2, (l + r) / 2, r);\n\t\treturn max(vl, vr);\n\t}\n};\n\nll a, b;\nvector<ll>v;\nint main() {\n\tcin >> a >> b;\n\tSegmentTree tree;\n\ttree.init(a);\n\tv.resize(a);\n\tfor (int i = 0; i < a; ++i) { cin >> v[i]; }\n\tfor (int i = 0; i < a; ++i) { tree.update(i, v[i]); }\n\n\tll l = 0, r = b + 1;\n\n\tfor (int i = 0; i < a - b; ++i) {\n\t\tll mon = tree.get_max(l, r);\n\n\t\tcout << mon;\n\t\tfor (int j = l; j < r; ++j) {\n\t\t\tif (v[j] == mon) {\n\t\t\t\tl = j + 1;\n\t\t\t\t++r;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\n\tcout << endl;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<deque>\n#include<vector>\n\nusing namespace std;\n\n#define int long long\n\nsigned main(){\n\tconst int NUM = 10;\n\t\n\tint N, K;\n\tvector<int> a;\n\tvector<deque<int>> d(NUM);\n\t\n\tcin>>N>>K;\n\t\n\ta.resize(N);\n\t\n\tfor(int i = 0; i < N; i++){\n\t\tcin>>a[i];\n\t\td[a[i]].push_back(i);\n\t}\n\t\n\tfor(int i = 0, b = -1; i < N - K; i++){\n\t\tint num = 0;\n\t\tbool flag = false;\n\t\t\n\t\tfor(int j = NUM-1; j >= 0; j--){\n\t\t\tint temp = -1;\n\t\t\n\t\t\t// cout<<\"j = \"<<j<<\" size = \"<<d[j].size()<<endl;\n\t\t\t\n\t\t\twhile(d[j].size()){\n\t\t\t\ttemp = d[j].front();\n\t\t\t\t\n\t\t\t\t// cout<<\"i = \"<<i<<\" j = \"<<j<<\" temp = \"<<temp<<\" K+i = \"<<K+i<<\" b = \"<<b<<endl;\n\t\t\t\t\n\t\t\t\tif(temp <= K+i) {\n\t\t\t\t\tif(b < temp){\n\t\t\t\t\t\tflag = true;\n\t\t\t\t\t\t\n\t\t\t\t\t\tb = temp;\n\t\t\t\t\t\t\n\t\t\t\t\t\tcout<<j;\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\td[j].pop_front(); \n\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif(flag) break;\n\t\t}\n\t}\n\t\n\tcout<<endl;\n\t\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <array>\n#include <list>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <tuple>\n#include <bitset>\n#include <memory>\n#include <cmath>\n#include <algorithm>\n#include <functional>\n#include <iomanip>\n#include <numeric>\n#include <climits>\n#include <cfloat>\n#include <cassert>\n#include <random>\n\n\nint main() {\n\tint n, k; std::cin >> n >> k;\n\tstd::vector<int> initial(n), point; point.reserve(n - k); for (auto& i : initial) std::cin >> i;\n\tstd::vector<std::vector<int>> next(n); next.back() = std::vector<int>(10, -1); next.back()[initial.back()] = n - 1;\n\tfor (int i = n - 2; i >= 0; --i) {\n\t\tnext[i] = next[i + 1];\n\t\tnext[i][initial[i]] = i;\n\t}\n\tconst auto limit = n - k;\n\tfor (auto i = 0; i < n && point.size() < limit; ++i) {\n\t\tint max = 9;\n\t\twhile (next[i][max] == -1 || next[i][max] - i > k) --max;\n\t\tk -= next[i][max] - i;\n\t\ti = next[i][max];\n\t\tpoint.push_back(initial[i]);\n\t}\n\tfor (const auto p : point) std::cout << p;\n\tstd::cout << '\\n';\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\nint main() {\n  int n, k;\n  cin >> n >> k;\n  vector<int> a(n);\n  int i, j;\n  for (i = 0; i < n; i++) {\n    cin >> a[i];\n  }\n  map<int, int> a_list;\n  for (i = 0; i < 11; i++) {\n    a_list.insert(make_pair(i, 0));\n  }\n  for (i = 0; i < k; i++) {\n    a_list[a[i]]++;\n  }\n  int index = 0;\n  string result = \"\";\n  for (i = k; i < n; i++) {\n    a_list[a[i]]++;\n    for (j = 9; j >= 0; j--) {\n      if (a_list[j]) {\n        while (a[index] != j) {\n          a_list[a[index]]--;\n          index++;\n        }\n        result += j + '0';\n        a_list[j]--;\n        index++;\n        break;\n      }\n    }\n  }\n  cout << result << endl;\n  return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef double D;\ntypedef pair<ll,ll> P;\n#define M 1000000007\n#define F first\n#define S second\n#define PB push_back\n#define INF 100000000000000000\nint n,k,nx[10][200005],a[200005];\nint main(void){\n    cin>>n>>k;\n    for(int i=1;i<=n;i++)cin>>a[i];\n    for(int i=1;i<10;i++)nx[i][n+1]=n+1;\n    for(int i=n;i>=0;i--){\n        for(int j=1;j<10;j++)nx[j][i]=nx[j][i+1];\n        if(i<n)nx[a[i+1]][i]=i+1;\n    }\n    int p=0;\n    while(n-p>k){\n        for(int i=9;i>0;i--){\n            if(nx[i][p]-p-1<=k){\n                k-=(nx[i][p]-p-1);\n                p=nx[i][p];\n                break;\n            }\n        }\n        if(p>n)break;\n        cout<<a[p];\n    }\n    cout<<endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing i64 = long long;\n\nint main() {\n  i64 N, K;\n  cin >> N >> K;\n\n  vector<i64> A(N);\n  vector<set<i64>> st(10);\n  for(i64 i = 0;i < N;i++) {\n    cin >> A[i];\n    st[A[i]].insert(i);\n  }\n\n\n  i64 now = -1;\n  for(i64 i = N - K;i --> 0;) {\n    i64 ans = 0;\n    for(i64 n = 10;n --> 1;) {\n      auto iter = st[n].upper_bound(now);\n      if(iter == st[n].end()) continue;\n      else if(N - *iter > i){\n        ans = n;\n        now = *iter;\n        break;\n      }\n    }\n    cout << ans;\n  }\n  cout << endl;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<queue>\n#include<vector>\n#include<string>\n#include<list>\n#define ll long long\nusing namespace std;\nint main() {\n\tlist<char>str;\n\tchar c;\n\tint n, k; cin >> n >> k;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> c;\n\t\tstr.push_back(c);\n\t}\n\tint cnt = 0;\n\tfor (auto itl = str.begin(); itl != str.end();) {\n\t\tif (cnt >= k) break;\n\t\tif (++itl == str.end()) break;\n\t\t--itl;\n\t\tif (*itl < *(++itl)) {\n\t\t\titl = str.erase(--itl);\n\t\t\tif(itl!=str.begin()) --itl;\n\t\t\t++cnt;\n\t\t}\n\t}\n\tfor (int i = 0; i < n - k; ++i) {\n\t\tcout << *str.begin();\n\t\tstr.erase(str.begin());\n\t}\n\tcout << endl;\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define HUGE_NUM 99999999999999999\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\n\nstruct Info{\n\tInfo(int arg_num,int arg_loc){\n\t\tnum = arg_num;\n\t\tloc = arg_loc;\n\t}\n\tbool operator<(const struct Info &arg) const{\n\t\tif(num != arg.num){\n\t\t\treturn num < arg.num; //数字が大きいほど上\n\t\t}else{\n\t\t\treturn loc > arg.loc; //数字が小さいほど上\n\t\t}\n\t}\n\n\tint num,loc;\n};\n\nint N,K;\n\nint main(){\n\n\tscanf(\"%d %d\",&N,&K);\n\n\tpriority_queue<Info> Q;\n\n\tint tmp;\n\tint rest = N,need_out = N-K,out = 0;\n\tint pre_loc = BIG_NUM;\n\n\tfor(int i = 0; i < N; i++){\n\n\t\tscanf(\"%d\",&tmp);\n\t\tQ.push(Info(tmp,i));\n\t\trest -= 1;\n\n\t\tif(out+rest >= need_out)continue; //まだ出力は不要\n\n\t\tprintf(\"%d\",Q.top().num);\n\t\tout += 1;\n\t\tpre_loc = Q.top().loc;\n\n\t\twhile(Q.empty() == false && Q.top().loc <= pre_loc)Q.pop();\n\t}\n\tprintf(\"\\n\");\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<functional>\n#include<iomanip>\n#include<vector>\n#include<set>\n#include<queue>\n#include<utility>\n#include<map>\n#include <iostream>\n#include <iomanip>\n#include <fstream>\n#include <stdio.h>\n#include <math.h>\n#include <time.h>\n#include <string>\n#include <tuple>\n#include <vector>\n#include <map>\n#include <unordered_map>\n#include <list>\n#include <set>\n#include <stack>\n#include <queue>\n#include <cstdlib>\n#include <algorithm>\n#include <random>\n#include <cassert>\n\n#define LL long long\n#define INT_MAX 2147483647\n\nusing namespace std;\n\nstruct SegmentTree {\nprivate:\n\tint N;\n\tvector<LL> node;\n\tconst long long DEFAULT = -9223372036854775807LL;\npublic:\n\tvoid init(int n) {\n\t\tnode.clear();\n\t\tN = 1;\n\t\twhile (N < n) N *= 2;\n\t\tfor (int i = 0; i < 2 * N - 1; i++) node.push_back(DEFAULT);\n\t}\n\tvoid update(int i, long long x) {\n\t\ti += N - 1;\n\t\tnode[i] = x;\n\t\twhile (i > 0) {\n\t\t\ti = (i - 1) / 2;\n\t\t\tnode[i] = max(node[i * 2 + 1], node[i * 2 + 2]);\n\t\t}\n\t}\n\tlong long maximum(int a, int b, int k = 0, int l = 0, int r = -1) {\n\t\tif (r == -1) r = N;\n\t\tif (r <= a || b <= l) return DEFAULT;\n\t\tif (a <= l && r <= b) return node[k];\n\t\treturn max(maximum(a, b, k * 2 + 1, l, (l + r) / 2), maximum(a, b, k * 2 + 2, (l + r) / 2, r));\n\t}\n\tlong long m;\n\tint find(int a, int b, int k = 0, int l = 0, int r = -1) {\n\t\tif (r == -1) {\n\t\t\tm = maximum(a, b);\n\t\t\tr = N;\n\t\t}\n\t\tif (r <= a || b <= l) return 99999999;\n\t\tif (r - l == 1) {\n\t\t\tif (node[k] == m) return l;\n\t\t\telse return 99999999;\n\t\t}\n\t\tif (a <= l && r <= b) {\n\t\t\tLL valueL = maximum(a, b, k * 2 + 1, l, (l + r) / 2);\n\t\t\tLL valueR = maximum(a, b, k * 2 + 2, (l + r) / 2, r);\n\t\t\tif (valueL >= valueR) return find(a, b, k * 2 + 1, l, (l + r) / 2);\n\t\t\telse return find(a, b, k * 2 + 2, (l + r) / 2, r);\n\t\t}\n\t\treturn min(find(a, b, k * 2 + 1, l, (l + r) / 2), find(a, b, k * 2 + 2, (l + r) / 2, r));\n\t}\n};\n\nint N, K;\nint a[200000];\nSegmentTree st;\nint main() {\n\tcin >> N >> K;\n\tfor (int i = 0; i < N; i++) {\n\t\tcin >> a[i];\n\t}\n\tst.init(N);\n\tfor (int i = 0; i < N; i++) {\n\t\tst.update(i, a[i]);\n\t}\n\tint l = 0;\n\tfor (int i = 0; i < N - K; i++) {\n\t\tint p = st.find(l, K+i+1);\n\t\tl = p + 1;\n\t\t//cout << K+i+1 << \" \" << p << endl;\n\t\tcout << a[p];\n\t}\n\tcout << endl;\n\treturn 0;\n}\n\n\n\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\n#define MAX (1 << 18) /* 262144 */\n\nint hocchann[MAX * 2 - 1];\n\nvoid init(const int* data, int num) {\n\tint i;\n\tfor (i = 0; i < MAX; i++) {\n\t\thocchann[MAX - 1 + i] = i < num ? data[i] : 0;\n\t}\n\tfor (i = MAX - 1 - 1; i >= 0; i--) {\n\t\tint c1 = hocchann[i * 2 + 1];\n\t\tint c2 = hocchann[i * 2 + 2];\n\t\thocchann[i] = c1 > c2 ? c1 : c2;\n\t}\n}\n\nint get_i(int idx, int qmin, int qmax, int smin, int smax) {\n\tif (qmax <= smin || smax <= qmin) return 0;\n\telse if (qmin <= smin && smax <= qmax) return hocchann[idx];\n\telse {\n\t\tint smid = smin + (smax - smin) / 2;\n\t\tint l = get_i(idx * 2 + 1, qmin, qmax, smin, smid);\n\t\tint r = get_i(idx * 2 + 2, qmin, qmax, smid, smax);\n\t\treturn l > r ? l : r;\n\t}\n}\n\nint get(int min, int max) {\n\treturn min < max ? get_i(0, min, max, 0, MAX) : 0;\n}\n\nint N, K;\nint a[271828];\n\nchar nokosu[271828];\n\nint main(void) {\n\tint i;\n\tint start, left;\n\tif (scanf(\"%d%d\", &N, &K) != 2) return 1;\n\tfor (i = 0; i < N; i++) {\n\t\tif (scanf(\"%d\", &a[i]) != 1) return 1;\n\t}\n\tinit(a, N);\n\tstart = 0;\n\tleft = K;\n\twhile (start + left < N) {\n\t\tint max = get(start, start + left + 1);\n\t\tint no = 0, yes = left + 1;\n\t\twhile (no + 1 < yes) {\n\t\t\tint mid = no + (yes - no) / 2;\n\t\t\tif (get(start, start + mid) == max) yes = mid; else no = mid;\n\t\t}\n\t\tprintf(\"%d\", max);\n\t\tstart += yes;\n\t\tleft -= yes - 1;\n\t}\n\tputchar('\\n');\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C",
    "code": "// 420 Digits K\n// 2019.12.26 bal4u\n\n#include <stdio.h>\n\n#if 1\n#define gc() getchar_unlocked()\n#define pc(c) putchar_unlocked(c)\n#else\n#define gc() getchar()\n#define pc(c) putchar(c)\n#endif\n\nint in() {   // 非負整数の入力\n\tint n = 0, c = gc();\n\tdo n = 10 * n + (c & 0xf); while ((c = gc()) >= '0');\n\treturn n;\n}\n\nchar A[200005];\ntypedef struct { char a; int i; } T;\nT a[200005], b[200005];\nint f[128];\n\nvoid distsort(T *ain, T *aout, int sz) {\n\tint i, x;\n\n\tfor (i = 0; i < sz; ++i) ++f[ain[i].a];\n\tfor (i = '9'; i > '0'; i--) f[i-1] += f[i];\n\tfor (i = sz-1; i >= 0; i--) {\n\t\tx = ain[i].a, aout[--f[x]].a = x, aout[f[x]].i = ain[i].i;\n\t}\n}\n\nint main()\n{\n\tint i, k, K, N;\n\t\n    N = in(), K = in();\n    if (K == 0) {\n        while (N--) pc(gc()), gc();\n    } else {\n        for (i = 0; i < N; ++i) {\n\t\t\tA[i] = gc(), gc();\n\t\t\tb[i].i = i, b[i].a = A[i];\n\t\t}\n\t\tdistsort(b, a, N);\n\t\t\n\t\tk = -1;\n\t\tfor (i = 0; K < N; ++i) {\n\t\t\tif (a[i].a < A[K]) break;\n\t\t\tif (k < a[i].i && a[i].i < K) {\n\t\t\t\tpc(a[i].a), k = a[i].i, ++K;\n\t\t\t}\n\t\t}\n\t\twhile (K < N) pc(A[K++]);\n\t}\n\tpc('\\n');\n\treturn 0;\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.LinkedList;\nimport java.util.List;\nimport java.util.ListIterator;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\t// TODO 自動生成されたメソッド・スタブ\n\t\tnew Main().mainrun();\n\t}\n\n\tScanner scan;\n\n\tint N,K;\n\tprivate List<Integer> Digits;\n\n\n\tprivate void mainrun() {\n\t\tscan = new Scanner(System.in);\n\n\t\tN = scan.nextInt();\n\t\tK = scan.nextInt();\n\t\tint max = -1;\n\t\tDigits = new LinkedList<>();\n\n\t\tfor(int i = 0;i < N;i++) {\n\t\t\tint num = scan.nextInt();\n\t\t\tDigits.add(num);\n\t\t\tmax = Math.max(max, num);\n\t\t}\n\n\t\tListIterator<Integer> li;\n\t\tli = Digits.listIterator();\n\n\t\tif(N - K ==1) {\n\t\t\tSystem.out.println(max);\n\t\t\treturn ;\n\t\t}\n\n\t\twhile(K != 0) {\n\t\t\tint num1 = li.next();\n\t\t\tint num2 = li.next();\n\n\t\t\tli.previous();\n\t\t\t\n\t\t\tif(num1 < num2) {\n\t\t\t\tli.previous();\n\t\t\t\tli.remove();\n\n\t\t\t\tif(li.nextIndex() >= 1) {\n\t\t\t\t\tli.previous();\n\t\t\t\t}\n\t\t\t\tK--;\n\t\t\t}\n\n\t\t\tif(li.nextIndex() == Digits.size() -1) {\n\t\t\t\twhile(K != 0) {\n\t\t\t\t\tli.remove();\n\t\t\t\t\tli.previous();\n\t\t\t\t\tK--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tDigits.forEach(System.out::print);\n\n\t\tSystem.out.println();\n\n\t\tscan.close();\n\t}\n\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System.Collections.Generic;\nusing System;\n\npublic class PriorityQueue<T> where T : IComparable\n{\n    private IComparer<T> _comparer = null;\n    private int _type = 0;\n    private T[] _heap;\n    private int _sz = 0;\n    private int _count = 0;\n    public PriorityQueue(int maxSize, IComparer<T> comparer)\n    {\n        _heap = new T[maxSize];\n        _comparer = comparer;\n    }\n    public PriorityQueue(int maxSize, int type = 0)\n    {\n        _heap = new T[maxSize];\n        _type = type;\n    }\n    private int Compare(T x, T y)\n    {\n        if (_comparer != null) return _comparer.Compare(x, y);\n        return _type == 0 ? x.CompareTo(y) : y.CompareTo(x);\n    }\n    public void Push(T x)\n    {\n        _count++;\n        var i = _sz++;\n        while (i > 0)\n        {\n            var p = (i - 1) / 2;\n            if (Compare(_heap[p], x) <= 0) break;\n            _heap[i] = _heap[p];\n            i = p;\n        }\n        _heap[i] = x;\n    }\n    public T Pop()\n    {\n        _count--;\n        T ret = _heap[0];\n        T x = _heap[--_sz];\n        int i = 0;\n        while (i * 2 + 1 < _sz)\n        {\n            int a = i * 2 + 1;\n            int b = i * 2 + 2;\n            if (b < _sz && Compare(_heap[b], _heap[a]) < 0) a = b;\n            if (Compare(_heap[a], x) >= 0) break;\n            _heap[i] = _heap[a];\n            i = a;\n        }\n        _heap[i] = x;\n        return ret;\n    }\n    public int Count() => _count;\n    public T Peek() => _heap[0];\n    public bool Contains(T x)\n    {\n        for (int i = 0; i < _sz; i++) if (x.Equals(_heap[i])) return true;\n        return false;\n    }\n    public void Clear()\n    {\n        while (this.Count() > 0) this.Pop();\n    }\n    public IEnumerator<T> GetEnumerator()\n    {\n        var ret = new List<T>();\n        while (this.Count() > 0) ret.Add(this.Pop());\n        foreach (var r in ret)\n        {\n            this.Push(r);\n            yield return r;\n        }\n    }\n    public T[] ToArray()\n    {\n        T[] array = new T[_sz];\n        int i = 0;\n        foreach (var r in this) array[i++] = r;\n        return array;\n    }\n}\n\npublic class P : IComparable\n{\n    public int a { get; set; }\n    public int p { get; set; }\n    public int CompareTo(object obj)\n    {\n        var x = (P)obj;\n        if (this.a > x.a) return 1;\n        else if (this.a == x.a)\n        {\n            if (this.p < x.p) return 1;\n            else return -1;\n        }\n        else return -1;\n    }\n}\n\npublic class hello\n{\n    public static void Main()\n    {\n        string[] line = Console.ReadLine().Trim().Split(' ');\n        var n = int.Parse(line[0]);\n        var k = int.Parse(line[1]);\n        line = Console.ReadLine().Trim().Split(' ');\n        var a = Array.ConvertAll(line, int.Parse);\n        getAns(n, k, a);\n    }\n    static void getAns(int n, int k, int[] a)\n    {\n        var ans = new List<int>();\n        var pq = new PriorityQueue<P>(n + 10, 1);\n        for (int i = 0; i < k; i++) pq.Push(new P { a = a[i], p = i });\n        var pt = k;\n        var now = -1;\n        while (pt < n)\n        {\n            pq.Push(new P { a = a[pt], p = pt });\n            pt++;\n            while (true)\n            {\n                var w = pq.Pop();\n                if (w.p > now) { now = w.p; ans.Add(w.a); break; }\n            }\n        }\n        Console.WriteLine(string.Join(\"\", ans));\n    }\n}\n\n"
  },
  {
    "language": "Ruby",
    "code": "n, k = gets.chomp.split.map(&:to_i)\narr = gets.chomp.split.map(&:to_i)\n\ndel = 0\ny = 0\nwhile y < n\n    x = y - 1\n    x -= 1 while x >= 0 && !arr[x]\n    while x >= 0 && arr[x] < arr[y]\n        arr[x] = nil\n        x -= 1 while x >= 0 && !arr[x]\n        del += 1\n        break if del == k\n    end\n    y += 1\n    break if del == k\nend\n\nif del == k\n    puts (arr.compact)[0, n - k].join\nelse\n    y = n - 1\n    y -= 1 while y > 0 && !arr[y]\n    while y > 0\n        x = y + 1\n        while x <= n - 1 && arr[x] && arr[y] > arr[x]\n            arr[x] = nil\n            x += 1\n            del += 1\n            break if del == k\n        end\n        y -= 1\n        y -= 1 while y > 0 && !arr[y]\n        break if del == k\n    end\n    puts (arr.compact)[0, n - k].join\nend\n\n"
  },
  {
    "language": "Python",
    "code": "import heapq\nfrom collections import deque\nfrom enum import Enum\nimport sys\nimport math\nfrom _heapq import heappush, heappop\nimport copy\n\nBIG_NUM = 2000000000\nMOD = 1000000007\nEPS = 0.000000001\n\n\nclass Info:\n    def __init__(self,arg_num,arg_loc):\n        self.num = arg_num\n        self.loc = arg_loc\n\n    def __lt__(self,another):\n        if self.num != another.num:\n            return self.num > another.num\n        else:\n            return self.loc < another.loc\n\n\nN,K = map(int,input().split())\n\nQ = []\n\nrest = N\nneed_out = N-K\nout = 0\n\ntable = list(map(int,input().split()))\n\nfor loc in range(N):\n    tmp = table[loc]\n    heappush(Q,Info(tmp,loc))\n    rest -= 1\n\n    if out+rest >= need_out:\n        continue\n\n    info = heappop(Q)\n    print(\"%d\"%(info.num),end=\"\")\n\n    while len(Q) > 0 and Q[0].loc <= info.loc:\n        heappop(Q)\n\nprint(\"\")\n"
  }
]