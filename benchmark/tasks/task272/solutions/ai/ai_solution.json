[
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "C",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint count_divisors(int num) {\n    if (num == 1) return 1;\n    int count = 2; // 1 and num\n    int sqrt_num = sqrt(num);\n    for (int i = 2; i <= sqrt_num; i++) {\n        if (num % i == 0) {\n            if (i * i == num) {\n                count += 1;\n            } else {\n                count += 2;\n            }\n        }\n    }\n    return count;\n}\n\nint is_ginkgo_prime(int m, int n) {\n    int sum = m * m + n * n;\n    if (sum <= 1) {\n        return 0;\n    }\n    return count_divisors(sum) == 8;\n}\n\nint main() {\n    int m, n;\n    while (scanf(\"%d %d\", &m, &n) == 2) {\n        if (is_ginkgo_prime(m, n)) {\n            printf(\"1\\n\");\n        } else {\n            printf(\"0\\n\");\n        }\n    }\n    return 0;\n}",
    "timestamp": "2025-08-05 20:50:45"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint countDivisors(int num) {\n    if (num == 1) return 1;\n    int count = 2; // 1 and num itself\n    for (int i = 2; i <= sqrt(num); ++i) {\n        if (num % i == 0) {\n            if (i * i == num) {\n                count += 1;\n            } else {\n                count += 2;\n            }\n        }\n    }\n    return count;\n}\n\nbool isGinkgoPrime(int m, int n) {\n    int sum = m * m + n * n;\n    if (sum <= 1) return false;\n    return countDivisors(sum) == 8;\n}\n\nint main() {\n    int T;\n    cin >> T;\n    while (T--) {\n        int m, n;\n        cin >> m >> n;\n        if (isGinkgoPrime(m, n)) {\n            cout << \"P\" << endl;\n        } else {\n            cout << \"C\" << endl;\n        }\n    }\n    return 0;\n}",
    "timestamp": "2025-08-05 20:50:58"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "Java",
    "code": "import java.util.*;\n\npublic class GinkgoPrimeChecker {\n    public static boolean isGinkgoPrime(int m, int n) {\n        int num = m * m + n * n;\n        if (num <= 1) {\n            return false;\n        }\n        return countDivisors(num) == 8;\n    }\n\n    private static int countDivisors(int num) {\n        int count = 0;\n        for (int i = 1; i <= Math.sqrt(num); i++) {\n            if (num % i == 0) {\n                if (num / i == i) {\n                    count++;\n                } else {\n                    count += 2;\n                }\n            }\n        }\n        return count;\n    }\n\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int m = scanner.nextInt();\n        int n = scanner.nextInt();\n        System.out.println(isGinkgoPrime(m, n));\n    }\n}",
    "timestamp": "2025-08-05 20:51:15"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "Java",
    "code": "public class GinkgoNumberPrimality {\n    public static boolean isPrimeGinkgoNumber(int m, int n) {\n        if (m * m + n * n <= 1) {\n            return false;\n        }\n        \n        return countDivisors(m * m + n * n) == 8;\n    }\n    \n    private static int countDivisors(int num) {\n        int count = 0;\n        for (int i = 1; i <= Math.sqrt(num); i++) {\n            if (num % i == 0) {\n                if (num / i == i) {\n                    count++;\n                } else {\n                    count += 2;\n                }\n            }\n        }\n        return count;\n    }\n    \n    public static void main(String[] args) {\n        // Example usage\n        System.out.println(isPrimeGinkgoNumber(2, 3)); // Example call\n    }\n}",
    "timestamp": "2025-08-05 20:51:19"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdbool.h>\n#include <math.h>\n\nint count_divisors(int m, int n) {\n    int num = m * m + n * n;\n    int divisors = 0;\n    \n    for (int i = 1; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            if (i * i == num)\n                divisors++;\n            else\n                divisors += 2;\n        }\n    }\n    \n    return divisors;\n}\n\nbool is_ginkgo_prime(int m, int n) {\n    int num = m * m + n * n;\n    \n    if (num <= 1)\n        return false;\n    \n    return count_divisors(m, n) == 8;\n}\n\nint main() {\n    int m, n;\n    scanf(\"%d %d\", &m, &n);\n    \n    printf(is_ginkgo_prime(m, n) ? \"Yes\\n\" : \"No\\n\");\n    \n    return 0;\n}",
    "timestamp": "2025-08-05 20:51:24"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <vector>\n\nusing namespace std;\n\nbool isGinkgoPrime(int m, int n) {\n    int number = m * m + n * n;\n    \n    if (number <= 1) return false;\n    \n    vector<int> divisors;\n    for (int i = 1; i <= sqrt(number); ++i) {\n        if (number % i == 0) {\n            divisors.push_back(i);\n            if (i != number / i) {\n                divisors.push_back(number / i);\n            }\n        }\n    }\n    \n    return divisors.size() == 8;\n}\n\nint main() {\n    int m, n;\n    cin >> m >> n;\n    \n    if (isGinkgoPrime(m, n)) {\n        cout << \"Prime\" << endl;\n    } else {\n        cout << \"Not Prime\" << endl;\n    }\n    \n    return 0;\n}",
    "timestamp": "2025-08-05 20:51:28"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def count_divisors(x):\n    count = 0\n    for i in range(1, int(x**0.5) + 1):\n        if x % i == 0:\n            count += 1\n            if i != x // i:\n                count += 1\n    return count\n\ndef is_ginkgo_prime(m, n):\n    value = m**2 + n**2\n    if value > 1 and count_divisors(value) == 8:\n        return True\n    return False\n\n# Example usage:\n# ginkgo_number = (m, n)\n# print(is_ginkgo_prime(*ginkgo_number))",
    "timestamp": "2025-08-13 03:55:00"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "java",
    "code": "import java.util.ArrayList;\nimport java.util.List;\n\npublic class GinkgoNumberChecker {\n    public static boolean isPrimeGinkgoNumber(int m, int n) {\n        int number = m * m + n * n;\n        \n        if (number <= 1) return false;\n        \n        List<Integer> divisors = new ArrayList<>();\n        for (int i = 1; i <= Math.sqrt(number); i++) {\n            if (number % i == 0) {\n                divisors.add(i);\n                if (i != number / i) {\n                    divisors.add(number / i);\n                }\n            }\n        }\n        \n        return divisors.size() == 8;\n    }\n\n    public static void main(String[] args) {\n        int m = 2;\n        int n = 3;\n        \n        boolean result = isPrimeGinkgoNumber(m, n);\n        System.out.println(\"<\" + m + \", \" + n + \"> is \" + (result ? \"prime\" : \"not prime\"));\n    }\n}",
    "timestamp": "2025-08-13 03:55:03"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "c",
    "code": "#include <stdio.h>\n#include <math.h>\n\nint count_divisors(int num) {\n    int count = 0;\n    for (int i = 1; i <= sqrt(num); i++) {\n        if (num % i == 0) {\n            count += (i * i == num) ? 1 : 2;\n        }\n    }\n    return count;\n}\n\nint is_ginkgo_prime(int m, int n) {\n    int number = m * m + n * n;\n    if (number > 1 && count_divisors(number) == 8) {\n        return 1;\n    }\n    return 0;\n}\n\nint main() {\n    int m, n;\n    printf(\"Enter Ginkgo number <m, n>: \");\n    scanf(\"%d %d\", &m, &n);\n\n    if (is_ginkgo_prime(m, n)) {\n        printf(\"<%d, %d> is a Ginkgo prime.\\n\", m, n);\n    } else {\n        printf(\"<%d, %d> is not a Ginkgo prime.\\n\", m, n);\n    }\n    \n    return 0;\n}",
    "timestamp": "2025-08-13 03:55:07"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def count_divisors(m, n):\n    num = m**2 + n**2\n    divisors = 0\n    for i in range(1, int(num**0.5) + 1):\n        if num % i == 0:\n            if i * i == num:\n                divisors += 1\n            else:\n                divisors += 2\n    return divisors\n\ndef is_ginkgo_prime(m, n):\n    num = m**2 + n**2\n    return num > 1 and count_divisors(m, n) == 8",
    "timestamp": "2025-08-13 03:55:15"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "import math\n\ndef count_divisors(num):\n    if num == 1:\n        return 1\n    count = 0\n    sqrt_num = int(math.sqrt(num)) + 1\n    for i in range(1, sqrt_num):\n        if num % i == 0:\n            if num // i == i:\n                count += 1\n            else:\n                count += 2\n    return count\n\ndef is_ginkgo_prime(m, n):\n    num = m**2 + n**2\n    if num <= 1:\n        return False\n    return count_divisors(num) == 8",
    "timestamp": "2025-08-13 03:55:22"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "c++",
    "code": "#include <iostream>\n#include <vector>\n#include <utility>\n#include <cmath>\n\nbool isGinkgoPrime(int m, int n) {\n    long long num = static_cast<long long>(m) * m + static_cast<long long>(n) * n;\n    if (num <= 1) return false;\n\n    // Count the number of divisors of num\n    int divisorCount = 0;\n    for (long long i = 1; i <= std::sqrt(num); ++i) {\n        if (num % i == 0) {\n            divisorCount++;\n            if (i != num / i) {\n                divisorCount++;\n            }\n        }\n    }\n\n    return divisorCount == 8;\n}\n\nint main() {\n    std::vector<std::pair<int, int>> ginkgoNumbers = {{2, 1}, {1, 1}, {3, 4}, {5, 0}};\n    \n    for (const auto& ginkgoPair : ginkgoNumbers) {\n        int m = ginkgoPair.first;\n        int n = ginkgoPair.second;\n        if (isGinkgoPrime(m, n)) {\n            std::cout << \"<\" << m << \", \" << n << \"> is a Ginkgo prime.\\n\";\n        } else {\n            std::cout << \"<\" << m << \", \" << n << \"> is not a Ginkgo prime.\\n\";\n        }\n    }\n\n    return 0;\n}",
    "timestamp": "2025-08-13 11:15:36"
  }
]