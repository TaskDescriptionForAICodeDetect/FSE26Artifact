[
  {
    "language": "Scala",
    "code": "\nobject Main extends App {\n\n  import scala.io.StdIn._\n  import scala.math._\n\n  solve\n  def solve: Unit ={\n    val Array(name, namingType) = readLine.trim.split(' ')\n    if (namingType == \"X\") return\n    val words = split(name.toList)\n    println(\n      namingType match {\n        case \"U\" ⇒\n          words.indices.foreach(it ⇒ words(it)(0) = words(it)(0).toUpper)\n          words.map(_.mkString).mkString\n        case \"L\" ⇒\n          words.indices.tail.foreach(it ⇒ words(it)(0) = words(it)(0).toUpper)\n          words.map(_.mkString).mkString\n        case _ ⇒\n          words.map(_.mkString).mkString(\"_\")\n      }\n    )\n    solve\n  }\n  def split(arg: List[Char], result: List[List[Char]] = Nil::Nil): List[Array[Char]] = {\n    arg match {\n      case Nil ⇒ result.reverse.map{_.reverse.toArray}\n      case '_'::t ⇒ split(t, Nil::result)\n      case h::t if h.isUpper ⇒         result match {\n        case Nil::r ⇒ split(t, (h.toLower::Nil)::r)\n        case _ ⇒ split(t, (h.toLower::Nil)::result)\n      }\n      case h::t ⇒ split(t, (h::result.head)::result.tail)\n\n    }\n  }\n\n  implicit class Extension[T](val value :T){\n    def also(func: T ⇒ Unit): T = {\n      func(value)\n      value\n    }\n    def let[R](func: T ⇒ R): R = func(value)\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <climits>\n#include <cmath>\n#include <cassert>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <numeric>\n#include <complex>\n#include <list>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <bitset>\n#include <utility>\n#include <functional>\n#include <iterator>\n\nusing namespace std;\n\n#define dump(n) cerr<<\"# \"<<#n<<\"=\"<<(n)<<endl\n#define repi(i,a,b) for(int i=int(a);i<int(b);i++)\n#define peri(i,a,b) for(int i=int(b);i-->int(a);)\n#define rep(i,n) repi(i,0,n)\n#define per(i,n) peri(i,0,n)\n#define iter(c) __typeof__((c).begin())\n#define foreach(i,c) for(iter(c) i=(c).begin();i!=(c).end();++i)\n#define all(c) (c).begin(),(c).end()\n#define mp make_pair\n\ntypedef unsigned int uint;\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef vector<string> vs;\ntypedef pair<int,int> pii;\n\nint main()\n{\n\tfor(string s,t;cin>>s>>t,t!=\"X\";){\n\t\tvs ss;\n\t\tfor(int i=0,j=1;i<s.size();j++){\n\t\t\tif(j==s.size() || isupper(s[j])){\n\t\t\t\tss.push_back(s.substr(i,j-i));\n\t\t\t\ti=j;\n\t\t\t}\n\t\t\tif(s[j]=='_'){\n\t\t\t\tss.push_back(s.substr(i,j-i));\n\t\t\t\ti=++j;\n\t\t\t}\n\t\t}\n\t\tif(t==\"U\")\n\t\t\trep(i,ss.size())\n\t\t\t\trep(j,ss[i].size())\n\t\t\t\t\tputchar(j==0?toupper(ss[i][j]):tolower(ss[i][j]));\n\t\tif(t==\"L\")\n\t\t\trep(i,ss.size())\n\t\t\t\trep(j,ss[i].size())\n\t\t\t\t\tputchar(i&&j==0?toupper(ss[i][j]):tolower(ss[i][j]));\n\t\tif(t==\"D\")\n\t\t\trep(i,ss.size()){\n\t\t\t\tcout<<(i?\"_\":\"\");\n\t\t\t\trep(j,ss[i].size())\n\t\t\t\t\tputchar(tolower(ss[i][j]));\n\t\t\t}\n\t\tcout<<endl;\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\nusing namespace std;\n\nint main(){\n  int i=0;\n  string s,t;\n  for(;cin >> s >> t,t!=\"X\";){\n  if(find(s.begin(),s.end(),'_')!=s.end()){\n    for(i=0;i<s.length();i++)\n      if(s[i]=='_'){\n        if(s[i+1]=='_'||s[i+1]==0){cout << \"Error!\" << endl;return 0;}\n        s.erase(i,1),s[i]-=0x20;\n      }\n    if(t==\"U\")s[0]-=0x20;\n    cout << s << endl;\n  }else{\n    if(between('A',s[0],'Z'))s[0]+=0x20;\n    if(t==\"U\")s[0]-=0x20;\n    if(t==\"D\")\n      for(i=0;i<s.length();i++)\n        if(between('A',s[i],'Z'))s.insert(i,1,'_'),s[++i]+=0x20;\n    cout << s << endl;\n  }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int i,len;\n  char type;\n  string name,out;\n  while(1){\n    out=\"\";\n    cin >> name >> type;\n    if(type=='X') break;\n    len=name.size();\n    for(i=0;i<len;i++){\n      if(i==0){\n\tif('A'<=name[i]&&name[i]<='Z'&&type!='U') out+=name[i]-'A'+'a';\n\telse if('a'<=name[i]&&name[i]<='z'&&type=='U') out+=name[i]-'a'+'A';\n\telse out+=name[i];\n      }\n      else{\n\tif(name[i]=='_'&&type!='D'){\n\t  out+=name[i+1]-'a'+'A';\n\t  i++;\n\t}\n\telse if('A'<=name[i]&&name[i]<='Z'&&type=='D'){\n\t  out+='_';\n\t  out+=name[i]-'A'+'a';\n\t}else out+=name[i];\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cctype>\nusing namespace std;\nint main(){\n  string s,type;\n\n  while(cin>> s >> type, type!=\"X\" ){\n    int st=0;\n    vector<string> v;\n    for( int i=0;i<(int)s.length();i++ ){\n      if( isupper(s[i]) ){\n\ts[i] = tolower(s[i]);\n\tif( i>0 )\n\t  v.push_back( s.substr(st,i-st) );\n\tst = i;\n      }\n      if( s[i]=='_' ){\n\tv.push_back( s.substr(st, i-st) );\n\tst = i+1;\n      }\n      if( i==s.length()-1 ){\n\tv.push_back( s.substr(st) ); break;\n      }\n\n    }\n\n    //#define DEBUG\n#ifdef DEBUG\n    cout << endl;\n    cout << s << \" => \" << type << endl;\n    for( int i=0;i<v.size();i++ )\n      cout << \" [\" << v[i] << \"]\";\n    cout << endl;\n    cout << \"[\";\n#endif\n    for( int i=0;i<v.size();i++ ){\n      if( (type==\"L\"&&i>0) || type==\"U\" ){\n\tv[i][0] = toupper(v[i][0]);\n      }\n      if( type==\"D\" && i>0 )\n\tcout << \"_\";\n      cout << v[i];\n    }\n    cout\n#ifdef DEBUG\n     << \"]\"\n#endif\n    << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <string>\n#include <iostream>\n\nusing namespace std;\n\nstring LowerCamelCaseDiv2(string S)\n{\n    string T;\n    \n    for(int i = 0; i < S.size(); i++)\n    {\n        if(i == 0)\n        {\n            T += tolower(S[i]);\n        }  \n        else if(S[i - 1] == '_')\n        {\n            T += toupper(S[i]);\n        }\n        else if(S[i] != '_')\n        {\n            T += S[i];\n        }\n    }\n    \n    return T;\n}\n\nstring UpperCamelCaseDiv2(string S)\n{\n    string T;\n    \n    for(int i = 0; i < S.size(); i++)\n    {\n        if(i == 0)\n        {\n            T += toupper(S[i]);\n        }  \n        else if(S[i - 1] == '_')\n        {\n            T += toupper(S[i]);\n        }\n        else if(S[i] != '_')\n        {\n            T += S[i];\n        }\n    }\n    \n    return T;\n}\n\nstring UnderLineDiv2(string S)\n{\n    string T;\n    \n    for(int i = 0; i < S.size(); i++)\n    {\n        if(i != 0 && isupper(S[i]))\n        {\n            T += '_';\n        }\n        \n        T += tolower(S[i]);\n    }\n    \n    return T;\n}\n\nint main()\n{\n    string S, T;\n    \n    while(true)\n    {\n        cin >> S >> T;\n        \n        if(T == \"X\") { break; }\n        \n        if(T == \"L\") { cout << LowerCamelCaseDiv2(S) << endl; }\n        if(T == \"U\") { cout << UpperCamelCaseDiv2(S) << endl; }\n        if(T == \"D\") { cout << UnderLineDiv2(S) << endl; }\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S; char C;\nint main() {\n\twhile (true) {\n\t\tcin >> S >> C; string D;\n\t\tif (C == 'X')break;\n\t\tif (C == 'L') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] == '_') {\n\t\t\t\t\ti++; if (S[i] <= 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] - 32);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tD += S[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (D[0] <= 'Z')D[0] += 32;\n\t\t}\n\t\tif (C == 'U') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] == '_') {\n\t\t\t\t\ti++; if (S[i] <= 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] - 32);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tD += S[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (D[0] > 'Z')D[0] -= 32;\n\t\t}\n\t\tif (C == 'D') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] <= 'Z' && i >= 1) { D += '_'; }\n\t\t\t\tif (S[i] <= 'Z') { D += (char)(S[i] + 32); }\n\t\t\t\telse { D += S[i]; }\n\t\t\t}\n\t\t}\n\t\tcout << D << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) (r).begin(),(r).end()\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing dict = map<string,int>;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\ntemplate<typename T>\nvoid Unique(vector<T> &v){\n  sort(all(v));\n  v.erase(unique(all(v)),v.end());\n}\ntemplate<typename T,typename U>\nll FindErase(T &v,U tar){\n  ll cnt = 0;\n  for(auto it = v.begin(); it != v.end();){\n    if(*it == tar){\n      it = v.erase(it);\n      ++cnt;\n    }\n    else{\n      ++it;\n    }\n  }\n  return cnt;\n}\n\ntemplate<typename T>\nbool SuffixErase(T &v,size_t suf){\n  if(suf > v.size()) return false;\n  for(auto it = v.begin(); it != v.end();){\n    if(distance(v.begin(),it) == suf){\n      v.erase(it);\n      return true;\n    }\n    else{\n      ++it;\n    }\n  }\n  return false;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  char c;\n  while(cin >> s >> c && c != 'X'){\n    if(c != 'D'){\n      rep(i,s.size()){\n        if(s[i] == '_'){\n          s[i+1] = toupper(s[i+1]);\n        }\n      }\n      if(c == 'U'){\n        s[0] = toupper(s[0]);\n      }\n      FindErase(s,'_');\n    }\n    else{\n      string ans ;\n      rep(i,s.size()){\n        if(isupper(s[i]) && i != 0){\n          ans +=  \"_\";\n        }\n        ans += tolower(s[i]);\n      }\n      s = ans;\n    }\n    cout << s << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\n\tstring str;\n\twhile(1){\n\t\tgetline(cin,str);\n\t\tstring name = str.substr(0,str.size()-2);\n\t\tchar type = str[str.size()-1];\n\t\tif(type=='L'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]+'a'-'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='U'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tcout << (char)(name[0]-'a'+'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << name[0] << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='D'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i]+'a'-'A') << flush;\n\t\t\t\t\t\t//i++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]-'A'+'a') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i] - 'A'+'a') << flush;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t\t//cout<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main(void){\n  string str;\n  char c;\n  while(cin >> str >> c){\n    int t;\n    vector<string> v;\n    string buf = \"\";\n    bool isOneWord = true;\n    if(c == 'X')break;\n    if('A' <= str[0] && str[0] <= 'Z'){\n      //upper camel case\n      for(int j=0;j<str.size();j++){\n\tif('A' <= str[j] && str[j] <= 'Z'){\n\t  if(j!=0)v.push_back(buf);\n\t  buf = \"\";\n\t  buf += str[j] - 'A' + 'a';\n\t}else{\n\t  buf += str[j];\n\t}\n      }\n      v.push_back(buf);\n    }else{\n      for(int i=0;i<str.size();i++){\n\tif(str[i] == '_'){\n\t  //snake case\n\t  for(int j=0;j<str.size();j++){\n\t    if(str[j] == '_'){\n\t      v.push_back(buf);\n\t      buf = \"\";\n\t    }else{\n\t      buf += str[j];\n\t    }\n\t  }\n\t  v.push_back(buf);\n\t  isOneWord = false;\n\t  break;\n\t}else if('A' <= str[i] && str[i] <= 'Z'){\n\t  //lower cames case\n\t  for(int j=0;j<str.size();j++){\n\t    if('A' <= str[j] && str[j] <= 'Z'){\n\t      if(j!=0)v.push_back(buf);\n\t      buf = \"\";\n\t      buf += str[j] - 'A' + 'a';\n\t    }else{\n\t      buf += str[j];\n\t    }\n\t  }\n\t  v.push_back(buf);\n\t  isOneWord = false;\n\t  break;\n\t}\n      }\n      if(isOneWord){\n\tv.push_back(str);\n      }\n    }\n    //convert\n    if(c == 'L'){\n      for(int i=0;i<v.size();i++){\n\tif(i==0){\n\t  cout << v[i];\n\t}else{\n\t  v[i][0] -= 'a' - 'A';\n\t  cout << v[i];\n\t}\n      }\n    }else if(c == 'U'){\n      for(int i=0;i<v.size();i++){\n\tv[i][0] -= 'a' - 'A';\n\tcout << v[i];\n      }\n    }else{\n      for(int i=0;i<v.size();i++){\n\tcout << v[i];\n\tif(i != v.size()-1) cout << \"_\";\n      }\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nvector<string> parse(string s){\n    if('A' <= s[0] && s[0] <= 'Z') s[0] -= 'A'-'a';\n    vector<string> ret;\n    int t = 0;\n    while(s.size()){\n        if('A' <= s[t] && s[t] <= 'Z' || s[t] == '_'){\n            if(s[t] == '_'){ret.push_back(s.substr(0, t)); s = s.substr(t+1);t=0;}\n            else {ret.push_back(s.substr(0, t)); s = s.substr(t); s[0] -= 'A'-'a'; t=0;}\n        }\n        else if(t==s.size()){ret.push_back(s); break;}\n        else t++;\n    }\n    return ret;\n}\n\nint main(){\n    string s, t;\n    while(cin >> s >> t, t != \"X\"){\n        vector<string> v = parse(s);\n        for(int i=0; i< v.size(); i++){\n            if(t==\"L\"){\n                if(i!=0) v[i][0]+='A'-'a';\n                cout << v[i];\n            }\n            else if(t==\"U\"){\n                v[i][0]+='A'-'a';\n                cout << v[i];\n            }\n            else {\n                cout << (i==0?\"\":\"_\") << v[i];\n            }\n        }\n        cout << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint main(){\n  char S[101],s;\n  while(1){\n    scanf(\"%s %c\",S,&s);\n    if(s=='X') break;\n    else if(s=='L' || s=='U'){\n      for(int i=0,l=strlen(S);i<l;i++){\n\tif(S[i]=='_' ||(s=='U'&&i==0&&S[i]>='a'&&S[i]<='z')){\n\t  if(i!=0)i++;\n\t  printf(\"%c\",S[i]+ ('A'-'a'));\n\t}else  printf(\"%c\",S[i]);\n      }\n    }else if(s=='D'){\n      for(int i=1,l=strlen(S);i<l;i++){\n\tif(S[i]>='A'&&S[i]<='Z'){\n\t  printf(\"_%c\",S[i]-('A'-'a'));\n\t}else{\n\t  printf(\"%c\",S[i]);\n\t}\n      }\n    }\n    puts(\"\");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main() {\n\tstring s;\n\tchar c;\n\tstring abc = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\tstring abc2 = \"abcdefghijklmnopqrstuvwxyz\";\n\twhile (cin >> s >> c) {\n\t\tif (c == 'X') {\n\t\t\tbreak;\n\t\t}\n\t\tvector<string> ss;\n\t\tif (s.find(\"_\") != string::npos) {\n\t\t\tstring sa = \"\";\n\t\t\tfor (int i = 0; i < s.size(); i++) {\n\t\t\t\tif (s[i] == '_') {\n\t\t\t\t\tss.push_back(sa);\n\t\t\t\t\tsa = \"\";\n\t\t\t\t} else {\n\t\t\t\t\tsa += s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tss.push_back(sa);\n\t\t} else {\n\t\t\tbool h = false;\n\t\t\tfor (int i = 0; i < 26; i++) {\n\t\t\t\tif (s[0] == abc[i]) {\n\t\t\t\t\th = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (h) {\n\t\t\t\tstring sb = \"\";\n\t\t\t\tfor (int i = 0; i < s.size(); i++) {\n\t\t\t\t\tbool h2 = false;\n\t\t\t\t\tfor (int j = 0; j < 26; j++) {\n\t\t\t\t\t\tif (s[i] == abc[j]) {\n\t\t\t\t\t\t\th2 = true;\n\t\t\t\t\t\t\tif (sb == \"\") {\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tss.push_back(sb);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tsb = \"\";\n\t\t\t\t\t\t\tsb += abc2[j];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!h2) {\n\t\t\t\t\t\tsb += s[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tss.push_back(sb);\n\t\t\t} else {\n\t\t\t\tstring sc = \"\";\n\t\t\t\tfor (int i = 0; i < s.size(); i++) {\n\t\t\t\t\tbool h2 = false;\n\t\t\t\t\tfor (int j = 0; j < 26; j++) {\n\t\t\t\t\t\tif (s[i] == abc[j]) {\n\t\t\t\t\t\t\th2 = true;\n\t\t\t\t\t\t\tss.push_back(sc);\n\t\t\t\t\t\t\tsc = \"\";\n\t\t\t\t\t\t\tsc += abc2[j];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!h2) {\n\t\t\t\t\t\tsc += s[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tss.push_back(sc);\n\t\t\t}\n\t\t}\n\t\tstring s2 = \"\";\n\t\tif (c == 'U') {\n\t\t\tfor (int i = 0; i < ss.size(); i++) {\n\t\t\t\tfor (int j = 0; j < 26; j++) {\n\t\t\t\t\tif (ss[i][0] == abc2[j]) {\n\t\t\t\t\t\tss[i][0] = abc[j];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts2 += ss[i];\n\t\t\t}\n\t\t} else if (c == 'L') {\n\t\t\ts2 += ss[0];\n\t\t\tfor (int i = 1; i < ss.size(); i++) {\n\t\t\t\tfor (int j = 0; j < 26; j++) {\n\t\t\t\t\tif (ss[i][0] == abc2[j]) {\n\t\t\t\t\t\tss[i][0] = abc[j];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts2 += ss[i];\n\t\t\t}\n\t\t} else {\n\t\t\tfor (int i = 0; i < ss.size(); i++) {\n\t\t\t\tif (s2 != \"\") {\n\t\t\t\t\ts2 += \"_\";\n\t\t\t\t} \n\t\t\t\ts2 += ss[i];\n\t\t\t}\n\t\t}\n\t\tcout << s2 << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nchar low(char x){return ('A'<=x && x<='Z')?x+32:x;}\nchar up(char x){return ('a'<=x && x<='z')?x-32:x;}\n\nint main(){\n  string s;\n  char o;\n\n  while(cin >> s >> o && o!='X'){\n    cout << ((o-'U')?low(s[0]):up(s[0]));\n\n    for(int i=1;i<(int)s.size();i++){\n      if(s[i]=='_' && o-'D'){\n\ts.erase(s.begin()+i);\n\tcout << up(s[i]);\n      }else if('A'<=s[i] && s[i]<='Z' && o=='D'){\n\tcout << '_' << low(s[i]);\n      }else cout << s[i];\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nstring convL(vector<string> vec)\n{\n  string str = vec[0];\n\n  for(int i = 1; i < vec.size(); i++){\n    string st = vec[i];\n    str += (char)('A'+(int)(st[0]-'a'));\n    for(int j = 1; j < st.size(); j++){\n      str += st[j];\n    }\n  }\n\n  return str;\n}\n\nstring convU(vector<string> vec)\n{\n  string str = \"\";\n\n  for(int i = 0; i < vec.size(); i++){\n    string st = vec[i];\n    str += (char)('A'+(int)(st[0]-'a'));\n    for(int j = 1; j < st.size(); j++){\n      str += st[j];\n    }\n  }\n\n  return str;\n}\n\nstring convD(vector<string> vec)\n{\n  string str = vec[0];\n\n  for(int i = 1; i < vec.size(); i++){\n    str += (\"_\" + vec[i]);\n  }\n\n  return str;\n}\n\nvector<string> split(string str)\n{\n  vector<string> vec;\n  string s = \"\";\n\n  for(int i = 0; i < str.size(); i++){\n    if(str[i] == '_'){\n      vec.push_back(s);\n      s = \"\";\n    } else if(str[i] >= 'a' && str[i] <= 'z'){\n      s += str[i];\n    } else {\n      if(s.size() > 0){\n\tvec.push_back(s);\n      }\n      s = \"\";\n      s += (char)('a'+(int)(str[i]-'A'));\n    }\n  }\n  if(s.size() > 0){\n    vec.push_back(s);\n  }\n\n  return vec;\n}\n\nint main()\n{\n  string s1, s2;\n\n  while(cin>>s1>>s2){\n    if(s2 == \"X\"){\n      break;\n    }\n    vector<string> vec = split(s1);\n\n    if(s2 == \"L\"){\n      s1 = convL(vec);\n    } else if(s2 == \"U\"){\n      s1 = convU(vec);\n    } else {\n      s1 = convD(vec);\n    }\n\n    cout << s1 << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <cctype>\n\nint main(){\n\twhile(true){\n\t\tchar str[101], cmd[2];\n\t\tscanf(\"%100s %1s\", str, cmd);\n\t\tif(cmd[0] == 'X'){ break; }\n\t\tbool isFirst = true, isPause = true;\n\t\tfor(char *p = str; *p != '\\0'; p++){\n\t\t\tif(!isFirst){\n\t\t\t\tif(!(*p & 0x20)){ isPause = true; }\n\t\t\t\tif(*p == '_'){\n\t\t\t\t\tisPause = true;\n\t\t\t\t\tif(*++p == '\\0'){ break; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tswitch(cmd[0]){\n\t\t\tcase 'U':\n\t\t\t\tif(isPause){\n\t\t\t\t\tputc(toupper(*p), stdout);\n\t\t\t\t}else{\n\t\t\t\t\tputc(tolower(*p), stdout);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tif(isPause && !isFirst){\n\t\t\t\t\tputc(toupper(*p), stdout);\n\t\t\t\t}else{\n\t\t\t\t\tputc(tolower(*p), stdout);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tif(isPause && !isFirst){\n\t\t\t\t\tputc('_', stdout); putc(tolower(*p), stdout);\n\t\t\t\t}else{\n\t\t\t\t\tputc(tolower(*p), stdout);\n\t\t\t\t}\n\t\t\t}\n\t\t\tisPause = false;\n\t\t\tisFirst = false;\n\t\t}\n\t\tputs(\"\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cctype>\nusing namespace std;\nint main(){\n  string s,type;\n\n  while(cin>> s >> type, type!=\"X\" ){\n    int st=0;\n    vector<string> v;\n    for( int i=0;i<(int)s.length();i++ ){\n      if( i==s.length()-1 ){\n\tv.push_back( s.substr(st) ); break;\n      }\n      if( isupper(s[i]) ){\n\ts[i] = tolower(s[i]);\n\tv.push_back( s.substr(st,i-st) );\n\tst = i;\n      }\n      if( s[i]=='_' ){\n\tv.push_back( s.substr(st, i-st) );\n\tst = i+1;\n      }\n    }\n    /*\n    cout << endl;\n    for( int i=0;i<v.size();i++ )\n      cout << \" \" << v[i];\n    cout << endl;\n    */\n\n    for( int i=0;i<v.size();i++ ){\n      if( (type==\"L\"&&i>0) || type==\"U\" ){\n\tv[i][0] = toupper(v[i][0]);\n      }\n      if( type==\"D\" && i>1 )\n\tcout << \"_\";\n      cout << v[i];\n    }\n    cout << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main()\n{\n    char s[1024], type[2];\n    \n    while (scanf(\"%s %s\", s, type) && type[0] != 'X'){\n        char t[1024];\n        int resLen = 0;\n        \n        memset(t, 0, sizeof(t));\n        \n        for (int i = 0; s[i]; i++){\n            if (i == 0){\n                if (type[0] == 'U') t[resLen++] = toupper(s[i]);\n                else t[resLen++] = tolower(s[i]);\n            }\n            else {\n                if (islower(s[i])){\n                    if (s[i - 1] == '_' && type[0] != 'D') t[resLen++] = toupper(s[i]);\n                    else t[resLen++] = s[i];\n                }\n                else if (isupper(s[i])){\n                    if (type[0] != 'D') t[resLen++] = s[i];\n                    else {\n                        t[resLen++] = '_';\n                        t[resLen++] = tolower(s[i]);\n                    }\n                }\n                else {\n                    if (type[0] == 'D') t[resLen++] = s[i];\n                }\n            }\n        }\n        \n        printf(\"%s\\n\", t);\n    }\n    \n    return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nstring upperCamel(string& s){\n\treturn (char)(s[0]-'a'+'A')+s.substr(1,s.size());\n}\n\nint main(void){\n\tstring s;\n\twhile(cin>>s){\n\t\tchar c;cin>>c;\n\t\tif(c=='X')break;\n\t\tvector<string> splited;\n\t\tstring tmp;\n\t\tfor(int i=0;i<s.size();++i){\n\t\t\tif('A'<=s[i]&&s[i]<='Z'){\n\t\t\t\tif(i==0){\n\t\t\t\t\ttmp+=s[i]-'A'+'a';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsplited.push_back(tmp);\n\t\t\t\ttmp=s[i]-'A'+'a';\n\t\t\t}else if(s[i]=='_'){\n\t\t\t\tsplited.push_back(tmp);\n\t\t\t\ttmp=\"\";\n\t\t\t}else tmp+=s[i];\n\t\t}\n\t\tsplited.push_back(tmp);\n\t\tif(c=='L'){\n\t\t\tfor(int i=0;i<splited.size();++i){\n\t\t\t\tif(i) cout<<upperCamel(splited[i]);\n\t\t\t\telse cout<<splited[i];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}else if(c=='U'){\n\t\t\tfor(int i=0;i<splited.size();++i){\n\t\t\t\tcout<<upperCamel(splited[i]);\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}else if(c=='D'){\n\t\t\tfor(int i=0;i<splited.size();++i){\n\t\t\t\tif(i)cout<<\"_\";\n\t\t\t\tcout<<splited[i];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <queue>\n#include <map>\n#include <sstream>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define EPS 1e-9\n\nchar type_guess(string str){\n\tif( 'A'<=str[0] && str[0]<='Z' ) return 'U';\n\trep(i,str.size())if( str[i]=='_' ) return 'D';\n\treturn 'L';\n}\nstring ex(string str, char type){\n\tstring ret;\n\tchar c = type_guess(str);\n\t\n\tif( c==type ) return str;\n\t\n\t//cout << \"c:\" << c << endl;\n\tif( c=='U' ){\n\t\tint p = 0;\n\t\tbool flag = false;\n\t\trep(i,str.size())if( 'A'<=str[i]&&str[i]<='Z' ){\n\t\t\tif( type=='L' ){\n\t\t\t\tif( i==0 )str[i] ^= 32;\n\t\t\t}else{\n\t\t\t\tstr[i] ^= 32;\n\t\t\t\tif( flag ){\n\t\t\t\t\tif( ret==\"\" ){\n\t\t\t\t\t\tret = str.substr(p,i-p);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tret = ret + \"_\" + str.substr(p,i-p);\n\t\t\t\t\t}\n\t\t\t\t\tp = i;\n\t\t\t\t}\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t\tif( type=='L' ) return str;\n\t\telse{\n\t\t\treturn ret + \"_\" + str.substr(p);\n\t\t}\n\t}else if( c=='L' ){\n\t\tint p = 0;\n\t\tif( type=='U' ){ str[0]^=32; return str; }\n\t\trep(i,str.size())if( 'A'<=str[i] && str[i]<='Z' ){\n\t\t\tif( ret==\"\" ){\n\t\t\t\tret = str.substr(p,i-p);\n\t\t\t}else{\n\t\t\t\tret = ret + \"_\" + str.substr(p,i-p);\n\t\t\t}\n\t\t\tp = i;\n\t\t\t//printf(\"p:%d\\n\",p);\n\t\t}\n\t\treturn ret + \"_\" + str.substr(p);\n\t\t\n\t}else{\n\t\tif( 'A'<=str[0]&&str[0]<='Z' )str[0]^=32;\n\t\tint p= 0;\n\t\tfor(int i=0; i<str.size(); i++)if( str[i]=='_' ){\n\t\t\tret += str.substr(p,i-p);\n\t\t\tp = i+1;\n\t\t\tif( p<str.size() )str[p]^=32;\n\t\t\t//printf(\"p:%d, i:%d\\n\",p,i);\n\t\t}\n\t\tif( type=='U' )ret[0]^=32;\n\t\treturn ret + str.substr(p);\n\t}\n\treturn ret;\n}\nint main(){\n\tstring str;\n\tchar T;\n\twhile(cin>>str>>T, T!='X'){\n\t\tcout << ex(str,T) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define F first\n#define S second\n#define INF 1 << 30\n\ntypedef pair<int, int> pi;\ntypedef pair<int, pi> pii;\ntypedef vector<int> vi;\ntypedef queue<int> qi;\ntypedef long long ll;\n\nstring name;\nchar type;\n\nint main(){\n  while(cin >> name >> type){\n    if(type == 'X') break;\n    if(name.find(\"_\") != std::string::npos){\n      if(type == 'D') goto e;\n      if(type == 'U') name[0] -= 32;\n      rep(i, name.size()){\n\tif(name[i] != '_') continue;\n\tname.erase(name.begin()+i);\n\tname[i] -= 32;\n      }\n    }else{\n      if(type == 'L' ){ if(name[0] < 97) name[0] += 32;}\n      else if(type == 'U'){ if( name[0] > 96) name[0] -= 32;}\n      else{\n\tif(name[0] < 97) name[0] += 32;\n\trep(i, name.size()){\n\t  if(name[i] > 96) continue;\n\t  name[i] += 32;\n\t  name.insert(i, \"_\");\n\t}\n      }\n    }\n  e:\n    cout << name << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nstring ULtoD(string s){\n  stringstream ss;\n  ss << (char)tolower(s[0]);\n  FOR(i, 1, s.length()){\n    if(isupper(s[i])) ss << '_' << (char)tolower(s[i]);\n    else ss << s[i];\n  }\n  return ss.str();\n}\n\nstring DtoUL(string s, char t){\n  stringstream ss;\n  ss << (char)(t == 'U' ? toupper(s[0]) : s[0]);\n  FOR(i, 1, s.length()){\n    if(s[i] == '_') ss << (char)toupper(s[++i]);\n    else ss << s[i];\n  }\n  return ss.str();\n}\n\nint main() {\n  string s; char t;\n  while(cin >>s >>t && t != 'X'){\n    char bt;\n    if(isupper(s[0])) bt = 'U';\n    else if(s.find('_') != string::npos) bt = 'D';\n    else bt = 'L';\n    if(bt == 'U'){\n      if(t == 'L') s[0] = tolower(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else if(bt == 'L'){\n      if(t == 'U') s[0] = toupper(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else s = DtoUL(s, t);\n    cout <<s <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\nusing namespace std;\nauto to_l(string& str){\n  str[0]=tolower(str[0]);\n  for(auto i=find(begin(str), end(str), '_'); i!=end(str); i=find(i, end(str), '_')){\n    ++i; *i=toupper(*i);\n  }\n  str.erase(remove(begin(str), end(str), '_'), end(str));\n}\nauto l_to_u(string& str){\n  str[0]=toupper(str[0]);\n}\nauto l_to_d(string& str){\n  for(auto i=find_if(begin(str), end(str), [](const char c){ return isupper(c)!=0; });\n    i!=end(str);\n    i=find_if(i, end(str), [](const char c){ return isupper(c)!=0; })){\n    i=str.insert(i, '_');\n    ++i; *i=tolower(*i);\n  }\n}\nint32_t main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string str; char c;\n  for(cin>>str>>c; c!='X'; cin>>str>>c){\n    to_l(str);\n    switch(c){\n    case 'D': l_to_d(str); break;\n    case 'U': l_to_u(str);\n    }\n    cout<<str<<'\\n';\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\n#include <string>\n#include <algorithm>\n#include <ctype.h>\n#include <cctype>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    bool flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z' ||\n\t str[i] == '_') flag[i] = 1;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(flag[i] == 1 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      }\n    }  \n    cout << endl;   \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int strlen,i,j,flag[101];\n  char type;\n  string str,strout,temp;\n  while(1){\n    for(i=0;i<101;i++) flag[i]=0;\n    cin >> str >> type;\n    strlen=str.size();\n    strout=\"\";\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<strlen;i++){\n\tif(i==0) strout+=str[i]-'a'+'A';\n\tif(str[i]=='_') str[i+1]=str[i+1]-'a'+'A';\n\tif(str[i]!='_'&&i>0){\n\t  strout+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n      if(strlen==1&&str[0]>='a'){\n\tstrout=str[0]-'a'+'A';\n      }else{\n\tfor(i=0;i<strlen;i++){\n\t  if(i==0){\n\t    if(str[i]<'a'){\n\t      strout+=str[i]-'A'+'a';\n\t    }\n\t    else{\n\t      strout+=str[i];\n\t    }\n\t  }\n\t  else{\n\t    if(str[i]=='_') str[i+1]=str[i+1]-'a'+'A';\n\t    else{\n\t      strout+=str[i];\n\t    }\n\t  }\n\t}\n      }\n    }else{\n      for(i=0;i<strlen;i++){\n\tif(i!=0&&str[i]<'a'){\n\t  flag[i]=1;\n\t}\n      }\n      for(i=0;i<strlen;i++){\n\tif(flag[i]==1){\n\t  strout+='_';\n\t}\n\tif(str[i]<'a'){\n\t  strout+=str[i]-'A'+'a';\n\t}\n\telse{\n\t  strout+=str[i];\n\t}\n      }\n    }\n    cout << strout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  string str;\n  char S;\n  while(1){\n    cin>>str;\n    cin>>S;\n\n    if(S=='X') break;\n\n    else  if(S=='L'){\n      if(str[0]>='A' && str[0]<='Z') str[0]+=32;\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_' && str[i+1]>='a' && str[i+1]<='z' ) str[i+1]-=32;\n      }\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n    }\n    \n    else  if(S=='U') {\n      if(str[0]>='a' && str[0]<='z') str[0]-=32;\n    \n    for(int i=0;i<str.size();i++){\n    if(str[i]=='_'&& str[i+1]>='a' && str[i+1]<='z') str[i+1]-=32;\n  }\n  for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n      \n    }\n    \n  else  if(S=='D'){\n    for(int i=0;i<str.size();i++){\n      if(str[i]>=65 && str[i]<=90){\n\tstr[i]+=32;\n      }\n      if(i>0 && str[i+1]>=65 && str[i+1]<=90){\n\tcout<<str[i]<<\"_\";\n      }\n      else cout<<str[i];\n    }\n    cout<<endl;\n  }\n  }\n  return 0;\n  }"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\n#include <string>\n#include <algorithm>\n#include <ctype.h>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    bool flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z' ||\n\t str[i] == '_') flag[i] = 1;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(flag[i] == 1 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      }\n    }  \n    cout << endl;   \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int i,len;\n  char type;\n  string name,out;\n  while(1){\n    out=\"\";\n    cin >> name >> type;\n    if(type=='X') break;\n    len=name.size();\n    for(i=0;i<len;i++){\n      if(i==0){\n\tif(name[i]<'a'&&type!='U') out+=name[i]-'A'+'a';\n\telse if(name[i]>='a'&&type=='U') out+=name[i]-'a'+'A';\n\telse{\n\t  out+=name[i];\n\t}\n      }\n      else{\n\tif(name[i]=='_'&&type!='D'){\n\t  out+=name[i+1]-'a'+'A';\n\t  i++;\n\t}\n\telse if(name[i]<'a'&&type=='D'){\n\t  out+='_';\n\t  out+=name[i]-'A'+'a';\n\t}else{\n\t  out+=name[i];\n\t}\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n\nusing namespace std;\n\nstring toL(string in,int n){\n  string out;\n  for(int i = 0; i < in.length(); i++){\n    if(in[i] == '_'){\n      if(in[i+1] >= 'a' && in[i+1] <= 'z'){\n\tout += in[i+1]-('a' - 'A');\n      }else out += in[i+1];\n      i++;\n    }else{\n      //  if(in[i] >= 'A' && in[i] <= 'Z') out += in[i]+('a'-'A');\n      //else out += in[i];\n      out += in[i];\n    }\n  }\n  if(n && out[0] >= 'A' && out[0] <= 'Z') out[0] += ('a'-'A');\n  if(!n && out[0] >= 'a' && out[0] <= 'z' ) out[0] -= ('a'-'A'); \n  return out;\n}\n\nstring toD(string in){\n  string out;\n  for(int i = 0; i < in.length(); i++){\n    if(in[i] >= 'A' && in[i] <= 'Z'){\n      if(i)out += \"_\";\n      out += in[i] + ('a'-'A');\n    }else out += in[i];\n  }\n  return out;\n}\nint main(){\n  \n  string in;\n  char c;\n  while(cin >> in >> c){\n    if(c == 'X') break;\n    if(c == 'L') in = toL(in,1);\n    if(c == 'U') in = toL(in,0);\n    if(c == 'D') in = toD(in);\n    cout << in << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nstring toLowerCamel(string str){\n    string l = \"\";\n    char pre = ' ';\n    for ( int i = 0; i < str.size(); i++ ){\n\tif ( isalpha(str[i]) ){\n\t    if ( pre == '_' ) l += toupper(str[i]);\n\t    else l += str[i];\n\t}\n\tpre = str[i];\n    }\n    l[0] = tolower(l[0]);\n    return l;\n}\n\nmain(){\n    string name;\n    char com;\n    while(1){\n\tcin >> name >> com;\n\tif ( com == 'X' ) break;\n\tstring l = toLowerCamel(name);\n\tif ( com == 'L' ) cout << l << endl;\n\telse if ( com == 'U' ){\n\t    l[0] = toupper(l[0]);\n\t    cout << l << endl;\n\t} else if ( com == 'D' ){\n\t    for ( int i = 0; i < l.size(); i++ ){\n\t\tif ( 'A' <= l[i] && l[i] <= 'Z' ){\n\t\t    cout << \"_\";\n\t\t    cout << (char)(tolower(l[i]));\n\t\t} else cout << l[i];\n\t    }\n\t    cout << endl;\n\t}\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\nusing namespace std;\nbool isAL(char ch){ return ('A'<=ch&&ch<='Z'); }\nbool isAl(char ch){return ('a'<=ch&&ch<='z');}\nchar change(char ch){\n  if(isAl(ch))ch=ch-'a'+'A';\n  return ch;\n}\n\nchar change2(char ch){\n  if(isAL(ch))ch=ch-'A'+'a';\n  return ch;\n}\n\nstring str,type;\nvector<string> t;\n\nint main(){\n  while(1){\n    cin>>str>>type;\n    if(type==\"X\")break;\n    t.clear();\n    string tmp=\"\";\n    tmp.push_back(str[0]);\n    str.push_back('_');\n    for(int i=1;i<(int)str.size();i++){\n      if(str[i]=='_'){\n\tt.push_back(tmp);\n\ttmp=\"\";\n      }else if(isAL(str[i])){\n\tt.push_back(tmp);\n\ttmp=\"\";\n\ttmp.push_back(str[i]);\n      }else{\n\ttmp.push_back(str[i]);\n      }\n    }\n    for(int i=0;i<(int)t.size();i++){\n      if(type==\"L\"){\n\tif(i)t[i][0]=change(t[i][0]);\n\telse t[i][0]=change2(t[i][0]);\n      }else if(type==\"U\"){\n\tt[i][0]=change(t[i][0]);\n      }else{\n\tt[i][0]=change2(t[i][0]);\n      }\n      \n      if(i)cout<<(type==\"D\"?\"_\":\"\");\n      cout<<t[i];\n    }\n    cout<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nvoid solve()\n{\n\tstring str;\n\tchar c;\n\twhile(cin >> str)\n\t{\n\t\tcin >> c;\n\t\tstring Answer;\n\t\tint size = str.size();\n\t\tif(c == 'X')\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if(c == 'L')\n\t\t{\n\t\t\tif('A' <= str[0] && str[0] <= 'Z')\n\t\t\t{\n\t\t\t\tAnswer += str[0] - 'A' + 'a';\n\t\t\t}\n\t\t\telse if('a' <= str[0] && str[0] <= 'z')\n\t\t\t{\n\t\t\t\tAnswer += str[0];\n\t\t\t}\n\t\t\tbool flag = false;\n\t\t\tfor(int i = 1; i < size; ++i)\n\t\t\t{\n\t\t\t\tif(str[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tflag = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(flag && 'a' <= str[i] && str[i] <= 'z')\n\t\t\t\t{\n\t\t\t\t\tAnswer += str[i] - 'a' + 'A';\n\t\t\t\t\tflag = false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tAnswer += str[i];\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\telse if(c == 'U')\n\t\t{\n\t\t\tif('A' <= str[0] && str[0] <= 'Z')\n\t\t\t{\n\t\t\t\tAnswer += str[0];\n\t\t\t}\n\t\t\telse if('a' <= str[0] && str[0] <= 'z')\n\t\t\t{\n\t\t\t\tAnswer += str[0] - 'a' + 'A';\n\t\t\t}\n\t\t\tbool flag = false;\n\t\t\tfor(int i = 1; i < size; ++i)\n\t\t\t{\n\t\t\t\tif(str[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tflag = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(flag && 'a' <= str[i] && str[i] <= 'z')\n\t\t\t\t{\n\t\t\t\t\tAnswer += str[i] - 'a' + 'A';\n\t\t\t\t\tflag = false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tAnswer += str[i];\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\telse if(c == 'D')\n\t\t{\n\t\t\tif('A' <= str[0] && str[0] <= 'Z')\n\t\t\t{\n\t\t\t\tAnswer += str[0] - 'A' + 'a';\n\t\t\t}\n\t\t\telse if('a' <= str[0] && str[0] <= 'z')\n\t\t\t{\n\t\t\t\tAnswer += str[0];\n\t\t\t}\n\t\t\tfor(int i = 1; i < size; ++i)\n\t\t\t{\n\t\t\t\tif(str[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tAnswer += '_';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif('A' <= str[i] && str[i] <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tAnswer += '_';\n\t\t\t\t\tAnswer += str[i] - 'A' + 'a';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tAnswer += str[i];\n\t\t\t}\n\t\t}\n\t\tcout << Answer << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\n#include <string>\n#include <algorithm>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    bool flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z' ||\n\t str[i] == '_') flag[i] = 1;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(flag[i] == 1 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      }\n    }  \n    cout << endl;   \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define all(c) (c).begin(),(c).end()\n#define rrep(i,n) for(int i=(int)(n)-1;i>=0;i--)\n#define REP(i,m,n) for(int i=(int)(m);i<(int)(n);i++)\n#define rep(i,n) REP(i,0,n)\n#define iter(c) __typeof((c).begin())\n#define tr(it,c) for(iter(c) it=(c).begin();it!=(c).end();it++)\n#define mem(a) memset(a,0,sizeof(a))\n#define pd(a) printf(\"%.10f\\n\",a)\n#define pb(a) push_back(a)\n#define in(a) insert(a)\n#define pi M_PI\n#define R cin>>\n#define F first\n#define S second\n#define C class\n#define ll long long\n#define ln cout<<'\\n'\ntemplate<C T>void pr(T a){cout<<a;ln;}\ntemplate<C T,C T2>void pr(T a,T2 b){cout<<a<<' '<<b;ln;}\ntemplate<C T,C T2,C T3>void pr(T a,T2 b,T3 c){cout<<a<<' '<<b<<' '<<c;ln;}\ntemplate<C T>void PR(T a,int n){rep(i,n){if(i)cout<<' ';cout<<a[i];}ln;}\nbool check(int n,int m,int x,int y){return x>=0&&x<n&&y>=0&&y<m;}\nconst ll MAX=1000000007,MAXL=1LL<<60,dx[4]={-1,0,1,0},dy[4]={0,1,0,-1};\ntypedef pair<int,int> P;\n\nvoid Main() {\n  string s,t;\n  while(cin >> s >> t && t!=\"X\") {\n    vector<string> v;\n    string r=\"\";\n    s+='_';\n    rep(i,s.size()) {\n      if(isupper(s[i])) {\n        if(r.size()) v.pb(r);\n        r=tolower(s[i]);\n      } else if(s[i]=='_') {\n        if(r.size()) v.pb(r);\n        r=\"\";\n      } else r+=s[i];\n    }\n    string ans=\"\";\n    if(t==\"L\") {\n      rep(i,v.size()) {\n        if(i) v[i][0]=toupper(v[i][0]);\n        ans+=v[i];\n      }\n    } else if(t==\"U\") {\n      rep(i,v.size()) {\n        v[i][0]=toupper(v[i][0]);\n        ans+=v[i];\n      }\n    } else {\n      rep(i,v.size()) {\n        if(i) ans+='_';\n        ans+=v[i];\n      }\n    }\n    pr(ans);\n  }\n}\n\nint main() {\n  ios::sync_with_stdio(0);cin.tie(0);\n  Main();return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(void){\n    string s1, s2;\n\n    while(true){\n        //scanf(\"%s %s\", s1, s2);\n        cin >> s1 >> s2;\n        if(s2 == \"X\") break;\n\n        if(s2 == \"D\"){\n            for(int i = 1; i < s1.size(); i++){\n                if(isupper(s1[i])) s1.insert(i++, \"_\");\n            }\n            for(int i = 0; i < s1.size(); i++){\n            s1[i] = tolower(s1[i]);\n            } \n            cout << s1 << endl;\n        }\n        else{\n            for(int i = 0; i < s1.size(); i++){\n                if(s1[i] == '_'){\n                    s1[i + 1] = toupper(s1[i + 1]);\n                    s1.erase(i, 1);\n                }\n            }     \n            if(s2 == \"U\"){\n                s1[0] = toupper(s1[0]);\n                cout << s1 << endl;\n            }\n            else{\n                s1[0] = tolower(s1[0]);\n                cout << s1 << endl;\n            }\n        }\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nint main(){\n\tstring str;\n\tchar conv;\n\twhile(cin>>str){\n\t\tcin >> conv;\n\n\t\tif(conv == 'X') break;\n\t\t//under score\n\t\tif(count(str.begin(),str.end(),'_')){\n\t\t\tif(conv == 'L'){\n\t\t\t\t//str[0] = 'A' + (str[0]-'a');\n\t\t\t\tstring res=\"\";\n\t\t\t\tfor(int i=0;i+1<str.size();i++){\n\t\t\t\t\tif(str[i]=='_' && ('a' <= str[i+1] && str[i+1] <= 'z')){\n\t\t\t\t\t\tstr[i+1]='A'+(str[i+1]-'a');\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstring::iterator it = remove(str.begin(),str.end(),'_');\n\t\t\t\tstr.erase(it,str.end());\n\t\t\t}\n\t\t\telse if(conv == 'U'){\n\t\t\t\tstr[0] = 'A' + (str[0]-'a');\n\t\t\t\tfor(int i=0;i+1<str.size();i++){\n\t\t\t\t\tif(str[i]=='_' && ('a' <= str[i+1] && str[i+1] <= 'z')){\n\t\t\t\t\t\tstr[i+1]='A'+(str[i+1]-'a');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tremove(str.begin(),str.end(),'_');\n\t\t\t}\n\t\t}\n\t\t//Upper CamelCase\n\t\telse if('A' <= str[0] && str[0] <= 'Z'){\n\t\t\tif(conv == 'L'){\n\t\t\t\tstr[0] = 'a' + (str[0]-'A');\n\t\t\t}\n\t\t\telse if(conv == 'D'){\n\t\t\t\tstring res=\"\";\n\t\t\t\tstr[0] = 'a' + (str[0]-'A');\n\n\t\t\t\tres.push_back(str[0]);\n\t\t\t\tfor(int i=1;i<str.size();i++){\n\t\t\t\t\tif('A' <= str[i] && str[i] <= 'Z'){\n\t\t\t\t\t\tres.push_back('_');\n\t\t\t\t\t\tres.push_back('a' + (str[i]-'A'));\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tres.push_back(str[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstr = res;\n\t\t\t}\n\n\t\t}\n\t\t//Lower CamelCase\n\t\telse{\n\t\t\tif(conv == 'U'){\n\t\t\t\tstr[0] = 'A' + (str[0]-'a');\n\t\t\t}\n\t\t\telse if(conv == 'D'){\n\t\t\t\tstring res=\"\";\n\t\t\t\tstr[0] = 'a' + (str[0]-'a');\n\t\t\t\tres.push_back(str[0]);\n\t\t\t\tfor(int i=1;i+1<str.size();){\n\t\t\t\t\tif('A' <= str[i+1] && str[i+1] <= 'Z'){\n\t\t\t\t\t\tres.push_back('_');\n\t\t\t\t\t\tres.push_back(str[i+1]-'A');\n\t\t\t\t\t\ti+=2;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tres.push_back(str[i]);\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr = res;\n\t\t\t}\n\t\t}\n\n\t\tcout << str << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <sstream>\t// require stringstream \n#include <cctype>\t// require tolower, toupper\n//#include <fstream>\t// require freopen\n\nusing namespace std;\n\nint main()\n{\n//\tcut here before submit \n//\tfreopen (\"testcase.camelcase\", \"r\", stdin );\n\tstring str, s;\n\tchar type;\n\tint i;\n\n\twhile (cin >> str >> type && type != 'X' ){\n\t\tchar curr_type = 'X';\n\t\tif (str.find ('_') != string::npos ){\n\t\t\tcurr_type = 'D';\n\t\t}else{\n\t\t\tstr[0] = toupper(str[0] );\n\t\t} // end if\n\t\tvector <string> word;\n\n\t\tif (curr_type == 'D'){\n\t\t\twhile (str.find('_') != string::npos ){\n\t\t\t\tstr = str.replace (str.find('_'), 1, \" \" );\n\t\t\t} // end while\n\t\t\tstringstream ss (str );\n\t\t\ts = \"\";\n\t\t\twhile (ss >> s ){\n\t\t\t\ts[0] = toupper(s[0] );\n\t\t\t\tword.push_back(s);\n\t\t\t} // end while\n\t\t}else{\n\t\t\ts = \"\";\n\t\t\ts += str[0];\n\t\t\tfor (i = 1; i < str.length(); ++i ){\n\t\t\t\tif (toupper(str[i] ) != str[i] ){\n\t\t\t\t\ts += str[i];\n\t\t\t\t}else{\n\t\t\t\t\tword.push_back(s);\n\t\t\t\t\ts = \"\";\n\t\t\t\t\ts += str[i];\n\t\t\t\t} // end if\n\t\t\t} // end for\n\t\t\tword.push_back (s );\n\t\t} // end if\n\n\t\tstring res = \"\";\n\n\t\tswitch (type ){\n\t\t\tcase 'D':\n\t\t\t\tfor (i = 0; i < word.size(); ++i ){\n\t\t\t\t\ts = word[i];\n\t\t\t\t\ts[0] = tolower(s[0]);\n\t\t\t\t\tres += s;\n\t\t\t\t\tif (i != word.size() - 1 ){\n\t\t\t\t\t\tres += '_';\n\t\t\t\t\t} // end if\n\t\t\t\t} // end for\n\t\t\t\tbreak;\n\t\t\tcase 'U':\n\t\t\t\tfor (i = 0; i < word.size(); ++i ){\n\t\t\t\t\tres += word[i];\n\t\t\t\t} // end for\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tfor (i = 0; i < word.size(); ++i ){\n\t\t\t\t\ts = word[i];\n\t\t\t\t\ts[0] = (i == 0 ? tolower(s[0]) : toupper(s[0]) );\n\t\t\t\t\tres += s;\n\t\t\t\t} // end for\n\t\t\t\tbreak;\n\t\t} // end switch\n\n\t\tcout << res << endl;\t\t\t\n\t} // end loop\n\t\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define popcount __builtin_popcount\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\nconst double EPS = 1e-10;\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\n\nint main()\n{\n\twhile (true)\n\t{\n\t\tstring s;\n\t\tchar to;\n\t\tcin >> s >> to;\n\t\tif (to == 'X')\n\t\t\tbreak;\n\n\t\tvector<string> words;\n\t\ts += '_';\n\t\twhile (!s.empty())\n\t\t{\n\t\t\ts[0] = tolower(s[0]);\n\t\t\tfor (int i = 0; i < s.size(); ++i)\n\t\t\t{\n\t\t\t\tif (s[i] == '_' || isupper(s[i]))\n\t\t\t\t{\n\t\t\t\t\twords.push_back(s.substr(0, i));\n\t\t\t\t\twords.back()[0] = words.back()[0];\n\t\t\t\t\ts.erase(0, i + (s[i] == '_' ? 1 : 0));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstring res;\n\t\tif (to == 'U' || to == 'L')\n\t\t{\n\t\t\tif (to == 'U')\n\t\t\t\twords[0][0] = toupper(words[0][0]);\n\t\t\tres += words[0];\n\t\t\tfor (int i = 1; i < words.size(); ++i)\n\t\t\t{\n\t\t\t\twords[i][0] = toupper(words[i][0]);\n\t\t\t\tres += words[i];\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tfor (int i = 0; i < words.size(); ++i)\n\t\t\t\tres += words[i] + (i + 1 != words.size() ? \"_\" : \"\");\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <queue>\n#include <map>\n#include <sstream>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define EPS 1e-9\n\nchar type_guess(string str){\n\tif( 'A'<=str[0] && str[0]<='Z' ) return 'U';\n\trep(i,str.size())if( str[i]=='_' ) return 'D';\n\treturn 'L';\n}\nstring ex(string str, char type){\n\tstring ret;\n\tchar c = type_guess(str);\n\t\n\tif( c==type ) return str;\n\tif( type=='D' && str.size()==1 ) exit(1);\n\t\n\t//cout << \"c:\" << c << endl;\n\tif( c=='U' ){\n\t\tint p = 0;\n\t\tbool flag = false;\n\t\trep(i,str.size())if( 'A'<=str[i]&&str[i]<='Z' ){\n\t\t\tif( type=='L' ){\n\t\t\t\tif( i==0 )str[i] ^= 32;\n\t\t\t\treturn str;\n\t\t\t}else{\n\t\t\t\tstr[i] ^= 32;\n\t\t\t\tif( flag ){\n\t\t\t\t\tif( ret==\"\" ){\n\t\t\t\t\t\tret = str.substr(p,i-p);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tret = ret + \"_\" + str.substr(p,i-p);\n\t\t\t\t\t}\n\t\t\t\t\tp = i;\n\t\t\t\t}\n\t\t\t\tflag = true;\n\t\t\t}\n\t\t}\n\t\treturn ret + \"_\" + str.substr(p);\n\t\t\n\t}else if( c=='L' ){\n\t\tint p = 0;\n\t\tif( type=='U' ){ str[0]^=32; return str; }\n\t\trep(i,str.size())if( 'A'<=str[i] && str[i]<='Z' ){\n\t\t\tif( ret==\"\" ){\n\t\t\t\tret = str.substr(p,i-p);\n\t\t\t}else{\n\t\t\t\tret = ret + \"_\" + str.substr(p,i-p);\n\t\t\t}\n\t\t\tp = i;\n\t\t\t//printf(\"p:%d\\n\",p);\n\t\t}\n\t\treturn ret + \"_\" + str.substr(p);\n\t\t\n\t}else{\n\t\tint p= 0;\n\t\tfor(int i=0; i<str.size(); i++)if( str[i]=='_' ){\n\t\t\tret += str.substr(p,i-p);\n\t\t\tp = i+1;\n\t\t\tif( p<str.size() )str[p]^=32;\n\t\t\t//printf(\"p:%d, i:%d\\n\",p,i);\n\t\t}\n\t\tif( type=='U' )ret[0]^=32;\n\t\treturn ret + str.substr(p);\n\t}\n\treturn ret;\n}\nint main(){\n\tstring str;\n\tchar T;\n\twhile(cin>>str>>T, T!='X'){\n\t\tcout << ex(str,T) << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nvoid solve()\n{\n\tstring str;\n\tchar c;\n\twhile(cin >> str)\n\t{\n\t\tcin >> c;\n\t\tstring Answer;\n\t\tint size = str.size();\n\t\tif(c == 'X')\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if(c == 'L')\n\t\t{\n\t\t\tif('A' <= str[0] && str[0] <= 'Z')\n\t\t\t{\n\t\t\t\tAnswer += str[0] - 'A' + 'a';\n\t\t\t}\n\t\t\telse if('a' <= str[0] && str[0] <= 'z')\n\t\t\t{\n\t\t\t\tAnswer += str[0];\n\t\t\t}\n\t\t\tbool flag = false;\n\t\t\tfor(int i = 1; i < size; ++i)\n\t\t\t{\n\t\t\t\tif(str[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tflag = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(flag && 'a' <= str[i] && str[i] <= 'z')\n\t\t\t\t{\n\t\t\t\t\tAnswer += str[i] - 'a' + 'A';\n\t\t\t\t\tflag = false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tAnswer += str[i];\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\telse if(c == 'U')\n\t\t{\n\t\t\tif('A' <= str[0] && str[0] <= 'Z')\n\t\t\t{\n\t\t\t\tAnswer += str[0];\n\t\t\t}\n\t\t\telse if('a' <= str[0] && str[0] <= 'z')\n\t\t\t{\n\t\t\t\tAnswer += str[0] - 'a' + 'A';\n\t\t\t}\n\t\t\tbool flag = false;\n\t\t\tfor(int i = 1; i < size; ++i)\n\t\t\t{\n\t\t\t\tif(str[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tflag = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(flag && 'a' <= str[i] && str[i] <= 'z')\n\t\t\t\t{\n\t\t\t\t\tAnswer += str[i] - 'a' + 'A';\n\t\t\t\t\tflag = false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tAnswer += str[i];\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t}\n\t\telse if(c == 'D')\n\t\t{\n\t\t\tif('A' <= str[0] && str[0] <= 'Z')\n\t\t\t{\n\t\t\t\tAnswer += str[0] - 'A' + 'a';\n\t\t\t}\n\t\t\telse if('a' <= str[0] && str[0] <= 'z')\n\t\t\t{\n\t\t\t\tAnswer += str[0];\n\t\t\t}\n\t\t\tfor(int i = 1; i < size; ++i)\n\t\t\t{\n\t\t\t\tif(str[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tAnswer += '_';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif('A' <= str[i] && str[i] <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tAnswer += '_';\n\t\t\t\t\tAnswer += str[i] - 'A' + 'a';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tAnswer += str[i];\n\t\t\t}\n\t\t}\n\t\tcout << Answer << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\nusing namespace std;\nint main()\n{\n  string name,type,ans;\n  string upper=\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n  string under=\"_\";\n  int start;\n  while(cin>>name>>type,type!=\"X\"){\n    vector<string>word;\n    vector<string>::iterator it;\n    start=0;\n    if(name.find(\"_\")!=string::npos){\n      for(int i=0;i<name.size();i++){\n\tif(under.find(name[i])!=string::npos){\n\t  word.push_back(name.substr(start,i-start));\n\t  start=i+1;\n\t}\n      }\n      word.push_back(name.substr(start,name.size()-start));\n    }else{\n      if(upper.find(name[0])!=string::npos)name[0]+='a'-'A';\n      for(int i=0;i<name.size();i++){\n\tif(upper.find(name[i])!=string::npos){\n\t  name[i]+='a'-'A';\n\t  word.push_back(name.substr(start,i-start));\n\t  start=i;\n\t}\n      }\n      word.push_back(name.substr(start,name.size()-start));\n    }\n    ans=\"\";\n    for(it=word.begin();it!=word.end();it++){\n      if(it==word.begin()){\n\tif(type==\"U\")(*it)[0]+='A'-'a';\n\tans+=*it;\n\tcontinue;\n      }\n      if(type==\"D\")*it=\"_\"+*it;\n      else (*it)[0]+='A'-'a';\n      ans+=*it;\n    }\n    cout<<ans<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <set>\n#include <vector>\n#include <cstring>\n#include <climits>\n#include <queue>\n#include <map>\n#include <sstream>\nusing namespace std;\n\n#define REP(i,a,n) for(int i=(a); i<(int)(n); i++)\n#define rep(i,n) REP(i,0,n)\n#define EPS 1e-9\n\nvoid parseUL(const string& s, vector<string>& v){\n\tstring ts = s;\n\tint i;\n\tfor(i=0; i<ts.size();){\n\t\tstring tmp;\n\t\tts[i] = tolower(ts[i]);\n\t\tfor(;i<ts.size() && islower(ts[i]); i++)tmp+=ts[i];\n\t\tv.push_back(tmp);\n\t}\n}\nvoid parseD(const string& s, vector<string>& v){\n\tint i;\n\tfor(i=0; i<s.size(); i++){\n\t\tstring tmp;\n\t\tfor(;i<s.size() && s[i]!='_'; i++)tmp+=s[i];\n\t\tv.push_back( tmp );\n\t}\n}\n\nstring ext(vector<string>& v, const string& type){\n\tstring ret;\n\tif( type==\"L\" ){\n\t\trep(i,v.size()){\n\t\t\tif( i!=0 )v[i][0]=toupper(v[i][0]);\n\t\t\tret += v[i];\n\t\t}\n\t}else if( type==\"U\" ){\n\t\trep(i,v.size()){\n\t\t\tv[i][0]=toupper(v[i][0]);\n\t\t\tret += v[i];\n\t\t}\n\t}else{\n\t\trep(i,v.size()){\n\t\t\tif( i!=0 )ret+=\"_\";\n\t\t\tret += v[i];\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main(){\n\tstring s,type;\n\twhile(cin>>s>>type,type!=\"X\"){\n\t\tvector<string> v;\n\t\tif( s.find('_') != string::npos ){\n\t\t\tparseD(s,v);\n\t\t}else{\n\t\t\tparseUL(s,v);\n\t\t}\n\t\t\n\t\tcout << ext(v,type) << endl;\n\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<vector>\n#include<list>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\nusing namespace std;\nint main(){\n  int i;\n  char c;\n  string s;\n  while(cin>>s>>c&&c!='X'){\n    if(s.find('_')!=string::npos){\n      if(c=='U'){\n\ts[0]+='A'-'a';\n\twhile(s.find('_')!=string::npos){\n\t  s[s.find('_')+1]+='A'-'a';\n\t  s.erase(s.find('_'),1);\n\t}\n      }else if(c=='L'){\n\twhile(s.find('_')!=string::npos){\n\t  s[s.find('_')+1]+='A'-'a';\n\t  s.erase(s.find('_'),1);\n\t}\n      }\n    }else if('a'<=s[0]&&s[0]<='z'){\n      if(c=='U'){\n\ts[0]+='A'-'a';\n      }else if(c=='D'){\n\tfor(i=0;i<(int)s.length();i++){\n\t  for(;i<(int)s.length()&&'a'<=s[i]&&s[i]<='z';i++);\n\t  if(i!=(int)s.length()){\n\t    s[i]+='a'-'A';\n\t    s.insert(i,1,'_');\n\t  }\n\t}\n      }\n    }else if('A'<=s[0]&&s[0]<='Z'){\n      if(c=='L'){\n\ts[0]+='a'-'A';\n      }else if(c=='D'){\n\ts[0]+='a'-'A';\n\tfor(i=0;i<(int)s.length();i++){\n\t  for(;i<(int)s.length()&&'a'<=s[i]&&s[i]<='z';i++);\n\t  if(i!=(int)s.length()){\n\t    s[i]+='a'-'A';\n\t    s.insert(i,1,'_');\n\t  }\n\t}\n      }\n    }\n    cout<<s<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    bool flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z' ||\n\t str[i] == '_') flag[i] = 1;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(flag[i] == 1 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      \n      }\n    }  \n      cout << endl;  \n    \n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int len,i,flag;\n  string str,out;\n  char type;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> str >> type;\n    len=str.size();\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]>='a') out+=str[i]-'a'+'A';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n      /*      if(len==1){\n\tflag=1;\n\tif(str[0]>='a') out+=str[0]-'a'+'A';\n\telse out+=str[0]; \n\t}*/\n      //if(flag==0){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]=='_'){\n\t      out+=str[i+1]-'a'+'A';\n\t      i++;\n\t    }else out+=str[i];\n\t  }\n\t}\n\t//}\n    }\n    else if(type=='D'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\telse{\n\t  if(str[i]<'a'){\n\t    out+='_';\n\t    out+=str[i]-'A'+'a';\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\nvector<string> split(const string &s, char c = ' '){\n\tvector<string> ret;\n\tstringstream ss(s);\n\tstring t;\n\twhile(getline(ss,t,c)){\n\t\tret.pb(t);\n\t}\n\treturn ret;\n}\n\nvector<string> get_word(string s){\n\tvector<string> ret;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tfor(int j = i; j < s.size(); j++){\n\t\t\tif((s[j] >= 'A' && s[j] <= 'Z') || j == s.size() - 1){\n\t\t\t\tif(j == s.size() - 1) j++;\n\t\t\t\tret.push_back(s.substr(i, j - i));\n\t\t\t\tif(j != s.size()) s[j] += 'a' - 'A';\n\t\t\t\ti = j - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nstring calc(string s, string t1, string t2){\n\tstring ret;\n\tif(t1 == \"U\"){\n\t\tif(t2 == \"L\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'a' - 'A';\n\t\t}\n\t\telse if(t2 == \"D\"){\n\t\t\ts[0] += 'a' - 'A';\n\t\t\tvector<string> v = get_word(s);\n\t\t\t// cout<<\"  \";\n\t\t\t// for(int i = 0; i < v.size(); i++){\n\t\t\t// \tcout<<v[i];\n\t\t\t// }\n\t\t\t// cout<<endl;\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\t//s[0] += 'a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t\telse ret = s;\n\t}\n\telse if(t1 == \"L\"){\n\t\tif(t2 == \"U\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'A' - 'a';\n\t\t}\n\t\telse if(t2 == \"D\"){\n\t\t\tvector<string> v = get_word(s);\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\t//s[0] +='a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t\telse ret = s;\n\t}\n\telse{\n\t\tif(t2 == \"U\"){\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t\telse if(t2 == \"L\"){\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\tif(i != 0) s[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t\telse ret = s;\n\t}\n\treturn ret;\n}\n\nint main(){\n\tstring s, t;\n\twhile(cin>>s>>t && t != \"X\"){\n\t\tif(s.find(\"_\") != string::npos) cout<<calc(s, \"D\", t);\n\t\telse if(s[0] >= 'A' && s[0] <= 'Z') cout<<calc(s, \"U\", t);\n\t\telse cout<<calc(s,\"L\", t);\n\t\tcout<<endl;\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define INF (1<<22)\n\nint main(){\n  while(1){\n    string str;\n    getline(cin,str);\n    int len = str.size();\n    char type = str[len-1];\n    if(type == 'X') break;\n    string ans = \"\";\n    for(int i=0;i<len-2;i++){\n      if(i == 0){\n\tif(type == 'L' || type == 'D'){\n\t  if(str[i] >= 'A' && str[i] <= 'Z') ans += str[i]+32;\n\t  else ans += str[i];\n\t} else {\n\t  if(str[i] >= 'a' && str[i] <= 'z') ans += str[i]-32;\n\t  else ans += str[i];\n\t}\n      }\n      else if(str[i] >= 'A' && str[i] <= 'Z'){\n\tif(type == 'D') {\n\t  ans += '_';\n\t  ans += (str[i]+32);\n\t}\n\telse ans += str[i];\n      }\n      else if(str[i] == '_'){\n\tif(type == 'D') ans += str[i];\n\telse {\n\t  i++;\n\t  ans += str[i]-32;\n\t}\n      }\n      else ans += str[i];\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n  string s;\n  char c;\n  while (true) {\n    cin >> s >> c;\n    if (c == 'U') {\n      if (s.find('_', 0) == string::npos &&\n          'a' <= s[0] && s[0] <= 'z')\n        s[0] += ('A'-'a');\n      else\n        for (int i = 0; i < s.size(); i++)\n          if (s[i] == '_') {\n            s[i+1] += ('A'-'a');\n            s.erase(i, 1);\n          } else if (i == 0 && 'a' <= s[0] && s[0] <= 'z') {\n            s[i] += ('A'-'a');\n          }\n      cout << s << endl;\n    } else if (c == 'L') {\n      if (s.find('_', 0) == string::npos &&\n          'A' <= s[0] && s[0] <= 'Z')\n        s[0] -= ('A'-'a');\n      else\n        for (int i = 0; i < s.size(); i++)\n          if (s[i] == '_') {\n            s[i+1] += ('A'-'a');\n            s.erase(i, 1);\n          }\n      cout << s << endl;\n    } else if (c == 'D') {\n      for (int i = 0; i < s.size(); i++)\n        if (i == 0 && 'A' <= s[i] && s[i] <= 'Z') {\n          s[i] -= ('A'-'a');\n        } else if ('A' <= s[i] && s[i] <= 'Z') {\n          s[i] -= ('A'-'a');\n          s.insert(i, 1, '_');\n        }\n      cout << s << endl;\n    } else {\n      break;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint main() {\n  string s;\n  while(cin >> s) {\n    int p=0;\n    vector<string> v;\n    char c;\n    cin >> c;\n    if (c == 'X') break;\n    \n    for (int i=0; i<s.length(); i++) {\n      if (s[i] == '_') {\n        v.push_back(s.substr(p,i-p));\n        p=i+1;\n      }\n      if (i>0 && isupper(s[i])) {\n        v.push_back(s.substr(p,i-p));\n        p=i;\n      }\n    }\n    v.push_back(s.substr(p));\n    \n    string ans;\n    for (int i=0; i<v.size(); i++) {\n      string s1 = v[i];\n      if (c == 'U') {\n        s1[0] = toupper(s1[0]);\n        ans += s1;\n      }\n      if (c == 'L') {\n        if (i==0) {\n          s1[0] = tolower(s1[0]);\n          ans += s1;\n        } else {\n          s1[0] = toupper(s1[0]);\n          ans += s1;\n        }\n      }\n      \n      if (c == 'D') {\n        s1[0] = tolower(s1[0]);\n        if (i>=1)\n          ans += \"_\" + s1;\n        else\n          ans += s1;\n      }\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <cstdlib>\nusing namespace std;\n\nint main() {\n  \n  string str; char op;\n  while(cin>>str>>op) {\n    if(op == 'X') break;\n    for(int i=0; i<(int)str.size(); i++) {\n      if(str[i] == '_') { str[i] = ' '; }\n      else if(isupper(str[i])) {\n        char ch = tolower(str[i]);\n        str = str.substr(0, i) + \" \" + ch + str.substr(i+1);\n      }\n      else { str[i] = tolower(str[i]); }\n    }\n    stringstream ss(str);\n    string ans;\n    bool fsted = 0;\n    while(ss >> str) {\n      if(op == 'L') {\n        if(fsted) { ans+=toupper(str[0]); ans+=str.substr(1); }\n        else ans+=str;\n        fsted = 1;\n      }\n      if(op == 'U') {\n        ans+=toupper(str[0]); ans+=str.substr(1);\n      }\n      if(op == 'D') {\n        if(fsted) ans+='_';\n        ans+=str;\n        fsted = 1;\n      }\n    }\n    cout << ans << endl;\n  }\n  \n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<algorithm>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tstring::iterator i;\n\tchar c;\n\tint x;\n\twhile(cin>>s>>c,c-'X')\n\t{\n\t\ts[0]=toupper(s[0]);\n\t\twhile(x=s.find('_'),x!=string::npos)\n\t\t\ts.erase(x,1),s[x]=toupper(s[x]);\n\t\tif(c-'U')s[0]=tolower(s[0]);\n\t\tif(c=='D')\n\t\t\tfor(i=s.begin();(i=find_if(i,s.end(),isupper))!=s.end();++i)\n\t\t\t\t*i=tolower(*i),s.insert(i,'_');\n\t\tcout<<s<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <cctype>\n#include <cstring>\nusing namespace std;\n\nvector<string> split(string s) {\n    vector<string> ret;\n    string buf;\n    if (isupper(s[0])) {\n        s[0] = tolower(s[0]);\n    }\n    for (int i = 0; i < s.size(); i++) {\n        if (s[i] == '_') {\n            ret.push_back(buf);\n            buf.clear();\n        } else if (isupper(s[i])) {\n            ret.push_back(buf);\n            buf.clear();\n            buf.push_back(tolower(s[i]));\n        } else {\n            buf.push_back(s[i]);\n        }\n    }\n    ret.push_back(buf);\n    return ret;\n}\n\nint main() {\n    string s; char type;\n    while (cin >> s >> type) {\n        if (type == 'X') break;\n        vector<string> words = split(s);\n\n        string output;\n        switch (type) {\n            case 'L':\n                for (int i = 1; i < words.size(); i++) {\n                    words[i][0] = toupper(words[i][0]);\n                }\n                for (int i = 0; i < words.size(); i++) {\n                    output += words[i];\n                }\n                break;\n            case 'U':\n                for (int i = 0; i < words.size(); i++) {\n                    words[i][0] = toupper(words[i][0]);\n                    output += words[i];\n                }\n                break;\n            case 'D':\n                for (int i = 0; i < words.size()-1; i++) {\n                    words[i].push_back('_');\n                }\n                for (int i = 0; i < words.size(); i++) {\n                    output += words[i];\n                }\n                break;\n        }\n        cout << output << endl;\n    }\n    return 0;\n} "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    bool flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z' ||\n\t str[i] == '_') flag[i] = 1;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(flag[i] == 1 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      \n      }\n    }  \n    cout << endl;   \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  string str;\n  char S;\n  while(1){\n    cin>>str;\n    cin>>S;\n\n    if(S=='X') break;\n\n    else  if(S=='L'){\n      if(str[0]>='A' && str[0]<='Z') str[0]+=32;\n      for(int i=0;i<str.size()-1;i++){\n\tif(str[i]=='_' && str[i+1]>='a' && str[i+1]<='z' ) str[i+1]-=32;\n      }\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n    }\n    \n    else  if(S=='U') {\n      if(str[0]>='a' && str[0]<='z') str[0]-=32;\n    \n    for(int i=0;i<str.size()-1;i++){\n    if(str[i]=='_'&& str[i+1]>='a' && str[i+1]<='z') str[i+1]-=32;\n  }\n  for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n      \n    }\n    \n  else  if(S=='D'){\n    for(int i=0;i<str.size();i++){\n      if(str[i]>=65 && str[i]<=90){\n\tstr[i]+=32;\n      }\n      if(i>0 && i<str.size()-1 && str[i+1]>=65 && str[i+1]<=90){\n\tcout<<str[i]<<\"_\";\n      }\n      else cout<<str[i];\n    }\n    cout<<endl;\n  }\n  }\n  return 0;\n  }"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\nusing namespace std;\n\nint main()\n{\n\tchar s[101], o;\n\twhile (cin >> s >> o)\n\t{\n\t\tif (o == 'X') break;\n\t\tint k = 0, u = 0;\n\t\tchar t[100][101] = {\"\"};\n\t\tt[k][u] = ('A' <= s[0] && s[0] <= 'Z') ? s[0]-'A'+'a' : s[0];\n\t\t++u;\n\t\tfor (int i = 1; i < strlen(s); ++i)\n\t\t{\n\t\t\tif ('A' <= s[i] && s[i] <= 'Z')\n\t\t\t{\n\t\t\t\tt[k][u] = '\\0';\n\t\t\t\t++k, u = 0;\n\t\t\t\tt[k][u] = s[i]-'A'+'a';\n\t\t\t\t++u;\n\t\t\t}\n\t\t\telse if (s[i] == '_')\n\t\t\t{\n\t\t\t\tt[k][u] = '\\0';\n\t\t\t\t++k, u = 0;\n\t\t\t}\n\t\t\telse if (s[i] == '\\0')\n\t\t\t{\n\t\t\t\tt[k][u] = '\\0';\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tt[k][u] = s[i];\n\t\t\t\t++u;\n\t\t\t}\n\t\t}\n\t\tint m = k;\n\t\tk = 0;\n\n\t\tchar r[201] = \"\";\n\t\tif (o == 'U' || o == 'L')\n\t\t{\n\t\t\tfor (int i = 0; i <= m; ++i)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < strlen(t[i]); ++j)\n\t\t\t\t{\n\t\t\t\t\tif (i == 0 && j == 0) r[k] = (o == 'U') ? 'A'+t[i][j]-'a' : t[i][j];\n\t\t\t\t\telse if (j == 0) r[k] = 'A'+t[i][j]-'a';\n\t\t\t\t\telse r[k] = t[i][j];\n\t\t\t\t\t++k;\n\t\t\t\t}\n\t\t\t}\n\t\t\tr[k] = '\\0';\n\t\t}\n\t\telse\n\t\t{\n\t\t\tfor (int i = 0; i <= m; ++i)\n\t\t\t{\n\t\t\t\tfor (int j = 0; j < strlen(t[i]); ++j)\n\t\t\t\t{\n\t\t\t\t\tr[k] = t[i][j];\n\t\t\t\t\t++k;\n\t\t\t\t}\n\t\t\t\tr[k] = '_';\n\t\t\t\t++k;\n\t\t\t}\n\t\t\tr[k-1] = '\\0';\n\t\t}\n\n\t\tcout << r << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nint N;\nstring in;\nchar type;\n\nvoid solve() {\n  if (type == 'X') return;\n  N = in.size();\n  bool is_us = false;\n  vector<string> ret;\n  if (in.find('_') != -1) { is_us = true; }\n  if (is_us) {\n    // underscore\n    if (type == 'D') { printf(\"%s\\n\",in.c_str()); return; }\n    int cur = 0;\n    for (int i = 1; i < in.size(); ++i) {\n      if (in[i] == '_') {\n        ret.push_back(in.substr(cur,i-cur));\n        cur = i+1;\n      }\n    }\n    ret.push_back(in.substr(cur, in.size()-cur));\n    rep(i,ret.size()) ret[i][0] = toupper(ret[i][0]);\n    if (type == 'L') ret[0][0] = tolower(ret[0][0]);\n    rep(i,ret.size()) printf(\"%s\",ret[i].c_str()); puts(\"\");\n  } else {\n    // L or U\n    int cur = 0;\n    for (int i = 1; i < in.size(); ++i) {\n      if (isupper(in[i])) {\n        ret.push_back(in.substr(cur, i-cur));\n        cur = i;\n      }\n    }\n    ret.push_back(in.substr(cur, in.size()-cur));\n    if (type == 'D') {\n      rep(i,ret.size()) ret[i][0] = tolower(ret[i][0]);\n      rep(i,ret.size()) {\n        if(i) putchar('_'); printf(\"%s\",ret[i].c_str());\n      } puts(\"\");\n    } else {\n      if (type == 'U') ret[0][0] = toupper(ret[0][0]);\n      else ret[0][0] = tolower(ret[0][0]);\n      rep(i,ret.size()) printf(\"%s\",ret[i].c_str()); puts(\"\");\n    }\n  }\n}\n\nint main() {\n  while (cin >> in >> type) solve();\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    string name;\n    char type;\n    string UP;\n    for (int i = 0; i < 26; i++) {\n        UP += 'A' + i;\n    }\n\n    while (cin >> name >> type) {\n        if (type == 'U') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            while (ss >> str) {\n                if (UP.find(str[0]) == string::npos)\n                    str[0] = str[0] - 'a' + 'A';\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'L') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            ss >> str;\n            cout << str;\n            while (ss >> str) {\n                if (UP.find(str[0]) == string::npos)\n                    str[0] = str[0] - 'a' + 'A';\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'D'){\n            for (int i = 0; i < name.size(); i++) {\n                if (UP.find(name[i]) != string::npos) {\n                    name[i] = name[i] - 'A' + 'a';\n                    name.insert(i, \" \");\n                }\n            }\n            stringstream ss;\n            ss << name;\n            string str;\n            ss >> str;\n            cout << str;\n            while (ss >> str) {\n                cout << \"_\" << str;\n            }\n            cout << endl;\n        } else {\n            break;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<vector>\n#include<iostream>\nusing namespace std;\nint main(){\n\tstring s;\n\tchar c;\n\twhile(cin>>s>>c,c!='X'){\n\t\tint now=1,pre=0;\n\t\tvector<string> box;\n\t\twhile(1){\n\t\t\tif(now==s.size()){\n\t\t\t\tbox.push_back(s.substr(pre,now-pre));\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(isupper(s[now])){\n\t\t\t\tbox.push_back(s.substr(pre,now-pre));\n\t\t\t\tpre=now;\n\t\t\t}else if(s[now]=='_'){\n\t\t\t\tbox.push_back(s.substr(pre,now-pre));\n\t\t\t\tnow++;\n\t\t\t\tpre=now;\n\t\t\t}\n\t\t\tnow++;\n\t\t}\n\t\tfor(int i=0;i<box.size();i++){\n\t\t\tstring t=box[i];\n\t\t\tchar d=t[0];\n\t\t\tif(c=='L'){\n\t\t\t\tif(i==0&&isupper(d)){\n\t\t\t\t\tt[0]=tolower(d);\n\t\t\t\t}\n\t\t\t\tif(i!=0&&islower(d)){\n\t\t\t\t\tt[0]=toupper(d);\n\t\t\t\t}\n\t\t\t}else if(c=='U'){\n\t\t\t\tif(islower(d))\n\t\t\t\tt[0]=toupper(d);\n\t\t\t\t\n\t\t\t}else if(c=='D'){\n\t\t\t\tif(isupper(d))\n\t\t\t\tt[0]=tolower(d);\n\t\t\t\tif(i!=0)\n\t\t\t\tcout<<'_';\n\t\t\t}\n\t\t\tcout<<t;\n\t\t}\n\t\tcout<<endl;\n\t//\tfor(int i=0;i<box.size();i++)\n\t//\tcout<<box[i]<<endl;\n\t\t\n\t\t\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cstdio>\nusing namespace std;\nint main(void){\n  string s;\n  char c;\n  for(;;){\n    cin >> s >> c;\n    if(c=='X') break;\n    if(s[0]>='A' && s[0]<='Z') s[0]+=32;\n    for(int i=1;i<s.size();i++){\n      if(s[i]=='_') s[i]=' ';\n      else if(s[i]>='A' && s[i]<='Z'){\n\ts[i]+=32;\n\ts.insert(i,\" \");\n      }\n    }\n    if(c=='L'){\n      for(int i=0;i<s.size();i++){\n\tif(s[i]==' ') continue;\n\tif(i!=0 && s[i-1]==' ') printf(\"%c\",s[i]-32);\n\telse cout << s[i];\n      }\n    }\n    else if(c=='U'){\n      for(int i=0;i<s.size();i++){\n\tif(s[i]==' ') continue;\n\tif(i==0 || s[i-1]==' ') printf(\"%c\",s[i]-32);\n\telse cout << s[i];\n      }\n    }\n    else if(c=='D'){\n      for(int i=0;i<s.size();i++){\n\tif(s[i]==' ') cout << \"_\";\n\telse cout << s[i];\n      }\n    }\n    cout << \"\\n\";\n  }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nstring ULtoD(string s){\n  stringstream ss;\n  ss << (char)tolower(s[0]);\n  FOR(i, 1, s.length()){\n    if(isupper(s[i])) ss << '_' << (char)tolower(s[i]);\n    else ss << s[i];\n  }\n  return ss.str();\n}\n\nstring DtoUL(string s, char t){\n  stringstream ss;\n  ss << (char)(t == 'U' ? toupper(s[0]) : s[0]);\n  FOR(i, 1, s.length()){\n    if(s[i] == '_') ss << (char)toupper(s[++i]);\n    else ss << s[i];\n  }\n  return ss.str();\n}\n\nint main() {\n  string s; char t;\n  while(cin >>s >>t && s != \"EndOfInput\"){\n    char bt;\n    if(isupper(s[0])) bt = 'U';\n    else if(s.find('_') != string::npos) bt = 'D';\n    else bt = 'L';\n    if(bt == 'U'){\n      if(t == 'L') s[0] = tolower(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else if(bt == 'L'){\n      if(t == 'U') s[0] = toupper(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else s = DtoUL(s, t);\n    cout <<s <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nstring name, type;\n\nvector<string> split(string name) {\n\tvector<string> ret;\n\tstring word;\n\t\n\tfor (int i = 0; i < name.length(); i++) {\n\t\tif (name[i] == '_' || ('A' <= name[i] && name[i] <= 'Z')) {\n\t\t\tif (word.length() > 0) ret.push_back(word);\n\t\t\tword = \"\";\n\t\t}\n\t\tif ('A' <= name[i] && name[i] <= 'Z') word += name[i] + 32;\n\t\telse if (name[i] != '_') word += name[i];\n\t}\n\tret.push_back(word);\n\treturn ret;\n}\n\nint main() {\n\twhile (cin >> name >> type) {\n\t\tchar t = type[0];\n\t\t\n\t\tvector<string> names = split(name);\n\t\t\n\t\tif (t == 'X') break;\n\t\t\n\t\tif (t == 'U' || t == 'L') {\n\t\t\tfor (int i = (t == 'L'); i < names.size(); i++) {\n\t\t\t\tif ('a' <= names[i][0] && names[i][0] <= 'z')\n\t\t\t\t\tnames[i][0] = names[i][0] - 32;\n\t\t\t}\n\t\t}\n\t\tif (t == 'D') {\n\t\t\tfor (int i = 0; i < (int)names.size() - 1; i++) {\n\t\t\t\tnames[i] += '_';\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (int i = 0; i < names.size(); i++) {\n\t\t\tcout << names[i];\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<algorithm>\n#include<functional>\nusing namespace std;\nint main()\n{\n\tstring s;\n\tstring::iterator i;\n\tchar c;\n\tint x;\n\twhile(cin>>s>>c,c-'X')\n\t{\n\t\ts[0]=toupper(s[0]);\n\t\twhile(x=s.find('_'),x!=string::npos)\n\t\t\ts.erase(x,1),s[x]=toupper(s[x]);\n\t\tif(c-'U')s[0]=tolower(s[0]);\n\t\tif(c=='D')\n\t\t\tfor(i=s.begin();(i=find_if(i,s.end(),ptr_fun(isupper)))!=s.end();++i)\n\t\t\t\t*i=tolower(*i),s.insert(i,'_');\n\t\tcout<<s<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<string>\n#include<vector>\n#include<iostream>\n\n#define\tpb\tpush_back\n\nusing namespace std;\n\nvector<string> split(string s){\n\tint n=s.length();\n\n\tbool d=false;\n\tfor(int i=0;i<n;i++)\tif(s[i]=='_')\td=true;\n\n\tvector<string> ans;\n\tif(d){\n\t\ts+='_';\n\t\tn++;\n\t\tint bef=-1;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(s[i]=='_' && ~bef){\n\t\t\t\tans.pb(s.substr(bef,i-bef));\n\t\t\t\tbef=-1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(bef==-1)\tbef=i;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n\telse{\n\t\ts[0]=tolower(s[0]);\n\t\ts+='Q';\n\t\tn++;\n\t\tint bef=0;\n\t\tfor(int i=0;i<n;i++){\n\t\t\tif(isupper(s[i])){\n\t\t\t\tans.pb(s.substr(bef,i-bef));\n\t\t\t\ts[i]=tolower(s[i]);\n\t\t\t\tbef=i;\n\t\t\t}\n\t\t}\n\t\treturn ans;\n\t}\n}\n\nint main(){\n\twhile(1){\n\t\tstring s;\n\t\tchar c;\n\t\tcin>>s>>c;\n\n\t\tvector<string> part=split(s);\n\t\tint n=part.size();\n\t\tif(c=='U'){\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tpart[i][0]=toupper(part[i][0]);\n\t\t\t\tcout<<part[i];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t\telse if(c=='L'){\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(i>0)\tpart[i][0]=toupper(part[i][0]);\n\t\t\t\tcout<<part[i];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t\telse if(c=='D'){\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(i>0)\tcout<<'_';\n\t\t\t\tcout<<part[i];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t\telse\tbreak;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nstring UOP(string str){\n  string ans=\"\";\n  if('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n  for(int i = 0 ; i < str.size() ; i++){\n    if(str[i] == '_'){\n      if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n    }\n    else ans += str[i];\n  }\n  return ans;\n}\n\nstring LOP(string str){\n  string ans=\"\";\n  if('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n  for(int i = 0 ; i < str.size() ; i++){\n    if(str[i] == '_'){\n      if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n    }\n    else ans += str[i];\n  }\n  return ans;\n}\n\nstring DOP(string str){\n  string ans=\"\";\n  for(int i = 0 ; i < str.size() ; i++){\n    if('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n    ans += str[i];\n    if('A' <= str[i+1] && str[i+1] <= 'Z') ans += '_';\n  }\n  return ans;\n}\n\nint main(){\n  string str;\n  char op;\n  while(cin >> str >> op, op != 'X'){\n    if(op == 'U'){\n      cout << UOP(str) << endl;\n    }\n    else if(op == 'L'){\n      cout << LOP(str) << endl;\n    }\n    else if(op == 'D'){\n      cout << DOP(str) << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cctype>\n#include<string>\n#include<vector>\nusing namespace std;\n\nvector<string> decompose(string s){\n  vector<string> res;\n  string tmp;\n  tmp = s[0];\n  \n  for(int i=1;i<s.size();i++){\n    if(isupper(s[i])){\n      res.push_back(tmp);\n      tmp = s[i];\n    }else if(s[i] == '_'){\n      res.push_back(tmp);\n      tmp = \"\";\n    }else{\n      tmp += s[i];\n    }\n  }\n  res.push_back(tmp);\n  return res;\n}\n\nstring unite(vector<string> v,char c){\n  string res;\n\n  for(int i=0;i<v.size();i++){\n    if(c == 'D' || (c == 'L' && i==0)){\n      v[i][0] = tolower(v[i][0]);\n    }else{\n      v[i][0] = toupper(v[i][0]);\n    }\n\n    if(c == 'D' && i!=0)res += \"_\";\n    res += v[i];\n  }\n  return res;\n}\n\nint main(){\n  string s;\n  char c;\n\n  while(cin >> s >> c, c!='X'){\n    vector<string> v = decompose(s);\n    cout << unite(v,c) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    string name;\n    char type;\n    string UP;\n    for (int i = 0; i < 26; i++) {\n        UP += 'A' + i;\n    }\n\n    while (cin >> name >> type) {\n        if (type == 'U') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            while (ss >> str) {\n                if (UP.find(str[0]) == string::npos)\n                    str[0] = str[0] - 'a' + 'A';\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'L') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            ss >> str;\n            cout << str;\n            while (ss >> str) {\n                if (UP.find(str[0]) == string::npos)\n                    str[0] = str[0] - 'a' + 'A';\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'D'){\n            for (int i = 0; i < name.size(); i++) {\n                if (UP.find(name[i]) != string::npos) {\n                    name[i] = name[i] - 'A' + 'a';\n                    name.insert(i, \" \");\n                }\n            }\n            stringstream ss;\n            ss << name;\n            string str;\n            ss >> str;\n            cout << str;\n            while (ss >> str) {\n                cout << \"_\" << str;\n            }\n            cout << endl;\n        } else {\n            break;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#include<sstream>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\nconst double PI=acos(-1);\nconst double EPS=1e-10;\nconst int inf=1e9;\nusing namespace std;\ntypedef long long ll;\ntypedef vector<ll> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\nint main(){\n\tstring s,t;\n\twhile(cin>>s>>t,t!=\"X\"){\n\t\tif(t==\"L\"){\n\t\t\trep(i,s.size())if(s[i]=='_'){\n\t\t\t\ts[i+1]=toupper(s[i+1]);\n\t\t\t\ts.erase(s.begin()+i);\n\t\t\t\ti--;\n\t\t\t}\n\t\t\ts[0]=tolower(s[0]);\n\t\t}else if(t==\"U\"){\n\t\t\trep(i,s.size())if(s[i]=='_'){\n\t\t\t\ts[i+1]=toupper(s[i+1]);\n\t\t\t\ts.erase(s.begin()+i);\n\t\t\t\ti--;\n\t\t\t}\n\t\t\ts[0]=toupper(s[0]);\n\t\t}else{\n\t\t\trep(i,s.size())if(i&&isupper(s[i])){\n\t\t\t\ts[i]=tolower(s[i]);\n\t\t\t\ts.insert(i,\"_\");\n\t\t\t}\n\t\t\ts[0]=tolower(s[0]);\n\t\t}\n\t\tcout<<s<<endl;\t\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int i,len,flag;\n  char type;\n  string name,out;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> name >> type;\n    if(type=='X') break;\n    len=name.size();\n    for(i=0;i<len;i++){\n      if(i==0){\n\tif(name[i]<'a'&&type!='U') out+=name[i]-'A'+'a';\n\telse if(name[i]>='a'&&type=='U') out+=name[i]-'a'+'A';\n\telse out+=name[i];\n      }\n      else{\n\tif(name[i]<'a'||name[i]=='_') flag=1;\n\tif(name[i]=='_'&&type!='D'){\n\t  out+=name[i+1]-'a'+'A';\n\t  i++;\n\t}\n\telse if(name[i]<'a'&&type=='D'){\n\t  out+='_';\n\t  out+=name[i]-'A'+'a';\n\t}else out+=name[i];\n      }\n    }\n    if(type=='L'&&flag==0) out[0]=out[0]-'a'+'A';\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int len,i,flag;\n  string str,out;\n  char type;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> str >> type;\n    len=str.size();\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]>='a') out+=str[i]-'a'+'A';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]=='_'||str[i]<'a') flag=1;\n\t    if(str[i]=='_'){\n\t      out+=str[i+1]-'a'+'A';\n\t      i++;\n\t    }else out+=str[i];\n\t  }\n\t}\n\t//\tif(flag==0) out[0]=out[0]-'a'+'A';\n      }\n      else if(type=='D'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]<'a'){\n\t      out+='_';\n\t      out+=str[i]-'A'+'a';\n\t    }else out+=str[i];\n\t  }\n\t}\n      }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int len,i,flag;\n  string str,out;\n  char type;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> str >> type;\n    len=str.size();\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]>='a') out+=str[i]-'a'+'A';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]=='_') flag=1;\n\t    if(str[i]<'a') flag=1;\n\t    if(str[i]=='_'){\n\t      out+=str[i+1]-'a'+'A';\n\t      i++;\n\t    }else out+=str[i];\n\t  }\n\t}\n\tif(flag==0) out[0]=out[0]-'a'+'A';\n      }\n      else if(type=='D'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\telse{\n\t  if(str[i]<'a'){\n\t    out+='_';\n\t    out+=str[i]-'A'+'a';\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\ntemplate<class t>\nusing table = vector<vector<t>>;\nconst ld eps = 1e-9;\n\n//// < \"d:\\d_download\\visual studio 2015\\projects\\programing_contest_c++\\debug\\a.txt\" > \"d:\\d_download\\visual studio 2015\\projects\\programing_contest_c++\\debug\\b.txt\"\nstruct ToUpper {\n\tchar operator()(char c) { return toupper(c); }\n};\nvector<string> split(const string &str, char delim) {\n\tvector<string> res;\n\tsize_t current = 0, found;\n\twhile ((found = str.find_first_of(delim, current)) != string::npos) {\n\t\tres.push_back(string(str, current, found - current));\n\t\tcurrent = found + 1;\n\t}\n\tres.push_back(string(str, current, str.size() - current));\n\treturn res;\n}\nint main() {\n\twhile (1) {\n\t\tstring st; cin >> st;\n\t\tchar c; cin >> c;\n\t\tif (c == 'X')break;\n\t\telse {\n\t\t\tvector<string>names(1);\n\t\t\tif (st.find('_') == string::npos) {\n\t\t\t\tint now = 0;\n\t\t\t\tfor (int i = 0; i < st.size(); ++i) {\n\t\t\t\t\tif (i&&st[i] >= 'A'&&'Z' >= st[i]) {\n\t\t\t\t\t\tnames.push_back(string());\n\t\t\t\t\t\tnow++;\n\t\t\t\t\t}\n\t\t\t\t\tnames[now].push_back(char(tolower(st[i])));\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnames = split(st, '_');\n\t\t\t}\n\t\t\tif (c == 'U') {\n\t\t\t\tfor (int i = 0; i < names.size(); ++i) {\n\t\t\t\t\tfor (int j = 0; j < names[i].size(); ++j) {\n\t\t\t\t\t\tif (j)cout << names[i][j];\n\t\t\t\t\t\telse cout << char(toupper(names[i][j]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t\telse if (c == 'L') {\n\t\t\t\tfor (int i = 0; i < names.size(); ++i) {\n\t\t\t\t\tfor (int j = 0; j < names[i].size(); ++j) {\n\t\t\t\t\t\tif (!i||j)cout << names[i][j];\n\t\t\t\t\t\telse cout << char(toupper(names[i][j]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor (int i = 0; i < names.size(); ++i) {\n\t\t\t\t\tfor (int j = 0; j < names[i].size(); ++j) {\n\t\t\t\t\t\tcout << names[i][j];\n\n\t\t\t\t\t}\n\t\t\t\t\tif (i == names.size() - 1)cout << endl;\n\t\t\t\t\telse cout << '_';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<algorithm>\n#include<functional>\nusing namespace std;\nbool C(char c){return isupper(c);}\nint main()\n{\n\tstring s;\n\tstring::iterator i;\n\tchar c;\n\tint x;\n\twhile(cin>>s>>c,c-'X')\n\t{\n\t\ts[0]=toupper(s[0]);\n\t\twhile(x=s.find('_'),x!=string::npos)\n\t\t\ts.erase(x,1),s[x]=toupper(s[x]);\n\t\tif(c-'U')s[0]=tolower(s[0]);\n\t\tif(c=='D')\n\t\t\tfor(i=s.begin();(i=find_if(i,s.end(),ptr_fun(C)))!=s.end();++i)\n\t\t\t\t*i=tolower(*i),s.insert(i,'_');\n\t\tcout<<s<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define r(i,n) for(int i=0;i<n;i++)\nusing namespace std;\nstring s,t;\nmain(){\n\twhile(cin>>s>>t,s!=\"EndOfInput\"){\n\t\tif(t==\"L\"){\n\t\t\tr(i,s.size())if(s[i]=='_')s[i+1]=s[i+1]-32;\n\t\t\tr(i,s.size())if(isalpha(s[i]))cout<<s[i];\n\t\t}\n\t\telse if(t==\"U\"){\n\t\t\ts[0]=s[0]-32;\n\t\t\tcout<<s;\n\t\t}\n\t\telse{\n\t\t\ts[0]=s[0]+32;\n\t\t\tr(i,s.size()){\n\t\t\t\tif(s[i]<='Z')cout<<'_'<<(char)(s[i]+32);\n\t\t\t\telse cout<<s[i];\n\t\t\t}\n\t\t}\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint dif='a'-'A';\nvoid outU( string &s ){\n  char c;\n  for(unsigned int i=0;i<s.size();i++ ){\n    c=s.at( i );\n    if( i==0 ) c-= dif;\n    cout << c;\n  }\n}\n\nint main(){\n  string name, type;\n  string names[100];\n  int nw;\n\n  while( true ){\n    cin >> name >> type;\n    //    cout << name << \",\" << type << endl;\n\n    if( type==\"X\" ) break;\n\n    for( int i=0;i<100;i++ )names[i]=\"\";\n\n    nw=0;\n    char c;\n    for( unsigned int i=0; i<name.size();i++ ){\n      c = name.at(i);\n      if( c== '_' ) nw++;\n      else if( c<='Z'){\n\tc+= dif;\n\tif( names[nw].size()!=0 ){\n\t  nw++; names[nw]=\"\";\n\t}\n\tnames[nw] += c;\n      }else\n\tnames[nw] += c;\n    }\n    if( c!='_' )\n      nw++;\n\n    //    cout << \"\\ndiv \"<<name<<endl;\n    // for( int i=0;i<nw;i++ )      cout << names[i] << endl;\n\n    if( type==\"D\" ){\n      int i;\n      for( i=0;i<nw-1;i++ )\n\tcout << names[i] << \"_\" ;\n      cout << names[i] << endl;\n    }else{\n      if( type==\"U\" ) // テつ湘つ嘉つづδ淌つづδ古つ陛つカテつ偲つ堙つ療δアテつづδ催つ陛δ湘つ甘つキ\n\toutU( names[0] );\n      else\n\tcout << names[0];\n      for( int i=1;i<nw;i++ )\n\toutU( names[i] );\n      cout << endl;\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nint main(){\n\tstring str;\n\tchar conv;\n\twhile(cin>>str){\n\t\tcin >> conv;\n\n\t\tif(conv == 'X') break;\n\t\t//under score\n\t\tif(count(str.begin(),str.end(),'_')){\n\t\t\tif(conv == 'L'){\n\t\t\t\t//str[0] = 'A' + (str[0]-'a');\n\t\t\t\tstring res=\"\";\n\t\t\t\tfor(int i=0;i+1<str.size();i++){\n\t\t\t\t\tif(str[i]=='_' && ('a' <= str[i+1] && str[i+1] <= 'z')){\n\t\t\t\t\t\tstr[i+1]='A'+(str[i+1]-'a');\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstring::iterator it = remove(str.begin(),str.end(),'_');\n\t\t\t\tstr.erase(it,str.end());\n\t\t\t}\n\t\t\telse if(conv == 'U'){\n\t\t\t\tstr[0] = 'A' + (str[0]-'a');\n\t\t\t\tfor(int i=0;i+1<str.size();i++){\n\t\t\t\t\tif(str[i]=='_' && ('a' <= str[i+1] && str[i+1] <= 'z')){\n\t\t\t\t\t\tstr[i+1]='A'+(str[i+1]-'a');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tremove(str.begin(),str.end(),'_');\n\t\t\t}\n\t\t}\n\t\t//Upper CamelCase\n\t\telse if('A' <= str[0] && str[0] <= 'Z'){\n\t\t\tif(conv == 'L'){\n\t\t\t\tstr[0] = 'a' + (str[0]-'A');\n\t\t\t}\n\t\t\telse if(conv == 'D'){\n\t\t\t\tstring res=\"\";\n\t\t\t\tstr[0] = 'a' + (str[0]-'A');\n\n\t\t\t\tres.push_back(str[0]);\n\t\t\t\tfor(int i=1;i<str.size();i++){\n\t\t\t\t\tif('A' <= str[i] && str[i] <= 'Z'){\n\t\t\t\t\t\tres.push_back('_');\n\t\t\t\t\t\tres.push_back('a' + (str[i]-'A'));\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tres.push_back(str[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstr = res;\n\t\t\t}\n\n\t\t}\n\t\t//Lower CamelCase\n\t\telse{\n\t\t\tif(conv == 'U'){\n\t\t\t\tstr[0] = 'A' + (str[0]-'a');\n\t\t\t}\n\t\t\telse if(conv == 'D'){\n\t\t\t\tstring res=\"\";\n\t\t\t\tstr[0] = 'a' + (str[0]-'a');\n\t\t\t\tres.push_back(str[0]);\n\t\t\t\tfor(int i=1;i<str.size();i++){\n\t\t\t\t\tif('A' <= str[i] && str[i] <= 'Z'){\n\t\t\t\t\t\tres.push_back('_');\n\t\t\t\t\t\tres.push_back('a' + str[i]-'A');\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tres.push_back(str[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr = res;\n\t\t\t}\n\t\t}\n\n\t\tcout << str << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nstring check(string str) {\n  string str2;\n  if('A'<=str[0] && str[0] <='Z') {\n    str2 +=  str[0] +32;\n    for(int i=1;i<str.size();i++) {\n      if('A' <=str[i] && str[i] <= 'Z') {\n\tstr2 += '_';\n\tstr2 += str[i] + 32;\n      }\n      else str2  += str[i];\n    }\n    return str2;\n  }\n\n  \n  for(int i=0;i<str.size();i++)\n    if(str[i] == '_') return str;\n\n  for(int i=0;i<str.size();i++) {\n    if('A'<=str[i] && str[i] <='Z') {\n      str2 += '_';\n      str2 += str[i] + 32;\n    }\n    else str2 += str[i];\n  }\n\n  return str2;\n\n}\n\nint main() {\n\n  while(1) {\n    string str;\n    cin >> str;\n    string ch;\n    cin >> ch;\n    if(ch == \"X\") break;\n    \n    str= check(str);\n    //    cout << str << endl;\n\n    if(ch == \"D\") cout << str;\n    \nelse if(ch == \"L\") {\n      cout << str[0];\n      for(int i=1;i<str.size();i++) {\n\tif(str[i] == '_') {\n\t  i++;\n\t  str[i] -= 32;\n\t  cout << str[i];\n\t}\n\telse cout << str[i];\n      }\n      cout << endl;\n    }\n    else if(ch == \"U\"){\n      str[0] -= 32;\n      cout << str[0];\n      for(int i=1;i<str.size();i++) {\n\tif(str[i] == '_') {\n\t  i++;\n\t  str[i] -= 32;\n\t  cout << str[i];\n\t}\n\telse {\n\t  cout << str[i];\n\t}\n      }\n      cout << endl;\n    }\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <set>\n#include <map>\n#include <string>\n#include <stack>\n#include <queue>\n#include <cmath>\n#include <cstdio>\n#include <istream>\n#include <sstream>\n#include <iomanip>\n#include <iterator>\n#include <climits>\nusing namespace std;\n\ntypedef ostringstream OSS;\ntypedef istringstream ISS;\n\ntypedef vector<int> VI;\ntypedef vector< VI > VVI;\n\ntypedef long long LL;\n\ntypedef pair<int, int> PII;\ntypedef vector<PII> VPII;\n\n#define X first\n#define Y second\n\nstring toUpperCamelCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += toupper(s[i]);\n\t\t} else if (s[i] == '_') {\n\t\t\tres += toupper(s[i] + 1);\n\t\t\ti++;\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nstring toLowerCamelCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += tolower(s[i]);\n\t\t} else if (s[i] == '_') {\n\t\t\tres += toupper(s[i + 1]);\n\t\t\ti++;\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nstring toSnakeCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += tolower(s[i]);\n\t\t} else if (isupper(s[i])) {\n\t\t\tres += '_';\n\t\t\tres += tolower(s[i]);\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nint main(void) {\n\tstring s;\n\tchar c;\n\n\twhile (true) {\n\t\tcin >> s >> c;\n\t\tif (c == 'X') break;\n\n\t\tswitch (c) {\n\t\t\tcase 'L':\n\t\t\t\ts = toLowerCamelCase(s);\n\t\t\t\tbreak;\n\t\t\tcase 'U':\n\t\t\t\ts = toUpperCamelCase(s);\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\ts = toSnakeCase(s);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcout << s << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntemplate <typename T>\nusing vec1 = vector<T>;\n\ntemplate <typename T>\nT cin2var()\n{\n    T val;\n    cin >> val;\n    return val;\n}\n\ntemplate <typename Iterator>\nstring Join(const Iterator& cbegin, const Iterator& cend, const string& delim = \"\")\n{\n    ostringstream os;\n    copy(cbegin, cend, ostream_iterator<string>(os, delim.c_str()));\n    string str(os.str());\n    if (!str.empty()) {\n        str.erase(str.size() - delim.size());\n    }\n    return str;\n}\n\nbool matchWordsByUS(const string& str, vec1<string>& words)\n{\n    int   start = 0;\n    regex ptn(\"_|$\");\n    for (sregex_iterator ite(str.cbegin(), str.cend(), ptn), end; ite != end; ++ite) {\n        auto&&     m(*ite);\n        const auto word(str.substr(start, m.position() - start));\n        if (str == word) break;\n        if (word.empty()) continue;\n        words.push_back(word);\n        start = m.position() + 1;  // マッチ箇所を含まない\n    }\n    return !words.empty();\n}\n\nbool matchWordsByCC(const string& str, vec1<string>& words)\n{\n    int   start = 0;\n    regex ptn(\"[A-Z]|$\");\n    for (sregex_iterator ite(str.cbegin(), str.cend(), ptn), end; ite != end; ++ite) {\n        auto&&     m(*ite);\n        const auto word(str.substr(start, m.position() - start));\n        if (word.empty()) continue;\n        words.push_back(word);\n        start = m.position();\n    }\n    return !words.empty();\n}\n\nvoid ConvUCC(vec1<string>& words)\n{\n    for (auto& word : words) {\n        char& c(word.front());\n        c = toupper(c);\n    }\n}\n\nvoid ConvLCC(vec1<string>& words)\n{\n    for (auto ite(words.begin()); ite != words.end(); ++ite) {\n        char& c(ite->front());\n        if (ite == words.begin()) {\n            c = tolower(c);\n        }\n        else {\n            c = toupper(c);\n        }\n    }\n}\n\nvoid ConvUS(vec1<string>& words)\n{\n    for (auto& word : words) {\n        char& c(word.front());\n        c = tolower(c);\n    }\n}\n\nint main()\n{\n    while (true) {\n        const auto N(cin2var<string>());\n        const auto T(cin2var<string>());\n        const char t(T.front());\n        if (t == 'X') break;\n        vec1<string> words;\n        matchWordsByUS(N, words) || matchWordsByCC(N, words);\n        switch (t) {\n        case 'U':\n            ConvUCC(words);\n            cout << Join(words.cbegin(), words.cend()) << endl;\n            break;\n        case 'L':\n            ConvLCC(words);\n            cout << Join(words.cbegin(), words.cend()) << endl;\n            break;\n        case 'D':\n            ConvUS(words);\n            cout << Join(words.cbegin(), words.cend(), \"_\") << endl;\n            break;\n        default:\n            break;\n        }\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<algorithm>\n\nusing namespace std;\n\nvoid UpperCamelCase(string&);\nvoid LowerCamelCase(string&);\nvoid UnderScoreCase(string&);\nbool IsUpperCase(char);\n\nint main(){\n  char c;\n  string str;\n\n  while(1){\n    cin >> str >> c;\n\n    if(c == 'X') break;\n    else if(c == 'U') UpperCamelCase(str);\n    else if(c == 'L') LowerCamelCase(str);\n    else if(c == 'D') UnderScoreCase(str);\n\n    cout << str << endl;\n  }\n\n  return 0;\n}\n\nvoid UpperCamelCase(string& s){\n  string::iterator i;\n\n  if(s[0] >= 'a' && s[0] <= 'z')\n    s[0] = toupper(s[0]);\n\n  i = s.begin();\n  while(1){\n    i = find(i, s.end(), '_');\n    if(i == s.end()) break;\n    i = s.erase(i);\n    *i = toupper(*i);\n  }\n}\n\nvoid LowerCamelCase(string& s){\n  string::iterator i;\n\n  if(s[0] >= 'A' && s[0] <= 'Z')\n    s[0] = tolower(s[0]);\n\n  i = s.begin();\n  while(1){\n    i = find(i, s.end(), '_');\n    if(i == s.end()) break;\n    i = s.erase(i);\n    *i = toupper(*i);\n  }\n}\n\nvoid UnderScoreCase(string& s){\n  string::iterator i;\n\n  if(s[0] >= 'A' && s[0] <= 'Z')\n    s[0] = tolower(s[0]);\n\n  i = s.begin();\n  while(1){\n    i = find_if(i, s.end(), IsUpperCase);\n    if(i == s.end()) break;\n    *i = tolower(*i);\n    i = s.insert(i, '_');\n    ++i;\n  }\n}\n\nbool IsUpperCase(char c){\n  if(c >= 'A' && c <= 'Z')\n    return true;\n  else\n    return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cctype>\n\nusing namespace std;\n\nint main(void) {\n  string s;\n  char c;\n  while(1) {\n    cin >> s >> c;\n    if(c == 'X') break;\n    switch(c) {\n    case 'U':\n      for(int i = 0; i < s.length(); i++) {\n\tif(i == 0) cout << (char)toupper(s[i]);\n\telse if(s[i] == '_') cout << (char)toupper(s[++i]);\n\telse cout << s[i];\n      }\n      break;\n    case 'L':\n      for(int i = 0; i < s.length(); i++) {\n\tif(i == 0) cout << (char)tolower(s[i]);\n\telse if(s[i] == '_') cout << (char)toupper(s[++i]);\n\telse cout << s[i];\n      }\n      break;\n    case 'D':\n      for(int i = 0; i < s.length(); i++) {\n\tif(i == 0) cout << (char)tolower(s[i]);\n\telse if(isupper(s[i])) cout << '_' << (char)tolower(s[i]);\n\telse cout << s[i];\n      }\n      break;\n    }\n    cout << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std ;\n\n#define pb(n) push_back(n)\n#define fi first\n#define se second\n#define all(r) (r).begin(),(r).end()\n#define vmax(ary) *max_element(all(ary))\n#define vmin(ary) *min_element(all(ary))\n#define debug(x) cout<<#x<<\": \"<<x<<endl\n#define fcout(n) cout<<fixed<<setprecision((n))\n#define scout(n) cout<<setw(n)\n#define vary(type,name,size,init) vector< type> name(size,init)\n#define vvl(v,w,h,init) vector<vector<ll>> v(w,vector<ll>(h,init))\n#define mp(a,b) make_pair(a,b)\n\n#define rep(i,n) for(int i = 0; i < (int)(n);++i)\n#define REP(i,a,b) for(int i = (a);i < (int)(b);++i)\n#define repi(it,array) for(auto it = array.begin(),end = array.end(); it != end;++it)\n#define repa(n,array) for(auto &n :(array))\n\nusing ll = long long;\nusing vi = vector<int>;\nusing vl = vector<ll>;\nusing dict = map<string,int>;\nusing pii = pair<int,int> ;\nusing pll = pair<ll,ll> ;\n\nconst int mod = 1000000007;\nconstexpr int inf = ((1<<30)-1)*2+1 ;\nconstexpr double PI = acos(-1.0) ;\ndouble eps = 1e-10 ;\nconst int dy[] = {-1,0,1,0,1,-1,1,-1};\nconst int dx[] = {0,-1,0,1,1,-1,-1,1};\n\ninline bool value(int x,int y,int w,int h){\n  return (x >= 0 && x < w && y >= 0 && y < h);\n}\n\ntemplate<typename T>\nvoid Unique(vector<T> &v){\n  sort(all(v));\n  v.erase(unique(all(v)),v.end());\n}\ntemplate<typename T,typename U>\nll FindErase(T &v,U tar){\n  ll cnt = 0;\n  for(auto it = v.begin(); it != v.end();){\n    if(*it == tar){\n      it = v.erase(it);\n      ++cnt;\n    }\n    else{\n      ++it;\n    }\n  }\n  return cnt;\n}\n\ntemplate<typename T>\nbool SuffixErase(T &v,size_t suf){\n  if(suf > v.size()) return false;\n  for(auto it = v.begin(); it != v.end();){\n    if(distance(v.begin(),it) == suf){\n      v.erase(it);\n      return true;\n    }\n    else{\n      ++it;\n    }\n  }\n  return false;\n}\n\nint main(){\n  cin.tie(0);\n  ios::sync_with_stdio(false);\n  string s;\n  char c;\n  while(cin >> s >> c && c != 'X'){\n    if(c != 'D'){\n      rep(i,s.size()){\n        if(s[i] == '_'){\n          s[i+1] = toupper(s[i+1]);\n        }\n      }\n      if(c == 'U'){\n        s[0] = toupper(s[0]);\n      }\n      else{\n        s[0] = tolower(s[0]);\n      }\n      FindErase(s,'_');\n    }\n    else{\n      string ans ;\n      rep(i,s.size()){\n        if(isupper(s[i]) && i != 0){\n          ans +=  \"_\";\n        }\n        ans += tolower(s[i]);\n      }\n      s = ans;\n    }\n    cout << s << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint dif='a'-'A';\nvoid outU( string &s ){\n  char c;\n  for(unsigned int i=0;i<s.size();i++ ){\n    c=s.at( i );\n    if( i==0 ) c-= dif;\n    cout << c;\n  }\n}\n\nint main(){\n  string name, type;\n  string names[100];\n  int nw;\n\n  while( true ){\n    cin >> name >> type;\n    //    cout << name << \",\" << type << endl;\n\n    if( type==\"X\" ) break;\n\n    for( int i=0;i<100;i++ )names[i]=\"\";\n\n    nw=0;\n    char c;\n    for( unsigned int i=0; i<name.size();i++ ){\n      c = name.at(i);\n      if( c== '_' ) nw++;\n      else if( c<='Z'){\n\tc+= dif;\n\tif( names[nw].size()!=0 ){\n\t  nw++; names[nw]=\"\";\n\t}\n\tnames[nw] += c;\n      }else\n\tnames[nw] += c;\n    }\n    if( c!='_' )\n      nw++;\n\n    //    cout << \"\\ndiv \"<<name<<endl;\n    // for( int i=0;i<nw;i++ )      cout << names[i] << endl;\n\n    if( type==\"D\" ){\n      int i;\n      for( i=0;i<nw-1;i++ )\n\tcout << names[i] << \"_\" ;\n      cout << names[i] << endl;\n    }else{\n      if( type==\"U\" ) // ツ渉可づ淞づ個閉カツ篠堋療アツづ債陛渉環キ\n\toutU( names[0] );\n      else\n\tcout << names[0];\n      for( int i=1;i<nw;i++ )\n\toutU( names[i] );\n      cout << endl;\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <cstring>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <fstream>\n#include <complex>\n#include <stack>\n#include <queue>\n\nusing namespace std;\ntypedef long long LL;\ntypedef pair<int, int> PII;\nstatic const double EPS = 1e-5;\n\n#define FOR(i,k,n) for (int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n\nint main(void){\n  string name,type;\n  while(cin>>name>>type){\n    if(type==\"X\") break;\n    if(type==\"D\"){\n      FOR(i,1,name.size()){\n        if(isupper(name[i])){\n          name.insert(i++,\"_\");\n        }\n      }\n      REP(i,name.size()) \n          name[i] = tolower(name[i]);\n      cout<<name<<endl;\n    }else{\n      REP(i,name.size()){\n        if(name[i]=='_'){\n          name[i+1] = toupper(name[i+1]);\n          name.erase(i,1);\n        }\n      }\n      if(type==\"U\"){\n        name[0] = toupper(name[0]);\n        cout<<name<<endl;\n      }else{\n        name[0] = tolower(name[0]);\n        cout<<name<<endl;\n      }\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\nusing namespace std;\n\nstring str;\nchar ch;\n\nvoid UCC(){\n  string s = \"\";\n  int size = str.size();\n\n  if('a' <= str[0] && str[0] <= 'z') s += (str[0]-32);\n  else s += str[0];\n\n  for(int i = 1 ; i < size ; i++){\n    if(str[i] == '_') continue;\n    \n    if(str[i-1] == '_'){\n      if('A' <= str[i] && str[i] <= 'Z'){\n\ts += (str[i]+32);\n      }\n      else s += str[i];\n\n      continue;      \n    }\n    s += str[i];\n  }\n\n  str = s;\n}\n\nvoid LCC(){\n  string s = \"\";\n  int size = str.size();\n\n  if('A' <= str[0] && str[0] <= 'Z') s += (str[0]-32);\n  else s += str[0];\n\n  for(int i = 1 ; i < size ; i++){\n    if(str[i] == '_') continue;\n\n    if(str[i-1] == '_'){\n      if('a' <= str[i] && str[i] <= 'z'){\n\ts += (str[i]-32);\n      }\n      else{\n\ts += str[i];\n      }\n\n      continue;      \n    }\n    s += str[i];\n  }\n\n  str = s;\n}\n\nvoid USC(){\n  string s = \"\";\n  int size = str.size();\n\n  for(int i = 0 ; i < size ; i++){\n    if('A' <= str[i] && str[i] <= 'Z'){\n      if(i == 0){\n\ts += (str[i]+32);\n      }else{\n\ts += '_';\n\ts += (str[i]+32);\n      }\n    }\n    else{\n      s += str[i];\n    }\n  }\n\n  str = s;\n}\n\nint main(){\n\n  while(true){\n    cin >> str >> ch;\n    \n    if(ch == 'X') break;\n\n    switch(ch){\n    case 'L':\n      LCC();\n      break;\n\n    case 'U':\n      UCC();\n      break;\n\n    case 'D':\n      USC();\n      break;\n    }\n\n    cout << str << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// includes\n#include <bits/stdc++.h>\n\n// macros\n#define ll long long int\n#define pb emplace_back\n#define mk make_pair\n#define pq priority_queue\n#define FOR(i, a, b) for(int i=(a);i<(b);++i)\n#define rep(i, n) FOR(i, 0, n)\n#define rrep(i, n) for(int i=((int)(n)-1);i>=0;i--)\n#define irep(itr, st) for(auto itr = (st).begin(); itr != (st).end(); ++itr)\n#define irrep(itr, st) for(auto itr = (st).rbegin(); itr != (st).rend(); ++itr)\n#define vrep(v, i) for(int i = 0; i < (v).size(); i++)\n#define all(x) (x).begin(),(x).end()\n#define sz(x) ((int)(x).size())\n#define UNIQUE(v) v.erase(unique(v.begin(), v.end()), v.end())\n#define FI first\n#define SE second\n#define dump(a, n) for(int i = 0; i < n; i++)cout << a[i] << \"\\n \"[i + 1 != n];\n#define dump2(a, n, m) for(int i = 0; i < n; i++)for(int j = 0; j < m; j++)cout << a[i][j] << \"\\n \"[j + 1 != m];\n#define bit(n) (1LL<<(n))\n#define INT(n) int n; cin >> n;\n#define LL(n) ll n; cin >> n;\n#define DOUBLE(n) double n; cin >> n;\nusing namespace std;\n\n//  types\ntypedef pair<int, int> P;\ntypedef pair<ll, int> Pl;\ntypedef pair<ll, ll> Pll;\ntypedef pair<double, double> Pd;\ntypedef complex<double> cd;\n \n// constants\nconst int inf = 1e9;\nconst ll linf = 1LL << 50;\nconst double EPS = 1e-10;\nconst int mod = 1e9 + 7;\nconst int dx[4] = {-1, 0, 1, 0};\nconst int dy[4] = {0, -1, 0, 1};\n\n// solve\ntemplate <class T>bool chmax(T &a, const T &b){if(a < b){a = b; return 1;} return 0;}\ntemplate <class T>bool chmin(T &a, const T &b){if(a > b){a = b; return 1;} return 0;}\ntemplate <typename T> istream &operator>>(istream &is, vector<T> &vec){for(auto &v: vec)is >> v; return is;}\ntemplate <typename T> ostream &operator<<(ostream &os, const vector<T>& vec){for(int i = 0; i < vec.size(); i++){ os << vec[i]; if(i + 1 != vec.size())os << \" \";} return os;}\ntemplate <typename T> ostream &operator<<(ostream &os, const set<T>& st){for(auto itr = st.begin(); itr != st.end(); ++itr){ os << *itr; auto titr = itr; if(++titr != st.end())os << \" \";} return os;}\ntemplate <typename T> ostream &operator<<(ostream &os, const unordered_set<T>& st){for(auto itr = st.begin(); itr != st.end(); ++itr){ os << *itr; auto titr = itr; if(++titr != st.end())os << \" \";} return os;}\ntemplate <typename T> ostream &operator<<(ostream &os, const multiset<T>& st){for(auto itr = st.begin(); itr != st.end(); ++itr){ os << *itr; auto titr = itr; if(++titr != st.end())os << \" \";} return os;}\ntemplate <typename T> ostream &operator<<(ostream &os, const unordered_multiset<T>& st){for(auto itr = st.begin(); itr != st.end(); ++itr){ os << *itr; auto titr = itr; if(++titr != st.end())os << \" \";} return os;}\ntemplate <typename T1, typename T2> ostream &operator<<(ostream &os, const pair<T1, T2> &p){os << p.first << \" \" << p.second; return os;}\ntemplate <typename T1, typename T2> ostream &operator<<(ostream &os, const map<T1, T2> &mp){for(auto itr = mp.begin(); itr != mp.end(); ++itr){ os << itr->first << \":\" << itr->second; auto titr = itr; if(++titr != mp.end())os << \" \"; } return os;}\ntemplate <typename T1, typename T2> ostream &operator<<(ostream &os, const unordered_map<T1, T2> &mp){for(auto itr = mp.begin(); itr != mp.end(); ++itr){ os << itr->first << \":\" << itr->second; auto titr = itr; if(++titr != mp.end())os << \" \"; } return os;}\n\n\nint main(int argc, char const* argv[])\n{\n  ios_base::sync_with_stdio(false);\n  cin.tie(0);\n  cout << fixed << setprecision(20);\n  string s;\n  char c;\n  while(true){\n  \tcin >> s >> c;\n  \tif(s == \"EndOfInput\" && c == 'X')break;\n  \tvector<string> v; string curr = \"\";\n  \tbool u = false;\n  \trep(i, sz(s)){\n  \t\tif('A' <= s[i] && s[i] <= 'Z')u = true;\n  \t}\n  \tif(u && 'A' <= s[0] && s[0] <= 'Z'){\n\t  \ts += 'X';\n  \t\trep(i, sz(s)){\n  \t\t\tif(i > 0 && 'A' <= s[i] && s[i] <= 'Z'){\n  \t\t\t\tv.pb(curr);\n  \t\t\t\tcurr = \"\";\n  \t\t\t}\n  \t\t\tcurr += s[i];\n  \t\t}\n  \t}else if(u){\n\t  \ts += 'X';\n  \t\trep(i, sz(s)){\n  \t\t\tif('A' <= s[i] && s[i] <= 'Z'){\n  \t\t\t\tv.pb(curr);\n  \t\t\t\tcurr = \"\";\n  \t\t\t}\n  \t\t\tcurr += s[i];\n  \t\t}\n  \t}else{\n  \t\ts += '_';\n  \t\trep(i, sz(s)){\n  \t\t\tif(s[i] == '_'){\n  \t\t\t\tv.pb(curr);\n  \t\t\t\tcurr = \"\";\n  \t\t\t}else curr += s[i];\n  \t\t}\n  \t}\n  \trep(i, sz(v)){\n  \t\tif('A' <= v[i][0] && v[i][0] <= 'Z'){\n\t\t\tv[i][0] = 'a' + v[i][0] - 'A';\n\t\t}\n  \t}\n  \tif(c == 'L'){\n  \t\trep(i, sz(v)){\n  \t\t\tif(i != 0)cout << char('A' + v[i][0] - 'a');\n  \t\t\telse cout << v[i][0];\n  \t\t\tFOR(j, 1, sz(v[i]))cout << v[i][j];\n  \t\t}\n  \t\tcout << endl;\n  \t}else if(c == 'U'){\n  \t\trep(i, sz(v)){\n  \t\t\tcout << char('A' + v[i][0] - 'a');\n  \t\t\tFOR(j, 1, sz(v[i]))cout << v[i][j];\n  \t\t}\n  \t\tcout << endl;\n  \t}else{\n  \t\trep(i, sz(v)){\n  \t\t\tcout << v[i];\n  \t\t\tif(i + 1 != sz(v))cout << \"_\";\n  \t\t}\n  \t\tcout << endl;\n  \t}\n  }\n  return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <cstring>\n#include <sstream>\n#include <cassert>\nusing namespace std;\nstatic const double EPS = 1e-5;\ntypedef long long ll;\ntypedef pair<int,int> PI;\n#define rep(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\n#define MP make_pair\n#define PB push_back\n\nstring str;\nchar type;\n\nvoid pr(int pos){\n  if(str[pos]=='_')return;\n  if(pos==0 || str[pos-1]=='_' || isupper(str[pos])){\n    switch(type){\n    case 'U':\n      cout<<(char)toupper(str[pos]);\n      break;\n    case 'L':\n      if(pos==0)cout<<(char)tolower(str[pos]);\n      else cout<<(char)toupper(str[pos]);\n      break;\n    case 'D':\n      if(pos==0)cout<<(char)tolower(str[pos]);\n      else cout<<\"_\"<<(char)tolower(str[pos]);\n      break;\n    }\n  }else{\n    cout<<str[pos];\n  }\n}\n\nmain(){\n  while(cin>>str){\n    cin>>type;\n    if(type=='X')break;\n    rep(i,str.size()){\n      pr(i);\n    }\n    cout<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nvoid solve()\n{\n\tstring s;\n\tchar c;\n\twhile(cin >> s >> c)\n\t{\n\t\tstring ans;\n\t\tif(c == 'X')\n\t\t{\n\t\t\tbreak;\n\t\t}\n\t\telse if(c == 'L')\n\t\t{\n\t\t\tif('A' <= s[0] && s[0] <= 'Z')\n\t\t\t{\n\t\t\t\tans += s[0] - 'A' + 'a';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans += s[0];\n\t\t\t}\n\t\t\tbool underbar_flag = false;\n\t\t\tfor(int i = 1; i < s.size(); ++i)\n\t\t\t{\n\t\t\t\tif(underbar_flag)\n\t\t\t\t{\n\t\t\t\t\tans += s[i] - 'a' + 'A';\n\t\t\t\t\tunderbar_flag = false;\n\t\t\t\t}\n\t\t\t\telse if(s[i] != '_')\n\t\t\t\t{\n\t\t\t\t\tans += s[i];\n\t\t\t\t}\n\t\t\t\telse if(s[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tunderbar_flag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(c == 'U')\n\t\t{\n\t\t\tif('a' <= s[0] && s[0] <= 'z')\n\t\t\t{\n\t\t\t\tans += s[0] - 'a' + 'A';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans += s[0];\n\t\t\t}\n\t\t\tbool underbar_flag = false;\n\t\t\tfor(int i = 1; i < s.size(); ++i)\n\t\t\t{\n\t\t\t\tif(underbar_flag)\n\t\t\t\t{\n\t\t\t\t\tans += s[i] - 'a' + 'A';\n\t\t\t\t\tunderbar_flag = false;\n\t\t\t\t}\n\t\t\t\telse if(s[i] != '_')\n\t\t\t\t{\n\t\t\t\t\tans += s[i];\n\t\t\t\t}\n\t\t\t\telse if(s[i] == '_')\n\t\t\t\t{\n\t\t\t\t\tunderbar_flag = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(c == 'D')\n\t\t{\n\t\t\tif('A' <= s[0] && s[0] <= 'Z')\n\t\t\t{\n\t\t\t\tans += s[0] - 'A' + 'a';\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tans += s[0];\n\t\t\t}\n\t\t\tfor(int i = 1; i < s.size(); ++i)\n\t\t\t{\n\t\t\t\tif('A' <= s[i] && s[i] <= 'Z')\n\t\t\t\t{\n\t\t\t\t\tans += '_';\n\t\t\t\t\tans += s[i] - 'A' + 'a';\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tans += s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}\n\nint main()\n{\n\tsolve();\n\treturn(0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <stdio.h>\n#include <ctype.h>\n#include <vector>\nusing namespace std;\n\nint main(){\n  vector < char > ch;\n  vector < char > order;\n  vector < char > ans;\n  char odr,D,U,L,_;\n  char moji;\n  string str;\n  int i,j,len,len2;\n  int flag,p = 0;\n  while(1){\n    ans.clear();\n    order.clear();\n    \n    cin >> str >> odr ;\n    if( str == \"EndOfInput\" && odr == 'X' ) break;\n    int l = str.size();\n    flag = 0;\n    for( i = 0; i < l; i++ ){\n      if( str[i] == '_' ) flag = 1;\n    }\n  \n    \n    if( islower( str[0] ) &&  flag == 1 ) order.push_back('D');\n    else if( isupper( str[0] ) ) order.push_back('U');\n    else if( islower( str[0] ) ) order.push_back('L');\n\n    for( i = 0; i < l; i++ ) ch.push_back( str[i] );\n    \n    order.push_back(odr);\n    \n    for( i = 0; i < l; i++ ){\n      if( order[p] == 'U' && order[p+1] == 'U' )ans.push_back( str[i] );\n\n      \n      if( order[p] == 'U' && order[p+1] == 'L' ){\n\tif( i == 0 ) ans.push_back( tolower(str[0]) );\n\telse ans.push_back( str[i] );\n      }\n\n      if( order[p] == 'U' && order[p+1] == 'D' ){\n\tif( i == 0 ) ans.push_back( tolower(str[0]) );\n\telse if( isupper( str[i+1] ) ){\n\t  ans.push_back( str[i] );\n\t  ans.push_back('_');\n\t  ans.push_back( tolower( str[i+1] ) );\n\t  i++;\n\t}else ans.push_back( str[i] );\n\n      }\n\n      if( order[p] == 'L' && order[p+1] == 'U' ){\n\tif( i == 0 ) ans.push_back( toupper(str[0]) );\n\telse ans.push_back( str[i] );\n      }\n\n      if( order[p] == 'L' && order[p+1] == 'L' )ans.push_back( str[i] );\n\n\n      if( order[p] == 'L' && order[p+1] == 'D' ){\n\tif( isupper( str[i+1] ) ){\n\t  ans.push_back( str[i] );\n\t  ans.push_back('_');\n\t  ans.push_back( tolower( str[i+1] ) );\n\t  i++;\n\t}else ans.push_back( str[i] );\n      }\n\n      if( order[p] == 'D' && order[p+1] == 'U' ){\n\tif( i == 0 ){\n\t  ans.push_back( toupper( str[0]) );\n\t}else{\n\tif( str[i] == '_' ){\n\t  ans.push_back( toupper(str[i+1]) );\n\t  i++;\n\t}else ans.push_back( str[i] );\n\t}\n      }\n      if( order[p] == 'D' && order[p+1] == 'L' ){\n\tif( str[i] == '_' ){\n\t  ans.push_back( toupper(str[i+1]) );\n\t  i++;\n\t}\n\telse ans.push_back( str[i] );\n      }\n\n      if ( order[p] == 'D' && order[p+1] == 'D' )ans.push_back( str[i] );\n    }\n \n    len2 = ans.size();\n   \n    for( i = 0; i < len2; i++ ) cout << ans[i];\n    cout << endl;\n   \n    \n  }\n  \n  return 0;\n    }\n    \n    "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<cstdio>\n#include<cctype>\nusing namespace std;\n\n\n\nint main(){\n  string name;\n  char type,pre_type;\n\n  while(true){\n    cin >> name >> type;\n    if(type == 'X')break;\n    for(int i=0;i<name.size();i++){\n      if(type == 'U'){\n\tif(i == 0){\n\t  cout << (char)toupper(name[i]);\n\t  continue;\n\t}\n\tif(name[i] == '_'){\n\t  name[i+1] = toupper(name[i+1]);\n\t  continue;\n\t}\n\tcout << name[i];\n      }\n      else if(type == 'L'){\n\tif(i == 0){\n\t  cout << (char)tolower(name[i]);\n\t  continue;\n\t}\n\tif(name[i] == '_'){\n\t  name[i+1] = (char)toupper(name[i+1]);\n\t  continue;\n\t}\n\tcout << name[i];\n      }\n      else if(type == 'D'){\n\tif(i == 0){\n\t  cout << (char)tolower(name[i]);\n\t  continue;\n\t}\n\tif(isupper(name[i])){\n\t  cout << \"_\" << (char)tolower(name[i]);\n\t  continue;\n\t}\n\tcout << name[i];\n      }\n    }\n\n  cout << endl;\n\n\n  }\n\n\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n\nusing namespace std;\n\nint main(void){\n  string str;\n  char c;\n  while(cin >> str >> c){\n    int t;\n    vector<string> v;\n    string buf = \"\";\n    if(c == 'X')break;\n    if('A' <= str[0] && str[0] <= 'Z'){\n      //upper camel case\n      for(int j=0;j<str.size();j++){\n\tif('A' <= str[j] && str[j] <= 'Z'){\n\t  if(j!=0)v.push_back(buf);\n\t  buf = \"\";\n\t  buf += str[j] - 'A' + 'a';\n\t}else{\n\t  buf += str[j];\n\t}\n      }\n      v.push_back(buf);\n    }else{\n      for(int i=0;i<str.size();i++){\n\tif(str[i] == '_'){\n\t  //snake case\n\t  for(int j=0;j<str.size();j++){\n\t    if(str[j] == '_'){\n\t      v.push_back(buf);\n\t      buf = \"\";\n\t    }else{\n\t      buf += str[j];\n\t    }\n\t  }\n\t  v.push_back(buf);\n\t  break;\n\t}else if('A' <= str[i] && str[i] <= 'Z'){\n\t  //lower cames case\n\t  for(int j=0;j<str.size();j++){\n\t    if('A' <= str[j] && str[j] <= 'Z'){\n\t      if(j!=0)v.push_back(buf);\n\t      buf = \"\";\n\t      buf += str[j] - 'A' + 'a';\n\t    }else{\n\t      buf += str[j];\n\t    }\n\t  }\n\t  v.push_back(buf);\n\t  break;\n\t}\n      }\n    }\n    //convert\n    if(c == 'L'){\n      for(int i=0;i<v.size();i++){\n\tif(i==0){\n\t  cout << v[i];\n\t}else{\n\t  v[i][0] -= 'a' - 'A';\n\t  cout << v[i];\n\t}\n      }\n    }else if(c == 'U'){\n      for(int i=0;i<v.size();i++){\n\tv[i][0] -= 'a' - 'A';\n\tcout << v[i];\n      }\n    }else{\n      for(int i=0;i<v.size();i++){\n\tcout << v[i];\n\tif(i != v.size()-1) cout << \"_\";\n      }\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <cstdlib>\nusing namespace std;\n\nvector<string> tokenize(string s) {\n    vector<string> ret;\n    int beg = 0;\n    for(int i=1; i<s.length(); ++i) {\n        if(s[i] == '_') {\n            ret.push_back(s.substr(beg,i-beg));\n            beg = i+1;\n        }\n        if(s[i] <= 'Z' && s[i] >= 'A') {\n            ret.push_back(s.substr(beg,i-beg));\n            beg = i;\n        }\n    }\n    if(beg < s.length()) ret.push_back(s.substr(beg));\n    return ret;\n}\n\nstring toL(vector<string> sv) {\n    string ret;\n    sv[0][0] = tolower(sv[0][0]);\n    ret += sv[0];\n    for(int i=1; i<sv.size(); ++i) {\n        sv[i][0] = toupper(sv[i][0]);\n        ret += sv[i];\n    }\n    return ret;\n}\n\nstring toU(vector<string> sv) {\n    string ret;\n    for(int i=0; i<sv.size(); ++i) {\n        sv[i][0] = toupper(sv[i][0]);\n        ret += sv[i];\n    }\n    return ret;\n}\n\nstring toD(vector<string> sv) {\n    string ret;\n    sv[0][0] =  tolower(sv[0][0]);\n    ret += sv[0];\n    for(int i=1; i<sv.size(); ++i) {\n        ret += \"_\";\n        sv[i][0] = tolower(sv[i][0]);\n        ret += sv[i];\n    }\n    return ret;\n}\n\nint main() {\n    string input,op;\n    while(cin>>input>>op) {\n        if(op == \"X\") break;\n        vector<string> tokens;\n        tokens = tokenize(input);\n        if(op == \"U\") cout<<toU(tokens)<<endl;\n        else if(op == \"L\") cout<<toL(tokens)<<endl;\n        else if(op == \"D\") cout<<toD(tokens)<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int strlen,i,j,flag[101];\n  char type;\n  string str,strout,temp;\n  while(1){\n    for(i=0;i<101;i++) flag[i]=0;\n    cin >> str >> type;\n    strlen=str.size();\n    strout=\"\";\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<strlen;i++){\n\tif(i==0) strout+=str[i]-'a'+'A';\n\tif(str[i]=='_') str[i+1]=str[i+1]-'a'+'A';\n\tif(str[i]!='_'&&i>0){\n\t  strout+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n      for(i=0;i<strlen;i++){\n\tif(i==0){\n\t  if(str[i]<'a'){\n\t    strout+=str[i]-'A'+'a';\n\t  }\n\t  else{\n\t    strout+=str[i];\n\t  }\n\t}\n\telse{\n\t  if(str[i]=='_') str[i+1]=str[i+1]-'a'+'A';\n\t  else{\n\t    strout+=str[i];\n\t  }\n\t}\n      }\n    }else{\n      for(i=0;i<strlen;i++){\n\tif(i!=0&&str[i]<'a'){\n\t  flag[i]=1;\n\t}\n      }\n      for(i=0;i<strlen;i++){\n\tif(flag[i]==1){\n\t  strout+='_';\n\t}\n\tif(str[i]<'a'){\n\t  strout+=str[i]-'A'+'a';\n\t}\n\telse{\n\t  strout+=str[i];\n\t}\n      }\n    }\n    cout << strout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\nusing namespace std;\n\nint main(){\n  int i=0;\n  string s,t;\n  for(;cin >> s >> t,t!=\"X\";){\n  if(find(s.begin(),s.end(),'_')!=s.end()){\n    for(i=0;i<s.length();i++)\n      if(s[i]=='_'){\n        if(s[i+1]=='_'||s[i+1]==0){cout << \"Error!\" << endl;return 0;}\n        s.erase(i,1),s[i]-=0x20;\n      }\n    if(t==\"U\")s[0]-=0x20;\n    cout << s << endl;\n  }else{\n    if(t==\"U\")s[0]-=0x20;\n    else if(t==\"L\")s[0]+=0x20;\n    else for(i=0;i<s.length();i++)\n      if(between('A',s[i],'Z')){\n        if(i)s.insert(i,1,'_');\n        s[++i]+=0x20;\n      }\n    cout << s << endl;\n  }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "while true do\n  identifier, role = gets.chomp.split(' ')\n  break if role == 'X'\n\n  words = Array.new\n  if identifier[0] =~ /[A-Z]/ then\n    words = identifier.scan(/[A-Z][a-z]*/).map {|x| x.downcase }\n  elsif identifier.include? '_' then\n    words = identifier.split '_'\n  else\n    words = identifier.scan(/(?:^[a-z]*)|(?:[A-Z][a-z]*)/).map {|x| x.downcase }\n  end\n\n  if role == 'U'\n    puts words.map {|x| x.capitalize }.join\n  elsif role == 'L'\n    print words.shift\n    puts words.map {|x| x.capitalize }.join\n  elsif role == 'D'\n    puts words.join '_'\n  end\nend"
  },
  {
    "language": "C++",
    "code": "# include <bits/stdc++.h>\nusing namespace std;\nusing LL = long long;\nusing ULL = unsigned long long;\nconst double PI = acos(-1);\ntemplate<class T>constexpr T INF() { return ::std::numeric_limits<T>::max(); }\ntemplate<class T>constexpr T HINF() { return INF<T>() / 2; }\ntemplate <typename T_char>T_char TL(T_char cX) { return tolower(cX); };\ntemplate <typename T_char>T_char TU(T_char cX) { return toupper(cX); };\ntemplate<typename T>vector<T> make_v(size_t a){ return vector<T>(a); }\ntemplate<typename T,typename... Ts>auto make_v(size_t a, Ts... ts){ return vector<decltype(make_v<T>(ts...))>(a,make_v<T>(ts...)); }\ntemplate<typename T,typename V>typename enable_if<is_class<T>::value==0>::type fill_v(T &t, const V &v){ t = v; }\ntemplate<typename T,typename V>typename enable_if<is_class<T>::value!=0>::type fill_v(T &t, const V &v){ for(auto &e : t) fill_v(e, v); }\nconst int vy[] = { -1, -1, -1, 0, 1, 1, 1, 0 }, vx[] = { -1, 0, 1, 1, 1, 0, -1, -1 };\nconst int dx[4] = { 0,1,0,-1 }, dy[4] = { 1,0,-1,0 };\nint popcnt(unsigned long long n) { int cnt = 0; for (int i = 0; i < 64; i++)if ((n >> i) & 1)cnt++; return cnt; }\nint d_sum(LL n) { int ret = 0; while (n > 0) { ret += n % 10; n /= 10; }return ret; }\nint d_cnt(LL n) { int ret = 0; while (n > 0) { ret++; n /= 10; }return ret; }\nLL gcd(LL a, LL b) { if (b == 0)return a; return gcd(b, a%b); };\nLL lcm(LL a, LL b) { LL g = gcd(a, b); return a / g*b; };\n# define ALL(qpqpq)           (qpqpq).begin(),(qpqpq).end()\n# define UNIQUE(wpwpw)        sort(ALL((wpwpw)));(wpwpw).erase(unique(ALL((wpwpw))),(wpwpw).end())\n# define LOWER(epepe)         transform(ALL((epepe)),(epepe).begin(),TL<char>)\n# define UPPER(rprpr)         transform(ALL((rprpr)),(rprpr).begin(),TU<char>)\n# define FOR(i,tptpt,ypypy)   for(LL i=(tptpt);i<(ypypy);i++)\n# define REP(i,upupu)         FOR(i,0,upupu)\n# define INIT                 std::ios::sync_with_stdio(false);std::cin.tie(0)\n\nstring s;\nchar c;\n\nbool isLower(char x){\n    if('a' <= x && x <= 'z')return true;\n    return false;\n}\n\nchar toUpper(char x){\n    return (char)(x - 32);\n}\n\nchar toLower(char x){\n    return (char)(x + 32);\n}\n\nstring fL(string t){\n    string ret = \"\";\n    REP(i, (int)t.size()){\n        if(0 < i && t[i - 1] == '_'){\n            ret = ret + toUpper(t[i]);\n        }\n        else if(t[i] != '_')ret = ret + t[i];\n    }\n    if(!isLower(ret[0])){\n        ret[0] = tolower(ret[0]);\n    }\n    return ret;\n}\n\nstring fU(string t){\n    string ret = \"\";\n    REP(i, (int)t.size()){\n        if(0 < i && t[i - 1] == '_'){\n            ret = ret + toUpper(t[i]);\n        }\n        else if(t[i] != '_')ret = ret + t[i];\n    }\n    if(isLower(ret[0])){\n        ret[0] = toUpper(ret[0]);\n    }\n    return ret;\n}\n\nstring fD(string t){\n    string ret = \"\";\n    if(!isLower(t[0])){\n        t[0] = tolower(t[0]);\n    }\n    REP(i, (int)t.size()){\n        if(!isLower((char)(t[i]))){\n            ret = ret + (string)(\"_\");\n            if(!isLower(t[i])){\n                t[i] = toLower(t[i]);\n            }\n        }\n        ret = ret + t[i];\n    }\n    if(!isLower(ret[0])){\n        ret[0] = tolower(ret[0]);\n    }\n    return ret;\n}\n\nint main(){\n    while(cin >> s >> c && c != 'X'){\n        if(c == 'U'){\n            cout << fU(s) << endl;\n        }else if(c == 'L'){\n            cout << fL(s) << endl;\n        }else{\n            bool flg = false;\n            REP(i, (int)s.size()){\n                if(s[i] == '_'){\n                    flg = true;\n                }\n            }\n            if(flg)cout << s << endl;\n            else cout << fD(s) << endl;\n        }\n    }\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std ;\n\nstring s ;\nchar ans[200] ;\n\nint main(){\n\t\n\tchar t ;\n\t\n\twhile( cin >> s >> t ){\n\t\tif( t == 'X' ) break ;\n\t\t\n\t\tint p = 1 ;\n\t\t\n\t\tif( s[0] <= 90 && t != 'U' ) ans[0] = s[0] +32 ;\n\t\telse if( s[0] >= 97 && t == 'U' ) ans[0] = s[0] -32 ;\n\t\telse ans[0] = s[0] ;\n\t\tfor( int i=1 ; i<s.size() ; i++ ){\n\t\t\tif( s[i] == '_' && t != 'D' ){\n\t\t\t\tans[p] = s[i+1] -32 ;\n\t\t\t\ti++ ;\n\t\t\t}\n\t\t\telse if( s[i] <= 90 && t == 'D' ){\n\t\t\t\tans[p] = '_' ;\n\t\t\t\tans[p+1] = s[i] +32 ;\n\t\t\t\tp++ ;\n\t\t\t} else ans[p] = s[i] ;\n\t\t\t\n\t\t\tp++ ;\n\t\t}\n\t\t\n\t\tfor( int i=0 ; i<p ; i++ ){\n\t\t\tcout << ans[i] ;\n\t\t}cout << endl ;\n\t}\n\t\nreturn 0 ;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nstring UOP(string str){\n  string ans;\n  if('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n  for(int i = 0 ; i < str.size() ; i++){\n    if(str[i] == '_'){\n      if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n    }\n    else ans += str[i];\n  }\n  return ans;\n}\n\nstring LOP(string str){\n  string ans;\n  if('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n  for(int i = 0 ; i < str.size() ; i++){\n    if(str[i] == '_'){\n      if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n    }\n    else ans += str[i];\n  }\n  return ans;\n}\n\nstring DOP(string str){\n  string ans;\n  for(int i = 0 ; i < str.size() ; i++){\n    if('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n    ans += str[i];\n    if('A' <= str[i+1] && str[i+1] <= 'Z') ans += '_';\n  }\n  return ans;\n}\n\nint main(){\n  string str;\n  char op;\n  while(cin >> str >> op, op != 'X'){\n    if(op == 'U'){\n      cout << UOP(str) << endl;\n    }\n    else if(op == 'L'){\n      cout << LOP(str) << endl;\n    }\n    else if(op == 'D'){\n      cout << DOP(str) << endl;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<algorithm>\n#include<functional>\nusing namespace std;\nbool C(char c){return isupper(c);}\nint main()\n{\n\tstring s;\n\tstring::iterator i;\n\tchar c;\n\tint x;\n\twhile(cin>>s>>c,c-'X')\n\t{\n\t\ts[0]=toupper(s[0]);\n\t\twhile(x=s.find('_'),x!=string::npos)\n\t\t\ts.erase(x,1),s[x]=toupper(s[x]);\n\t\tif(c-'U')s[0]=tolower(s[0]);\n\t\tif(c=='D')\n\t\t\tfor(i=s.begin();(i=find_if(i,s.end(),ptr_fun(C)))!=s.end();++i)\n\t\t\t\t*i=tolower(*i),i=s.insert(i,'_');\n\t\tcout<<s<<endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <set>\n#include <map>\n#include <string>\n#include <stack>\n#include <queue>\n#include <cmath>\n#include <cstdio>\n#include <istream>\n#include <sstream>\n#include <iomanip>\n#include <iterator>\n#include <climits>\nusing namespace std;\n\ntypedef ostringstream OSS;\ntypedef istringstream ISS;\n\ntypedef vector<int> VI;\ntypedef vector< VI > VVI;\n\ntypedef long long LL;\n\ntypedef pair<int, int> PII;\ntypedef vector<PII> VPII;\n\n#define X first\n#define Y second\n\nstring toUpperCamelCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += toupper(s[i]);\n\t\t} else if (s[i] == '_') {\n\t\t\tres += toupper(s[i] + 1);\n\t\t\ti++;\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nstring toLowerCamelCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += tolower(s[i]);\n\t\t} else if (s[i] == '_') {\n\t\t\tres += toupper(s[i + 1]);\n\t\t\ti++;\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nstring toSnakeCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += tolower(s[i]);\n\t\t} else if (isupper(s[i])) {\n\t\t\tres += '_';\n\t\t\tres += tolower(s[i]);\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nint main(void) {\n\tstring s;\n\tchar c;\n\n\twhile (true) {\n\t\tcin >> s >> c;\n\t\tif (c == 'X') break;\n\n\t\tswitch (c) {\n\t\t\tcase 'L':\n\t\t\t\ts = toLowerCamelCase(s);\n\t\t\t\tbreak;\n\t\t\tcase 'U':\n\t\t\t\ts = toUpperCamelCase(s);\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\ts = toSnakeCase(s);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcout << s << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cmath>\n#include <cstdio>\n#include <functional>\n#include <numeric>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <utility>\n#include <sstream>\n#include <complex>\n#include <fstream>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(long long i=(a);i<(b);i++)\n#define REP(i,N) for(long long i=0;i<(N);i++)\n#define ALL(s) (s).begin(),(s).end()\n#define fi first\n#define se second\n\n#define PI acos(-1.0)\n#define INF 10e15+9\n#define EPS 1e-10\n#define MAX_N 100100\n#define MAX_M 100100\n\ntypedef long long ll;\ntypedef pair<ll, ll> P;\ntypedef pair<double, double> PD;\ntypedef pair<string, ll> PS;\ntypedef vector<ll> V;\ntypedef pair<P, char> PC;\n\nstring s;\nchar type;\n\nint main(){\n\twhile (cin >> s >> type){\n\t\tstring ans = \"\";\n\t\tif (type == 'X')break;\n\t\tif (type == 'L'){\n\t\t\tREP(i, s.size()){\n\t\t\t\tif (i == 0)ans += tolower(s[i]);\n\t\t\t\telse {\n\t\t\t\t\tif (s[i] == '_'){\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tans += toupper(s[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse ans += s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (type == 'U'){\n\t\t\tREP(i, s.size()){\n\t\t\t\tif (i == 0)ans += toupper(s[i]);\n\t\t\t\telse{\n\t\t\t\t\tif (s[i] == '_'){\n\t\t\t\t\t\ti++;\n\t\t\t\t\t\tans += toupper(s[i]);\n\t\t\t\t\t}\n\t\t\t\t\telse ans += s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tREP(i, s.size()){\n\t\t\t\tif (i != 0 && s[i] >= 'A'&&s[i] <= 'Z')ans += '_';\n\t\t\t\tans += tolower(s[i]);\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<string>\n#include<vector>\nusing namespace std;\nint main() {\n\tstring s;\n\tchar get_type, to_type;\n\twhile (cin >> s >> to_type) {\n\t\tif (to_type == 'X')return 0;\n\t\tif ((int)s[0] < 95)get_type = 'U';\n\t\telse {\n\t\t\tget_type = 'L';\n\t\t\tfor (char i : s)if (i == '_')get_type = 'D';\n\t\t}\n\t\tif (get_type == to_type)cout << s << endl;\n\t\telse {\n\t\t\tfor (int i = 0; i < s.size(); i++) {\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tif (to_type == 'U')cout << (char)(s[0] - 32);\n\t\t\t\t\telse if (get_type != 'U')cout << s[0];\n\t\t\t\t\telse cout << (char)(s[0] + 32);\n\t\t\t\t}\n\t\t\t\telse if (s[i] == '_') {\n\t\t\t\t\ti++;\n\t\t\t\t\tcout << (char)(s[i] - 32);\n\t\t\t\t}\n\t\t\t\telse if (s[i] < 95 && to_type == 'D')cout << '_' << (char)(s[i] + 32);\n\t\t\t\telse cout << s[i];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint main(){\n  char S[101],s;\n  while(1){\n    scanf(\"%s %c\",S,&s);\n    if(s=='X') break;\n    else if(s=='L' || s=='U'){\n      for(int i=0,l=strlen(S);i<l;i++){\n\tif(s=='L'&&i==0&&S[i]>='A'&&S[i]<='Z'){\n\t  printf(\"%c\",S[i]-('A'-'a'));\n\t}else if(S[i]=='_' ||(s=='U'&&i==0&&S[i]>='a'&&S[i]<='z')){\n\t  if(i!=0)i++;\n\t  printf(\"%c\",S[i]+ ('A'-'a'));\n\t}else  printf(\"%c\",S[i]);\n      }\n    }else if(s=='D'){\n      if(S[0]>='A'&&S[0]<='Z')printf(\"%c\",S[0]-('A'-'a'));\n      else printf(\"%c\",S[0]);\n      for(int i=1,l=strlen(S);i<l;i++){\n\tif(S[i]>='A'&&S[i]<='Z'){\n\t  printf(\"_%c\",S[i]-('A'-'a'));\n\t}else{\n\t  printf(\"%c\",S[i]);\n\t}\n      }\n    }\n    puts(\"\");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\nusing namespace std;\n\nint main(){\n  int i=0;\n  string s,t;\n  for(;cin >> s >> t,t!=\"X\";){\n  if(find(s.begin(),s.end(),'_')!=s.end()){\n    for(i=0;i<s.length();i++)\n      if(s[i]=='_'){\n        if(s[i+1]=='_'||s[i+1]==0){cout << \"Error!\" << endl;return 0;}\n        s.erase(i,1),s[i]-=0x20;\n      }\n    if(t==\"U\")s[0]-=0x20;\n    cout << s << endl;\n  }else{\n    if(t==\"U\")s[0]-=0x20;\n    else s[0]+=0x20;\n    if(t==\"D\")\n      for(i=0;i<s.length();i++)\n        if(between('A',s[i],'Z'))s.insert(i,1,'_'),s[++i]+=0x20;\n    cout << s << endl;\n  }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\nvector<string> split(const string &s, char c = ' '){\n\tvector<string> ret;\n\tstringstream ss(s);\n\tstring t;\n\twhile(getline(ss,t,c)){\n\t\tret.pb(t);\n\t}\n\treturn ret;\n}\n\nvector<string> get_word(string s){\n\tvector<string> ret;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tfor(int j = i; j < s.size(); j++){\n\t\t\tif((s[j] >= 'A' && s[j] <= 'Z') || j == s.size() - 1){\n\t\t\t\tif(j == s.size() - 1) j++;\n\t\t\t\tret.push_back(s.substr(i, j - i));\n\t\t\t\ts[j] += 'a' - 'A';\n\t\t\t\ti = j - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nstring calc(string s, string t1, string t2){\n\tstring ret;\n\tif(t1 == \"U\"){\n\t\tif(t2 == \"L\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'a' - 'A';\n\t\t}\n\t\telse {\n\t\t\ts[0] += 'a' - 'A';\n\t\t\tvector<string> v = get_word(s);\n\t\t\t// cout<<\"  \";\n\t\t\t// for(int i = 0; i < v.size(); i++){\n\t\t\t// \tcout<<v[i];\n\t\t\t// }\n\t\t\t// cout<<endl;\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\t//s[0] += 'a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t}\n\telse if(t1 == \"L\"){\n\t\tif(t2 == \"U\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'A' - 'a';\n\t\t}\n\t\telse{\n\t\t\tvector<string> v = get_word(s);\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] +='a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tif(t2 == \"U\"){\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\tif(i != 0) s[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main(){\n\tstring s, t;\n\twhile(cin>>s>>t && t != \"X\"){\n\t\tif(s.find(\"_\") != string::npos) cout<<calc(s, \"D\", t);\n\t\telse if(s[0] >= 'A' && s[0] <= 'Z') cout<<calc(s, \"U\", t);\n\t\telse cout<<calc(s,\"L\", t);\n\t\tcout<<endl;\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n)for(int i=0;i<n;i++)\nusing namespace std;\n\nvoid func(string&s) {\n\tint d = 0;\n\twhile ((d = (int)s.find(\"_\", d)) >= 0)s[++d] = toupper(s[d]);\n\ts.erase(remove(s.begin(), s.end(), '_'), s.end());\n}\nint main() {\n\tstring s, m;\n\twhile (cin >> s >> m, m != \"X\") {\n\t\tif (m == \"U\") {\n\t\t\tfunc(s);\n\t\t\ts[0] = toupper(s[0]);\n\t\t}\n\t\tif (m == \"L\") {\n\t\t\tfunc(s);\n\t\t\ts[0] = tolower(s[0]);\n\t\t}\n\t\tif (m == \"D\") {\n\t\t\ts[0] = tolower(s[0]);\n\t\t\trep(i, s.size()) {\n\t\t\t\tif (isupper(s[i])) {\n\t\t\t\t\ts.insert(i, \"_\"); i++;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttransform(s.begin(), s.end(), s.begin(), ::tolower);\n\t\t}\n\t\tcout << s << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <vector>\n\nusing namespace std;\n\nint len;\n\nstring UpperCamelCase(vector<string> v){\n  string res = \"\";\n\n  for(int i = 0 ; i < len ; i++){\n    if(islower(v[i][0])){\n      v[i][0] = toupper(v[i][0]);\n    }\n    res += v[i];\n  }\n\n  return res;\n}\n\nstring LowerCamelCase(vector<string> v){\n  string res = v[0];\n\n  for(int i = 1 ; i < len ; i++){\n    if(islower(v[i][0])){\n      v[i][0] = toupper(v[i][0]);\n    }\n    res += v[i];\n  }\n\n  return res;\n}\n\nstring Under(vector<string> v){\n  string res = v[0];\n\n  for(int i = 1 ; i < len ; i++){\n    res += '_' + v[i];\n  }\n  \n  return res;\n}\n\nint main(){\n  string s;\n  char order;\n\n  while(cin >> s >> order, order != 'X'){\n    if(isupper(s[0])){\n      s[0] = tolower(s[0]);\n    }\n    s += '_';\n\n    vector<string> v;\n    int pos = 0;\n    len = (int)s.size();\n\n    for(int i = 0 ; i < len ; i++){\n      if(isupper(s[i])){\n\ts[i] = tolower(s[i]);\n\tv.push_back(s.substr(pos,i-pos));\n\tpos = i;\n      }else if(s[i] == '_'){\n\tv.push_back(s.substr(pos,i-pos));\n\tpos = i + 1;\n      }\n    }\n\n    len = (int)v.size();\n    \n    if(order == 'U'){\n      cout << UpperCamelCase(v) << endl;\n    }else if(order == 'L'){\n      cout << LowerCamelCase(v) << endl;\n    }else{\n      cout << Under(v) << endl;\n    }\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    string name;\n    char type;\n    string UP;\n    for (int i = 0; i < 26; i++) {\n        UP += 'A' + i;\n    }\n\n    while (cin >> name >> type) {\n        if (type == 'U') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            while (ss >> str) {\n                str[0] = str[0] - 'a' + 'A';\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'L') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            ss >> str;\n            cout << str;\n            while (ss >> str) {\n                str[0] = str[0] - 'a' + 'A';\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'D'){\n            for (int i = 0; i < name.size(); i++) {\n                if (UP.find(name[i]) != string::npos) {\n                    name[i] = name[i] - 'A' + 'a';\n                    name.insert(i, \" \");\n                }\n            }\n            stringstream ss;\n            ss << name;\n            string str;\n            ss >> str;\n            cout << str;\n            while (ss >> str) {\n                cout << \"_\" << str;\n            }\n            cout << endl;\n        } else {\n          break;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<cctype>\nusing namespace std;\n\nvector<string> split(string s){\n    vector<string> ret;\n    \n    string tmp = s.substr(0,1);\n    tmp[0] = tolower(tmp[0]);\n\n    for(int i = 1; i < s.length(); i++){\n        if(s[i] == '_'){\n            ret.push_back(tmp);\n            tmp = \"\";\n        }else if(isupper(s[i])){\n            ret.push_back(tmp);\n            tmp = s.substr(i, 1);\n            tmp[0] = tolower(tmp[0]);\n        }else{\n            tmp += s.substr(i,1);\n        }\n    }\n\n    if(tmp != \"\")   ret.push_back(tmp);\n    \n    return ret;\n}\n\nint main(){\n    string s;\n    char op;\n    while(cin >> s >> op){\n        if(op == 'X')   break;\n\n        vector<string> v = split(s);\n        int n = v.size();\n\n        if(op == 'L'){\n            cout << v[0];\n            for(int i = 1; i < n; i++){\n                v[i][0] = toupper(v[i][0]);\n                cout << v[i];\n            }\n            cout << endl;\n        }else if(op == 'U'){\n            for(int i = 0; i < n; i++){\n                v[i][0] = toupper(v[i][0]);\n                cout << v[i];\n            }\n            cout << endl;\n        }else if(op == 'D'){\n            for(int i = 0; i < n; i++){\n                cout << v[i] << \"_\\n\"[i == n-1];\n            }\n        }\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <stdio.h>\n#include <ctype.h>\n#include <vector>\nusing namespace std;\n\nint main(){\n  vector < char > ch;\n  vector < char > order;\n  vector < char > ans;\n  char odr,D,U,L,_;\n  char moji;\n  string str;\n  int i,j,len,len2;\n  int flag,p = 0;\n  while(1){\n    ans.clear();\n    order.clear();\n    \n    cin >> str >> odr ;\n    if( str == \"EndOfInput\" && odr == 'X' ) break;\n    int l = str.size();\n    flag = 0;\n    for( i = 0; i < l; i++ ){\n      if( str[i] == '_' ) flag = 1;\n    }\n  \n    \n    if( islower( str[0] ) &&  flag == 1 ) order.push_back('D');\n    else if( isupper( str[0] ) ) order.push_back('U');\n    else if( islower( str[0] ) ) order.push_back('L');\n\n    for( i = 0; i < l; i++ ) ch.push_back( str[i] );\n    \n    order.push_back(odr);\n\n    // int len3 = order.size();\n    //for( i = 0; i < len3; i++ ) cout << order[i] << \" \" ;\n    //cout << endl;\n\n    for( i = 0; i < l; i++ ){\n      if( order[p] == 'U' && order[p+1] == 'U' )ans.push_back( str[i] );\n\n      \n      if( order[p] == 'U' && order[p+1] == 'L' ){\n\tif( i == 0 ) ans.push_back( tolower(str[0]) );\n\telse ans.push_back( str[i] );\n      }\n\n      if( order[p] == 'U' && order[p+1] == 'D' ){\n\tif( i == 0 ) ans.push_back( tolower(str[0]) );\n\telse if( isupper( str[i+1] ) ){\n\t  ans.push_back( str[i] );\n\t  ans.push_back('_');\n\t  ans.push_back( tolower( str[i+1] ) );\n\t  i++;\n\t}else ans.push_back( str[i] );\n\n      }\n\n      if( order[p] == 'L' && order[p+1] == 'U' ){\n\tif( i == 0 ) ans.push_back( toupper(str[0]) );\n\telse ans.push_back( str[i] );\n      }\n\n      if( order[p] == 'L' && order[p+1] == 'L' )ans.push_back( str[i] );\n\n\n      if( order[p] == 'L' && order[p+1] == 'D' ){\n\tif( isupper( str[i+1] ) ){\n\t  ans.push_back( str[i] );\n\t  ans.push_back('_');\n\t  ans.push_back( tolower( str[i+1] ) );\n\t  i++;\n\t}else ans.push_back( str[i] );\n      }\n\n      if( order[p] == 'D' && order[p+1] == 'U' ){\n\tif( i == 0 ){\n\t  ans.push_back( toupper( str[0]) );\n\t}else{\n\tif( str[i] == '_' ){\n\t  ans.push_back( toupper(str[i+1]) );\n\t  i++;\n\t}else ans.push_back( str[i] );\n\t}\n      }\n      if( order[p] == 'D' && order[p+1] == 'L' ){\n\tif( str[i] == '_' ){\n\t  ans.push_back( toupper(str[i+1]) );\n\t  i++;\n\t}\n\telse ans.push_back( str[i] );\n      }\n\n      if ( order[p] == 'D' && order[p+1] == 'D' )ans.push_back( str[i] );\n    }\n \n    len2 = ans.size();\n   \n    for( i = 0; i < len2; i++ ) cout << ans[i];\n    cout << endl;\n   \n    \n  }\n  \n  return 0;\n    }\n    \n    "
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <ctype.h>\n#include <string.h>\n\nint main(void){\n\tint i;\n\tchar s[103], c;\n\twhile(1){\n\t\ti = 0;\n\t\twhile((s[i++] = getchar()) != '\\n');\n\t\ts[i - 1] = '\\0';\n\t\tc = s[strlen(s) - 1];\n\t\ts[strlen(s) - 2] = '\\0';\n\t\tif(c == 'X') break;\n\t\telse if(c == 'U'){\n\t\t\tprintf(\"%c\",isupper(s[0])?s[0]:'A' + s[0] - 'a');\n\t\t\tfor(i = 1;i < strlen(s);i++){\n\t\t\t\tif(s[i] == '_')\n\t\t\t\t\tprintf(\"%c\",'A' + s[++i] - 'a');\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%c\",s[i]);\n\t\t\t}\n\t\t}\n\t\telse if(c == 'L'){\n\t\t\tprintf(\"%c\",islower(s[0])?s[0]:'a' + s[0] - 'A');\n\t\t\tfor(i = 1;i < strlen(s);i++){\n\t\t\t\tif(s[i] == '_')\n\t\t\t\t\tprintf(\"%c\",'A' + s[++i] - 'a');\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%c\",s[i]);\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tprintf(\"%c\",islower(s[0])?s[0]:'a' + s[0] - 'A');\n\t\t\tfor(i = 1;i < strlen(s);i++){\n\t\t\t\tif(isupper(s[i]))\n\t\t\t\t\tprintf(\"_%c\",'a' + s[i] - 'A');\n\t\t\t\telse if(s[i] == '_')\n\t\t\t\t\tprintf(\"_%c\",s[++i]);\n\t\t\t\telse\n\t\t\t\t\tprintf(\"%c\",s[i]);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int strlen,i,j,flag[101];\n  char type;\n  string str,strout,temp;\n  while(1){\n    for(i=0;i<101;i++) flag[i]=0;\n    cin >> str >> type;\n    strlen=str.size();\n    strout=\"\";\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<strlen;i++){\n\tif(i==0) strout+=str[i]-'a'+'A';\n\tif(str[i]=='_') str[i+1]=str[i+1]-'a'+'A';\n\tif(str[i]!='_'&&i>0){\n\t  strout+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n      for(i=0;i<strlen;i++){\n\tif(i==0){\n\t  if(str[i]<'a'){\n\t    strout+=str[i]-'A'+'a';\n\t  }\n\t  else{\n\t    strout+=str[i];\n\t  }\n\t}\n\telse{\n\t  if(str[i]=='_') str[i+1]=str[i+1]-'a'+'A';\n\t  else{\n\t    strout+=str[i];\n\t  }\n\t}\n      }\n    }else{\n      for(i=0;i<strlen;i++){\n\tif(i!=0&&str[i]<'a'){\n\t  flag[i]=1;\n\t}\n      }\n      for(i=0;i<strlen;i++){\n\tif(flag[i]==1){\n\t  strout+='_';\n\t}\n\tif(str[i]<'a'){\n\t  strout+=str[i]-'A'+'a';\n\t}\n\telse{\n\t  strout+=str[i];\n\t}\n      }\n    }\n    cout << strout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int len,i,flag;\n  string str,out;\n  char type;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> str >> type;\n    len=str.size();\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]>='a') out+=str[i]-'a'+'A';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n      if(len==1){\n\tflag=1;\n\tif(str[0]>='a') out+=str[0]-'a'+'A';\n\telse out+=str[0]; \n      }\n      if(flag==0){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]=='_'){\n\t      out+=str[i+1]-'a'+'A';\n\t      i++;\n\t    }else out+=str[i];\n\t  }\n\t}\n      }\n    }\n    else if(type=='D'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\telse{\n\t  if(str[i]<'a'){\n\t    out+='_';\n\t    out+=str[i]-'A'+'a';\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n#define iota(i,n,b,s) for(int i=int(b);i!=int((b)+(s)*(n));i+=(s))\n#define range(i,n,m) iota(i,(((n)>(m))?((n)-(m)+1):((m)-(n)+1)),(n),((n)>(m)?-1:1))\n#define rep(i,n) iota(i,(n),0,1)\n\n#define INF (1e9)\n#define EPS (1e-9)\n#define cons(a,b) (make_pair(a,b))\n#define car(a) (a.first)\n#define cdr(a) (a.second)\n#define cadr(a) (car(cdr(a)))\n#define cddr(a) (cdr(cdr(a)))\n#define all(a) a.begin(), a.end()\n#define trace(var) cerr<<\">>> \"<<#var<<\" = \"<<var<<endl;\n\ntypedef long long Integer;\ntypedef double Real;\n\ntemplate<class S, class T>\nostream& operator<<(ostream& os, pair<S,T> p) {\n  os << '(' << car(p) << \", \" << cdr(p) << ')';\n  return os;\n}\n\ntemplate<class T>\nostream& operator<<(ostream& os, vector<T> v) {\n  os << v[0];\n  for (int i=1, len=v.size(); i<len; ++i) os << ' ' << v[i];\n  return os;\n}\n\nint dx[] = { -1, 0, 1, 0 };\nint dy[] = {  0, -1, 0, 1 };\n\ninline bool isD(string s) { return s.find('_') != string::npos; }\ninline bool isL(string s) { return !isD(s) && islower(s[0]); }\ninline bool isU(string s) { return !isD(s) && isupper(s[0]); }\n\nvector<string>\nsplitL(string s) {\n  vector<string> ret;\n  int idx = 0;\n  rep(i, s.size()) {\n    if (isupper(s[i])) {\n      string w = char(tolower(s[idx])) + s.substr(idx + 1, i - idx - 1);\n      ret.push_back(w);\n      idx = i;\n    }\n  }\n  string w = char(tolower(s[idx])) + s.substr(idx + 1, s.size() - idx - 1);\n  ret.push_back(w);\n  return ret;\n}\n\nvector<string>\nsplitU(string s) {\n  return splitL(char(tolower(s[0])) + s.substr(1, s.size() - 1));\n}\n\nvector<string>\nsplitD(string s) {\n  vector<string> ret;\n  int idx = 0;\n  rep(i, s.size()) {\n    if (s[i] == '_') {\n      ret.push_back(s.substr(idx, i - idx));\n      idx = i + 1;\n    }\n  }\n  ret.push_back(s.substr(idx, s.size() - idx));\n  return ret;\n}\n\nstring toL(vector<string>&v) {\n  string r = v[0];\n  for (int i=1; i < v.size(); ++i) {\n    r += char(toupper(v[i][0])) + v[i].substr(1, v[i].size() - 1);\n  }\n  return r;\n}\n\nstring toU(vector<string>&v) {\n  string r = \"\";\n  for (int i=0; i < v.size(); ++i) {\n    r += char(toupper(v[i][0])) + v[i].substr(1, v[i].size() - 1);\n  }\n  return r;\n}\n\nstring toD(vector<string>&v) {\n  string r = v[0];\n  for (int i=1; i < v.size(); ++i) {\n    r += \"_\" + v[i];\n  }\n  return r;\n}\n\nint main() {\n\nmore:\n  string s, t;\n  cin >> s >> t;\n  \n  if (t == \"X\") return 0;\n\n  vector<string> v;\n  if (isL(s)) {\n    v = splitL(s);\n  } else if (isU(s)) {\n    v = splitU(s);\n  } else if (isD(s)) {\n    v = splitD(s);\n  }\n\n  if (t == \"U\") {\n    cout << toU(v) << endl;\n  } else if (t == \"L\") {\n    cout << toL(v) << endl;\n  } else if (t == \"D\") {\n    cout << toD(v) << endl;\n  }\n\n  goto more;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\n\tstring str;\n\twhile(1){\n\t\tgetline(cin,str);\n\t\tstring name = str.substr(0,str.size()-2);\n\t\tchar type = str[str.size()-1];\n\t\tif(type=='L'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]-'a'+'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(type=='U'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tcout << (char)(name[0]-'a'+'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << name[0] << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(type=='D'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i]+'a'-'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]-'A'+'a') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i] - 'A'+'a') << flush;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t\t//cout<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<set>\n#include<string>\n#include<algorithm>\nusing namespace std;\nstring b[1000];\nint main() {\n\tstring a;\n\tchar s;\n\twhile (cin >> a >> s&&s != 'X') {\n\t\tbool l = false;\n\t\tfor (int i = 0; i < a.length(); i++) {\n\t\t\tif (a[i] == '_') {\n\t\t\t\tl = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tint sum = 0;\n\t\tstring h = \"\";\n\t\tif (l) {\n\t\t\ta += \"_\";\n\t\t\tfor (int i = 0; i < a.length(); i++) {\n\t\t\t\tif (a[i] == '_') {\n\t\t\t\t\tb[sum] = h;\n\t\t\t\t\tsum++;\n\t\t\t\t\th = \"\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\th += a[i];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (a[0] <= 'Z'&&a[0] >= 'A')\n\t\t\t\ta[0] = (char)(int)a[0] - (int)('A' - 'a');\n\t\t\ta += 'A';\n\t\t\tfor (int i = 0; i < a.length(); i++) {\n\t\t\t\tif (a[i] <= 'Z'&&a[i] >= 'A') {\n\t\t\t\t\tb[sum] = h;\n\t\t\t\t\tsum++;\n\t\t\t\t\th = \"\";\n\t\t\t\t\th += (char)((int)a[i] - (int)('A' - 'a'));\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\th += a[i];\n\t\t\t}\n\t\t}\n\t\tswitch (s) {\n\t\tcase 'D':\n\t\t\tfor (int i = 0; i < sum; i++) {\n\t\t\t\tif (i == 0) cout << b[i];\n\t\t\t\telse cout << \"_\" << b[i];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'U':\n\t\t\tfor (int i = 0; i < sum; i++) {\n\t\t\t\tb[i][0] += ('A' - 'a');\n\t\t\t\tcout << b[i];\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tfor (int i = 0; i < sum; i++) {\n\t\t\t\tif(i!=0) b[i][0] += ('A' - 'a');\n\t\t\t\tcout << b[i];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\nvector<string> split(const string &s, char c = ' '){\n\tvector<string> ret;\n\tstringstream ss(s);\n\tstring t;\n\twhile(getline(ss,t,c)){\n\t\tret.pb(t);\n\t}\n\treturn ret;\n}\n\nvector<string> get_word(string s){\n\tvector<string> ret;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tfor(int j = i; j < s.size(); j++){\n\t\t\tif((s[j] >= 'A' && s[j] <= 'Z') || j == s.size() - 1){\n\t\t\t\tret.push_back(s.substr(i, j - i));\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nstring calc(string s, string t1, string t2){\n\tstring ret;\n\tif(t1 == \"U\"){\n\t\tif(t2 == \"L\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'a' - 'A';\n\t\t}\n\t\telse {\n\t\t\ts[0] += 'a' - 'A';\n\t\t\tvector<string> v = get_word(s);\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] +='a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t}\n\telse if(t1 == \"L\"){\n\t\tif(t2 == \"U\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'A' - 'a';\n\t\t}\n\t\telse{\n\t\t\tvector<string> v = get_word(s);\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] +='a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tif(t2 == \"U\"){\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\tif(i != 0) s[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main(){\n\tstring s, t;\n\twhile(cin>>s>>t && t != \"X\"){\n\t\tif(s.find(\"_\") != string::npos) cout<<calc(s, \"D\", t);\n\t\telse if(s[0] >= 'A' && s[0] <= 'Z') cout<<calc(s, \"U\", t);\n\t\telse cout<<calc(s,\"L\", t);\n\t\tcout<<endl;\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  string str;\n  char S;\n  while(1){\n    cin>>str;\n    cin>>S;\n\n    if(S=='X') break;\n\n    else  if(S=='L'){\n      if(str[0]>='A' && str[0]<='Z') str[0]+=32;\n      for(int i=0;i<str.size()-1;i++){\n\tif(str[i]=='_' && str[i+1]>='a' && str[i+1]<='z' ) str[i+1]-=32;\n      }\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n    }\n    \n    else  if(S=='U') {\n      if(str[0]>='a' && str[0]<='z') str[0]-=32;\n    \n    for(int i=0;i<str.size()-1;i++){\n    if(str[i]=='_'&& str[i+1]>='a' && str[i+1]<='z') str[i+1]-=32;\n  }\n  for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n      \n    }\n    \n  else  if(S=='D'){\n    for(int i=0;i<str.size();i++){\n      if(str[i]>=65 && str[i]<=90){\n\tstr[i]+=32;\n      }\n      if(i>=0 && i<str.size()-1 && str[i+1]>=65 && str[i+1]<=90){\n\tcout<<str[i]<<\"_\";\n      }\n      else cout<<str[i];\n    }\n    cout<<endl;\n  }\n  }\n  return 0;\n  }"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint main() {\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\n\tfor(string name, type; cin >> name >> type && type != \"X\";) {\n\t\tstring ans = \"\";\n\t\tint prev = 0;\n\t\tfor(unsigned i = 0; i < name.size(); ++i) {\n\t\t\tif(name[i] == '_' || isupper(name[i])) {\n\t\t\t\tif(type == \"D\") {\n\t\t\t\t\tname[prev] = tolower(name[prev]);\n\t\t\t\t\tif(prev) ans += '_';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tname[prev] = toupper(name[prev]);\n\t\t\t\t}\n\n\t\t\t\tans += name.substr(prev, i - prev);\n\t\t\t\tprev = i;\n\t\t\t\tif(name[i] == '_') ++prev;\n\t\t\t}\n\t\t}\n\t\t\n\t\tif(type == \"D\") {\n\t\t\tname[prev] = tolower(name[prev]);\n\t\t\tif(prev) ans += '_';\n\t\t}\n\t\telse {\n\t\t\tname[prev] = toupper(name[prev]);\n\t\t}\n\n\t\tans += name.substr(prev);\n\t\tif(type == \"L\") ans[0] = tolower(ans[0]);\n\t\tcout << ans << endl;\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nvoid toUpperString(string& upper_str, const string& src_str)\n{\n  bool is_under_score = false;\n\n  if (src_str[0] >= 0x61 && src_str[0] <= 0x7A) {\n    upper_str += src_str[0] - 0x20;\n  } else {\n    upper_str += src_str[0];\n  }\n  \n  for (int i = 1; i != src_str.size(); i++) {\n    if (src_str[i] == '_') {\n      is_under_score = true;\n      continue;\n    }\n    if (!is_under_score) {\n      upper_str += src_str[i];\n    } else {\n      upper_str += src_str[i] - 0x20;\n      is_under_score = false;\n    }\n  }\n}\n\nvoid toLowerString(string& lower_str, const string& src_str)\n{\n  bool is_under_score = false;\n\n  if (src_str[0] >= 0x41 && src_str[0] <= 0x5A) {\n    lower_str += src_str[0] + 0x20;\n  } else {\n    lower_str += src_str[0];\n  }\n\n  for (int i = 1; i != src_str.size(); i++) {\n    if (src_str[i] == '_') {\n      is_under_score = true;\n      continue;\n    }\n    if (!is_under_score) {\n      lower_str += src_str[i];\n    } else {\n      lower_str += src_str[i] - 0x20;\n      is_under_score = false;\n    }\n  }\n}\n\nvoid toSnakeString(string& snake_str, const string& src_str)\n{\n  if (src_str[0] >= 0x41 && src_str[0] <= 0x5A) {\n    snake_str += src_str[0] + 0x20;\n  } else {\n    snake_str += src_str[0];\n  }\n\n  for (int i = 1; i != src_str.size(); i++) {\n    if (src_str[i] == '_' ||\n        (src_str[i] >= 0x61 && src_str[i] <= 0x7A)) {\n      snake_str += src_str[i];\n    } else {\n      snake_str += '_';\n      snake_str += src_str[i] + 0x20;\n    }\n  }\n}\n\n  \nint main()\n{\n  string name;\n  string output;\n  char type;\n\n  while (1) {\n    cin >> name >> type;\n    cin.ignore();\n\n    output.clear();\n    if (type == 'U') {\n      toUpperString(output, name);\n      cout << output << endl;\n    } else if (type == 'L') {\n      toLowerString(output, name);\n      cout << output << endl;\n    } else if (type == 'D') {\n      toSnakeString(output, name);\n      cout << output << endl;\n    } else if (type == 'X') {\n      break;\n    }\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 100000000\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair <int,int> P;\n\nstatic const double EPS = 1e-8;\n\nint main(){\n\tstring str;\n\tchar conv;\n\twhile(cin>>str){\n\t\tcin >> conv;\n\n\t\tif(conv == 'X') break;\n\t\t//under score\n\t\tif(count(str.begin(),str.end(),'_')){\n\t\t\tif(conv == 'L'){\n\t\t\t\t//str[0] = 'A' + (str[0]-'a');\n\t\t\t\tstring res=\"\";\n\t\t\t\tfor(int i=0;i+1<str.size();i++){\n\t\t\t\t\tif(str[i]=='_' && ('a' <= str[i+1] && str[i+1] <= 'z')){\n\t\t\t\t\t\tstr[i+1]='A'+(str[i+1]-'a');\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstring::iterator it = remove(str.begin(),str.end(),'_');\n\t\t\t\tstr.erase(it,str.end());\n\t\t\t}\n\t\t\telse if(conv == 'U'){\n\t\t\t\tstr[0] = 'A' + (str[0]-'a');\n\t\t\t\tfor(int i=0;i+1<str.size();i++){\n\t\t\t\t\tif(str[i]=='_' && ('a' <= str[i+1] && str[i+1] <= 'z')){\n\t\t\t\t\t\tstr[i+1]='A'+(str[i+1]-'a');\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstring::iterator it = remove(str.begin(),str.end(),'_');\n\t\t\t\tstr.erase(it,str.end());\n\t\t\t}\n\t\t}\n\t\t//Upper CamelCase\n\t\telse if('A' <= str[0] && str[0] <= 'Z'){\n\t\t\tif(conv == 'L'){\n\t\t\t\tstr[0] = 'a' + (str[0]-'A');\n\t\t\t}\n\t\t\telse if(conv == 'D'){\n\t\t\t\tstring res=\"\";\n\t\t\t\tstr[0] = 'a' + (str[0]-'A');\n\n\t\t\t\tres.push_back(str[0]);\n\t\t\t\tfor(int i=1;i<str.size();i++){\n\t\t\t\t\tif('A' <= str[i] && str[i] <= 'Z'){\n\t\t\t\t\t\tres.push_back('_');\n\t\t\t\t\t\tres.push_back('a' + (str[i]-'A'));\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tres.push_back(str[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstr = res;\n\t\t\t}\n\n\t\t}\n\t\t//Lower CamelCase\n\t\telse{\n\t\t\tif(conv == 'U'){\n\t\t\t\tstr[0] = 'A' + (str[0]-'a');\n\t\t\t}\n\t\t\telse if(conv == 'D'){\n\t\t\t\tstring res=\"\";\n\t\t\t\tstr[0] = 'a' + (str[0]-'a');\n\t\t\t\tres.push_back(str[0]);\n\t\t\t\tfor(int i=1;i<str.size();i++){\n\t\t\t\t\tif('A' <= str[i] && str[i] <= 'Z'){\n\t\t\t\t\t\tres.push_back('_');\n\t\t\t\t\t\tres.push_back('a' + str[i]-'A');\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tres.push_back(str[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstr = res;\n\t\t\t}\n\t\t}\n\n\t\tcout << str << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <math.h>\n#include <map>\n#include <iomanip>\n#include <vector>\n#include <queue>\n#include <set>\n\n#define PI 3.14159265359\n\n#define INF 99999999;\n\n#define rep(i, n) for(int i=0; i<n; i++)\n#define REP(n) rep(i, n)\n\ntypedef long long ll;\n\nusing namespace std;\n\n\n\n/*\nclass LightSwitchingPuzzle\n{\npublic:\n\tint minFlips(string s)\n\t{\n\n\t}\n}\n*/\n\nstring get_underscore(string inp)\n{\n\tif (inp.find(\"_\") != string::npos)\n\t{\n\t\treturn inp;\n\t}\n\t\n\tif (inp[0] < 'a') inp[0] += 32;\n\tstring ret = \"\";\n\tfor (int i=0; i<inp.length(); i++)\n\t{\n\t\tif (inp[i] < 'a')\n\t\t{\n\t\t\tchar c = inp[i] + 32;\n\t\t\tret = ret + \"_\" + c;\n\t\t} else {\n\t\t\tret += inp[i];\n\t\t}\n\t}\n\t\n\treturn ret;\n}\n\nstring upper_camel_case(string inp)\n{\n\tchar c = inp[0] - 32;\n\tstring ret = \"\";\n\t\n\tret += c;\n\t\n\tfor (int i=1; i<inp.length(); i++)\n\t{\n\t\tif (inp[i] == '_')\n\t\t{\n\t\t\tret += inp[i+1] - 32;\n\t\t\ti++;\n\t\t} else {\n\t\t\tret += inp[i];\n\t\t}\n\t}\n\t\n\treturn ret;\n}\n\nstring lower_camel_case(string inp)\n{\n\tstring ret = \"\";\n\t\n\tfor (int i=0; i<inp.length(); i++)\n\t{\n\t\tif (inp[i] == '_')\n\t\t{\n\t\t\tret += inp[i+1] - 32;\n\t\t\ti++;\n\t\t} else {\n\t\t\tret += inp[i];\n\t\t}\n\t}\n\t\n\treturn ret;\n}\n\nint main()\n{\n\tstring name;\n\tchar type;\n\t\n\twhile (cin >> name >> type)\n\t{\n\t\tif (type == 'X') break;\n\t\t\n\t\tname = get_underscore(name);\n\t\t\n\t\tswitch (type)\n\t\t{\n\t\tcase 'U':\n\t\t\tcout << upper_camel_case(name) << endl;\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tcout << lower_camel_case(name) << endl;\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tcout << name << endl;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\t//cout << upper_camel_case(\"get_user_name\") << endl;\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <cstdio>\n#include <cmath>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <bitset>\n#include <ctype.h>\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define FOR(i, a, b) for(int i = (a); i < (b); i++)\n#define all(v) (v).begin(), (v).end()\n#define rev(s) (s).rbegin(), (s).rend()\n#define MP make_pair\n#define X first\n#define Y second\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<double, double> dP;\n\nconst int INF = 100000000;\nconst double EPS = 1e-10;\n\nvector<string> parse(string s){\n\tint idx = 0;\n\tvector<string> words;\n\tFOR(i, 1, s.size()){\n\t\tif(s[i] == '_' || (s[i] >= 'A' && s[i] <= 'Z')){\n\t\t\twords.push_back(s.substr(idx, i-idx));\n\t\t\tif(s[i] == '_')i++;\n\t\t\tidx = i;\n\t\t}\n\t}\n\twords.push_back(s.substr(idx, s.size()-idx));\n\n\treturn words;\n}\n\nstring ChangeCamelCase(vector<string> words, char type){\n\tstring res;\n\trep(i, words.size()){\n\t\tif(type == 'D' || (type == 'L' && i == 0)) words[i][0] = tolower(words[i][0]);\n\t\telse words[i][0] = toupper(words[i][0]);\n\n\t\tres += words[i];\n\n\t\tif(type == 'D' && (i != words.size()-1)) res+= '_';\n\t}\n\n\treturn res;\n}\n\nint main(){\n\tstring s;\n\tchar t;\n\n\twhile(cin >> s >> t, t != 'X'){\n\t\tcout << ChangeCamelCase(parse(s), t) << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n  string s;\n  char c;\n  while (true) {\n    cin >> s >> c;\n    if (c == 'U') {\n      if (s.find('_', 0) == string::npos)\n        s[0] += ('A'-'a');\n      else\n        for (int i = 0; i < s.size(); i++)\n          if (s[i] == '_') {\n            s[i+1] += ('A'-'a');\n            s.erase(i, 1);\n          } else if (i == 0) {\n            s[i] += ('A'-'a');\n          }\n      cout << s << endl;\n    } else if (c == 'L') {\n      if (s.find('_', 0) == string::npos)\n        s[0] -= ('A'-'a');\n      else\n        for (int i = 0; i < s.size(); i++)\n          if (s[i] == '_') {\n            s[i+1] += ('A'-'a');\n            s.erase(i, 1);\n          }\n      cout << s << endl;\n    } else if (c == 'D') {\n      for (int i = 0; i < s.size(); i++)\n        if (i == 0 && 'A' <= s[i] && s[i] <= 'Z') {\n          s[i] -= ('A'-'a');\n        } else if ('A' <= s[i] && s[i] <= 'Z') {\n          s[i] -= ('A'-'a');\n          s.insert(i, 1, '_');\n        }\n      cout << s << endl;\n    } else {\n      break;\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n\nint main(){\n\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<queue>\nusing namespace std;\nqueue<char>stToQu(string str){\n    queue<char>q;\n    for(int i = 0;i < str.size();i++){\n        q.push(str[i]);\n    }\n    return q;\n}\nstring CamelCase(vector<string>words){\n    string str;\n    str += words[0];\n    for(int i = 1;i < words.size();i++){\n        string a = words[i];\n        a[0] -= 0x20;\n        str += a;\n    }\n    return str;\n}\nstring UnderScore(vector<string>words){\n    string str;\n    str += words[0];\n    for(int i = 1;i < words.size();i++){\n        str += \"_\";\n        str += words[i];\n    }\n    return str;\n}\nstring solve(string str,char type){\n    //cout << str;\n    vector<string>words;\n    queue<char> q = stToQu(str);\n    string a = \"\";\n    while(!q.empty()){\n        string word;\n        word = \"\";\n        word += a;\n        a = \"\";\n        while(!q.empty()){\n            char s = q.front();\n            q.pop();\n            //cout << s << \"*\" <<endl;\n            if(s <= 'Z'){\n                a.push_back(s + 0x20);\n                break;\n            }\n            if(s == '_'){\n                a = \"\";\n                break;\n            }\n            word.push_back(s);\n            //cout << \"*\" <<endl;\n        }\n        \n        if(!word.empty())words.push_back(word);\n    }\n    if(!a.empty())words.push_back(a);\n    //for(int i= 0;i < words.size();i++)cout << words[i] <<endl;\n    string st;\n    //cout << type <<endl;\n    switch (type){\n        case 'U':\n            st = CamelCase(words);\n            st[0] -= 0x20;\n            break;\n        case 'L':\n            st = CamelCase(words);\n            break;\n        case 'D':\n            st = UnderScore(words);\n            break;\n    }\n    return st;\n}\nint main(){\n    vector<string> a;\n    while(1){\n        string str;\n        char type;\n        cin >> str >> type;\n        if(type == 'X')break;\n        a.push_back(solve(str,type));\n    }\n    for(int i = 0;i < a.size();i++){\n        cout << a[i] <<endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<cassert>\n#include<iostream>\n#include<sstream>\n#include<string>\n#include<vector>\n#include<queue>\n#include<set>\n#include<map>\n#include<utility>\n#include<numeric>\n#include<algorithm>\n#include<bitset>\n#include<complex>\n\nusing namespace std;\n\ntypedef long long Int;\ntypedef vector<int> vint;\ntypedef pair<int,int> pint;\n#define mp make_pair\n\ntemplate<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << \" \"; cout << endl; }\ntemplate<class T> void chmin(T &t, T f) { if (t > f) t = f; }\ntemplate<class T> void chmax(T &t, T f) { if (t < f) t = f; }\nint in() { int x; scanf(\"%d\", &x); return x; }\n\nint main() {\n\tstring name,type;\n\tint i;\n\twhile(cin>>name>>type,type!=\"X\"){\n\t\tif(isupper(name[0])){\n\t\t\tif(type==\"U\"){\n\t\t\t\tcout<<name<<endl;\n\t\t\t}else if(type==\"L\"){\n\t\t\t\tname[0]^=' ';\n\t\t\t\tcout<<name<<endl;\n\t\t\t}else{\n\t\t\t\tcout<<(char)(name[0]^' ');\n\t\t\t\tfor(i=1;i<name.size();i++){\n\t\t\t\t\tif(isupper(name[i])){\n\t\t\t\t\t\tcout<<\"_\"<<(char)(name[i]^' ');\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcout<<name[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}else if(name.find(\"_\")==string::npos){\n\t\t\tif(type==\"U\"){\n\t\t\t\tname[0]^=' ';\n\t\t\t\tcout<<name<<endl;\n\t\t\t}else if(type==\"L\"){\n\t\t\t\tcout<<name<<endl;\n\t\t\t}else{\n\t\t\t\tfor(i=0;i<name.size();i++){\n\t\t\t\t\tif(isupper(name[i])){\n\t\t\t\t\t\tcout<<\"_\"<<(char)(name[i]^' ');\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcout<<name[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}else{\n\t\t\tif(type==\"U\"){\n\t\t\t\tcout<<(char)(name[0]^' ');\n\t\t\t\tfor(i=1;i<name.size();i++){\n\t\t\t\t\tif(name[i]=='_'){\n\t\t\t\t\t\tcout<<(char)(name[++i]^' ');\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcout<<name[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}else if(type==\"L\"){\n\t\t\t\tfor(i=0;i<name.size();i++){\n\t\t\t\t\tif(name[i]=='_'){\n\t\t\t\t\t\tcout<<(char)(name[++i]^' ');\n\t\t\t\t\t}else{\n\t\t\t\t\t\tcout<<name[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}else{\n\t\t\t\tcout<<name<<endl;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<cctype>\n#include<algorithm>\n\nusing namespace std;\n\nvoid UpperCamelCase(string&);\nvoid LowerCamelCase(string&);\nvoid UnderScoreCase(string&);\nbool IsUpperCase(char);\n\nint main(){\n  char c;\n  string str;\n\n  while(1){\n    cin >> str >> c;\n\n    if(c == 'X') break;\n    else if(c == 'U') UpperCamelCase(str);\n    else if(c == 'L') LowerCamelCase(str);\n    else if(c == 'D') UnderScoreCase(str);\n\n    cout << str << endl;\n  }\n\n  return 0;\n}\n\nvoid UpperCamelCase(string& s){\n  string::iterator i;\n\n  if(s[0] >= 'a' && s[0] <= 'z')\n    s[0] = toupper(s[0]);\n\n  i = s.begin();\n  while(1){\n    i = find(i, s.end(), '_');\n    if(i == s.end()) break;\n    i = s.erase(i);\n    *i = toupper(*i);\n  }\n}\n\nvoid LowerCamelCase(string& s){\n  string::iterator i;\n\n  if(s[0] >= 'A' && s[0] <= 'Z')\n    s[0] = tolower(s[0]);\n\n  i = s.begin();\n  while(1){\n    i = find(i, s.end(), '_');\n    if(i == s.end()) break;\n    i = s.erase(i);\n    *i = toupper(*i);\n  }\n}\n\nvoid UnderScoreCase(string& s){\n  string::iterator i;\n\n  if(s[0] >= 'A' && s[0] <= 'Z')\n    s[0] = tolower(s[0]);\n\n  i = s.begin();\n  while(1){\n    i = find_if(i, s.end(), IsUpperCase);\n    if(i == s.end()) break;\n    *i = tolower(*i);\n    s.insert(i, '_');\n  }\n}\n\nbool IsUpperCase(char c){\n  if(c >= 'A' && c <= 'Z')\n    return true;\n  else\n    return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\nint main( void )\n{\n\tstring s;\n\tstring t;\n\twhile ( cin >> s >> t && t != \"X\" )\n\t{\n\t\tvector <string> list;\n\t\tstring token;\n\n\t\t// _ª éÈçA_[XRA\n\t\tif ( s.find( \"_\" ) != string::npos )\n\t\t{\n\t\t\ttoken = \"\";\n\t\t\tfor ( int i = 0; i < s.size(); i++ )\n\t\t\t{\n\t\t\t\tif ( s[i] == '_' )\n\t\t\t\t{\n\t\t\t\t\tlist.push_back( token );\n\t\t\t\t\ttoken = \"\";\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttoken += s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.push_back( token );\n\t\t}\n\t\telse if ( s[0] >= 'A' && s[0] <= 'Z' )\n\t\t{\n\t\t\ttoken = \"\";\n\t\t\ts[0] = tolower( s[0] );\n\t\t\tfor ( int i = 0; i < s.size(); i++ )\n\t\t\t{\n\t\t\t\tif ( s[i] >= 'A' && s[i] <= 'Z' )\n\t\t\t\t{\n\t\t\t\t\tlist.push_back( token );\n\t\t\t\t\ttoken = \"\";\n\t\t\t\t\ttoken += tolower( s[i] );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttoken += s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.push_back( token );\n\t\t}\n\t\telse if ( s[0] >= 'a' && s[0] <= 'z' )\n\t\t{\n\t\t\ttoken = \"\";\n\t\t\tfor ( int i = 0; i < s.size(); i++ )\n\t\t\t{\n\t\t\t\tif ( s[i] >= 'A' && s[i] <= 'Z' )\n\t\t\t\t{\n\t\t\t\t\tlist.push_back( token );\n\t\t\t\t\ttoken = \"\";\n\t\t\t\t\ttoken += tolower( s[i] );\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\ttoken += s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.push_back( token );\n\t\t}\n\n\t\tif ( t == \"U\" )\n\t\t{\n\t\t\tfor ( int i = 0; i < list.size(); i++ )\n\t\t\t{\n\t\t\t\tlist[i][0] = toupper( list[i][0] );\n\t\t\t}\n\t\t}\n\t\telse if ( t == \"L\" )\n\t\t{\n\t\t\tfor ( int i = 1; i < list.size(); i++ )\n\t\t\t{\n\t\t\t\tlist[i][0] = toupper( list[i][0] );\n\t\t\t}\n\t\t}\n\t\telse if ( t == \"D\" )\n\t\t{\n\t\t\tfor ( int i = 1; i < list.size(); i++ )\n\t\t\t{\n\t\t\t\tlist[i] = \"_\" + list[i];\n\t\t\t}\n\t\t}\n\n\t\tstring kotae = \"\";\n\t\tfor ( int i = 0; i < list.size(); i++ )\n\t\t\tkotae += list[i];\n\t\tcout << kotae << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\n#define to 'A'-'a'\n#define small(x) (x) >= 'a' && (x) <= 'z'\n#define big(x) (x) >= 'A' && (x) <= 'Z'\n\nint main(){\n    string line;\n    char s;\n    while(1){\n        cin >> line >> s;\n        if(s == 'X') break;\n        if(s == 'U' || s == 'L'){\n            for(int i=0;i<line.size();i++){\n                if(i == 0 && s == 'U' && small(line[i])) line[i] += to;\n                else if(i == 0 && s == 'L' && big(line[i])) line[i] -= to;\n                if(line[i] == '_') line[i+1] += to;\n            }\n            while(line.find(\"_\") != string::npos) line.erase(line.find(\"_\"),1);\n        }\n        else {\n            for(int i=0;i<line.size();i++){\n                if(i == 0 && big(line[i])) line[i] -= to;\n                else if(big(line[i])) {\n                    line[i] -= to;\n                    line.insert(i,\"_\");\n                }\n            }\n        }\n        cout << line << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\nusing namespace std;\n\nint main(){\n  string s,t;\n\n  for(;;){\n    cin >> s;\n    cin >> t;\n\n    if(t==\"X\")break;\n\n    vector<string> v;\n\n    int pos=0;\n    while(pos<s.size()){\n      string tmp;\n      if('A' <= s[pos] && s[pos]<='Z'){\n\ttmp += (char)(s[pos] + 32);\n\tpos++;\n      }\n      while(pos<s.size() && ('a'<= s[pos] && s[pos]<='z'))tmp += s[pos++];\n      v.push_back(tmp);\n      if(pos<s.size() && s[pos]=='_')pos++;\n    }\n\n    string ans;\n    if(t==\"U\"){\n      for(int i=0;i<(int)v.size();i++){\n\tv[i][0] = v[i][0]-32;\n\tans += v[i];\n      }\n    }\n    if(t==\"L\"){\n      ans = v[0];\n      for(int i=1;i<(int)v.size();i++){\n\tv[i][0] = v[i][0]-32;\n\tans += v[i];\n      }\n    }\n    if(t==\"D\"){\n      ans = v[0];\n      for(int i=1;i<(int)v.size();i++)ans += \"_\" + v[i];\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\nvector<string> split(const string &s, char c = ' '){\n\tvector<string> ret;\n\tstringstream ss(s);\n\tstring t;\n\twhile(getline(ss,t,c)){\n\t\tret.pb(t);\n\t}\n\treturn ret;\n}\n\nvector<string> get_word(string s){\n\tvector<string> ret;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tfor(int j = i; j < s.size(); j++){\n\t\t\tif((s[j] >= 'A' && s[j] <= 'Z') || j == s.size() - 1){\n\t\t\t\tif(j == s.size() - 1) j++;\n\t\t\t\tret.push_back(s.substr(i, j - i));\n\t\t\t\tif(j != s.size()) s[j] += 'a' - 'A';\n\t\t\t\ti = j - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nstring calc(string s, string t1, string t2){\n\tstring ret;\n\tif(t1 == \"U\"){\n\t\tif(t2 == \"L\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'a' - 'A';\n\t\t}\n\t\telse {\n\t\t\ts[0] += 'a' - 'A';\n\t\t\tvector<string> v = get_word(s);\n\t\t\t// cout<<\"  \";\n\t\t\t// for(int i = 0; i < v.size(); i++){\n\t\t\t// \tcout<<v[i];\n\t\t\t// }\n\t\t\t// cout<<endl;\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\t//s[0] += 'a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t}\n\telse if(t1 == \"L\"){\n\t\tif(t2 == \"U\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'A' - 'a';\n\t\t}\n\t\telse{\n\t\t\tvector<string> v = get_word(s);\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\t//s[0] +='a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\tif(t2 == \"U\"){\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\tif(i != 0) s[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nint main(){\n\tstring s, t;\n\twhile(cin>>s>>t && t != \"X\"){\n\t\tif(s.find(\"_\") != string::npos) cout<<calc(s, \"D\", t);\n\t\telse if(s[0] >= 'A' && s[0] <= 'Z') cout<<calc(s, \"U\", t);\n\t\telse cout<<calc(s,\"L\", t);\n\t\tcout<<endl;\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nvoid smallToLarge( char& a )\n{\n    if( 'a' <= a && a <= 'z' )\n        a -= ( 'a' - 'A' );\n}\n\nvoid LargeToSmall( char& a )\n{\n    if( 'A' <= a && a <= 'Z' )\n        a += ( 'a' - 'A' );\n}\n\nint main()\n{\n    string s;\n    char c;\n\n    while( cin >> s >> c )\n    {\n        int a = s.size();\n\n        if( c == 'X' )\n            break;\n        else if( c == 'U' || c == 'L' )\n        {\n            c == 'U' ? smallToLarge(s[0]) : LargeToSmall(s[0]);\n            for( int i = 0; i < a; i++ )\n                if( s[i] == '_' )\n                    smallToLarge(s[i+1]);\n                else\n                    cout << s[i];\n        }\n        else\n        {\n            LargeToSmall(s[0]);\n            for( int i = 0; i < a; i++ )\n            {\n                if( 'A' <= s[i] && s[i] <= 'Z' )\n                {\n                    cout << '_';\n                    LargeToSmall(s[i]);\n                }\n                cout << s[i];\n            }\n        }\n        cout << endl;\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\n#define reps(v, f, l) for (int v = (f), v##_ = (l); v < v##_; ++v)\n#define rep(v, n) reps(v, 0, n)\n#define lep(v, n) reps(v, 1, n + 1)\n\nusing namespace std;\n\ntypedef long long int lint;\n\nstatic inline int in(){ int x; scanf(\"%d\", &x); return x; }\nstatic inline lint inl(){ lint x; scanf(\"%lld\", &x); return x; }\ntemplate<typename T> void show(T& a, char del='\\n', char last='\\n'){ rep(i, a.size() - 1) cout << a[i] << del; cout << a[a.size() - 1] << last; }\n\nint main()\n{\n  string n;\n  char type;\n  while (cin >> n >> type, type != 'X'){\n    rep(i, n.size()){\n      if (type == 'U'){\n        if (i == 0){\n          putchar(toupper(n[i]));\n        }\n        else if (n[i] == '_'){\n          putchar(toupper(n[i + 1]));\n          i++;\n        }\n        else {\n          putchar(n[i]);\n        }\n      }\n      if (type == 'L'){\n        if (i == 0){\n          putchar(tolower(n[i]));\n        }\n        else if (n[i] == '_'){\n          putchar(toupper(n[i + 1]));\n          i++;\n        }\n        else {\n          putchar(n[i]);\n        }\n      }\n      if (type == 'D'){\n        if (i == 0){\n          putchar(tolower(n[i]));\n        }\n        else if (isupper(n[i])){\n          putchar('_');\n          putchar(tolower(n[i]));\n        }\n        else {\n          putchar(n[i]);\n        }\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<ctype.h>\nusing namespace std;\nint main(){\n\tstring s;\n\tchar t;\n\twhile(true){\n\tcin>>s>>t;\n\tif(t=='X')break;\n\tif(t=='U'){\n\t\tif(s[0]>='a'&&s[0]<='z')s[0]-=32;\n\t\tcout<<s[0];\n\t\tfor(int i=1;i<s.size();i++)cout<<s[i];\n\t\tcout<<endl;\n\t}\n\tif(t=='L'){\n\t\tbool big=false;\n\t\tfor(int i=0;i<s.size();i++){\n\t\t\tif(big){\n\t\t\t\ts[i]-=32;\n\t\t\t\tbig=false;\n\t\t\t}\n\t\t\tif(s[i]=='_')big=true;\n\t\t\telse cout<<s[i];\n\t\t}\n\t\tcout<<endl;\n\t}\n\tif(t=='D'){\n\t\tif(s[0]>='A'&&s[0]<='Z')s[0]+=32;\n\t\tcout<<s[0];\n\t\tfor(int i=1;i<s.size();i++){\n\t\t\tif(s[i]>='A'&&s[i]<='Z'){\n\t\t\t\tcout<<\"_\";\n\t\t\t\ts[i]+=32;\n\t\t\t}\n\t\t\tcout<<s[i];\n\t\t}\n\t\tcout<<endl;\n\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <cctype>\nusing namespace std;\n#define loop(i,a,b) for(int i=(a);i<int(b);i++)\n#define rep(i,b) loop(i,0,b)\n\nstring upperCamel(string& s){\n    return (char)(s[0]-'a'+'A')+s.substr(1,s.size());\n}\n \nint main(void){\n    string s;\n    while(cin>>s){\n        char c;cin>>c;\n        if(c=='X')break;\n        vector<string> ws;\n        string tmp;\n        rep(i,s.size()){\n            if(isupper(s[i])){\n                if(i==0){\n                    tmp+=tolower(s[i]);\n                    continue;\n                }\n                ws.push_back(tmp);\n                tmp=tolower(s[i]);\n            }else if(s[i]=='_'){\n                ws.push_back(tmp);\n                tmp=\"\";\n            }else tmp+=s[i];\n        }\n        ws.push_back(tmp);\n        if(c=='L'){\n            rep(i,ws.size()){\n                if(i) cout<<upperCamel(ws[i]);\n                else cout<<ws[i];\n            }\n            cout<<endl;\n        }else if(c=='U'){\n            rep(i,ws.size()){\n                cout<<upperCamel(ws[i]);\n            }\n            cout<<endl;\n        }else if(c=='D'){\n            rep(i,ws.size()){\n                if(i)cout<<\"_\";\n                cout<<ws[i];\n            }\n            cout<<endl;\n        }\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nstring ULtoD(string s){\n  stringstream ss;\n  ss << (char)tolower(s[0]);\n  FOR(i, 1, s.length()){\n    if(isupper(s[i])) ss << '_' << (char)tolower(s[i]);\n    else ss << (char)tolower(s[i]);\n  }\n  return ss.str();\n}\n\nstring DtoUL(string s, char t){\n  stringstream ss;\n  ss << (char)(t == 'U' ? toupper(s[0]) : s[0]);\n  FOR(i, 1, s.length()){\n    if(s[i] == '_') ss << (char)toupper(s[++i]);\n    else ss << s[i];\n  }\n  return ss.str();\n}\n\nint main() {\n  string s; char t;\n  while(cin >>s >>t && t != 'X'){\n    char bt;\n    if(isupper(s[0])) bt = 'U';\n    else if(s.find('_') != string::npos) bt = 'D';\n    else bt = 'L';\n    if(bt == 'U'){\n      if(t == 'L') s[0] = tolower(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else if(bt == 'L'){\n      if(t == 'U') s[0] = toupper(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else s = DtoUL(s, t);\n    cout <<s <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\n#include <string>\n#include <algorithm>\n#include <cctype>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    int flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < (int)str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z') flag[i] = 1;\n      if(str[i] == '_') flag[i] = 2;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] -= 0x20; //toupper(str[0]);\n\tfor(int i = 0 ; i < (int)str.size() ; i++){\n\t  \n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] += 0x20; //toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] -= 0x20;  //tolower(str[0]);\n\tfor(int i = 0 ; i < (int)str.size() ; i++){\n\t  if(flag[i] == 2 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < (int)str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      }\n    }  \n    cout << endl;   \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S; char C;\nint main() {\n\twhile (true) {\n\t\tcin >> S >> C; string D;\n\t\tif (C == 'X')break;\n\t\tif (C == 'L' || C == 'D') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] == '_') {\n\t\t\t\t\ti++; if (S[i] <= 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] - 32);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (S[i] > 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] + 32);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (S[0] <= 'Z')S[0] += 32;\n\t\t}\n\t\tif (C == 'U') {\n\t\t\tif (S[0] > 'Z')S[0] -= 32;\n\t\t}\n\t\tif (C == 'D') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] <= 'Z' && i >= 1) { D += '_'; }\n\t\t\t\tD += S[i];\n\t\t\t}\n\t\t}\n\t\tcout << D << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\n\tstring str;\n\twhile(1){\n\t\tgetline(cin,str);\n\t\tstring name = str.substr(0,str.size()-2);\n\t\tchar type = str[str.size()-1];\n\t\tif(type=='L'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]+'a'-'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='U'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tcout << (char)(name[0]-'a'+'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << name[0] << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='D'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i]+'a'-'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]-'A'+'a') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i] - 'A'+'a') << flush;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t\t//cout<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\n#define to 'A'-'a'\n#define big(x) (x) >= 'A' && (x) <= 'Z'\n\nint main(){\n    string line;\n    char s;\n    while(1){\n        cin >> line >> s;\n        if(s == 'X') break;\n        if(s == 'U' || s == 'L'){\n            for(int i=0;i<line.size();i++){\n                if(i == 0 && s == 'U') line[i] += to;\n                if(line[i] == '_') line[i+1] += to;\n            }\n            while(line.find(\"_\") != string::npos) line.erase(line.find(\"_\"),1);\n        }\n        else {\n            for(int i=0;i<line.size();i++){\n                if(i == 0 && big(line[i])) line[i] -= to;\n                else if(big(line[i])) {\n                    line[i] -= to;\n                    line.insert(i,\"_\");\n                }\n            }\n        }\n        cout << line << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\nusing namespace std;\n\nint main()\n{\n  string str;\n  char type;\n  for(;cin>>str>>type,type!='X';)\n    {      \n      if(type=='U')\n\t{\n\t  for(int i=0;i<str.size();i++)\n\t    {\n\t      bool up=false;\n\t      if(i==0 || str[i]=='_')\n\t\tup=true;\n\t      if( str[i]=='_')\n\t\ti++;\n\t      if(up)\n\t\tcout<<(char)toupper(str[i]);\n\t      else\n\t\tcout<<str[i];\n\t    }\n\t}\n      else if(type=='L')\n\t{\n\t  for(int i=0;i<str.size();i++)\n\t    {\n\t      if(str[i]=='_')\n\t\t{\n\t\t  i++;\n\t\t  cout<<(char)toupper(str[i]);\n\t\t}\n\t      else if(i==0)\n\t\tcout<<(char)tolower(str[i]);\n\t      else\n\t\tcout<<str[i];\n\t    }\n\t}\n      else\n\t{\n\t  for(int i=0;i<str.size();i++)\n\t    {\n\t      if(i!=0 && isupper(str[i]))\n\t\t  cout<<\"_\";\t      \n\t      cout<<(char)tolower(str[i]);\t      \n\t    }\n\t}\n      cout<<endl;\n    }\n\n}"
  },
  {
    "language": "C++",
    "code": "#include <functional>\n#include <algorithm>\n#include <iostream>\n#include <numeric>\n#include <iomanip>\n#include <utility>\n#include <cstdlib>\n#include <sstream>\n#include <bitset>\n#include <vector>\n#include <cstdio>\n#include <ctime>\n#include <queue>\n#include <deque>\n#include <cmath>\n#include <stack>\n#include <list>\n#include <map>\n#include <set>\n\nusing namespace std;\n\ntypedef vector<int> vi;\ntypedef pair<int,int> pii;\ntypedef long long ll;\n\n#define dump(x)  cerr << #x << \" = \" << (x) << endl\n#define rep(i,n) for(int i=0;i<(n);i++)\n#define all(a)  (a).begin(),(a).end()\n#define pb push_back\n\n\nstring sol(string s){\n    string ret=\"\";\n    \n    rep(i,s.size()){\n        if(i!=0 && isupper(s[i]) && s[i]!='_'){\n            ret+='_';\n            ret+=tolower(s[i]);\n        }\n        else{\n            ret+=tolower(s[i]);\n        }\n    }\n    return ret;\n}\n\n\n\n\n\nint main() {\n    string s;\n    char type;\n    \n    while(cin>>s>>type){\n        if(type=='X')break;\n        \n        s=sol(s);\n        \n        if(type=='D')cout<<s<<endl;\n        else if(type=='L'){\n            string ans=\"\";\n            rep(i,s.size()){\n                if(s[i]=='_'){\n                    ans+=toupper(s[i+1]);\n                    i++;\n                }\n                else ans+=tolower(s[i]);\n            }\n            cout<<ans<<endl;\n            \n        }\n        else if(type=='U'){\n            string ans=\"\";\n            rep(i,s.size()){\n                if(i==0){\n                    ans+=toupper(s[i]);\n                }\n                else if(s[i]=='_'){\n                    ans+=toupper(s[i+1]);\n                    i++;\n                }\n                else ans+=tolower(s[i]);\n            }\n            cout<<ans<<endl;\n            \n        }\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int i,len,flag;\n  char type;\n  string name,out;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> name >> type;\n    if(type=='X') break;\n    len=name.size();\n    for(i=0;i<len;i++){\n      if(i==0){\n\tif(name[i]<'a') out+=name[i]-'A'+'a';\n\telse if(name[i]>='a'&&type=='U') out+=name[i]-'a'+'A';\n\telse out+=name[i];\n      }\n      else{\n\tif(name[i]<'a'||name[i]=='_') flag=1;\n\tif(name[i]=='_'){\n\t  out+=name[i+1]-'a'+'A';\n\t  i++;\n\t}\n\telse if(name[i]<'a'&&type=='D'){\n\t  out+='_';\n\t  out+=name[i]-'A'+'a';\n\t}else out+=name[i];\n      }\n    }\n    if(type=='L'&&flag==0) out[0]=out[0]-'a'+'A';\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\nusing namespace std;\n\nbool isLower( char c ){\n\treturn ( c >= 'a' && c <= 'z' )? true : false ;\n}\n\nbool isUpper(char c){\n\treturn ( c >= 'A' && c <= 'Z' )? true : false ;\n}\n\nvector<string> splitString(const string& s){\n\tstring s_ = \"\";\n\tvector<string> vc;\n\n\tfor(int i=0 ; i<(int)s.size() ; i++ ){\n\t\tif( s[i] == '_' ){\n\t\t\tvc.push_back( s_ );\n\t\t\ts_ = \"\";\n\t\t}else if( isLower( s[i] ) ){\n\t\t\ts_.push_back( s[i] );\n\t\t\tif( i == (int)s.size()-1 ){\n\t\t\t\tvc.push_back( s_ );\n\t\t\t}\n\t\t}else if( isUpper( s[i] ) ){\n\t\t\tvc.push_back( s_ );\n\t\t\ts_ = \"\";\n\t\t\ts_.push_back( s[i] );\n\t\t\tif( i == (int)s.size()-1 ){\n\t\t\t\tvc.push_back( s_ );\n\t\t\t}\n\t\t}\n\t}\n\treturn vc;\n}\n\nstring solve(string s, string c){\n\tvector<string> vc = splitString( s );\n\tstring str = \"\";\n\t\n\tfor(int i=0 ; i<(int)vc.size() ; i++ ){\n\t\tif( !vc[i].empty() ){\n\t\t\tif( c == \"D\" ){\n\t\t\t\tif( isUpper(vc[i][0]) )\n\t\t\t\t\tvc[i][0] += 'a'-'A';\n\t\t\t\tstr += vc[i];\n\t\t\t\tif( i != (int)vc.size()-1 )\n\t\t\t\t\tstr.push_back('_');\n\t\t\t}else{\n\t\t\t\tif( isLower(vc[i][0]) )\n\t\t\t\t\tvc[i][0] -= 'a'-'A';\n\t\t\t\tstr += vc[i];\n\t\t\t}\n\t\t}\n\t}\n\tif( c == \"L\" && isUpper(str[0]) ){\n\t\tstr[0] += 'a'-'A';\n\t}\n\treturn str;\n}\n\nint main(){\n\tstring s, c;\n\twhile( cin >> s >> c , c != \"X\" ){\n\t\tcout << solve( s , c ) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing State = string::const_iterator;\n\nstring expr(State &itr, int mode){\n    string res = \"\";\n    res.push_back(*itr);\n    ++itr;\n    if(mode==0){\n        res[0] = toupper(res[0]);\n    }else{\n        res[0] = tolower(res[0]);\n    }\n    while(1){\n        if(islower(*itr)){\n            res.push_back(*itr);\n            ++itr;\n        }else{\n            break;\n        }\n    }\n    if(mode==0 || mode==1){\n        if(*itr == '_') ++itr;\n    }else{\n        if(isalpha(*itr)) res.push_back('_');\n    }\n    return res;\n}\n\nint main(){\n    string s;\n    char op;\n    while(cin >> s >> op){\n        if(op == 'X') break;\n        string ans = \"\";\n        int m;\n        if(op == 'U') m = 0;\n        if(op == 'L') m = 1;\n        if(op == 'D') m = 2;\n        State begin = s.begin();\n        while(begin != s.end()){\n            ans += expr(begin,m);\n            if(m==1) m = 0;\n        }\n        cout << ans << endl;\n    }\n    return 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int i,len;\n  char type;\n  string name,out;\n  while(1){\n    out=\"\";\n    cin >> name >> type;\n    if(type=='X') break;\n    len=name.size();\n    for(i=0;i<len;i++){\n      if(i==0){\n\tif(name[i]<'a'&&type!='U') out+=name[i]-'A'+'a';\n\telse if(name[i]>='a'&&type=='U') out+=name[i]-'a'+'A';\n\telse out+=name[i];\n      }\n      else{\n\tif(name[i]=='_'&&type!='D'){\n\t  out+=name[i+1]-'a'+'A';\n\t  i++;\n\t}\n\telse if(name[i]<'a'&&type=='D'){\n\t  out+='_';\n\t  out+=name[i]-'A'+'a';\n\t}else out+=name[i];\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<vector>\n#include<algorithm>\n#include<iostream>\n#include<string>\n#include<cctype>\n#include<cstdlib>\nusing namespace std;\nint main(){\n    string str;char type;\n    while(cin>>str>>type,str!=\"EndOfInput\"||type!='X'){\n        vector<char>ans;ans.push_back(tolower(str[0]));\n        for(int i=1;i<str.length();i++){\n            if(str[i]!='_'&&islower(str[i])){\n                ans.push_back(str[i]);\n                continue;\n            }\n            if(isupper(str[i])){\n                if(type=='L'||type=='U')ans.push_back(str[i]);\n                else{\n                    ans.push_back('_');\n                    ans.push_back(tolower(str[i]));\n                }\n            }\n            else{\n                i++;\n                if(type=='L'||type=='U')ans.push_back(toupper(str[i]));\n                else{\n                    ans.push_back('_');\n                    ans.push_back(str[i]);\n                }\n            }\n        }\n        if(type=='U')ans[0]=toupper(ans[0]);\n        for(int i=0;i<ans.size();i++)cout<<ans[i];cout<<endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cctype>\nusing namespace std;\nint main(){\n  string s,type;\n\n  while(cin>> s >> type, type!=\"X\" ){\n    int st=0;\n    vector<string> v;\n    for( int i=0;i<(int)s.length();i++ ){\n      if( i==s.length()-1 ){\n\tv.push_back( s.substr(st) ); break;\n      }\n      if( isupper(s[i]) ){\n\ts[i] = tolower(s[i]);\n\tif( i>0 )\n\t  v.push_back( s.substr(st,i-st) );\n\tst = i;\n      }\n      if( s[i]=='_' ){\n\tv.push_back( s.substr(st, i-st) );\n\tst = i+1;\n      }\n    }\n    /*\n    cout << endl;\n    for( int i=0;i<v.size();i++ )\n      cout << \" [\" << v[i] << \"]\";\n    cout << endl;\n    */\n\n    for( int i=0;i<v.size();i++ ){\n      if( (type==\"L\"&&i>0) || type==\"U\" ){\n\tv[i][0] = toupper(v[i][0]);\n      }\n      if( type==\"D\" && i>1 )\n\tcout << \"_\";\n      cout << v[i];\n    }\n    cout << endl;\n\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\n\tstring str;\n\twhile(1){\n\t\tgetline(cin,str);\n\t\tstring name = str.substr(0,str.size()-2);\n\t\tchar type = str[str.size()-1];\n\t\tif(type=='L'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]-'a'+'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='U'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tcout << (char)(name[0]-'a'+'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << name[0] << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='D'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i]+'a'-'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]-'A'+'a') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i] - 'A'+'a') << flush;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t\t//cout<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cassert>\n\n#include <cctype>\n#include <cerrno>\n#include <cfloat>\n#include <ciso646>\n#include <climits>\n#include <clocale>\n#include <cmath>\n#include <csetjmp>\n#include <csignal>\n#include <cstdarg>\n#include <cstddef>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <ccomplex>\n#include <cfenv>\n#include <cinttypes>\n#include <cstdbool>\n#include <cstdint>\n#include <ctgmath>\n#include <cwchar>\n#include <cwctype>\n\n// C++\n#include <algorithm>\n#include <bitset>\n#include <complex>\n#include <deque>\n#include <exception>\n#include <fstream>\n#include <functional>\n#include <iomanip>\n#include <ios>\n#include <iosfwd>\n#include <iostream>\n#include <istream>\n#include <iterator>\n#include <limits>\n#include <list>\n#include <locale>\n#include <map>\n#include <memory>\n#include <new>\n#include <numeric>\n#include <ostream>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <stdexcept>\n#include <streambuf>\n#include <string>\n#include <typeinfo>\n#include <utility>\n#include <valarray>\n#include <vector>\n#include <array>\n#include <atomic>\n#include <chrono>\n#include <condition_variable>\n#include <forward_list>\n#include <future>\n#include <initializer_list>\n#include <mutex>\n#include <random>\n#include <ratio>\n#include <regex>\n#include <scoped_allocator>\n#include <system_error>\n#include <thread>\n#include <tuple>\n#include <typeindex>\n#include <type_traits>\n#include <unordered_map>\n#include <unordered_set>\n//#include <boost/foreach.hpp>\n//#include <boost/range/algorithm.hpp>\n#define rep(i,j,k) for(int i=(int)j;i<(int)k;i++)\n#define ll long long\n#define Sort(v) sort(all(v))\n#define INF 1e9\n#define LINF 1e18\n#define END return 0\n#define pb push_back\n#define se second\n#define fi first\n#define pb push_back\n#define all(v) (v).begin() , (v).end()\n#define MP make_pair\n#define MOD 1000000007LL\n#define int long long\nusing namespace std;\nint day[12]={31,28,31,30,31,30,31,31,30,31,30,31};\n// int dx[]={0,1,0,-1};\n// int dy[]={1,0,-1,0};\nstruct edge{int to,cost;};\n//typedef pair<int,int> P;\n\nbool isupper(char c){if('A'<=c&&c<='Z')return 1;return 0;}\nbool islower(char c){if('a'<=c&&c<='z')return 1;return 0;}\nbool isPrime(int x){if(x==1)return 0;if(x==2)return 1;if(x%2==0)return 0;for(int i=3;i*i<=x;i++)if(x%i==0)return 0;return 1;}\nbool iskaibun(string s){for(int i=0;i<s.size()/2;i++)if(s[i]!=s[s.size()-i-1])return 0;return 1;}\nbool isnumber(char c){return ('0'<=c&&c<='9');}\nbool isalpha(char c){return (isupper(c)||islower(c));}\nvoid printvi(vector<int> v){rep(i,0,v.size()){if(i)cout<<\" \";cout<<v[i];}cout<<endl;}\nvoid printvil(vector<int> v){rep(i,0,v.size()){cout<<v[i]<<endl;}}\nvoid printvvi(vector<vector<int>> v){\n    rep(i,0,v.size()){\n        rep(j,0,v[i].size()){\n            if(j)cout<<\" \";\n            cout<<v[i][j];\n        }\n        cout<<endl;\n    }\n}\nvoid printvstr(vector<string> v){\n    rep(i,0,v.size()){\n        cout<<v[i]<<endl;\n    }\n}\n\nint gcd(int a,int b){\n    if(a<b)swap(a,b);\n    if(b==0)return a;\n    else return gcd(b,a%b);\n}\n\nstruct S{\n    int id,team,ac,pena;\n};\n\nstring alllower(string s){\n    string ret;\n    rep(i,0,s.size()){\n        if(isupper(s[i]))ret+=char(s[i]+'a'-'A');\n        else ret+=s[i];\n    }\n    return ret;\n}\n\nstring first_upper(string s){\n    string ret;\n    rep(i,0,s.size()){\n        if(i==0 && islower(s[i]))ret+=char(s[i]-('a'-'A'));\n        else ret+=s[i];\n    }\n    return ret;\n}\n\nsigned main (){\n    for(;;){\n        string s;cin>>s;\n        char cmd;cin>>cmd;\n        if(cmd=='X')break;\n\n        vector<string> words;\n        string temp;\n        rep(i,0,s.size()){\n            if(isupper(s[i])){\n                if(i!=0)words.emplace_back(temp);\n                temp=s[i];\n            }else if(s[i]=='_'){\n                words.emplace_back(temp);\n                temp=\"\";\n            }else temp+=s[i];\n        }\n        words.emplace_back(temp);\n\n        if(cmd=='L'){\n            rep(i,0,words.size()){\n                if(i==0)cout<<alllower(words[i]);\n                else cout<<first_upper(words[i]);\n            }\n        }else if(cmd=='U'){\n            rep(i,0,words.size())cout<<first_upper(words[i]);\n        }else if(cmd=='D'){\n            rep(i,0,words.size()){\n                if(i)cout<<\"_\";\n                cout<<alllower(words[i]);\n            }\n        }\n        cout<<endl;\n    }\n\n\n\n\n    \n}\n/*\n*/\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\nusing namespace std;\n\nstring upperCamel(string& s){\n\treturn (char)(s[0]-'a'+'A')+s.substr(1,s.size());\n}\n\nint main(void){\n\tstring s;\n\twhile(cin>>s){\n\t\tchar c;cin>>c;\n\t\tif(c=='X')break;\n\t\tvector<string> splited;\n\t\tstring tmp;\n\t\tfor(int i=0;i<s.size();++i){\n\t\t\tif('A'<=s[i]&&s[i]<='Z'){\n\t\t\t\tif(i==0){\n\t\t\t\t\ttmp+=s[i]-'A'+'a';\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsplited.push_back(tmp);\n\t\t\t\ttmp=s[i]-'A'+'a';\n\t\t\t}else if(s[i]=='_'){\n\t\t\t\tsplited.push_back(tmp);\n\t\t\t\ttmp=\"\";\n\t\t\t}else {\n\t\t\t\ttmp+=s[i];\n\t\t\t\tif(i==s.size()-1) splited.push_back(tmp);\n\t\t\t}\n\t\t}\n\t\tif(c=='L'){\n\t\t\tfor(int i=0;i<splited.size();++i){\n\t\t\t\tif(i) cout<<upperCamel(splited[i]);\n\t\t\t\telse cout<<splited[i];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}else if(c=='U'){\n\t\t\tfor(int i=0;i<splited.size();++i){\n\t\t\t\tcout<<upperCamel(splited[i]);\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}else if(c=='D'){\n\t\t\tfor(int i=0;i<splited.size();++i){\n\t\t\t\tif(i)cout<<\"_\";\n\t\t\t\tcout<<splited[i];\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <string>\n#include <iostream>\n\nusing namespace std;\n\nstring LowerCamelCaseDiv2(string S)\n{\n    string T;\n    \n    for(int i = 0; i < S.size(); i++)\n    {\n        if(i == 0)\n        {\n            T += tolower(S[i]);\n        }  \n        else if(S[i - 1] == '_')\n        {\n            T += toupper(S[i]);\n        }\n        else if(S[i] != '_')\n        {\n            T += S[i];\n        }\n    }\n    \n    return T;\n}\n\nstring UpperCamelCaseDiv2(string S)\n{\n    string T;\n    \n    for(int i = 0; i < S.size(); i++)\n    {\n        if(i == 0)\n        {\n            T += toupper(S[i]);\n        }  \n        else if(S[i - 1] == '_')\n        {\n            T += toupper(S[i]);\n        }\n        else if(S[i] != '_')\n        {\n            T += S[i];\n        }\n    }\n    \n    return T;\n}\n\nstring UnderLineDiv2(string S)\n{\n    string T;\n    \n    for(int i = 0; i < S.size(); i++)\n    {\n        if(i != 0 && isupper(S[i]))\n        {\n            T += '_' + tolower(S[i]);\n        }\n        else\n        {\n            T += S[i];\n        }\n    }\n    \n    return T;\n}\n\nint main()\n{\n    string S, T;\n    \n    while(true)\n    {\n        cin >> S >> T;\n        \n        if(T == \"X\") { break; }\n        \n        if(T == \"L\") { cout << LowerCamelCaseDiv2(S) << endl; }\n        if(T == \"U\") { cout << UpperCamelCaseDiv2(S) << endl; }\n        if(T == \"D\") { cout << UnderLineDiv2(S) << endl; }\n    }\n    \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <cassert>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <queue>\n#include <random>\n#include <set>\n#include <sstream>\n#include <string>\n#include <utility>\n#include <vector>\n\n#define REP(i,s,n) for(int i=(int)(s);i<(int)(n);i++)\n#define DEBUGP(val) cerr << #val << \"=\" << val << \"\\n\"\n\nusing namespace std;\ntypedef long long int ll;\ntypedef vector<int> VI;\ntypedef vector<ll> VL;\ntypedef pair<int, int> PI;\n\n\n\nint main(void) {\n  ios::sync_with_stdio(false);\n  cin.tie(0);\n  string s,t;\n  while(cin>>s>>t&&t!=\"X\") {\n    vector<string> words;\n    int last = 0;\n    REP(i, 0, s.size()) {\n      if (s[i] == '_') {\n        words.push_back(s.substr(last, i - last));\n        last = i + 1;\n      }\n      if (s[i] <= 'Z' && i > 0) {\n        words.push_back(s.substr(last, i - last));\n        last = i;\n      }\n    }\n    words.push_back(s.substr(last));\n    if (t == \"U\" || t == \"L\") {\n      REP(i, 0, words.size()) {\n        if (i > 0 || t == \"U\") words[i][0] = toupper(words[i][0]);\n        else words[i][0] = tolower(words[i][0]);\n        cout << words[i];\n      }\n      cout << endl;\n    } else {\n      REP(i, 0, words.size()) {\n        if (i > 0) cout << \"_\";\n        transform(words[i].begin(), words[i].end(), words[i].begin(), ::tolower);\n        cout << words[i];\n      }\n      cout << endl;\n    }\n  }\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S; char C;\nint main() {\n\twhile (true) {\n\t\tcin >> S >> C; string D;\n\t\tif (C == 'X')break;\n\t\tif (C == 'L' || C == 'U') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] == '_') {\n\t\t\t\t\ti++; if (S[i] <= 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] - 32);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (S[i] > 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] + 32);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (S[0] <= 'Z')S[0] += 32;\n\t\t}\n\t\tif (C == 'U') {\n\t\t\tif (S[0] > 'Z')S[0] -= 32;\n\t\t}\n\t\tif (C == 'D') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] <= 'Z' && i >= 1) { D += '_'; }\n\t\t\t\tif (S[i] <= 'Z') { D += (char)(S[i] + 32); }\n\t\t\t\telse { D += S[i]; }\n\t\t\t}\n\t\t}\n\t\tcout << D << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int len,i,flag;\n  string str,out;\n  char type;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> str >> type;\n    len=str.size();\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]>='a') out+=str[i]-'a'+'A';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]=='_'||str[i]<'a') flag=1;\n\t    if(str[i]=='_'){\n\t      out+=str[i+1]-'a'+'A';\n\t      i++;\n\t    }else out+=str[i];\n\t  }\n\t}\n\tif(flag==0) out[0]=out[0]-'a'+'A';\n      }\n      else if(type=='D'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]<'a'){\n\t      out+='_';\n\t      out+=str[i]-'A'+'a';\n\t    }else out+=str[i];\n\t  }\n\t}\n      }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n#include <cctype>\n#include <iterator>\nusing namespace std;\n\nvector<string> parseL(string s) {\n    const int L = s.length();\n    int i = 0, j = 0;\n    vector<string> res;\n    while(true) {\n        if(L <= j) break;\n        j++;\n        while(j < L && islower(s[j])) j++;\n        res.push_back(s.substr(i, j - i));\n        i = j;\n    }\n    return res;\n}\n\nvector<string> parseU(string s) {\n    s[0] = tolower(s[0]);\n    vector<string> res = parseL(s);\n    res[0][0] = toupper(res[0][0]);\n    return res;\n}\n\nvector<string> parseD(string s) {\n    const int L = s.length();\n    int i = 0;\n    vector<string> res;\n    while(true) {\n        string t;\n        while(i < L && s[i] != '_') {\n            t.push_back(s[i]);\n            i++;\n        }\n        res.push_back(t);\n        if(i == L) break;\n        i++;\n    }\n    return res;\n}\n\nvoid tr(vector<string> vec) {\n    copy(vec.begin(), vec.end(), ostream_iterator<string>(cerr, \"_\"));\n}\n\nint main() {\n    for(string text, type; cin >> text >> type, type != \"X\"; ) {\n        vector<string> vec;\n        if(find(text.begin(), text.end(), '_') != text.end()) {\n            vec = parseD(text);\n        }\n        else if(isupper(text[0])) {\n            vec = parseU(text);\n        }\n        else {\n            vec = parseL(text);\n        }\n\n        if(type == \"L\") {\n            for(int j = 0; j < (int)vec[0].size(); j++) cout << (char)tolower(vec[0][j]);\n            for(int i = 1; i < (int)vec.size(); i++) {\n                cout << (char)toupper(vec[i][0]);\n                for(int j = 1; j < (int)vec[i].size(); j++) {\n                    cout << (char)tolower(vec[i][j]);\n                }\n            }\n        }\n        else if(type == \"U\") {\n            for(int i = 0; i < (int)vec.size(); i++) {\n                cout << (char)toupper(vec[i][0]);\n                for(int j = 1; j < (int)vec[i].size(); j++) {\n                    cout << (char)tolower(vec[i][j]);\n                }\n            }\n        }\n        else {\n            for(int j = 0; j < (int)vec[0].size(); j++) cout << (char)tolower(vec[0][j]);\n            for(int i = 1; i < (int)vec.size(); i++) {\n                cout << '_';\n                for(int j = 0; j < (int)vec[i].size(); j++) {\n                    cout << (char)tolower(vec[i][j]);\n                }\n            }\n        }\n        cout << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include<math.h>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tchar buf[101],result[500],type;\n\tint p,i;\n\n\twhile(true){\n\t\tscanf(\"%s %c\",buf,&type);\n\t\tif(type == 'X')break;\n\n\t\tp = 0;\n\t\tswitch(type){\n\t\tcase 'U':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){ //??§???????????´???\n\t\t\t\t\t\tif(buf[i-1] >= 97 && buf[i-1] <= 122){//??£????????????\n\t\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){ //??§???????????´???\n\t\t\t\t\t\tif(buf[i-1] >= 97 && buf[i-1] <= 122){//??£????????????\n\t\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){ //??§???????????´???\n\t\t\t\t\t\tif((buf[i-1] == '_') || (buf[i-1] >= 97 && buf[i-1] <= 122)){//??£?????????????????£???????????????\n\t\t\t\t\t\t\tresult[p++] = '_';\n\t\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\t}\n\n\t}\n\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <string>\nusing namespace std;\n\nchar SmallToLarge(char x){\n\treturn x-'a'+'A';\n}\n\nchar LargeToSmall(char x){\n\treturn x-'A'+'a';\t\n}\n\nint main(){\n\tstring s;\n\tchar c;\n\twhile(cin >> s >> c){\n\t\tif(c=='X') break;\n\t\t\n\t\tstring t=s;\n\t\t//UpperCmaelCase??????\n\t\tif('a'<=s[0] && s[0]<='z'){\n\t\t\tbool underscore=false;\n\t\t\tfor(int i=0; i<s.size(); ++i){\n\t\t\t\tif(s[i]=='_'){\n\t\t\t\t\tunderscore=true;\n\t\t\t\t\tbreak;\t\n\t\t\t\t}\t\n\t\t\t}\t\n\t\t\t\n\t\t\tstringstream ss;\n\t\t\tss << SmallToLarge(s[0]);\n\t\t\t\n\t\t\tif(underscore){\n\t\t\t\tfor(int i=1; i<s.size(); ++i){\n\t\t\t\t\tif(s[i]=='_') continue;\n\t\t\t\t\t\n\t\t\t\t\tif(s[i-1]=='_') ss << SmallToLarge(s[i]);\n\t\t\t\t\telse ss << s[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\telse for(int i=1; i<s.size(); ++i) ss << s[i];\t\n\t\t\t\n\t\t\tt=ss.str();\n\t\t}\n\t\t\n\t\t//cout << t <<endl;\n\t\t\n\t\tif(c=='L') t[0]=t[0]-'A'+'a';\n\t\telse if(c=='D'){\n\t\t\tstringstream tt;\n\t\t\ttt<<LargeToSmall(t[0]);\n\t\t\tfor(int i=1; i<t.size(); ++i){\n\t\t\t\tif('A'<=t[i] && t[i]<='Z'){\n\t\t\t\t\ttt<<'_';\n\t\t\t\t\ttt<<LargeToSmall(t[i]);\t\n\t\t\t\t}\n\t\t\t\telse tt<<t[i];\t\n\t\t\t}\n\t\t\t\n\t\t\tt=tt.str();\n\t\t}\n\t\t\n\t\tcout << t <<endl;\t\t\n\t\t\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "//37\n#include<iostream>\n#include<string>\n#include<sstream>\n#include<cctype>\n\nusing namespace std;\n\nint main(){\n  string s;\n  char c;\n  while(cin>>s>>c,c!='X'){\n    s[0]=tolower(s[0]);\n    string su;\n    for(int i=0;i<s.size();i++){\n      if(isupper(s[i])){\n\tsu+='_';\n      }\n      su+=tolower(s[i]);\n    }\n    if(c=='D'){\n      cout<<su<<endl;\n    }else{\n      string so;\n      bool f=false;\n      for(int i=0;i<su.size();i++){\n\tif(su[i]=='_'){\n\t  f=true;\n\t}else{\n\t  so+=(f)?toupper(su[i]):tolower(su[i]);\n\t  f=false;\n\t}\n      }\n      if(c=='U'){\n\tso[0]=toupper(so[0]);\n      }\n      cout<<so<<endl;\n    }\n  }\n  return 0;\n}\n    "
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  string str;\n  char S;\n  while(1){\n    cin>>str;\n    cin>>S;\n\n    if(S=='X') break;\n\n    else  if(S=='L'){\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') str[i+1]-=32;\n      }\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n    }\n    \n    else  if(S=='U') {\n      if(str[0]>='a' && str[0]<='z') str[0]-=32;\n    \n    for(int i=0;i<str.size();i++){\n    if(str[i]=='_') str[i+1]-=32;\n  }\n  for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n      \n    }\n    \n  else  if(S=='D'){\n    for(int i=0;i<str.size();i++){\n      if(str[i]>=65 && str[i]<=90){\n\tstr[i]+=32;\n      }\n      if(i>0 && str[i+1]>=65 && str[i+1]<=90){\n\tcout<<str[i]<<\"_\";\n      }\n      else cout<<str[i];\n    }\n    cout<<endl;\n  }\n  }\n  return 0;\n  }"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<cstdio>\n#include<cstring>\nusing namespace std;\nint main(){\n  char S[101],s;\n  while(1){\n    scanf(\"%s %c\",S,&s);\n    if(s=='X') break;\n    else if(s=='L' || s=='U'){\n      for(int i=0,l=strlen(S);i<l;i++){\n\tif(s=='U'&&i==0&&S[i]>='A'&&S[i]<='Z'){\n\t  printf(\"%c\",S[i]-('A'-'a'));\n\t}else if(S[i]=='_' ||(s=='U'&&i==0&&S[i]>='a'&&S[i]<='z')){\n\t  if(i!=0)i++;\n\t  printf(\"%c\",S[i]+ ('A'-'a'));\n\t}else  printf(\"%c\",S[i]);\n      }\n    }else if(s=='D'){\n      if(S[0]>='A'&&S[0]<='Z')printf(\"%c\",S[0]-('A'-'a'));\n      else printf(\"%c\",S[0]);\n      for(int i=1,l=strlen(S);i<l;i++){\n\tif(S[i]>='A'&&S[i]<='Z'){\n\t  printf(\"_%c\",S[i]-('A'-'a'));\n\t}else{\n\t  printf(\"%c\",S[i]);\n\t}\n      }\n    }\n    puts(\"\");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\n\nvoid str_U(string s){\n\tstring S=\"\";\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='_'){\n\t\t\ti++;\n\t\t\tif('a'<=s[i]&&s[i]<='z'){\n\t\t\t\tS+=(s[i]-'a'+'A');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tS+=s[i];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tS+=s[i];\n\t\t}\n\t}\n\tif('a'<=S[0] && S[0]<='z'){\n\t\tS[0]-='a';\n\t\tS[0]+='A';\n\t}\n\tcout<<S<<endl;\n}\nvoid str_L(string s){\n\tstring S=\"\";\n\tfor(int i=0;i<s.size();i++){\n\t\tif(s[i]=='_'){\n\t\t\ti++;\n\t\t\tif('a'<=s[i]&&s[i]<='z'){\n\t\t\t\tS+=(s[i]-'a'+'A');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tS+=s[i];\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tS+=s[i];\n\t\t}\n\t}\n\tif('A'<=S[0] && S[0]<='Z'){\n\t\tS[0]-='A';\n\t\tS[0]+='a';\n\t}\n\tcout<<S<<endl;\n}\nvoid str_D(string s){\n\tstring S=\"\";\n\tfor(int i=0;i<s.size();i++){\n\t\tif('A'<=s[i]&&s[i]<='Z'){\n\t\t\tif(i!=0)S+=\"_\";\n\t\t\tS+=(s[i]-'A'+'a');\n\t\t}\n\t\telse{\n\t\t\tS+=s[i];\n\t\t}\n\t}\n\tcout<<S<<endl;\n}\n\n\nint main(){\n\t\n\tstring s;\n\tchar c;\n\t\n\twhile(cin>>s>>c){\n\t\tif(c=='X')break;\n\t\tif(c=='U')str_U(s);\n\t\tif(c=='L')str_L(s);\n\t\tif(c=='D')str_D(s);\n\t\t\n\t}\n\t\n\t\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <ctype.h>\n\nusing namespace std;\n\nchar get_type(string s)\n{\n\tif (islower(s[0]))\n\t\treturn s.find('_') != -1 ? 'D' : 'L';\n\telse\n\t\treturn 'U';\n}\n\nvector<string> split_d(string s)\n{\n\tvector<string> v;\n\tint p;\n\tfor (; (p = s.find('_')) != -1; )\n\t{\n\t\tif (p > 0) v.push_back(s.substr(0, p));\n\t\ts = s.substr(p + 1);\n\t}\n\tif (!s.empty()) v.push_back(s);\n\treturn v;\n}\n\nvector<string> split_c(string s)\n{\n\ts[0] = tolower(s[0]);\n\n\tvector<string> v;\n\tfor (int i = 0; i < s.length();)\n\t{\n\t\tif (isupper(s[i]))\n\t\t{\n\t\t\tstring t = s.substr(0, i);\n\t\t\tv.push_back(t);\n\t\t\ts = s.substr(i);\n\t\t\ts[0] = tolower(s[0]);\n\t\t\ti = 0;\n\t\t}\n\t\telse\n\t\t{\n\t\t\ti++;\n\t\t}\n\t}\n\tif (!s.empty()) v.push_back(s);\n\treturn v;\n}\n\nstring make_d(vector<string> v)\n{\n\tstring s = \"\";\n\tfor (int i = 0; i < v.size(); i++)\n\t{\n\t\tif (i != 0) s += \"_\";\n\t\ts += v[i];\n\t}\n\treturn s;\n}\n\nstring make_c(vector<string> v, bool upper_camel)\n{\n\tstring s = \"\";\n\tfor (int i = 0; i < v.size(); i++)\n\t{\n\t\tif (i != 0 || upper_camel) v[i][0] = toupper(v[i][0]);\n\t\ts += v[i];\n\t}\n\treturn s;\n}\n\nint main()\n{\n\tstring s;\n\tchar c;\n\tfor(;cin>>s>>c, c!='X';)\n\t{\n\t\tchar type = get_type(s);\n\n\t\tvector<string> v;\n\n\t\tswitch (type)\n\t\t{\n\t\tcase 'L':\n\t\tcase 'U':\n\t\t\tv = split_c(s);\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tv = split_d(s);\n\t\t\tbreak;\n\t\t}\n\t\tswitch (c)\n\t\t{\n\t\tcase 'L':\n\t\t\tcout << make_c(v, false);\n\t\t\tbreak;\n\t\tcase 'U':\n\t\t\tcout << make_c(v, true);\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tcout << make_d(v);\n\t\t\tbreak;\n\t\t}\n\t\tcout << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int len,i,flag;\n  string str,out;\n  char type;\n  while(1){\n    flag=0;\n    out=\"\";\n    cin >> str >> type;\n    len=str.size();\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]>='a') out+=str[i]-'a'+'A';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]=='_'||str[i]<'a') flag=1;\n\t    if(str[i]=='_'){\n\t      out+=str[i+1]-'a'+'A';\n\t      i++;\n\t    }else out+=str[i];\n\t  }\n\t}\n\tif(flag==0) out[0]=out[0]-'a'+'A';\n      }\n      else if(type=='D'){\n\tfor(i=0;i<len;i++){\n\t  if(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\t  else{\n\t    if(str[i]<'a'){\n\t      out+='_';\n\t      out+=str[i]-'A'+'a';\n\t    }else out+=str[i];\n\t  }\n\t}\n      }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<iomanip>\n#include<algorithm>\n#include<array>\n#include<bitset>\n#include<cassert>\n#include<cctype>\n#include<cmath>\n#include<cstdio>\n#include<cstring>\n#include<functional>\n#include<limits>\n#include<list>\n#include<map>\n#include<numeric>\n#include<set>\n#include<stack>\n#include<string>\n#include<sstream>\n#include<unordered_map>\n#include<queue>\n#include<vector>\nusing namespace std;\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing pii = pair<int, int>;\n\n#define rep(i,a,b) for(int i=(a);i<(b);i++)\n#define rrep(i,a,b) for(int i=(b)-1;i>=(a);i--)\n#define all(a) (a).begin(),(a).end()\n#define dump(o) {cerr<<#o<<\" \"<<o<<endl;}\n#define dumpc(o) {cerr<<#o; for(auto &e:(o))cerr<<\" \"<<e;cerr<<endl;}\n#define INF 0x3f3f3f3f\n#define INFL 0x3f3f3f3f3f3f3f3fLL\nconst int MOD = 1e9 + 7;\n\n//split delimiter??§?????????\nvector<string> split(const string &input, char delimiter) {\n\tvector<string> ret;\n\tistringstream stream(input);\n\tstring s;\n\twhile (getline(stream, s, delimiter)) ret.push_back(s);\n\treturn ret;\n}\nstring stoupper(string s) { transform(s.begin(), s.end(), s.begin(), ::toupper); return s; }\nstring stolower(string s) { transform(s.begin(), s.end(), s.begin(), ::tolower); return s; }\n\nsigned main() {\n\tfor (string s, t; cin >> s >> t&&t != \"X\";) {\n\t\tvector<string> a;\n\t\tif (s.find(\"_\") != string::npos) {\n\t\t\ta = split(s, '_');\n\t\t}\n\t\telse {\n\t\t\tint l = 0;\n\t\t\trep(i, 1, s.size()) {\n\t\t\t\tif (isupper(s[i])) {\n\t\t\t\t\ta.push_back(stolower(s.substr(l, i - l)));\n\t\t\t\t\tl = i;\n\t\t\t\t}\n\t\t\t}\n\t\t\ta.push_back(stolower(s.substr(l, s.size())));\n\t\t}\n\t\tstring ans = \"\";\n\t\tif (t == \"L\") {\n\t\t\tans += a[0];\n\t\t\trep(i, 1, a.size()) {\n\t\t\t\ta[i][0] = toupper(a[i][0]);\n\t\t\t\tans += a[i];\n\t\t\t}\n\t\t}\n\t\telse if (t == \"U\") {\n\t\t\trep(i, 0, a.size()) {\n\t\t\t\ta[i][0] = toupper(a[i][0]);\n\t\t\t\tans += a[i];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tans += a[0];\n\t\t\trep(i, 1, a.size()) {\n\t\t\t\tans += \"_\" + a[i];\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <ctype.h>\n#include <vector>\nusing namespace std;\n\nstring solve(vector<string> v,char t){\n\tstring ret;\n\tswitch(t){\n\tcase 'U':\n\t\tfor(int i=0;i<v.size();i++){\n\t\t\tfor(int j=0;j<v[i].length();j++){\n\t\t\t\tv[i][j] = tolower(v[i][j]);\n\t\t\t}\n\t\t\tv[i][0] = toupper(v[i][0]);\n\t\t\tret += v[i];\n\t\t}\n\t\treturn ret;\n\tcase 'L':\n\t\tfor(int i=0;i<v.size();i++){\n\t\t\tfor(int j=0;j<v[i].length();j++){\n\t\t\t\tv[i][j] = tolower(v[i][j]);\n\t\t\t}\n\t\t\tif(i)v[i][0] = toupper(v[i][0]);\n\t\t\tret += v[i];\n\t\t}\n\t\treturn ret;\n\tcase 'D':\n\t\tfor(int i=0;i<v.size();i++){\n\t\t\tif(i)ret+=\"_\";\n\t\t\tfor(int j=0;j<v[i].length();j++){\n\t\t\t\tv[i][j] = tolower(v[i][j]);\n\t\t\t}\n\t\t\tret+=v[i];\n\t\t}\n\t\treturn ret;\n\t}\n}\n\nint main(){\n\tchar type;\n\tstring s;\n\tstring t;\n\twhile(cin >> s >> type,type != 'X'){\n\t\tvector<string> data;\n\t\tif(~s.find(\"_\")){\n\t\t\tfor(int i=0;i<s.length();i++){\n\t\t\t\tif(s[i]=='_'){\n\t\t\t\t\ts[i] = ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\tstringstream ss(s);\n\t\t\twhile(ss >> t)data.push_back(t);\n\t\t}else{\n\t\t\tfor(int i=0;i<s.length();i++){\n\t\t\t\tif(isupper(s[i])){\n\t\t\t\t\ts.insert(i,\" \");\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstringstream ss(s);\n\t\t\twhile(ss >> t)data.push_back(t);\n\t\t}\n\t\tcout << solve(data,type) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<algorithm>\n#include<cmath>\n#include<map>\n#include<vector>\n#include<deque>\nusing namespace std;\n\nint main() {\n\n    string name;\n    char t;\n\n    while(true) {\n        cin >> name >> t;\n        if (t == 'X') break;\n\n        switch(t) {\n            case 'U':\n                if (name.find(\"_\") == string::npos) {\n                    if (name[0] >= 'a' && name[0] <= 'z') {\n                        name[0] += 'A' - 'a';\n                    }\n                    cout << name << endl;\n                } else {\n                    while(name.find(\"_\") != string::npos) {\n                        name[0] += 'A' - 'a';\n                        cout << name.substr(0, name.find(\"_\"));\n                        name = name.substr(name.find(\"_\") + 1);\n                    }\n                    name[0] += 'A' - 'a';\n                    cout << name << endl;\n                }\n                break;\n            case 'L':\n                if (name.find(\"_\") == string::npos) {\n                    if (name[0] >= 'A' && name[0] <= 'Z') {\n                        name[0] -= 'A' - 'a';\n                    }\n                    cout << name << endl;\n                } else {\n                    cout << name.substr(0, name.find(\"_\"));\n                    while(name.find(\"_\") != string::npos) {\n                        name = name.substr(name.find(\"_\") + 1);\n                        name[0] += 'A' - 'a';\n                        cout << name.substr(0, name.find(\"_\"));\n                    }\n                    cout << endl;\n                }\n                break;  \n            case 'D':\n                if (name.find(\"_\") != string::npos) {\n                    cout << name << endl;\n                } else {\n                    for(int i = 0; i < name.length(); i++) {\n                        if(name[i] >= 'A' && name[i] <= 'Z') {\n                            name[i] -= 'A' - 'a';\n                            if(i != 0) cout << \"_\";\n                        }\n                        cout << name[i];\n                    }\n                    cout << endl;\n                }\n        }\n    }\n     \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include<math.h>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tchar buf[101],result[500],type;\n\tint p,i;\n\n\twhile(true){\n\t\tscanf(\"%s %c\",buf,&type);\n\t\tif(type == 'X')break;\n\n\t\tp = 0;\n\t\tswitch(type){\n\t\tcase 'U':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tif(buf[i-1] >= 97 && buf[i-1] <= 122){\n\t\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tif(buf[i-1] >= 97 && buf[i-1] <= 122){\n\t\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tif(buf[i-1] == '_'){\n\t\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t\t}else if(buf[i-1] >= 97 && buf[i-1] <= 122){\n\t\t\t\t\t\t\tresult[p++] = '_';\n\t\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\t}\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S; char C;\nint main() {\n\twhile (true) {\n\t\tcin >> S >> C; string D;\n\t\tif (C == 'X')break;\n\t\tif (C == 'L') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] == '_') {\n\t\t\t\t\ti++; if (S[i] <= 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] - 32);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (S[i] > 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] + 32);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (D[0] <= 'Z')D[0] += 32;\n\t\t}\n\t\tif (C == 'U') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] == '_') {\n\t\t\t\t\ti++; if (S[i] <= 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] - 32);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tD += S[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (D[0] > 'Z')D[0] -= 32;\n\t\t}\n\t\tif (C == 'D') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] <= 'Z' && i >= 1) { D += '_'; }\n\t\t\t\tif (S[i] <= 'Z') { D += (char)(S[i] + 32); }\n\t\t\t\telse { D += S[i]; }\n\t\t\t}\n\t\t}\n\t\tcout << D << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\nusing namespace std;\n\nint main(){\n  int i=0;\n  string s,t;\n  for(;cin >> s >> t,t!=\"X\";){\n  if(find(s.begin(),s.end(),'_')!=s.end()){\n    if(t!=\"D\"){\n      for(i=0;i<s.length();i++)\n        if(s[i]=='_'){\n          if(s[i+1]=='_'||s[i+1]==0){cout << \"Error!\" << endl;return 0;}\n          s.erase(i,1),s[i]-=0x20;\n        }\n      if(t==\"U\")s[0]-=0x20;\n    }\n    cout << s << endl;\n  }else{\n    if(between('A',s[0],'Z'))s[0]+=0x20;\n    if(t==\"U\")s[0]-=0x20;\n    if(t==\"D\")\n      for(i=0;i<s.length();i++)\n        if(between('A',s[i],'Z'))s.insert(i,1,'_'),s[++i]+=0x20;\n    cout << s << endl;\n  }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\nusing namespace std;\n\nint i, j;\n\nvector <string> word(string str);\n\nint main(void)\n{\n\tstring str;\n\tchar type;\n\twhile (cin >> str >> type, type != 'X'){\n\t\tint flag = 0;\n\t\tvector <string> vs = word(str);\n\t\tif (type == 'L'){\n\t\t\tcout << vs[0];\n\t\t\tfor (i = 1; i < vs.size(); i++){\n\t\t\t\tvs[i][0] ^= 32;\n\t\t\t\tcout << vs[i];\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t\tif (type == 'U'){\n\t\t\tfor (i = 0; i < vs.size(); i++){\n\t\t\t\tvs[i][0] ^= 32;\n\t\t\t\tcout << vs[i];\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t\tif (type == 'D'){\n\t\t\tfor (i = 0; i < vs.size(); i++){\n\t\t\t\tcout << vs[i];\n\t\t\t\tif (i + 1 != vs.size()) cout << \"_\";\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\t\n\treturn 0;\n}\n\nvector <string> word(string str)\n{\n\tvector <string> vs;\n\tbool flag = false;\n\tfor (i = 0; i < str.size(); i++){\n\t\tif (str[i] == '_') {\n\t\t\tflag = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\tstring tmp;\n\tif (flag){\n\t\tfor (i = 0; i < str.size(); i++){\n\t\t\tif (str[i] != '_'){\n\t\t\t\ttmp += (str[i] |= 32);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvs.push_back(tmp);\n\t\t\t\ttmp.clear();\n\t\t\t}\n\t\t}\n\t\tvs.push_back(tmp);\n\t\treturn vs;\n\t}\n\t\n\tif ('a' <= str[0] && str[0] <= 'z'){\n\t\tfor (i = 0; i < str.size(); i++){\n\t\t\tif (!('A' <= str[i] && str[i] <= 'Z')){\n\t\t\t\ttmp += (str[i] |= 32);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvs.push_back(tmp);\n\t\t\t\ttmp.clear();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tfor (; i < str.size(); i++){\n\t\t\ttmp += (str[i] |= 32);\n\t\t\tif (('A' <= str[i + 1] && str[i + 1] <= 'Z') && i + 1 < str.size()){\n\t\t\t\tvs.push_back(tmp);\n\t\t\t\ttmp.clear();\n\t\t\t}\n\t\t}\n\t\tvs.push_back(tmp);\n\t\treturn vs;\n\t}\n\t\n\tif ('A' <= str[0] && str[0] <= 'Z'){\n\t\tfor (i = 0; i < str.size(); i++){\n\t\t\ttmp += (str[i] |= 32);\n\t\t\tif (('A' <= str[i + 1] && str[i + 1] <= 'Z') && i + 1 < str.size()){\n\t\t\t\tvs.push_back(tmp);\n\t\t\t\ttmp.clear();\n\t\t\t}\n\t\t}\n\t\tvs.push_back(tmp);\n\t\treturn vs;\n\t}\n\t\n\treturn vs;\n}\n\t"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nint main(){\n\n\tstring str;\n\twhile(1){\n\t\tgetline(cin,str);\n\t\tstring name = str.substr(0,str.size()-2);\n\t\tchar type = str[str.size()-1];\n\t\tif(type=='L'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]+'a'-'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='U'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tcout << (char)(name[0]-'a'+'A') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] == '_'){\n\t\t\t\t\t\tcout << (char)(name[i+1]-'a'+'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << name[0] << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t}\n\t\telse if(type=='D'){\n\t\t\tif(name[0] >= 'a' && name[0] <= 'z'){\n\t\t\t\tfor(int i = 0; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i]+'a'-'A') << flush;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tcout << name[i] << flush;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcout<<endl;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tcout << (char)(name[0]-'A'+'a') << flush;\n\t\t\t\tfor(int i = 1; i < name.size(); i++){\n\t\t\t\t\tif(name[i] >= 'A' && name[i] <= 'Z'){\n\t\t\t\t\t\tcout <<'_'<<flush;\n\t\t\t\t\t\tcout << (char)(name[i] - 'A'+'a') << flush;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tcout << name[i]<<flush;\n\t\t\t\t}\n\t\t\t\tcout << endl;\n\t\t\t}\n\t\t}\n\t\telse\n\t\t\tbreak;\n\t\t//cout<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  string str;\n  char S;\n  while(1){\n    cin>>str;\n    cin>>S;\n\n    if(S=='X') break;\n\n    else  if(S=='L'){\n      if(str[0]>='A' && str[0]<='Z') str[0]+=32;\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') str[i+1]-=32;\n      }\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n    }\n    \n    else  if(S=='U') {\n      if(str[0]>='a' && str[0]<='z') str[0]-=32;\n    \n    for(int i=0;i<str.size();i++){\n    if(str[i]=='_') str[i+1]-=32;\n  }\n  for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n      \n    }\n    \n  else  if(S=='D'){\n    for(int i=0;i<str.size();i++){\n      if(str[i]>=65 && str[i]<=90){\n\tstr[i]+=32;\n      }\n      if(i>0 && str[i+1]>=65 && str[i+1]<=90){\n\tcout<<str[i]<<\"_\";\n      }\n      else cout<<str[i];\n    }\n    cout<<endl;\n  }\n  }\n  return 0;\n  }"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cctype>\nusing namespace std;\nint main(){\n  string s,type;\n\n  while(cin>> s >> type, type!=\"X\" ){\n    int st=0;\n    vector<string> v;\n    for( int i=0;i<(int)s.length();i++ ){\n      if( i==s.length()-1 ){\n\tv.push_back( s.substr(st) ); break;\n      }\n      if( isupper(s[i]) ){\n\ts[i] = tolower(s[i]);\n\tif( i>0 )\n\t  v.push_back( s.substr(st,i-st) );\n\tst = i;\n      }\n      if( s[i]=='_' ){\n\tv.push_back( s.substr(st, i-st) );\n\tst = i+1;\n      }\n    }\n\n    //#define DEBUG\n#ifdef DEBUG\n    cout << endl;\n    cout << s << \" => \" << type << endl;\n    for( int i=0;i<v.size();i++ )\n      cout << \" [\" << v[i] << \"]\";\n    cout << endl;\n    cout << \"[\";\n#endif\n    for( int i=0;i<v.size();i++ ){\n      if( (type==\"L\"&&i>0) || type==\"U\" ){\n\tv[i][0] = toupper(v[i][0]);\n      }\n      if( type==\"D\" && i>0 )\n\tcout << \"_\";\n      cout << v[i];\n    }\n    cout << endl;\n\n#ifdef DEBUG\n    cout << \"]\";\n#endif\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n\n  string s;\n  char c;\n  int n = 'a' - 'A';\n\n  while(true){\n    cin >> s >> c;\n    if(c == 'X') break;\n\n    string ss = \"\";\n\n    if(c == 'U'){\n      if(s[0] <= 'z' && s[0] >= 'a') s[0] -= n;\n      for(int i=0;i<s.size();i++){\n\tif(s[i] == '_'){\n\t  s[i+1] -= n;\n\t  continue;\n\t}\n\tss += s[i];\n      }\n    }\n\n    if(c == 'L'){\n      if(s[0] <= 'Z' && s[0] >= 'A') s[0] += n;\n      for(int i=0;i<s.size();i++){\n\tif(s[i] == '_'){\n\t  s[i+1] -= n;\n\t  continue;\n\t}\n\tss += s[i];\n      }\n    }\n\n    if(c == 'D'){\n      if(s[0] <= 'Z' && s[0] >= 'A') s[0] += n;\n      for(int i=0;i<s.size();i++){\n\tif(s[i+1] <= 'Z' && s[i+1] >= 'A'){\n\t  ss += s[i];\n\t  ss += '_';\n\t  s[i+1] += n;\n\t  continue;\n\t}\n\tss += s[i];\n      }\n    }\n\n    cout << ss << endl;\n\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <numeric>\n#include <set>\n#include <map>\n#include <string>\n#include <stack>\n#include <queue>\n#include <cmath>\n#include <cstdio>\n#include <istream>\n#include <sstream>\n#include <iomanip>\n#include <iterator>\n#include <climits>\nusing namespace std;\n\ntypedef ostringstream OSS;\ntypedef istringstream ISS;\n\ntypedef vector<int> VI;\ntypedef vector< VI > VVI;\n\ntypedef long long LL;\n\ntypedef pair<int, int> PII;\ntypedef vector<PII> VPII;\n\n#define X first\n#define Y second\n\nstring toUpperCamelCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += toupper(s[i]);\n\t\t} else if (s[i] == '_') {\n\t\t\tres += toupper(s[i + 1]);\n\t\t\ti++;\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nstring toLowerCamelCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += tolower(s[i]);\n\t\t} else if (s[i] == '_') {\n\t\t\tres += toupper(s[i + 1]);\n\t\t\ti++;\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nstring toSnakeCase(string s) {\n\tstring res;\n\n\tfor (int i = 0; i < (int)s.size(); i++) {\n\t\tif (i == 0) {\n\t\t\tres += tolower(s[i]);\n\t\t} else if (isupper(s[i])) {\n\t\t\tres += '_';\n\t\t\tres += tolower(s[i]);\n\t\t} else {\n\t\t\tres += s[i];\n\t\t}\n\t}\n\n\treturn res;\n}\n\nint main(void) {\n\tstring s;\n\tchar c;\n\n\twhile (true) {\n\t\tcin >> s >> c;\n\t\tif (c == 'X') break;\n\n\t\tswitch (c) {\n\t\t\tcase 'L':\n\t\t\t\ts = toLowerCamelCase(s);\n\t\t\t\tbreak;\n\t\t\tcase 'U':\n\t\t\t\ts = toUpperCamelCase(s);\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\ts = toSnakeCase(s);\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcout << s << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    bool flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z' ||\n\t str[i] == '_') flag[i] = 1;\n    }\n\n    if(op != 'D'){\n    if(op == 'U'){\n      if('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n      for(int i = 0 ; i < str.size() ; i++){\n\tif(str[i] == '_'){\n\t  str[i] = 0;\n\t  if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t}\n      }\n    }\n\n    if(op == 'L'){\n      if('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n      for(int i = 0 ; i < str.size() ; i++){\n\tif(flag[i] == 1){\n\t  str[i] = 0;\n\t  if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t}\n      }\n    }\n\n    cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n\t}\n    }\n\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std ;\n\nstring s ;\nchar ans[200] ;\n\nint main(){\n\t\n\tchar t ;\n\t\n\twhile( cin >> s >> t ){\n\t\tif( t == 'X' ) break ;\n\t\t\n\t\tint p = 1 ;\n\t\t\n\t\tif( s[0] <= 90 && t != 'U' ) ans[0] = s[0] +32 ;\n\t\telse if( s[0] >= 97 && t == 'U' ) ans[0] = s[0] -32 ;\n\t\telse ans[0] = s[0] ;\n\t\tfor( int i=1 ; i<s.size() ; i++ ){\n\t\t\tif( s[i] == '_' && t != 'D' ){\n\t\t\t\tans[p] = s[i+1] -32 ;\n\t\t\t\ti++ ;\n\t\t\t}\n\t\t\telse if( s[i] <= 90 && t == 'D' ){\n\t\t\t\tans[p] = '_' ;\n\t\t\t\tans[p+1] = s[i] +32 ;\n\t\t\t\tp++ ;\n\t\t\t} else ans[p] = s[i] ;\n\t\t\t\n\t\t\tp++ ;\n\t\t}\n\t\t\n\t\tfor( int i=0 ; i<p ; i++ ){\n\t\t\tcout << ans[i] ;\n\t\t}cout << endl ;\n\t}\n\t\nreturn 0 ;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\nusing namespace std;\n\nint main()\n{\n\tchar str[1024];\n\tchar type;\n\twhile (scanf(\"%s %c\", str, &type), type != 'X'){\n\t\tchar word[128][128];\n\t\tint j = 0;\n\t\t\n\t\tfor (int i = 0; i < 128; i++){\n\t\t\tstrcpy(word[i], \"\");\n\t\t}\n\t\t\n\t\t{\n\t\t\tint i = 0;\n\t\t\twhile (str[i] != '\\0'){\n\t\t\t\tif ( (str[i] >= 'a' && str[i] <= 'z') || i == 0 ){\n\t\t\t\t\tif (str[i] >= 'A' && str[i] <= 'Z'){\n\t\t\t\t\t\tstr[i] += 32;\n\t\t\t\t\t}\n\t\t\t\t\tstrncat(word[j], &str[i], 1);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if (str[i] >= 'A' && str[i] <= 'Z'){\n\t\t\t\t\tj++;\n\t\t\t\t\tstr[i] += 32;\n\t\t\t\t\tstrncat(word[j], &str[i], 1);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse if (str[i] == '_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tswitch (type){\n\t\t\tcase 'U':\n\t\t\tcase 'L':\n\t\t\tfor (int i = 0; i <= j; i++){\n\t\t\t\tif (i == 0 && type == 'L'){\n\t\t\t\t\tprintf(\"%s\", word[i]);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tword[i][0] -= 32;\n\t\t\t\t\tprintf(\"%s\", word[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t\t\t\n\t\t\tcase 'D':\n\t\t\tfor (int i = 0; i <= j; i++){\n\t\t\t\tif (i > 0){\n\t\t\t\t\tprintf(\"_\");\n\t\t\t\t}\n\t\t\t\tprintf(\"%s\", word[i]);\n\t\t\t}\n\t\t}\n\t\t\n\t\tputs(\"\");\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <queue>\n#include <stack>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <cmath>\n#include <complex>\n#include <map>\n#include <climits>\n#include <sstream>\nusing namespace std;\n\n#define reep(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n) reep((i),0,(n))\n#define ALL(v) (v).begin(),(v).end()\n#define PB push_back\n#define EPS 1e-8\n#define F first\n#define S second\n#define mkp make_pair\n\nstatic const double PI=6*asin(0.5);\ntypedef long long ll;\ntypedef complex<double> CP;\ntypedef pair<int,int> pii;\ntypedef pair<ll,ll> pll;\ntypedef vector<int> vint;\nstatic const int INF=1<<24;\n\ntemplate <class T>\nvoid initvv(vector<vector<T> > &v,int a,int b, const T  &t = T()){\n\tv.assign(a,vector<T>(b,t));\n}\n\n//v.erase(unique(v.begin(),v.end()),v.end());\n\nbool foo1(char t){\n\tif('A'<=t&&t<='Z') return true;\n\treturn false;\n}\n\nint main(){\n\tstring s;\n\tchar t;\n\twhile(cin>>s>>t,t!='X'){\n\t\tvector<string> vs;\n\t\tint x=0;\n\t\trep(i,s.size()){\n\t\t\tif(i==0) continue;\n\t\t\tif(foo1(s[i])){\n\t\t\t\tvs.PB(s.substr(x,i-x));\n\t\t\t\tx=i;\n\t\t\t}\n\t\t\telse if(s[i]=='_'){\n\t\t\t\tvs.PB(s.substr(x,i-x));\n\t\t\t\tx=i+1;\n\t\t\t}\n\n\t\t}\n\t\tvs.PB(s.substr(x));\n\t\trep(i,vs.size()){\n\t\t\trep(j,vs[i].size()){\n\t\t\t\tif(foo1(vs[i][j])){\n\t\t\t\t\tvs[i][j]+='a'-'A';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(t=='U'){\n\t\t\trep(i,vs.size()){\n\t\t\t\tvs[i][0]+='A'-'a';\n\t\t\t\tcout<<vs[i];\n\t\t\t}\n\t\t\t// cout<<endl;\n\t\t}\n\t\telse if(t=='L'){\n\t\t\trep(i,vs.size()){\n\t\t\t\tif(i) vs[i][0]+='A'-'a';\n\t\t\t\tcout<<vs[i];\n\t\t\t}\n\t\t}\n\t\telse if(t=='D'){\n\t\t\trep(i,vs.size()){\n\t\t\t\tif(i){\n\t\t\t\t\tcout<<\"_\";\n\t\t\t\t}\n\t\t\t\tcout<<vs[i];\n\t\t\t}\n\t\t}\n\t\tcout<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <sstream>\n#include <algorithm>\n#include <vector>\n#include <utility>\n#include <stack>\n#include <queue>\n#include <map>\n#include <set>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n \nusing namespace std;\n \n#define rep(i,n) for(int i=0; i<(n); i++)\n#define repc(i,s,e) for(int i=(s); i<(e); i++)\n#define pb(n) push_back((n))\n#define mp(n,m) make_pair((n),(m))\n#define all(r) r.begin(),r.end()\n#define fi first\n#define se second\n \ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef vector<vi> vii;\ntypedef vector<ll> vl;\ntypedef vector<vl> vll;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\n \n \nconst int INF = 10000000;\n\nvector<string> split(const string &s, char c = ' '){\n\tvector<string> ret;\n\tstringstream ss(s);\n\tstring t;\n\twhile(getline(ss,t,c)){\n\t\tret.pb(t);\n\t}\n\treturn ret;\n}\n\nvector<string> get_word(string s){\n\tvector<string> ret;\n\tfor(int i = 0; i < s.size(); i++){\n\t\tfor(int j = i; j < s.size(); j++){\n\t\t\tif((s[j] >= 'A' && s[j] <= 'Z') || j == s.size() - 1){\n\t\t\t\tif(s[j] > 'Z' && j == s.size() - 1) j++;\n\t\t\t\telse s[j] += 'a' - 'A';\n\t\t\t\tret.push_back(s.substr(i, j - i));\n\t\t\t\ti = j - 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn ret;\n}\n\nstring calc(string s, string t1, string t2){\n\tstring ret;\n\tif(t1 == \"U\"){\n\t\tif(t2 == \"L\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'a' - 'A';\n\t\t}\n\t\telse if(t2 == \"D\"){\n\t\t\ts[0] += 'a' - 'A';\n\t\t\tvector<string> v = get_word(s);\n\t\t\t// cout<<\"  \";\n\t\t\t// for(int i = 0; i < v.size(); i++){\n\t\t\t// \tcout<<v[i];\n\t\t\t// }\n\t\t\t// cout<<endl;\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\t//s[0] += 'a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t\telse ret = s;\n\t}\n\telse if(t1 == \"L\"){\n\t\tif(t2 == \"U\"){\n\t\t\tret = s;\n\t\t\tret[0] += 'A' - 'a';\n\t\t}\n\t\telse if(t2 == \"D\"){\n\t\t\tvector<string> v = get_word(s);\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\t//s[0] +='a' - 'A';\n\t\t\t\tif(ret.size() != 0) ret += \"_\";\n\t\t\t\tret += s; \n\t\t\t}\n\t\t}\n\t\telse ret = s;\n\t}\n\telse{\n\t\tif(t2 == \"U\"){\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\ts[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t\telse if(t2 == \"L\"){\n\t\t\tvector<string> v = split(s, '_');\n\t\t\tfor(int i = 0; i < v.size(); i++){\n\t\t\t\ts = v[i];\n\t\t\t\tif(i != 0) s[0] += 'A' - 'a';\n\t\t\t\tret += s;\n\t\t\t}\n\t\t}\n\t\telse ret = s;\n\t}\n\treturn ret;\n}\n\nint main(){\n\tstring s, t;\n\twhile(cin>>s>>t && t != \"X\"){\n\t\tif(s.find(\"_\") != string::npos) cout<<calc(s, \"D\", t);\n\t\telse if(s[0] >= 'A' && s[0] <= 'Z') cout<<calc(s, \"U\", t);\n\t\telse cout<<calc(s,\"L\", t);\n\t\tcout<<endl;\n\t}\n\t\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nstring check(string str) {\n  string str2;\n  if('A'<=str[0] && str[0] <='Z') {\n    str2 +=  str[0] +32;\n    for(int i=1;i<str.size();i++) {\n      if('A' <=str[i] && str[i] <= 'Z') {\n\tstr2 += '_';\n\tstr2 += str[i] + 32;\n      }\n      else str2  += str[i];\n    }\n    return str2;\n  }\n\n  \n  for(int i=0;i<str.size();i++)\n    if(str[i] == '_') return str;\n\n  for(int i=0;i<str.size();i++) {\n    if('A'<=str[i] && str[i] <='Z') {\n      str2 += '_';\n      str2 += str[i] + 32;\n    }\n    else str2 += str[i];\n  }\n\n  return str2;\n\n}\n\nint main() {\n\n  while(1) {\n    string str;\n    cin >> str;\n    string ch;\n    cin >> ch;\n    if(ch == \"X\") break;\n    \n    str= check(str);\n    //    cout << str << endl;\n\n    if(ch == \"D\") cout << str << endl;\n    \nelse if(ch == \"L\") {\n      cout << str[0];\n      for(int i=1;i<str.size();i++) {\n\tif(str[i] == '_') {\n\t  i++;\n\t  str[i] -= 32;\n\t  cout << str[i];\n\t}\n\telse cout << str[i];\n      }\n      cout << endl;\n    }\n    else if(ch == \"U\"){\n      str[0] -= 32;\n      cout << str[0];\n      for(int i=1;i<str.size();i++) {\n\tif(str[i] == '_') {\n\t  i++;\n\t  str[i] -= 32;\n\t  cout << str[i];\n\t}\n\telse {\n\t  cout << str[i];\n\t}\n      }\n      cout << endl;\n    }\n\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include<math.h>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tchar buf[101],result[500],type;\n\tint p,i;\n\n\twhile(true){\n\t\tscanf(\"%s %c\",buf,&type);\n\t\tif(type == 'X')break;\n\n\t\tp = 0;\n\t\tswitch(type){\n\t\tcase 'U':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\tcase 'L':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tif(buf[i] >= 97 && buf[i] <= 122){\n\t\t\t\t\t\tresult[p++] = buf[i] - 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tfor(i = 0;buf[i] != '\\0';){\n\t\t\t\tif(i == 0){\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}else if(buf[i] == '_'){\n\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\ti++;\n\t\t\t\t}else{\n\t\t\t\t\tif(buf[i] >= 65 && buf[i] <= 90){\n\t\t\t\t\t\tresult[p++] = '_';\n\t\t\t\t\t\tresult[p++] = buf[i] + 32;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tresult[p++] = buf[i];\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[p] = '\\0';\n\n\n\t\t\tprintf(\"%s\\n\",result);\n\t\t\tbreak;\n\t\t}\n\t}\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nstring ULtoD(string s){\n  stringstream ss;\n  ss << (char)tolower(s[0]);\n  FOR(i, 1, s.length()){\n    if(isupper(s[i])) ss << '_' << (char)tolower(s[i]);\n    else ss << (char)tolower(s[i]);\n  }\n  return ss.str();\n}\n\nstring DtoUL(string s, char t){\n  stringstream ss;\n  ss << (char)(t == 'U' ? toupper(s[0]) : s[0]);\n  FOR(i, 1, s.length()){\n    if(s[i] == '_') ss << (char)toupper(s[++i]);\n    else ss << s[i];\n  }\n  return ss.str();\n}\n\nint main() {\n  string s; char t;\n  while(cin >>s >>t && t != 'X'){\n    char bt;\n    if(isupper(s[0])) bt = 'U';\n    else if(s.find('_') != string::npos) bt = 'D';\n    else bt = 'L';\n    if(bt == 'U'){\n      if(t == 'L') s[0] = tolower(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else if(bt == 'L'){\n      if(t == 'U') s[0] = toupper(s[0]);\n      if(t == 'D') s = ULtoD(s);\n    } else if(t != 'D') s = DtoUL(s, t);\n    cout <<s <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int len,i;\n  string str,out;\n  char type;\n  while(1){\n    out=\"\";\n    cin >> str >> type;\n    len=str.size();\n    if(type=='X') break;\n    if(type=='U'){\n      for(i=0;i<len;i++){\n\tif(i==0) out+=str[i]-'a'+'A';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='L'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\telse{\n\t  if(str[i]=='_'){\n\t    out+=str[i+1]-'a'+'A';\n\t    i++;\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    else if(type=='D'){\n      for(i=0;i<len;i++){\n\tif(i==0&&str[i]<'a') out+=str[i]-'A'+'a';\n\telse{\n\t  if(str[i]<'a'){\n\t    out+='_';\n\t    out+=str[i]-'A'+'a';\n\t  }else out+=str[i];\n\t}\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nstring solve(string s, char c){\n    if('A' <= s[0] && s[0] <= 'Z')\n        s[0] += 'a' - 'A';\n    s += '_';\n    int n = s.size();\n\n    int j = 0;\n    vector<string> vs;\n    for(int i=0; i<n; ++i){\n        if('A' <= s[i] && s[i] <= 'Z'){\n            s[i] += 'a' - 'A';\n            vs.push_back(s.substr(j, i-j));\n            j = i;\n        }else if(s[i] == '_'){\n            vs.push_back(s.substr(j, i-j));\n            j = i+1;\n        }\n    }\n\n    int m = vs.size();\n    if(c == 'U')\n        vs[0][0] += 'A' - 'a';\n    s = vs[0];\n\n    for(int i=1; i<m; ++i){\n        if(c == 'D'){\n            s += '_' + vs[i];\n        }else{\n            vs[i][0] += 'A' - 'a';\n            s += vs[i];\n        }\n    }\n    return s;\n}\n\nint main()\n{\n    for(;;){\n        string s;\n        char c;\n        cin >> s >> c;\n        if(s == \"EndOfInput\")\n            return 0;\n\n        cout << solve(s, c) << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nint main() {\n    string name;\n    char type;\n    string UP;\n    for (int i = 0; i < 26; i++) {\n        UP += 'A' + i;\n    }\n\n    while (cin >> name >> type) {\n        if (type == 'U') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            while (ss >> str) {\n                str[0] = toupper(str[0]);\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'L') {\n            stringstream ss;\n            for (auto& i : name) if (i == '_') i = ' ';\n            ss << name;\n            string str;\n            ss >> str;\n            str[0] = tolower(str[0]);\n            cout << str;\n            while (ss >> str) {\n                str[0] = toupper(str[0]);\n                cout << str;\n            }\n            cout << endl;\n        } else if (type == 'D'){\n            for (int i = 0; i < name.size(); i++) {\n                if (UP.find(name[i]) != string::npos) {\n                    name[i] = name[i] - 'A' + 'a';\n                    name.insert(i, \" \");\n                }\n            }\n            stringstream ss;\n            ss << name;\n            string str;\n            ss >> str;\n            cout << str;\n            while (ss >> str) {\n                cout << \"_\" << str;\n            }\n            cout << endl;\n        } else {\n            break;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cctype>\n#include <cstdlib>\n#include <iostream>\nusing namespace std;\n\nint main() {\n\tcin.tie(nullptr);\n\tios::sync_with_stdio(false);\n\n\tfor(string name, type; cin >> name >> type && type != \"X\";) {\n\t\tstring ans = \"\";\n\t\tint prev = 0;\n\t\tfor(unsigned i = 0; i < name.size(); ++i) {\n\t\t\tif(name[i] == '_' || isupper(name[i])) {\n\t\t\t\tif(type == \"U\") {\n\t\t\t\t\tname[prev] = toupper(name[prev]);\n\t\t\t\t\tans += name.substr(prev, i - prev);\n\t\t\t\t}\n\t\t\t\telse if(type == \"L\") {\n\t\t\t\t\tif(prev) name[prev] = toupper(name[prev]);\n\t\t\t\t\telse name[prev] = tolower(name[prev]);\n\t\t\t\t\tans += name.substr(prev, i - prev);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tname[prev] = tolower(name[prev]);\n\t\t\t\t\tif(prev) ans += '_';\n\t\t\t\t\tans += name.substr(prev, i - prev);\n\t\t\t\t}\n\n\t\t\t\tprev = i;\n\t\t\t\tif(name[i] == '_') ++prev;\n\t\t\t}\n\t\t}\n\t\tif(type == \"D\") {\n\t\t\tname[prev] = tolower(name[prev]);\n\t\t\tans += '_';\n\t\t}\n\t\telse {\n\t\t\tname[prev] = toupper(name[prev]);\n\t\t}\n\t\tans += name.substr(prev);\n\t\tcout << ans << endl;\n\t}\n\n\treturn EXIT_SUCCESS;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\n#include <string>\n#include <algorithm>\n#include <cctype>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    int flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z') flag[i] = 1;\n      if(str[i] == '_') flag[i] = 2;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] = toupper(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  \n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] = tolower(str[0]);\n\tfor(int i = 0 ; i < str.size() ; i++){\n\t  if(flag[i] == 2 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] = toupper(str[i+1]);\n\t  }\n\t}\n      }\n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] = tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      }\n    }  \n    cout << endl;   \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cctype>\n#include <vector>\n \nusing namespace std;\n \nint len;\n \nstring UpperCamelCase(vector<string> v){\n    string res = \"\";\n \n    for(int i = 0 ; i < len ; i++){\n\tif(islower(v[i][0])){\n\t    v[i][0] = toupper(v[i][0]);\n\t}\n\tres += v[i];\n    }\n \n    return res;\n}\n \nstring LowerCamelCase(vector<string> v){\n    string res = v[0];\n \n    for(int i = 1 ; i < len ; i++){\n\tif(islower(v[i][0])){\n\t    v[i][0] = toupper(v[i][0]);\n\t}\n\tres += v[i];\n    }\n \n    return res;\n}\n \nstring Under(vector<string> v){\n    string res = v[0];\n \n    for(int i = 1 ; i < len ; i++){\n\tres += '_' + v[i];\n    }\n   \n    return res;\n}\n \nint main(){\n    string s;\n    char order;\n \n    while(cin >> s >> order, order != 'X'){\n\tif(isupper(s[0])){\n\t    s[0] = tolower(s[0]);\n\t}\n\ts += '_';\n \n\tvector<string> v;\n\tint pos = 0;\n\tlen = (int)s.size();\n \n\tfor(int i = 0 ; i < len ; i++){\n\t    if(isupper(s[i])){\n\t\ts[i] = tolower(s[i]);\n\t\tv.push_back(s.substr(pos,i-pos));\n\t\tpos = i;\n\t    }else if(s[i] == '_'){\n\t\tv.push_back(s.substr(pos,i-pos));\n\t\tpos = i + 1;\n\t    }\n\t}\n \n\tlen = (int)v.size();\n     \n\tif(order == 'U'){\n\t    cout << UpperCamelCase(v) << endl;\n\t}else if(order == 'L'){\n\t    cout << LowerCamelCase(v) << endl;\n\t}else{\n\t    cout << Under(v) << endl;\n\t}\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <cctype>\nusing namespace std;\n\nint main()\n{\n  string name, type;\n  while (cin >> name >> type) {\n    if (type == \"X\")\n      break;\n\n    name[0] = tolower(name[0]);\n    vector<string> words;\n    if (name.find_first_of(\"_\") != string::npos) {\n      int s = 0;\n      name += \"_\";\n      for (int i = 0; i < name.size(); ++i) {\n\tif (name[i] == '_') {\n\t  words.push_back(name.substr(s, i-s));\n\t  s = i+1;\n\t}\n      }\n    } else {\n      int s = 0;\n      name += \"X\";\n      for (int i = 0; i < name.size(); ++i) {\n\tif (isupper(name[i])) {\n\t  words.push_back(name.substr(s, i-s));\n\t  name[i] = tolower(name[i]);\n\t  s = i;\n\t}\n      }\n    }\n\n    if (type == \"D\") {\n      cout << words[0];\n      for (int i = 1; i < words.size(); ++i)\n\tcout << \"_\" << words[i];\n    } else {\n      if (type == \"U\")\n\twords[0][0] = toupper(words[0][0]);\n      cout << words[0];\n\n      for (int i = 1; i < words.size(); ++i) {\n\twords[i][0] = toupper(words[i][0]);\n\tcout << words[i];\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\n\nchar Aa(char a, bool b) {\n\t//b ??§??????\n\tif (b) {\n\t\tif (a >= 'a')return a - 32;\n\t\treturn a;\n\t}\n\telse {\n\t\tif (a <= 'Z')return a + 32;\n\t\treturn a;\n\t}\n}\nint main() {\n\tstring a; char b;\n\twhile (cin >> a >> b, b != 'X') {\n\t\tvector<string>c; string d; \n\t\td += a[0];\n\t\tfor (int i = 1; i < a.length();i++) {\n\t\t\tchar e = a[i];\n\t\t\tif (e == '_') { c.push_back(d); d = \"\"; }\n\t\t\telse if (e <= 'Z') { c.push_back(d); d = \"\"; d += e; }\n\t\t\telse d += e;\n\t\t}\n\t\tc.push_back(d);\n\t\tswitch (b)\n\t\t{\n\t\tcase 'U':\n\t\t\tfor (string i : c) {\n\t\t\t\tcout << Aa(i[0], true);\n\t\t\t\tfor (int x = 1; x < i.length(); x++) {\n\t\t\t\t\tcout << i[x];\n\t\t\t\t}\n\t\t\t}\n\t\t\tcout << endl; break;\n\t\tcase 'L':\n\t\t\tfor (int j = 0; j < c.size(); j++) {\n\t\t\t\tif (j)cout << Aa(c[j][0], true);\n\t\t\t\telse cout << Aa(c[j][0], false);\n\t\t\t\tfor (int i = 1; i < c[j].length(); i++)cout << c[j][i];\n\t\t\t}\n\t\t\tcout << endl; break;\n\t\tcase 'D':\n\t\t\tfor (int j = 0; j < c.size(); j++) {\n\t\t\t\tif (j)cout << '_';\n\t\t\t\tcout << Aa(c[j][0], false);\n\t\t\t\tfor (int i = 1; i < c[j].length(); i++)cout << c[j][i];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <iostream>\n#define between(a,x,b) ((a)<=(x)&&(x)<=(b))\nusing namespace std;\n\nint main(){\n  int i=0;\n  string s,t;\n  for(;cin >> s >> t,t!=\"X\";){\n  if(find(s.begin(),s.end(),'_')!=s.end()){\n    for(i=0;i<s.length();i++)\n      if(s[i]=='_'){\n        if(s[i+1]=='_'||s[i+1]==0){cout << \"Error!\" << endl;return 0;}\n        s.erase(i,1),s[i]-=0x20;\n      }\n    if(t==\"U\")s[0]-=0x20;\n    cout << s << endl;\n  }else{\n    if(t==\"U\")s[0]-=0x20;\n    else if(t==\"L\")s[0]+=0x20;\n    else for(i=1;i<s.length();i++)\n      if(between('A',s[i],'Z'))s.insert(i,1,'_'),s[++i]+=0x20;\n    cout << s << endl;\n  }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\nint main(){\n  int i,len;\n  char type;\n  string name,out;\n  while(1){\n    out=\"\";\n    cin >> name >> type;\n    if(type=='X') break;\n    len=name.size();\n    for(i=0;i<len;i++){\n      if(i==0){\n\tif(name[i]<'a') out+=name[i]-'A'+'a';\n\telse if(name[i]>='a'&&type=='U') out+=name[i]-'a'+'A';\n\telse out+=name[i];\n      }\n      else{\n\tif(name[i]=='_'){\n\t  out+=name[i+1]-'a'+'A';\n\t  i++;\n\t}\n\telse if(name[i]<'a'&&type=='D'){\n\t  out+='_';\n\t  out+=name[i]-'A'+'a';\n\t}else out+=name[i];\n      }\n    }\n    cout << out << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define F first\n#define S second\n#define INF 1 << 30\n\ntypedef pair<int, int> pi;\ntypedef pair<int, pi> pii;\ntypedef vector<int> vi;\ntypedef queue<int> qi;\ntypedef long long ll;\n\nstring name;\nchar type;\n\nint main(){\n  while(cin >> name >> type && type != 'X'){\n    if(type == 'L'){\n      if(name[0] >= 'A' && name[0] <= 'Z') name[0] += 32;\n      rep(i, name.size()){\n\tif(name[i] != '_') continue;\n\tname.erase(name.begin()+i);\n\tname[i] -= 32;\n      }\n    }else if(type == 'U'){\n      if(name[0] >= 'a' && name[0] <= 'z') name[0] -= 32;\n      rep(i, name.size()){\n\tif(name[i] != '_') continue;\n\tname.erase(name.begin()+i);\n\tname[i] -= 32;\n      }\n    }else if(type == 'D'){\n      if(name[0] >= 'A' && name[0] <= 'Z') name[0] += 32;\n      rep(i, name.size()){\n\tif(name[i] >= 'a' && name[i] <= 'z') continue;\n\tname[i] += 32;\n\tname.insert(i, \"_\");\n      }\n    }\n\n    cout << name << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <string.h>\n#include <string>\n#include <algorithm>\n#include <cctype>\nusing namespace std;\nint main(){\n  char op;\n  string str;\n  while(cin >> str >> op, op != 'X'){\n    int flag[str.size()];\n    memset(flag, 0, sizeof(flag));\n    for(int i = 0 ; i < (int)str.size() ; i++){\n      if('A' <= str[i] && str[i] <= 'Z') flag[i] = 1;\n      if(str[i] == '_') flag[i] = 2;\n    }\n\n    if(op != 'D'){\n      if(op == 'U'){\n\tif('a' <= str[0] && str[0] <= 'z') str[0] -= 0x20; //toupper(str[0]);\n\tfor(int i = 0 ; i < (int)str.size() ; i++){\n\t  \n\t  if(str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] -= 0x20; //toupper(str[i+1]);\n\t  }\n\t}\n      }\n      \n      if(op == 'L'){\n\tif('A' <= str[0] && str[0] <= 'Z') str[0] += 0x20;  //tolower(str[0]);\n\tfor(int i = 0 ; i < (int)str.size() ; i++){\n\t  if(flag[i] == 2 && str[i] == '_'){\n\t    str[i] = 0;\n\t    if('a' <= str[i+1] && str[i+1] <= 'z') str[i+1] -= 0x20;// toupper(str[i+1]);\n\t  }\n\t}\n      }\n      cout << str;\n    }\n    \n    if(op == 'D'){\n      for(int i = 0 ; i < (int)str.size() ; i++){\n\tif('A' <= str[i] && str[i] <= 'Z') str[i] += 0x20;//tolower(str[i]);\n\tif(flag[i] == 1 && i != 0){\n\t  cout << '_';\n\t}\n\tcout << str[i];\n      }\n    }  \n    cout << endl;   \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<cctype>\n#include<sstream>\n\nusing namespace std;\n\nvector<string> parse(const string &str){\n  vector<string> ret;\n\n  stringstream ss;\n\n  for(int i = 0; i <= str.size(); i++){\n    if(i == str.size()){\n      ret.push_back(ss.str());\n      ss.str(\"\");\n    }else if(str[i] == '_'){\n      ret.push_back(ss.str());\n      ss.str(\"\");\n    }else if(isupper(str[i])){\n      if(ss.str().size() > 0) ret.push_back(ss.str());\n      ss.str(\"\");\n      ss << (char)tolower(str[i]);\n    }else{\n      ss << str[i];\n    }\n  }\n\n  return ret;\n}\n\nstring convert(const vector<string> &v, char dist){\n  stringstream ss;\n\n  bool first = true;\n\n  for(int i = 0; i < v.size(); i++){\n    string tmp = v[i];\n    \n    if(dist == 'U'){\n      tmp[0] = toupper(tmp[0]);\n    }else if(dist == 'L'){\n      if(!first) \n\ttmp[0] = toupper(tmp[0]);\n    }else if(dist == 'D'){\n      if(!first)\n\ttmp = \"_\" + tmp;\n    }\n\n    ss << tmp;\n    first = false;\n  }\n\n  return ss.str();\n}\n\nint main(){\n  string buff;\n  char dist;\n\n  while(cin >> buff >> dist, dist != 'X'){\n    cout << convert(parse(buff), dist) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cmath>\n#include <vector>\n#include <map>\n#include <stack>\n#include <queue>\n#include <algorithm>\n#include <set>\n\n#define FOR(i,a,b) for(int i=(a);i<(b);i++)\n#define REP(i,j) FOR(i,0,j)\n#define mp std::make_pair\n\nconst int INF = 1 << 24;\nconst int dx[8] = {0, 0, 1, -1, 1, 1, -1, -1}, dy[8] = {1, -1, 0, 0, 1, -1, 1, -1};\n\ntypedef unsigned long long ull;\ntypedef std::pair<int,int> P;\n\nbool isUSCase(const std::string &s){\n    return s.find(\"_\") != std::string::npos;\n}\n\nbool isUCCase(const std::string &s){\n    return std::isupper(s[0]);\n}\n\nbool isLCCase(const std::string &s){\n    return !isUSCase(s) && std::islower(s[0]);\n}\n\nint main(){\n    std::string s;\n    char c;\n\n    while(std::cin >> s >> c, c != 'X'){\n\n        if(isUSCase(s)){\n            if(c == 'U'){\n                s[0] = std::toupper(s[0]);\n                int pos = 0;\n                while(pos = s.find(\"_\", pos), pos != std::string::npos){\n                    s.replace(pos, 2, 1, std::toupper(s[pos+1]));\n                    pos++;\n                }\n            }else if(c == 'L'){\n                int pos = 0;\n                while(pos = s.find(\"_\", pos), pos != std::string::npos){\n                    s.replace(pos, 1, \"\");\n                    s[pos] = std::toupper(s[pos]);\n                }\n            }else if(c == 'D'){\n            \n            }\n        }else if(isUCCase(s)){\n            if(c == 'U'){\n            \n            }else if(c == 'L'){\n                s[0] = std::tolower(s[0]);\n            }else if(c == 'D'){\n                s[0] = std::tolower(s[0]);\n                std::string _s = \"\";\n                REP(i, s.size()){\n                    if(std::isupper(s[i]) && i > 0){\n                        _s += \"_\";\n                        s[i] = std::tolower(s[i]);\n                    }\n                    _s += s[i];\n                }\n                s = _s;\n            }\n        }else if(isLCCase(s)){\n            if(c == 'U'){\n                s[0] = std::toupper(s[0]);\n            }else if(c == 'L'){\n            \n            }else if(c == 'D'){\n                std::string _s = \"\";\n                REP(i, s.size()){\n                    if(std::isupper(s[i])){\n                        _s += '_';\n                        s[i] = std::tolower(s[i]);\n                    }\n                    _s += s[i];\n                }\n                s = _s;\n            }        \n        }\n\n        std::cout << s << std::endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\n\nint main(){\n  string str;\n  char S;\n  while(1){\n    cin>>str;\n    cin>>S;\n\n    if(S=='X') break;\n\n    else  if(S=='L'){\n      if(str[0]>='A' && str[0]<='Z') str[0]+=32;\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_' && str[i+1]>='a' && str[i+1]<='z' ) str[i+1]-=32;\n      }\n      for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n    }\n    \n    else  if(S=='U') {\n      if(str[0]>='a' && str[0]<='z') str[0]-=32;\n    \n    for(int i=0;i<str.size();i++){\n    if(str[i]=='_') str[i+1]-=32;\n  }\n  for(int i=0;i<str.size();i++){\n\tif(str[i]=='_') continue;\n\telse cout<<str[i];\n      }\n      cout<<endl;\n      \n    }\n    \n  else  if(S=='D'){\n    for(int i=0;i<str.size();i++){\n      if(str[i]>=65 && str[i]<=90){\n\tstr[i]+=32;\n      }\n      if(i>0 && str[i+1]>=65 && str[i+1]<=90){\n\tcout<<str[i]<<\"_\";\n      }\n      else cout<<str[i];\n    }\n    cout<<endl;\n  }\n  }\n  return 0;\n  }"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,a,n) for(int i=a;i<n;i++)\n#define all(a) a.begin(),a.end()\n#define o(a) cout<<a<<endl\n#define int long long\nusing namespace std;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef pair<int,int> pii;\n\nbool large(char c){\n\tif('A'<=c && c<='Z') return true;\n\treturn false;\n}\n\nchar change(char c){\n\tif('A'<=c && c<='Z') c+='a'-'A';\n\telse if('a'<=c && c<='z') c+='A'-'a';\n\treturn c;\n}\n\nsigned main(){\n\twhile(1){\n\t\tstring s,ans=\"\";\n\t\tchar c;\n\t\tcin>>s>>c;\n\t\tif(c=='X') break;\n\t\telse if(c=='D'){\n\t\t\tif(large(s[0])) ans+=change(s[0]);\n\t\t\telse ans+=s[0];\n\t\t\trep(i,1,s.size()){\n\t\t\t\tif(large(s[i])) ans=ans+'_'+change(s[i]);\n\t\t\t\telse ans+=s[i];\n\t\t\t}\n\t\t}else if(c=='U'){\n\t\t\tif(!large(s[0])) ans+=change(s[0]);\n\t\t\telse ans+=s[0];\n\t\t\trep(i,1,s.size()){\n\t\t\t\tif(s[i]=='_'){\n\t\t\t\t\tans+=change(s[i+1]);\n\t\t\t\t\ti++;\n\t\t\t\t}else ans+=s[i];\n\t\t\t}\n\t\t}else if(c=='L'){\n\t\t\tif(large(s[0])) ans+=change(s[0]);\n\t\t\telse ans+=s[0];\n\t\t\trep(i,1,s.size()){\n\t\t\t\tif(s[i]=='_'){\n\t\t\t\t\tans+=change(s[i+1]);\n\t\t\t\t\ti++;\n\t\t\t\t}else ans+=s[i];\n\t\t\t}\n\t\t}\n\t\to(ans);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\nusing namespace std;\nstring S; char C;\nint main() {\n\twhile (true) {\n\t\tcin >> S >> C; string D;\n\t\tif (C == 'X')break;\n\t\tif (C == 'L' || C == 'U') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] == '_') {\n\t\t\t\t\ti++; if (S[i] <= 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] - 32);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (S[i] > 'Z')D += S[i];\n\t\t\t\t\telse D += (char)(S[i] + 32);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (S[0] <= 'Z')S[0] += 32;\n\t\t}\n\t\tif (C == 'U') {\n\t\t\tif (S[0] > 'Z')S[0] -= 32;\n\t\t}\n\t\tif (C == 'D') {\n\t\t\tfor (int i = 0; i < S.size(); i++) {\n\t\t\t\tif (S[i] <= 'Z' && i >= 1) { D += '_'; }\n\t\t\t\tD += S[i];\n\t\t\t}\n\t\t}\n\t\tcout << D << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <vector>\n#include <string>\n#include <map>\n#include <set>\n#include <queue>\n#include <stack>\n#include <algorithm>\n\nusing namespace std;\n\n#define rep(i,j) REP((i), 0, (j))\n#define REP(i,j,k) for(int i=(j);(i)<(k);++i)\n#define BW(a,x,b) ((a)<=(x)&&(x)<=(b))\n#define F first\n#define S second\n#define INF 1 << 30\n\ntypedef pair<int, int> pi;\ntypedef pair<int, pi> pii;\ntypedef vector<int> vi;\ntypedef queue<int> qi;\ntypedef long long ll;\n\nstring name;\nchar type;\n\nint main(){\n  while(cin >> name >> type){\n    if(type == 'X') break;\n    if(name.find(\"_\") != std::string::npos){\n      if(type == 'U') name[0] -= 32;\n      rep(i, name.size()){\n\tif(name[i] != '_') continue;\n\tname.erase(name.begin()+i);\n\tname[i] -= 32;\n      }\n    }else{\n      if(type == 'L') name[0] += 32;\n      else if(type == 'U') name[0] -= 32;\n      else{\n\tif(name[0] < 97) name[0] += 32;\n\trep(i, name.size()){\n\t  if(name[i] > 90) continue;\n\t  name[i] += 32;\n\t  name.insert(i, \"_\");\n\t}\n      }\n    }\n    cout << name << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstring>\n#include<cstdio>\n#include<string>\n#include<vector>\n#include<algorithm>\n#include<iostream>\nusing namespace std;\nchar change1(char a){\n  if('A'<=a && a<='Z')\n    return a;\n  else\n    return a+'A'-'a';\n}\nchar change2(char a){\n  if('a'<=a && a<='z')\n    return a;\n  else\n    return a+'a'-'A';\n}\nint main(){\n  while(1){\n    string name,type;\n    vector<string> word;\n    cin >> name >> type;\n    if(type==\"X\") break;\n    int st = 0;\n    name += \"_\";\n    for(int i=1;i<(int)name.size();i++){\n      if(name[i]=='_'){\n\tword.push_back(name.substr(st,i-st));\n\tst = i+1;\n      } else if('A'<=name[i] && name[i]<='Z'){\n\tword.push_back(name.substr(st,i-st));\n\tst = i;\n      }\n    }\n    if(type==\"L\"){\n      for(int i=0;i<(int)word.size();i++){\n\tif(i==0) word[i][0]=change2(word[i][0]);\n\telse word[i][0]=change1(word[i][0]);\n\tcout << word[i];\n      }\n    } else if(type==\"U\"){\n      for(int i=0;i<(int)word.size();i++){\n\tword[i][0]=change1(word[i][0]);\n\tcout << word[i];\n      }\n    } else {\n      for(int i=0;i<(int)word.size();i++){\n\tword[i][0]=change2(word[i][0]);\n\tcout << word[i];\n\tif(i!=(int)word.size()-1) cout << \"_\";\n      }\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n#include<iostream>\n#include<string>\n#include<cmath>\n#include<vector>\n#include<stack>\n#include<queue>\n#include<algorithm>\n#include<complex>\n#include<stack>\nusing namespace std ;\ntypedef vector<int> vi ;\ntypedef vector<vi> vvi ;\ntypedef vector<string> vs ;\ntypedef pair<int, int> pii; \ntypedef long long ll ;\n\n#define loop(i,a,b) for(int i = a ; i < b ; i ++)\n#define rep(i,a) loop(i,0,a)\n#define all(a) (a).begin(),(a).end()\n\nint dx[4]={1,-1,0,0};\nint dy[4]={0,0,1,-1};\n\nint main(void){\n  string buf;\n  char com;\n  while(cin>>buf>>com,com!='X'){\n    string ans = \"\";\n    switch(com){\n    case 'L' :\n      ans = tolower(buf[0]);\n      loop(i,1,buf.size()){\n\tif(buf[i] == '_'){\n\t  ans += toupper(buf[++i]);\n\t}else{\n\t  ans += buf[i];\n\t}\t\n      }\n      break;\n    case 'U' :\n      ans = toupper(buf[0]);\n      loop(i,1,buf.size()){\n\tif(buf[i] == '_'){\n\t  ans += toupper(buf[++i]);\n\t}else{\n\t  ans += buf[i];\n\t}\n      }\n      break;\n    case 'D' :\n      ans = tolower(buf[0]);\n      loop(i,1,buf.size()){\n\tif('A'<=buf[i] && buf[i]<='Z'){\n\t  ans += '_';\n\t  ans += tolower(buf[i]);\n\t}else{\n\t  ans += buf[i];\n\t}\n      }\n    }\n    cout<<ans<<endl;\n  }\n}"
  },
  {
    "language": "Haskell",
    "code": "import Data.Char\n\nsplitBy :: Char -> String -> [String]\nsplitBy _ [] = []\nsplitBy a x =\n  let s = takeWhile (/= a) x\n      x'= dropWhile (/= a) x\n  in\n    if x' == []\n    then [s]\n    else s:(splitBy a $ drop 1 x')\n\nsplitC [] = []\nsplitC (x:xs) =\n  let s = takeWhile (\\a -> ord(a) >= ord('a') && ord(a) <= ord('z')) xs\n      r = dropWhile (\\a -> ord(a) >= ord('a') && ord(a) <= ord('z')) xs\n      x'= toLower x\n  in\n    (x':s):(splitC r)\n\nsplit' s = \n  let s1 = splitBy '_' s\n      s2 = concat $ map splitC s1\n  in\n    s2\n\ncamel (s:sx) = ( toUpper s):sx\n\ncnv 'X' _ = []\ncnv 'U' [] = []\ncnv 'U' (x:xs) = (camel x) ++ cnv 'U' xs\ncnv 'L' [] = []\ncnv 'L' (x:xs) = x ++ cnv 'U' xs\ncnv 'D' (x:[]) = x\ncnv 'D' (x:xs) = x ++ \"_\" ++ cnv 'D' xs\n\nans [t,c] = cnv (c!!0) $ split' t\n\nmain = do\n  c <- getContents\n  let i = filter(\\[a,b] -> b /= \"X\") $ map words $ lines c\n      o = map ans i\n  mapM_ putStrLn o"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative\nimport Control.Monad\nimport Control.Monad.ST\n-- import qualified Data.ByteString as BS\nimport Data.Functor\nimport Data.Function\nimport Data.Monoid\nimport Data.Maybe\nimport Data.List\nimport qualified Data.Foldable as Foldable\n--import qualified Data.Set as Set\n--import qualified Data.Sequence as Sequence\nimport Data.List.Split\nimport Data.Bits\nimport Data.Char\nimport Data.Ix\nimport Data.Ratio\nimport Data.Ord\nimport Data.Fixed\nimport Data.Tuple\nimport Data.Array\n--import Data.Array.Unboxed\n--import Data.Array.IArray\nimport Data.Array.MArray\nimport Data.Array.IO\nimport Data.Array.ST\nimport Data.IORef\nimport Data.STRef\nimport Text.Printf\nimport System.IO\n-- import System.IO.Unsafe\n \n-- templete\nreadInt = read :: String -> Int\nreadInteger = read :: String -> Integer\nreadDouble = read :: String -> Double\ngetInt = readLn :: IO Int\ngetInts = map readInt . words <$> getLine\ngetInteger = readLn :: IO Integer\ngetIntegers = map readInteger . words <$> getLine\ngetDouble = readLn :: IO Double\ngetDoubles = map readDouble . words <$> getLine\nsjoin :: (Show a) => [a] -> String\nsjoin = unwords . map show\ntjoin :: (Show a, Show b) => (a, b) -> String\ntjoin (x, y) = show x ++ (' ' : show y)\ncond :: a -> a -> Bool -> a\ncond t f c = if c then t else f\napply2 :: (a -> a -> b) -> [a] -> b\napply2 f [x,y] = f x y\napply3 :: (a -> a -> a -> b) -> [a] -> b\napply3 f [x,y,z] = f x y z\napply4 :: (a -> a -> a -> a -> b) -> [a] -> b\napply4 f [x,y,z,w] = f x y z w\nfnTuple :: (a -> b, a -> c) -> a -> (b, c)\nfnTuple (f,g) a = (f a, g a)\nreplace :: (Eq a) => a -> a -> [a] -> [a]\nreplace x y = map (\\z -> if z==x then y else z)\nbinMap :: (a -> a -> b) -> [a] -> [b]\nbinMap f (x:xs@(y:_)) = f x y : binMap f xs\nbinMap _ _ = []\nsplitRec :: Int -> [a] -> [[a]]\nsplitRec _ [] = []\nsplitRec n xs = let (y,ys) = splitAt n xs in y : splitRec n ys\ninfixl 7 `divCeil`\ndivCeil :: Integral a => a -> a -> a\nx `divCeil` y = (x+y-1) `div` y\ncoverC :: Ord a => (a, a) -> a -> Bool\ncoverC (l,r) x = l<=x && x<=r\ncoverH :: Ord a => (a, a) -> a -> Bool\ncoverH (l,r) x = l<=x && x<r\nibsearch :: (Int -> Bool) -> (Int,Int) -> Int\nibsearch f (ok,ng) = if abs (ok-ng) <= 1 then ok else let mid = (ok + ng) `div` 2 in ibsearch f (if f mid then (mid,ng) else (ok,mid))\nwhenM :: Monad m => m Bool -> m () -> m ()\nwhenM c a = c >>= flip when a\nunconsU :: [a] -> (a, [a])\nunconsU (x:xs) = (x, xs)\n-- templete\n\nspace :: String -> String\nspace s = sub s\n  where\n    sub \"\" = \"\"\n    sub (c:cs)\n      | c=='_' = ' ' : sub cs\n      | isUpper c = ' ' : toLower c : sub cs\n      | otherwise = c : sub cs\n\ncapitalize (c:cs) = toUpper c : cs\n\ncvtCase \"U\" s = concat $ map capitalize s\ncvtCase \"L\" (s:ss) = concat $ s : map capitalize ss\ncvtCase \"D\" s = intercalate \"_\" s\n\nmain = map (uncurry cvtCase . fmap (words . space)) . takeWhile ((/=\"X\") . fst) . map (swap . apply2 (,) . words) . lines <$> getContents >>= mapM_ putStrLn\n"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>), (<*>))\nimport Control.Monad\nimport Data.List\nimport Data.Char (toUpper, toLower)\nimport Text.Parsec\nimport Text.Parsec.String\n\nmain :: IO ()\nmain = do\n  [n,t] <- words <$> getLine\n  unless (t == \"X\") $ do\n    putStrLn $ solve n t\n    main\n\nsolve :: String -> String -> String\nsolve n t\n  | t == \"U\" = concatMap up xs\n  | t == \"L\" = lo (head xs) ++ concatMap up (tail xs)\n  | otherwise = intercalate \"_\" $ map lo xs\n  where\n    xs = either (const [\"\"]) id $ parse anl \"\" n\n\nsc :: Parser [String]\nsc = sepBy1 (many1 (lower <|> digit)) (char '_')\n\nuc :: Parser [String]\nuc = many1 ((:) <$> upper <*> many1 (lower <|> digit))\n\nlc :: Parser [String]\nlc = (:) <$> many1 (lower <|> digit) <*> uc\n\nanl :: Parser [String]\nanl = uc <|> try lc <|> sc\n\nup :: String -> String\nup xs = (toUpper $ head xs) : tail xs\n\nlo :: String -> String\nlo xs = (toLower $ head xs) : tail xs\n\n"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>))\nimport Control.Monad (unless)\nimport Data.List (intercalate)\nimport Data.List.Split (splitOn, split, startsWithOneOf)\nimport Data.Char (toUpper, toLower)\n\nmain :: IO ()\nmain = do\n  [nm, tp] <- words <$> getLine\n  unless (tp == \"X\") $ do\n    putStrLn $ solve nm tp\n    main\n\nsolve :: String -> String -> String\nsolve nm tp = f tp $ toWords nm\n  where f t ss | t == \"D\" = intercalate \"_\" ss\n               | t == \"U\" = concat . map capitalize $ ss\n               | otherwise = concat . g $ ss\n        g (s:ss) = s : map capitalize ss\n          \ntoWords :: String -> [String]\ntoWords s | '_' `elem` s = splitOn \"_\" s\n          | otherwise = map (map toLower) $ split (startsWithOneOf ['A'..'Z']) s\n\ncapitalize :: String -> String\ncapitalize [] = []\ncapitalize (s:ss) = toUpper s : ss\n\n"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>), (<*>))\nimport Control.Monad\nimport Data.List\nimport Data.Char (toUpper, toLower)\nimport Text.Parsec\nimport Text.Parsec.String\n\nmain :: IO ()\nmain = do\n  [n,t] <- words <$> getLine\n  unless (t == \"X\") $ do\n    putStrLn $ solve n t\n    main\n\nsolve :: String -> String -> String\nsolve n t\n  | t == \"U\" = concatMap up xs\n  | t == \"L\" = lo (head xs) ++ concatMap up (tail xs)\n  | otherwise = intercalate \"_\" $ map lo xs\n  where\n    xs = either (const [\"\"]) id $ parse anl \"\" n\n\nsc :: Parser [String]\nsc = sepBy1 (many1 lower) (char '_')\n\nuc :: Parser [String]\nuc = many1 ((:) <$> upper <*> many1 lower)\n\nlc :: Parser [String]\nlc = (:) <$> many1 lower <*> uc\n\nanl :: Parser [String]\nanl = uc <|> try lc <|> sc\n\nup :: String -> String\nup xs = (toUpper $ head xs) : tail xs\n\nlo :: String -> String\nlo xs = (toLower $ head xs) : tail xs"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>), (<*>))\nimport Control.Monad\nimport Data.List\nimport Data.Char (toUpper, toLower)\nimport Text.Parsec\nimport Text.Parsec.String\n\nmain :: IO ()\nmain = do\n  [n,t] <- words <$> getLine\n  unless (t == \"X\") $ do\n    putStrLn $ solve n t\n    main\n\nsolve :: String -> String -> String\nsolve n t\n  | t == \"U\" = concatMap up xs\n  | t == \"L\" = lo (head xs) ++ concatMap up (tail xs)\n  | otherwise = intercalate \"_\" $ map lo xs\n  where\n    xs = either (const [\"\"]) id $ parse anl \"\" n\n\nsc :: Parser [String]\nsc = sepBy1 (many1 lower) (char '_')\n\nuc :: Parser [String]\nuc = many1 ((:) <$> upper <*> many1 lower)\n\nlc :: Parser [String]\nlc = (:) <$> many1 lower <*> uc\n\nanl :: Parser [String]\nanl = uc <|> try lc <|> sc\n\nup :: String -> String\nup xs = (toUpper $ head xs) : tail xs\n\nlo :: String -> String\nlo xs = (toLower $ head xs) : tail xs"
  },
  {
    "language": "Haskell",
    "code": "import Control.Applicative ((<$>), (<*>))\nimport Control.Monad\nimport Data.List\nimport Data.Char (toUpper, toLower)\nimport Text.Parsec\nimport Text.Parsec.String\n\nmain :: IO ()\nmain = do\n  [n,t] <- words <$> getLine\n  unless (t == \"X\") $ do\n    putStrLn $ solve n t\n    main\n\nsolve :: String -> String -> String\nsolve n t\n  | t == \"U\" = concatMap up xs\n  | t == \"L\" = lo (head xs) ++ concatMap up (tail xs)\n  | otherwise = intercalate \"_\" $ map lo xs\n  where\n    xs = either (const [\"\"]) id $ parse anl \"\" n\n\nsc :: Parser [String]\n-- sc = sepBy1 (many1 lower) (char '_')\nsc = sepBy1 (many1 (lower <|> digit)) (char '_')\n\nuc :: Parser [String]\nuc = many1 ((:) <$> upper <*> many1 (lower <|> digit))\n\nlc :: Parser [String]\nlc = (:) <$> many1 (lower <|> digit) <*> uc\n\nanl :: Parser [String]\nanl = uc <|> try lc <|> sc\n\nup :: String -> String\nup xs = (toUpper $ head xs) : tail xs\n\nlo :: String -> String\nlo xs = (toLower $ head xs) : tail xs"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\nchar ans[101];\nvoid UL(char line[],char type){\n    int i=1,t=1;\n    ans[0]=type=='U'?toupper(line[0]):tolower(line[0]);\n    while(line[i]){\n        if(line[i] == '_'){\n            ans[t++]=toupper(line[++i]);\n            i++;\n        }\n        else ans[t++]=line[i++];\n    }\n    ans[t]=0;\n}\nvoid D(char line[]){\n    int i=1,t=1;\n    ans[0]=tolower(line[0]);\n    while(line[i]){\n        if(isupper(line[i])){\n            ans[t++]='_';\n            ans[t++]=tolower(line[i++]);\n        }\n        else ans[t++]=line[i++];\n    }\n    ans[t]=0;\n}\n\nint main(void){\n    char line[101],type;\n    for(;scanf(\"%s %s\",line,&type),type != 'X';){\n        type=='D'?D(line):UL(line,type);\n        printf(\"%s\\n\",ans);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#define _CRT_SECURE_NO_WARNINGS\n//#define _USE_MATH_DEFINES\n#include<stdio.h>\n//#include<stdlib.h>\n//#include<math.h>\n#include<string.h>\n//#include<time.h>\n#include<ctype.h>\n//#define pi acos(-1.0)\n#define P(type,x) fprintf(stdout,\"%\"#type\"\\n\",x)\n#define S(type,x) fscanf(stdin,\"%\"#type,&x)\nvoid U();\nvoid D();\nchar name[128],t[128];\nint main(){\n\tchar type;\n\twhile (~fscanf(stdin, \"%s %c%\\n\", name, &type),type!='X') {\n\t\tmemset(t, 0, sizeof(t));\n\t\tswitch (type){\n\t\tcase 'L':\n\t\t\tU();\n\t\t\tt[0] = tolower(t[0]);\n\t\t\tbreak;\n\t\tcase 'U':\n\t\t\tU();\n\t\t\tt[0] = toupper(t[0]);\n\t\t\tbreak;\n\t\tcase 'D':\n\t\t\tD();\n\t\t}\n\t\tP(s, t);\n\t}\n\treturn 0;\n}\n\nvoid U(){\n\tint i, j;\n\tfor(i=j=0;name[i];i++)\n\t\tif (name[i] == '_') name[i + 1] -= 0x20;\n\t\telse t[j++] = name[i];\n}\n\nvoid D(){\n\tint i, j;\n\tfor (i = j = 0; name[i]; i++)\n\t\tif (i&&name[i] != '_'&&name[i]<'a') t[j++] = '_', t[j++] = tolower(name[i]);\n\t\telse t[j++] = tolower(name[i]);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\nchar ans[101];\nvoid UL(char line[],char type){\n    int i=1,t=1;\n    ans[0]=type=='U'?toupper(line[0]):tolower(line[0]);\n    while(line[i]){\n        if(line[i] == '_'){\n            ans[t++]=toupper(line[++i]);\n            i++;\n        }\n        ans[t++]=line[i++];\n    }\n    ans[t]=0;\n}\nvoid D(char line[]){\n    int i=1,t=1;\n    ans[0]=tolower(line[0]);\n    while(line[i]){\n        if(isupper(line[i])){\n            ans[t++]='_';\n            ans[t++]=tolower(line[i++]);\n        }\n        ans[t++]=line[i++];\n    }\n    ans[t]=0;\n}\n\nint main(void){\n    char line[101],type;\n    for(;scanf(\"%s %s\",line,&type),type != 'X';){\n        type=='D'?D(line):UL(line,type);\n        printf(\"%s\\n\",ans);\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main() {\n\tchar name[101], ans[200], type;\n\tint n, a;\n\t\n\twhile(1) {\n\t\tscanf(\"%s %c\", name, &type);\n\t\tif(type == 'X') { break; }\n\t\t\n\t\tn = 0;\n\t\ta = 0;\n\t\tif(type == 'U') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'a' <= name[0] && name[0] <= 'z') {\n\t\t\t\t\tans[0] = name[0] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'L') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'D') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(n != 0 && 'A' <= name[n] && name[n] <= 'Z') {\n\t\t\t\t\tans[a] = '_';\n\t\t\t\t\ta ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] + 32;\n\t\t\t\t\ta ++;\n\t\t\t\t\tn ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\tn ++;\n\t\t\t\ta ++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tans[a] = '\\0';\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main() {\n\tchar name[101], ans[200], type;\n\tint n, a;\n\t\n\twhile(1) {\n\t\tscanf(\"%s %c\", name, &type);\n\t\tif(type == 'X') { break; }\n\t\t\n\t\tn = 0;\n\t\ta = 0;\n\t\tif(type == 'U') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'a' <= name[0] && name[0] <= 'z') {\n\t\t\t\t\tans[0] = name[0] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'L') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'D') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(n != 0 && 'A' <= name[n] && name[n] <= 'Z') {\n\t\t\t\t\tans[a] = '_';\n\t\t\t\t\ta ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] + 32;\n\t\t\t\t\ta ++;\n\t\t\t\t\tn ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\tn ++;\n\t\t\t\ta ++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main() {\n\tchar name[101], ans[101], type;\n\tint n, a;\n\t\n\twhile(1) {\n\t\tscanf(\"%s %c\", name, &type);\n\t\tif(type == 'X') { break; }\n\t\t\n\t\tn = 0;\n\t\ta = 0;\n\t\tif(type == 'U') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'a' <= name[0] && name[0] <= 'z') {\n\t\t\t\t\tans[0] = name[0] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'L') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'D') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(n != 0 && 'A' <= name[n] && name[n] <= 'Z') {\n\t\t\t\t\tans[a] = '_';\n\t\t\t\t\ta ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] + 32;\n\t\t\t\t\ta ++;\n\t\t\t\t\tn ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\tn ++;\n\t\t\t\ta ++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(void){\n\tint i = 0;\n\tint j = 0;\n\tchar str1[256];\n\tchar str2[256];\n\tchar ans[256];\n\twhile(scanf(\"%s %s\",str1,str2)){\n\t\tif(str1[0] == 'E'){\n\t\t\tif(str1[1] == 'n'){\n\t\t\t\tif(str1[2] == 'd'){\n\t\t\t\t\tif(str1[3] == 'O'){\n\t\t\t\t\t\tif(str1[4] == 'f'){\n\t\t\t\t\t\t\tif(str1[5] == 'I'){\n\t\t\t\t\t\t\t\tif(str1[6] == 'n'){\n\t\t\t\t\t\t\t\t\tif(str1[7] == 'p'){\n\t\t\t\t\t\t\t\t\t\tif(str1[8] == 'u'){\n\t\t\t\t\t\t\t\t\t\t\tif(str1[9] == 't'){\n\t\t\t\t\t\t\t\t\t\t\t\tif(str2[0] == 'X'){\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif(str2[0] == 'L'){\n\t\t\twhile(str1[i] != '\\0'){\n\t\t\t\tif(str1[i] == '_'){\n\t\t\t\t\tans[j] = str1[i+1] - 32;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans[j] = str1[i];\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tif(str2[0] == 'U'){\n\t\t\tans[0] =str1[0] - 32;\n\t\t\ti++;\n\t\t\tj++;\n\t\t\twhile(str1[i] != '\\0'){\n\t\t\t\tans[j] = str1[i];\n\t\t\t\tj++;\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\t\tif(str2[0] == 'D'){\n\t\t\tans[0] = str1[0] + 32;\n\t\t\ti++;\n\t\t\tj++;\n\t\t\twhile(str1[i] != '\\0'){\n\t\t\t\tif(str1[i] <= 'Z'){\n\t\t\t\t\tans[j] = '_';\n\t\t\t\t\tans[j+1] = str1[i] + 32;\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tans[j] = str1[i];\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n\",ans);\n\t\t\ti = 0;\n\t\t\tj = 0;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n\n/** Application main entry point. */\nint\nmain (\n  int     argc,\n  char  * argv[ ]\n  )\n{\n  char *it;\n\n  for ( ; ; )\n  {\n    char s[ 128 ], *p;\n    char m;\n\n    scanf ( \" %s %c\", s, &m );\n    if ( m == 'X' ) break ;\n\n    p = s;\n    for ( it = s; *it != '\\0'; ++it )\n    {\n      if ( *it == '_' )\n      {\n        it[ 1 ] = toupper ( it[ 1 ] );\n        continue ;\n      }\n      *( p++ ) = *it;\n    }\n    *p = '\\0';\n\n    s[ 0 ] = tolower ( s[ 0 ] );\n    switch ( m )\n    {\n      case 'U':\n        s[ 0 ] = toupper ( s[ 0 ] );\n        puts ( s );\n        break ;\n      case 'L':\n        puts ( s );\n        break ;\n      case 'D':\n        for ( it = s; *it != '\\0'; ++it )\n        {\n          if ( isupper ( *it ) )\n          {\n            printf ( \"_%c\", tolower ( *it ) );\n          }\n          else\n          {\n            putchar ( *it );\n          }\n        }\n        puts ( \"\" );\n    }\n  }\n\n  return ( 0 );\n}"
  },
  {
    "language": "C",
    "code": "// Aizu Vol-10 1044: CamelCase\n// 2017.8.18 bal4u@uu\n\n#include <stdio.h>\n#include <ctype.h>\n\nchar n[130], t[10];\nchar ans[130];\n\nint main()\n{\n\tchar *p, *q;\n\n\twhile (scanf(\"%s%s\", n, t) && t[0] != 'X') {\n\t\tp = n, q = ans;\n\t\tif (t[0] == 'U') {\n\t\t\t*q++ = toupper(*p++);\n\t\t\twhile (*p) {\n\t\t\t\twhile (*p && *p != '_') *q++ = *p++;\n\t\t\t\tif (*p == '_' && *(p + 1)) *q++ = toupper(*(p + 1)), p += 2;\n\t\t\t}\n\t\t} else if (t[0] == 'L') {\n\t\t\t*q++ = tolower(*p++);\n\t\t\twhile (*p) {\n\t\t\t\twhile (*p && *p != '_') *q++ = *p++;\n\t\t\t\tif (*p == '_' && *(p + 1)) *q++ = toupper(*(p + 1)), p += 2;\n\t\t\t}\n\t\t} else {\n\t\t\t*q++ = tolower(*p++);\n\t\t\twhile (*p) {\n\t\t\t\twhile (*p && !isupper(*p)) *q++ = *p++;\n\t\t\t\tif (isupper(*p)) *q++ = '_', *q++ = tolower(*p++);\n\t\t\t}\n\t\t}\n\t\t*q = 0;\n\t\tputs(ans);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n\nint main(void)\n{\n\tchar name[200];\n\tchar rule[10];\n\tchar word[100][100];\n\tint pos, n;\n\tint i, j;\n\t\n\twhile (1){\n\t\tscanf(\"%s\", name);\n\t\tscanf(\"%s\", rule);\n\t\tif (rule[0] == 'X'){\n\t\t\tbreak;\n\t\t}\n\t\t\n\t\tpos = 0;\n\t\tn = 0;\n\t\twhile (name[pos] != '\\0'){\n\t\t\ti = 0;\n\t\t\tdo {\n\t\t\t\tword[n][i++] = name[pos++];\n\t\t\t} while (name[pos] != '_' && ('a' <= name[pos] && name[pos] <= 'z'));\n\t\t\t\n\t\t\tword[n][i] = '\\0';\n\t\t\t\n\t\t\tif (name[pos] == '_'){\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tn++;\n\t\t}\n\t\t\n\t\tswitch (rule[0]){\n\t\t  case 'L':\n\t\t\tprintf(\"%c\", tolower(word[0][0]));\n\t\t\tprintf(\"%s\", &word[0][1]);\n\t\t  \tfor (i = 1; i < n; i++){\n\t\t\t\tprintf(\"%c\", toupper(word[i][0]));\n\t\t\t\tprintf(\"%s\", &word[i][1]);\n\t\t  \t}\n\t\t\tprintf(\"\\n\");\n\t\t\tbreak;\n\t\t\t\n\t\t  case 'U':\n\t\t  \tfor (i = 0; i < n; i++){\n\t\t\t\tprintf(\"%c\", toupper(word[i][0]));\n\t\t\t\tprintf(\"%s\", &word[i][1]);\n\t\t  \t}\n\t\t\tprintf(\"\\n\");\n\t\t\tbreak;\n\n\t\t  case 'D':\n\t\t\tprintf(\"%c\", tolower(word[0][0]));\n\t\t\tprintf(\"%s\", &word[0][1]);\n\t\t  \tfor (i = 1; i < n; i++){\n\t\t\t\tprintf(\"_%c\", tolower(word[i][0]));\n\t\t\t\tprintf(\"%s\", &word[i][1]);\n\t\t  \t}\n\t\t\tprintf(\"\\n\");\n\t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn (0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nmain(){\n  char data[101], sign;\n  int i;\n\n  while(1){\n    scanf(\"%s\", &data);\n    getchar();\n    scanf(\"%c\", &sign);\n    if(sign=='X') break;\n\n    if(sign=='U'){\n      if(data[0]>'Z') data[0]-=('a'-'A');\n\n      for(i=0;;i++){\n\tif(data[i]=='\\0') break;\n\tif(data[i]=='_'){\n\t  if(data[i+1]!='\\0'){\n\t    if(data[i+1]>'Z'){\n\t      data[i+1]-=('a'-'A');\n\t    }\n\t  }\n\t  continue;\n\t}\n\tprintf(\"%c\", data[i]);\n      }\n      printf(\"\\n\");\n    }\n\n    else if(sign=='L'){\n      if(data[0]<'a') data[0]+=('a'-'A');\n\n      for(i=0;;i++){\n\tif(data[i]=='\\0') break;\n\tif(data[i]=='_'){\n\t  if(data[i+1]!='\\0'){\n\t    if(data[i+1]>'Z'){\n\t      data[i+1]-=('a'-'A');\n\t    }\n\t  }\n\t  continue;\n\t}\n\tprintf(\"%c\", data[i]);\n      }\n      printf(\"\\n\");\n    }\n\n    else if(sign=='D'){\n      if(data[0]<'a') data[0]+=('a'-'A');\n\n      for(i=0;;i++){\n\tif(data[i]=='\\0') break;\n\tif(data[i]<'a'){\n\t  data[i]+=('a'-'A');\n\t  printf(\"_\");\n\t}\n\tprintf(\"%c\", data[i]);\n      }\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1044\n  Title:CamelCase\n  @kankichi573\n*/\n#include <stdio.h>\n#include <string.h>\n\nchar identifier[101];\nchar naming_rule;\nchar outbuffer[201];\n\nsolve(char * id,char rule,char * out)\n{\n  int flag;\n  char *outp;\n\n  if(isupper(id[0]))   //upperCamelCase\n    {\n      if(rule=='U')\n\tstrcpy(out,id);\n      else if(rule=='L')\n\t{\n\t  strcpy(out,id);\n\t  out[0]=tolower(out[0]);\n\t}\n      else\n\t{\n\t  while(1)\n\t    {\n\t      *out++ =tolower(*id++);\n\t      while(islower(*id))\n\t\t{\n\t\t  *out++ = *id++;\n\t\t}\n\t      if(*id=='\\0')\n\t\tbreak;\n\t      *out++ = '_';\n\t    }\n\t}\n    }\n  \n  else if(strchr(identifier,'_'))\n    {\n      printf(\"org id includes underscore\\n\");\n      outp=out;\n      flag=0;\n\n      if(rule=='D')\n\tstrcpy(out,id);\n      else\n\t{\n\t  do\n\t    {\n\t      if(*id!='_')\n\t\t{\n\t\t  *outp = *id;\n\t\t  if(flag && *out)\n\t\t    {\n\t\t      *outp = toupper(*outp);\n\t\t      flag=0;\n\t\t    }\n\t\t  outp++;id++;\n\t\t}\n\t      else\n\t\t{\n\t\t  flag=1;\n\t\t  id++;\n\t\t}\n\t    }\n\t  while(*id);\n\t  if(rule=='U')\n\t    out[0]=toupper(out[0]);\n\t}\n    }\n  else\n   {\n      if(rule=='L')\n\tstrcpy(out,id);\n      else if(rule=='U')\n\t{\n\t  strcpy(out,id);\n\t  out[0]=toupper(out[0]);\n\t}\n      else\n\t{\n\t  while(1)\n\t    {\n\t      *out++ =tolower(*id++);\n\t      while(islower(*id))\n\t\t{\n\t\t  *out++ = *id++;\n\t\t}\n\t      if(*id=='\\0')\n\t\tbreak;\n\t      *out++ = '_';\n\t    }\n\t}\n    } \n}\nclear()\n{\n  memset(outbuffer,0,sizeof(outbuffer));\n}\nmain()\n{\n  while(scanf(\"%s %c\",identifier,&naming_rule),naming_rule!='X')\n    {\n      clear();\n\t// printf(\"%s\\n\",identifier);\n      solve(identifier,naming_rule,outbuffer);\n      printf(\"%s\\n\",outbuffer);\n    }\n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<ctype.h>\n#include<string.h>\nint i,j;\nchar S[105],T[300],C;\nvoid U()\n{\n\tfor(i=j=0;S[i];i++)\n\t{\n\t\tif(S[i]=='_'&&S[i+1]>'Z')S[i+1]-=0x20;\n\t\telse T[j++]=S[i];\n\t}\n}\nvoid D()\n{\n\tfor(i=j=0;S[i];i++)\n\t{\n\t\tif(i&&S[i]<'a'&&S[i]!='_'){T[j++]='_';T[j++]=tolower(S[i]);}\n\t\telse T[j++]=tolower(S[i]);\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%s %c\\n\",S,&C),C!='X';puts(T))\n\t{\n\t\tmemset(T,0,sizeof(T));\n\t\tswitch(C)\n\t\t{\n\t\tcase'U':U();T[0]=toupper(T[0]);break;\n\t\tcase'L':U();T[0]=tolower(T[0]);break;\n\t\tdefault:D();\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <ctype.h>\n\nint main(void) {\n\tchar sikibetushi[200];\n\tchar kisoku[2];\n\tchar* sbp;\n\twhile(1) {\n\t\tscanf(\"%s%s\",sikibetushi,kisoku);\n\t\tif(kisoku[0]=='X')break;\n\t\tif(kisoku[0]=='U') {\n\t\t\tputchar(toupper(sikibetushi[0]));\n\t\t} else {\n\t\t\tputchar(tolower(sikibetushi[0]));\n\t\t}\n\t\tfor(sbp=sikibetushi+1;*sbp!=0;sbp++) {\n\t\t\tif(isupper(*sbp)) {\n\t\t\t\tif(kisoku[0]=='D') {\n\t\t\t\t\tputchar('_');\n\t\t\t\t\tputchar(tolower(*sbp));\n\t\t\t\t} else putchar(toupper(*sbp));\n\t\t\t} else if(*sbp=='_') {\n\t\t\t\t*sbp++;\n\t\t\t\tif(*sbp==0)break;\n\t\t\t\tif(kisoku[0]=='D') {\n\t\t\t\t\tputchar('_');\n\t\t\t\t\tputchar(tolower(*sbp));\n\t\t\t\t} else putchar(toupper(*sbp));\n\t\t\t} else putchar(*sbp);\n\t\t}\n\t\tputchar('\\n');\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  char s[102],c;\n  int i,w,r;\n  while(scanf(\"%s %c\",s,&c),c-'X'){\n    char d[102][102]={0};\n    d[w=0][0]=s[0];\n    for(i=r=1;s[i];i++){\n      if(s[i]=='_')i++;\n      if(s[i]<'a'||'z'<s[i]||s[i-1]=='_')d[++w][r=0]=s[i];\n      else d[w][r]=s[i];\n      r++;\n    }\n    if(c=='D'){\n      for(i=0;i<=w;i++){\n\tif(i)printf(\"_\");\n\tprintf(\"%c%s\",tolower(d[i][0]),d[i]+1);\n      }\n    }\n    else{\n      if(c=='U')printf(\"%c%s\",toupper(d[0][0]),d[0]+1);\n      else      printf(\"%c%s\",tolower(d[0][0]),d[0]+1);\n      for(i=1;i<=w;i++)printf(\"%c%s\",toupper(d[i][0]),d[i]+1);\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}\n\t\n\t  "
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n\nint main(void){\n  int i,j;\n  char name[300],type;\n  char newName[300],ansName[300];\n\n  for(;;){\n    scanf(\"%s%s\",name,&type);\n    if(type=='X')\n      break;\n\n    for(i=0,j=0;name[i];i++,j++){\n      if('A'<=name[i] && name[i]<='Z'){\n        if(i){\n          newName[j]=' ';\n          j++;\n        }\n        newName[j]=name[i]+'a'-'A';\n      }else if(name[i]=='_'){\n        newName[j]=' ';\n      }else{\n        newName[j]=name[i];\n      }\n    }\n    newName[j]=0;\n\n    if(type=='U'){\n      for(i=0,j=0;newName[i];i++,j++){\n        if(!i){\n          newName[i]-='a'-'A';\n        }else if(newName[i]==' '){\n          i++;\n          newName[i]-='a'-'A';\n        }\n        ansName[j]=newName[i];\n      }\n    }else if(type=='L'){\n      for(i=0,j=0;newName[i];i++,j++){\n        if(i && newName[i]==' '){\n          i++;\n          newName[i]-='a'-'A';\n        }\n        ansName[j]=newName[i];\n      }\n    }else if(type=='D'){\n      for(i=0,j=0;newName[i];i++,j++){\n        if(newName[i]==' ')\n          newName[i]='_';\n\n        ansName[j]=newName[i];\n      }\n    }\n    ansName[j]=0;\n    \n    printf(\"%s\\n\",ansName);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<ctype.h>\n#include<string.h>\n\nint main(){\n  int i,j,len;\n  char name[500],type,ntype;\n  do{\n    scanf(\"%s %c\",name,&type);\n    if(type=='X') break;\n    len=strlen(name);\n    if(strchr(name,'_')){\n      ntype='D';\n    }else if(isupper(name[0])){\n      ntype='U';\n    }else{\n      ntype='L';\n    }\n    if(type!=ntype){\n      name[0]=toupper(name[0]);\n      if(ntype=='D'){\n\tfor(i=0;i<len;i++){\n\t  if(name[i]=='_'){\n\t    name[i+1]=toupper(name[i+1]);\n\t    for(j=i+1;name[j];j++) name[j-1]=name[j];\n\t    name[j-1]=name[j];\n\t    len--;\n\t  }\n\t}\n      }\n      if(type=='L'){\n\tname[0]=tolower(name[0]);\n      }else if(type=='D'){\n\tname[0]=tolower(name[0]);\n\tfor(i=1;i<len;i++){\n\t  if(isupper(name[i])){\n\t    name[i]=tolower(name[i]);\n\t    for(j=len+1;j>i;j--) name[j]=name[j-1];\n\t    name[j]='_';\n\t    len++;\n\t  }\n\t}\n      }\n    }\n    printf(\"%s\\n\",name);\n  }while(1);\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "char*w,*p;main(t,W){for(;scanf(\"%s%s\",W,&t),t-'X';puts(\"\"))for(w=W;*w;w+=*w==95){for(p=w;*++p&&*p-95&&*p&32;);putchar(t&1?*w++&~32:t&8?w-W?*w++&~32:*w++|32:w-W?95:*w++|32);for(;w<p;w++)putchar(*w|32);}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main() {\n\tchar name[101], ans[101], type;\n\tint n, a;\n\t\n\twhile(1) {\n\t\tscanf(\"%s %c\", name, &type);\n\t\tif(type == 'X') { break; }\n\t\t\n\t\tn = 0;\n\t\ta = 0;\n\t\tif(type == 'U') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'a' <= name[0] && name[0] <= 'z') {\n\t\t\t\t\tans[0] = name[0] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'L') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'D') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(n != 0 && 'A' <= name[n] && name[n] <= 'Z') {\n\t\t\t\t\tans[a] = '_';\n\t\t\t\t\ta ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] + 32;\n\t\t\t\t\ta ++;\n\t\t\t\t\tn ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\tn ++;\n\t\t\t\ta ++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#define N 500\n\nint main(void){\n  int i,j;\n  char name[N],type,hoge;\n  char newName[N],ansName[N];\n\n  for(;;){\n    scanf(\"%s%c%c\",name,&hoge,&type);\n    if(type=='X')\n      break;\n\n    for(i=0,j=0;name[i];i++,j++){\n      if('A'<=name[i] && name[i]<='Z'){\n        if(i){\n          newName[j]=' ';\n          j++;\n        }\n        newName[j]=name[i]+'a'-'A';\n      }else if(name[i]=='_'){\n        newName[j]=' ';\n      }else{\n        newName[j]=name[i];\n      }\n    }\n    newName[j]=0;\n\n    if(type=='U'){\n      for(i=0,j=0;newName[i];i++,j++){\n        if(!i){\n          newName[i]-='a'-'A';\n        }else if(newName[i]==' '){\n          i++;\n          newName[i]-='a'-'A';\n        }\n        ansName[j]=newName[i];\n      }\n    }else if(type=='L'){\n      for(i=0,j=0;newName[i];i++,j++){\n        if(i && newName[i]==' '){\n          i++;\n          newName[i]-='a'-'A';\n        }\n        ansName[j]=newName[i];\n      }\n    }else if(type=='D'){\n      for(i=0,j=0;newName[i];i++,j++){\n        if(newName[i]==' ')\n          newName[i]='_';\n\n        ansName[j]=newName[i];\n      }\n    }\n    ansName[j]=0;\n    \n    printf(\"%s\\n\",ansName);\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<ctype.h>\n#include<string.h>\n\nint main(){\n  int i,j,len;\n  char name[200],type,ntype;\n  do{\n    scanf(\"%s %c\",name,&type);\n    if(type=='X') break;\n    len=strlen(name);\n    if(strchr(name,'_')){\n      ntype='D';\n    }else if(isupper(name[0])){\n      ntype='U';\n    }else{\n      ntype='L';\n    }\n    if(type!=ntype){\n      name[0]=toupper(name[0]);\n      if(ntype=='D'){\n\tfor(i=0;i<len;i++){\n\t  if(name[i]=='_'){\n\t    name[i+1]=toupper(name[i+1]);\n\t    for(j=i+1;name[j];j++) name[j-1]=name[j];\n\t    name[j-1]=name[j];\n\t    len--;\n\t  }\n\t}\n      }\n      if(type=='L'){\n\tname[0]=tolower(name[0]);\n      }else if(type=='D'){\n\tname[0]=tolower(name[0]);\n\tfor(i=1;i<len;i++){\n\t  if(isupper(name[i])){\n\t    name[i]=tolower(name[i]);\n\t    for(j=len;j>i;j--) name[j]=name[j-1];\n\t    name[j]='_';\n\t    len++;\n\t  }\n\t}\n      }\n    }\n    printf(\"%s\\n\",name);\n  }while(1);\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main() {\n\tchar name[101], ans[101], type;\n\tint n, a;\n\t\n\twhile(1) {\n\t\tscanf(\"%s %c\", name, &type);\n\t\tif(type == 'X') { break; }\n\t\t\n\t\tn = 0;\n\t\ta = 0;\n\t\tif(type == 'U') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'a' <= name[0] && name[0] <= 'z') {\n\t\t\t\t\tans[0] = name[0] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'L') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'D') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(n != 0 && 'A' <= name[n] && name[n] <= 'Z') {\n\t\t\t\t\tans[a] = '_';\n\t\t\t\t\ta ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] + 32;\n\t\t\t\t\ta ++;\n\t\t\t\t\tn ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\tn ++;\n\t\t\t\ta ++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main() {\n\tchar name[101], ans[101], type;\n\tint n, a;\n\t\n\twhile(1) {\n\t\tscanf(\"%s %c\", name, &type);\n\t\tif(type == 'X') { break; }\n\t\t\n\t\tn = 0;\n\t\ta = 0;\n\t\tif(type == 'U') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'a' <= name[0] && name[0] <= 'z') {\n\t\t\t\t\tans[0] = name[0] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'L') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'D') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(n != 0 && 'A' <= name[n] && name[n] <= 'Z') {\n\t\t\t\t\tans[a] = '_';\n\t\t\t\t\ta ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] + 32;\n\t\t\t\t\ta ++;\n\t\t\t\t\tn ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\tn ++;\n\t\t\t\ta ++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint main(){\n  char s[102];\n  char w;\n  int i;\n  while(scanf(\" %s %c\",s,&w),w!='X'){\n    if(w=='U')printf(\"%c\",toupper(s[0]));\n    else      printf(\"%c\",tolower(s[0]));\n    for(i=1;s[i];i++){\n      if('a'<=s[i]&&s[i]<='z'){\n\tprintf(\"%c\",s[i]);\n      }\n      else{\n\tif(s[i]=='_')i++;\n\tif(w=='D')printf(\"_%c\",tolower(s[i]));\n\telse      printf(\"%c\" ,toupper(s[i]));\n      }\n    }\n    printf(\"\\n\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<ctype.h>\nchar*w,W[101],*p;\nt;\nmain(c){\n\tfor(;scanf(\"%s%s\",W,&t),t!='X';){\n\t\tw=W;\n\t\tfor(;*w;){\n\t\t\tfor(p=w+1;*p&&*p!='_'&&!isupper(*p);p++);\n\t\t\tswitch(t){\n\t\t\tcase 'U':\n\t\t\t\tputchar(toupper(*w));\n\t\t\t\tw++;\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tif(w==W)\n\t\t\t\t\tputchar(tolower(*w));\n\t\t\t\telse\n\t\t\t\t\tputchar(toupper(*w));\n\t\t\t\tw++;\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tif(w!=W)\n\t\t\t\t\tputchar('_');\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tfor(;w<p;w++)\n\t\t\t\tputchar(tolower(*w));\n\t\t\tif(*w=='_')\n\t\t\t\tw++;\n\t\t}\n\t\tputs(\"\");\n\t}\n\texit(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <ctype.h>\n\nint\nmain (\n  int   argc,\n  char *argv[ ]\n  )\n{\n  int i, j;\n\n  for ( ; ; )\n  {\n    char s[ 128 ];\n    char o;\n\n    scanf ( \" %s %c\", s, &o );\n    if ( o == 'X' ) break ;\n\n    s[ 0 ] = tolower ( s[ 0 ] );\n    j = 0;\n    for ( i = 0; s[ i ] != '\\0'; ++i )\n    {\n      if ( s[ i ] == '_' )\n        s[ j++ ] = toupper ( s[ ++i ] );\n      else\n        s[ j++ ] = s[ i ];\n    }\n    s[ j ] = '\\0';\n\n    if ( o == 'U' )\n    {\n      s[ 0 ] = toupper ( s[ 0 ] );\n      puts ( s );\n    }\n    else if ( o == 'L' )\n    {\n      puts ( s );\n    }\n    else\n    {\n      for ( i = 0; s[ i ] != '\\0'; ++i )\n      {\n        if ( isupper ( s[ i ] ) )\n          printf ( \"_%c\", tolower ( s[ i ] ) );\n        else\n          putchar ( s[ i ] );\n      }\n      puts ( \"\" );\n    }\n  }\n\n  return ( EXIT_SUCCESS );\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<ctype.h>\n#include<string.h>\nint i,j;\nchar S[105],T[105],C;\nvoid U()\n{\n\tfor(i=j=0;S[i];i++)\n\t{\n\t\tif(S[i]=='_'&&S[i+1]>'Z')S[i+1]-=0x20;\n\t\telse T[j++]=S[i];\n\t}\n}\nvoid D()\n{\n\tfor(i=j=0;S[i];i++)\n\t{\n\t\tif(i&&S[i]<'a'&&S[i]!='_'){T[j++]='_';T[j++]=tolower(S[i]);}\n\t\telse T[j++]=tolower(S[i]);\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%s %c\\n\",S,&C),C!='X';puts(T))\n\t{\n\t\tmemset(T,0,sizeof(T));\n\t\tswitch(C)\n\t\t{\n\t\tcase'U':U();T[0]=toupper(T[0]);break;\n\t\tcase'L':U();break;\n\t\tdefault:D();\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "char*w,W[101],*p;main(t){for(;scanf(\"%s%s\",W,&t),t-'X';puts(\"\"))for(w=W;*w;w+=*w==95){for(p=w;*++p&&*p-95&&*p&32;);putchar(t&1?*w++&~32:t&8?w-W?*w++&~32:*w++|32:w-W?95:*w++|32);for(;w<p;w++)putchar(*w|32);}exit(0);}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint main() {\n\tchar name[101], ans[101], type;\n\tint n, a;\n\t\n\twhile(1) {\n\t\tscanf(\"%s %c\", name, &type);\n\t\tif(type == 'X') { break; }\n\t\t\n\t\tn = 0;\n\t\ta = 0;\n\t\tif(type == 'U') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'a' <= name[0] && name[0] <= 'z') {\n\t\t\t\t\tans[0] = name[0] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'L') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(name[n] == '_') {\n\t\t\t\t\tn ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] - 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\ta ++;\n\t\t\t\tn ++;\n\t\t\t}\n\t\t}\n\t\tif(type == 'D') {\n\t\t\twhile(name[n] != '\\0') {\n\t\t\t\tif(n == 0 && 'A' <= name[0] && name[0] <= 'Z') {\n\t\t\t\t\tans[0] = name[0] + 32;\n\t\t\t\t\tn ++;\n\t\t\t\t\ta ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif(n != 0 && 'A' <= name[n] && name[n] <= 'Z') {\n\t\t\t\t\tans[a] = '_';\n\t\t\t\t\ta ++;\n\t\t\t\t\t\n\t\t\t\t\tans[a] = name[n] + 32;\n\t\t\t\t\ta ++;\n\t\t\t\t\tn ++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tans[a] = name[n];\n\t\t\t\tn ++;\n\t\t\t\ta ++;\n\t\t\t}\n\t\t}\n\t\t\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nmain(){\n  char data[101], sign;\n  int i;\n\n  while(1){\n    scanf(\"%s\", &data);\n    getchar();\n    scanf(\"%c\", &sign);\n    if(sign=='X') break;\n\n    if(sign=='U'){\n      if(data[0]>='a' && data[0]<='z') data[0]-=('a'-'A');\n\n      for(i=0;;i++){\n\tif(data[i]=='\\0') break;\n\tif(data[i]=='_'){\n\t  if(data[i+1]!='\\0'){\n\t    if(data[i+1]>='a' && data[i+1]<='z'){\n\t      data[i+1]-=('a'-'A');\n\t    }\n\t  }\n\t  continue;\n\t}\n\tprintf(\"%c\", data[i]);\n      }\n      printf(\"\\n\");\n    }\n\n    else if(sign=='L'){\n      if(data[0]<'a') data[0]+=('a'-'A');\n\n      for(i=0;;i++){\n\tif(data[i]=='\\0') break;\n\tif(data[i]=='_'){\n\t  if(data[i+1]!='\\0'){\n\t    if(data[i+1]>='a' && data[i+1]<='z'){\n\t      data[i+1]-=('a'-'A');\n\t    }\n\t  }\n\t  continue;\n\t}\n\tprintf(\"%c\", data[i]);\n      }\n      printf(\"\\n\");\n    }\n\n    else if(sign=='D'){\n      if(data[0]<'a') data[0]+=('a'-'A');\n\n      for(i=0;;i++){\n\tif(data[i]=='\\0') break;\n\tif(data[i]<='Z' && data[i]>='A'){\n\t  data[i]+=('a'-'A');\n\t  printf(\"_\");\n\t}\n\tprintf(\"%c\", data[i]);\n      }\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\n#include<ctype.h>\n#include<string.h>\nint i,j;\nchar S[105],T[105],C;\nvoid U()\n{\n\tfor(i=j=0;S[i];i++)\n\t{\n\t\tif(S[i]=='_'&&S[i+1]>'Z')S[i+1]-=0x20;\n\t\telse T[j++]=S[i];\n\t}\n}\nvoid D()\n{\n\tfor(i=j=0;S[i];i++)\n\t{\n\t\tif(i&&S[i]<'a'&&S[i]!='_'){T[j++]='_';T[j++]=tolower(S[i]);}\n\t\telse T[j++]=tolower(S[i]);\n\t}\n}\n\nint main()\n{\n\tfor(;scanf(\"%s %c\\n\",S,&C),C!='X';puts(T))\n\t{\n\t\tmemset(T,0,sizeof(T));\n\t\tswitch(C)\n\t\t{\n\t\tcase'U':U();T[0]=toupper(T[0]);break;\n\t\tcase'L':U();T[0]=tolower(T[0]);break;\n\t\tdefault:D();\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 1044\n  Title:CamelCase\n  @kankichi573\n*/\n#include <stdio.h>\n#include <string.h>\n\nchar identifier[101];\nchar naming_rule;\nchar outbuffer[201];\n\nsolve(char * id,char rule,char * out)\n{\n  int flag;\n  char *outp;\n\n  if(isupper(id[0]))   //upperCamelCase\n    {\n      if(rule=='U')\n\tstrcpy(out,id);\n      else if(rule=='L')\n\t{\n\t  strcpy(out,id);\n\t  out[0]=tolower(out[0]);\n\t}\n      else\n\t{\n\t  while(1)\n\t    {\n\t      *out++ =tolower(*id++);\n\t      while(islower(*id))\n\t\t{\n\t\t  *out++ = *id++;\n\t\t}\n\t      if(*id=='\\0')\n\t\tbreak;\n\t      *out++ = '_';\n\t    }\n\t}\n    }\n  \n  else if(strchr(identifier,'_'))\n    {\n      outp=out;\n      flag=0;\n\n      if(rule=='D')\n\tstrcpy(out,id);\n      else\n\t{\n\t  do\n\t    {\n\t      if(*id!='_')\n\t\t{\n\t\t  *outp = *id;\n\t\t  if(flag && *out)\n\t\t    {\n\t\t      *outp = toupper(*outp);\n\t\t      flag=0;\n\t\t    }\n\t\t  outp++;id++;\n\t\t}\n\t      else\n\t\t{\n\t\t  flag=1;\n\t\t  id++;\n\t\t}\n\t    }\n\t  while(*id);\n\t  if(rule=='U')\n\t    out[0]=toupper(out[0]);\n\t}\n    }\n  else\n   {\n      if(rule=='L')\n\tstrcpy(out,id);\n      else if(rule=='U')\n\t{\n\t  strcpy(out,id);\n\t  out[0]=toupper(out[0]);\n\t}\n      else\n\t{\n\t  while(1)\n\t    {\n\t      *out++ =tolower(*id++);\n\t      while(islower(*id))\n\t\t{\n\t\t  *out++ = *id++;\n\t\t}\n\t      if(*id=='\\0')\n\t\tbreak;\n\t      *out++ = '_';\n\t    }\n\t}\n    } \n}\nclear()\n{\n  memset(outbuffer,0,sizeof(outbuffer));\n}\nmain()\n{\n  while(scanf(\"%s %c\",identifier,&naming_rule),naming_rule!='X')\n    {\n      clear();\n\t// printf(\"%s\\n\",identifier);\n      solve(identifier,naming_rule,outbuffer);\n      printf(\"%s\\n\",outbuffer);\n    }\n  return(0);\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString var;\n\t\tString type;\n\n\t\twhile (true) {\n\t\t\tvar = sc.next();\n\t\t\ttype = sc.next();\n\t\t\tif (type.equals(\"X\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint n = 0;\n\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\tif (var.charAt(i) == '_') {\n\t\t\t\t\tn = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (n != 3) {\n\t\t\t\tif ('A' <= var.charAt(0) && var.charAt(0) <= 'Z') {\n\t\t\t\t\tn = 1;\n\t\t\t\t} else if ('a' <= var.charAt(0) && var.charAt(0) <= 'z') {\n\t\t\t\t\tn = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type.equals(\"U\")) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (n == 2) {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t} else {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif (var.charAt(i) == '_') {\n\t\t\t\t\t\t\tv = var.substring(i + 1, i + 2);\n\t\t\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + v + var.substring(i + 2);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type.equals(\"L\")) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t} else if (n == 2) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif (var.charAt(i) == '_') {\n\t\t\t\t\t\t\tString v = var.substring(i + 1, i + 2);\n\t\t\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + v + var.substring(i + 2);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type.equals(\"D\")) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif ('A' <= var.charAt(i) && var.charAt(i) <= 'Z') {\n\t\t\t\t\t\t\tv = var.substring(i, i + 1);\n\t\t\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + '_' + v + var.substring(i + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (n == 2) {\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif ('A' <= var.charAt(i) && var.charAt(i) <= 'Z') {\n\t\t\t\t\t\t\tString v = var.substring(i, i + 1);\n\t\t\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + '_' + v + var.substring(i + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(var);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args) {\n\t\twhile (true) {\n\t\t\tString word = sc.next();\n\t\t\tString query = sc.next();\n\t\t\tif (query.equals(\"X\")) break;\n\t\t\tArrayList<String> elems = new ArrayList<String>();\n\t\t\tif (word.indexOf(\"_\") >= 0) {\n\t\t\t\tString[] vals = word.split(\"_\");\n\t\t\t\tfor (String val : vals) {\n\t\t\t\t\telems.add(val);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tint pos = 0;\n\t\t\t\tfor (int i = 1; i < word.length(); ++i) {\n\t\t\t\t\tif (Character.isUpperCase(word.charAt(i))) {\n\t\t\t\t\t\telems.add(word.substring(pos, i).toLowerCase());\n\t\t\t\t\t\tpos = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telems.add(word.substring(pos));\n\t\t\t}\n\t\t\tStringBuilder result = new StringBuilder();\n\t\t\tif (query.equals(\"U\")) {\n\t\t\t\tfor (int i = 0; i < elems.size(); ++i) {\n\t\t\t\t\tresult.append(Character.toUpperCase(elems.get(i).charAt(0)));\n\t\t\t\t\tresult.append(elems.get(i).substring(1));\n\t\t\t\t}\n\t\t\t} else if (query.equals(\"L\")) {\n\t\t\t\tresult.append(elems.get(0));\n\t\t\t\tfor (int i = 1; i < elems.size(); ++i) {\n\t\t\t\t\tresult.append(Character.toUpperCase(elems.get(i).charAt(0)));\n\t\t\t\t\tresult.append(elems.get(i).substring(1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.append(elems.get(0));\n\t\t\t\tfor (int i = 1; i < elems.size(); ++i) {\n\t\t\t\t\tresult.append(\"_\");\n\t\t\t\t\tresult.append(elems.get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tprivate static final int UP = 'A' - 'a';\n\tprivate static final int LOW = -UP;\n\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"A=\" + (int) 'Z' + \" a=\" + (int) 'z');\n\t\tScanner in = new Scanner(System.in);\n\t\tchar s[];\n\t\tchar targetType;\n\t\tStringBuilder sb = new StringBuilder(100);\n\t\twhile (in.hasNext()) {\n\t\t\ts = in.next().toCharArray();\n\t\t\tsb.setLength(0);\n\t\t\ttargetType = in.next().charAt(0);\n\t\t\tSystem.out.println(String.valueOf(s) + \" \" + targetType);\n\t\t\tif (targetType == 'X') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (targetType == 'U') {\n\t\t\t\tif (!(s[0] <= 'Z')) {\n\t\t\t\t\ts[0] += UP;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (s[0] <= 'Z') {\n\t\t\t\t\ts[0] += LOW;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsb.append(s[0]);\n\t\t\tfor (int i = 1; i < s.length; i++) {\n\t\t\t\tif (s[i] == '_') {\n\t\t\t\t\ts[i + 1] += UP;\n\t\t\t\t} else if (s[i] <= 'Z' && targetType == 'D') {\n\t\t\t\t\ts[i] += LOW;\n\t\t\t\t\tsb.append('_').append(s[i]);\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(s[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb.toString());\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\t/**\n\t * @param args\n\t */\n\tpublic static void main(String[] args) {\n\t\tScanner sc=new Scanner(System.in)\n\t\t;\n\t\tfor(;;){\n\t\t\tString s1 = sc.next();\n\t\t\tString s2 = sc.next();\n\t\t\tif(s2.equals(\"X\"))break;\n\t\t\tString[]s=null;\n\t\t\tif(s1.contains(\"_\")){\n\t\t\t\ts=s1.split(\"_\");\n\t\t\t}\n\t\t\telse if('a'<=s1.charAt(0)&&s1.charAt(0)<='z'){\n\t\t\t\tStringBuffer sb=new StringBuffer();\n\t\t\t\tfor(int i=0;i<s1.length();i++){\n\t\t\t\t\tif(Character.isUpperCase(s1.charAt(i))){\n\t\t\t\t\t\tsb.append(\",\");\n\t\t\t\t\t\tsb.append(s1.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tsb.append(s1.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ts=sb.toString().split(\",\");\n\t\t\t}\n\t\t\telse{\n\t\t\t\tStringBuffer sb=new StringBuffer();\n\t\t\t\tsb.append(s1.charAt(0));\n\t\t\t\tfor(int i=1;i<s1.length();i++){\n\t\t\t\t\tif(Character.isUpperCase(s1.charAt(i))){\n\t\t\t\t\t\tsb.append(\",\");\n\t\t\t\t\t\tsb.append(s1.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tsb.append(s1.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ts=sb.toString().split(\",\");\n\t\t\t}\n\t\t\tStringBuffer sb=new StringBuffer();\n\t\t\tif(s2.equals(\"U\")){\n\t\t\t\tfor(int i=0;i<s.length;i++){\n\t\t\t\t\tfor(int j=0;j<s[i].length();j++){\n\t\t\t\t\t\tif(j==0&&Character.isLowerCase(s[i].charAt(j))){\n\t\t\t\t\t\t\tint add=s[i].charAt(j)-32;\n\t\t\t\t\t\t\tsb.append((char)add);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tsb.append(s[i].charAt(j));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(s2.equals(\"L\")){\n\t\t\t\tfor(int i=0;i<s.length;i++){\n\t\t\t\t\tfor(int j=0;j<s[i].length();j++){\n\t\t\t\t\t\tif(i!=0&&j==0&&Character.isLowerCase(s[i].charAt(j))){\n\t\t\t\t\t\t\tint add=s[i].charAt(j)-32;\n\t\t\t\t\t\t\tsb.append((char)add);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(i==0&&j==0&&Character.isUpperCase(s[i].charAt(j))){\n\t\t\t\t\t\t\tint add=s[i].charAt(j)+32;\n\t\t\t\t\t\t\tsb.append((char)add);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tsb.append(s[i].charAt(j));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor(int i=0;i<s.length;i++){\n\t\t\t\t\tfor(int j=0;j<s[i].length();j++){\n\t\t\t\t\t\tif(j==0&&Character.isUpperCase(s[i].charAt(j))){\n\t\t\t\t\t\t\tint add=s[i].charAt(j)+32;\n\t\t\t\t\t\t\tsb.append((char)add);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tsb.append(s[i].charAt(j));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(i==s.length-1){\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\tsb.append(\"_\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tSystem.out.println(sb);\n\t\t}\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal String input = sc.next();\n\t\t\tfinal String type = sc.next();\n\t\t\t\n\t\t\tif(\"X\".equals(type)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tchar[][] units;\n\t\t\t\n\t\t\tif(input.indexOf(\"_\") >= 0){\n\t\t\t\tString[] ret = input.split(\"_\");\n\t\t\t\tunits = new char[ret.length][];\n\t\t\t\tfor(int i = 0; i < ret.length; i++){\n\t\t\t\t\tunits[i] = ret[i].toCharArray();\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tchar[] array = input.toCharArray();\n\t\t\t\t\n\t\t\t\tint count = 0;\n\t\t\t\tfor(int i = 1; i < array.length; i++){\n\t\t\t\t\tif('A' <= array[i] && array[i] <= 'Z'){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t\t\n\t\t\t\tunits = new char[count][];\n\t\t\t\t\n\t\t\t\tint start = 0;\n\t\t\t\tint cur = 0;\n\t\t\t\tfor(int i = 1; i < array.length; i++){\n\t\t\t\t\tif('A' <= array[i] && array[i] <= 'Z'){\n\t\t\t\t\t\tfinal int size = i - start;\n\t\t\t\t\t\t\n\t\t\t\t\t\tunits[cur] = new char[size];\n\t\t\t\t\t\tfor(int j = 0; j < size; j++){\n\t\t\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\t\t\tif('A' <= array[start + j] && array[start + j] <= 'Z'){\n\t\t\t\t\t\t\t\t\tunits[cur][j] = (char) (array[start + j] - ('A' - 'a'));\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tunits[cur][j] = array[start + j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tunits[cur][j] = array[start + j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstart = i;\n\t\t\t\t\t\tcur++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfinal int size = input.length() - start;\n\t\t\t\tunits[cur] = new char[size];\n\t\t\t\tfor(int j = 0; j < size; j++){\n\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\tif('A' <= array[start + j] && array[start + j] <= 'Z'){\n\t\t\t\t\t\t\tunits[cur][j] = (char) (array[start + j] - ('A' - 'a'));\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tunits[cur][j] = array[start + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tunits[cur][j] = array[start + j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tfor(char[] ch : units){\n\t\t\t\tSystem.out.println(Arrays.toString(ch));\n\t\t\t}\n\t\t\t*/\n\t\t\tif(\"L\".equals(type)){\n\t\t\t\tfor(int i = 0; i < units.length; i++){\n\t\t\t\t\tfor(int j = 0; j < units[i].length; j++){\n\t\t\t\t\t\tSystem.out.print((char)(units[i][j] + (j == 0 && i != 0 ? 'A' - 'a' : 0)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println();\n\t\t\t}else if(\"U\".equals(type)){\n\t\t\t\tfor(int i = 0; i < units.length; i++){\n\t\t\t\t\tfor(int j = 0; j < units[i].length; j++){\n\t\t\t\t\t\tSystem.out.print((char)(units[i][j] + (j == 0 ? 'A' - 'a' : 0)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println();\n\t\t\t}else if(\"D\".equals(type)){\n\t\t\t\tfor(int i = 0; i < units.length; i++){\n\t\t\t\t\tfor(int j = 0; j < units[i].length; j++){\n\t\t\t\t\t\tSystem.out.print(units[i][j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(i != units.length - 1){\n\t\t\t\t\t\tSystem.out.print(\"_\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\t\n\tstatic String change(String s, String type, int num) {\n\t\tString ans=\"\";\n\t\tif(type.equals(\"L\")) {\n\t\t\tif(num==0) {\n\t\t\t\tans = s.toLowerCase();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans=String.valueOf(s.charAt(0)).toUpperCase();\n\t\t\t\tfor(int i=1; i<s.length(); i++) {\n\t\t\t\t\tans+=String.valueOf(s.charAt(i)).toLowerCase();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(type.equals(\"U\")) {\n\t\t\t\tans=String.valueOf(s.charAt(0)).toUpperCase();\n\t\t\t\tfor(int i=1; i<s.length(); i++) {\n\t\t\t\t\tans+=String.valueOf(s.charAt(i)).toLowerCase();\n\t\t\t\t}\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tif(num==0) {\n\t\t\t\tans = s.toLowerCase();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans = \"_\"+s.toLowerCase();\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t  try(Scanner sc = new Scanner(System.in)) {\n\t\t\t  while(sc.hasNext()) {\n\t\t\t\t  String str=sc.next();\n\t\t\t\t  String type=sc.next();\n\t\t\t\t  if(type.equals(\"X\")) break;\n\t\t\t\t  int num=0;\n\t\t\t\t  String ans=\"\";\n\t\t\t\t  if(str.contains(\"_\")) {\n\t\t\t\t\t  String[] tokens=str.split(\"_\");\n\t\t\t\t\t  num=0;\n\t\t\t\t\t  for(String t:tokens) {\n\t\t\t\t\t\t  ans+=change(t, type, num);\n\t\t\t\t\t\t  num++;\n\t\t\t\t\t  }\n\t\t\t\t  }\n\t\t\t\t  else {\n\t\t\t\t\t  int start=0,last=0;\n\t\t\t\t\t  num=0;\n\t\t\t\t\t  for(int i=0; i<str.length(); i++) {\n\t\t\t\t\t\t  if(Character.isUpperCase(str.charAt(i)) && last==i) {\n\t\t\t\t\t\t\t  int index=str.length()-1;\n\t\t\t\t\t\t\t  for(int j=i+1; j<str.length(); j++) {\n\t\t\t\t\t\t\t\t  if(Character.isUpperCase(str.charAt(j))) {\n\t\t\t\t\t\t\t\t\t  index=j;\n\t\t\t\t\t\t\t\t\t  last=index;\n\t\t\t\t\t\t\t\t\t  ans+=change(str.substring(start, index), type, num);\n\t\t\t\t\t\t\t\t\t  num++;\n\t\t\t\t\t\t\t\t\t  start=index;\n\t\t\t\t\t\t\t\t\t  break;\n\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t  }\n\t\t\t\t\t\t  else if(Character.isUpperCase(str.charAt(i))&& start!=i) {\n\t\t\t\t\t\t\t  last=i;\n\t\t\t\t\t\t\t  ans+=change(str.substring(start, i), type, num);\n\t\t\t\t\t\t\t  if(i!=0)num++;\n\t\t\t\t\t\t\t  start=i;\n\t\t\t\t\t\t  }\n\t\t\t\t\t  }\n\t\t\t\t\t  if(last<str.length()) {\n\t\t\t\t\t\t  ans+=change(str.substring(last, str.length()), type, num);\n\t\t\t\t\t  }\n\t\t\t\t  }\n\t\t\t\t  System.out.println(ans);\n\t\t\t  }\n\t\t  }\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.math.*;\nimport java.util.*;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\nimport java.lang.ArrayIndexOutOfBoundsException;\n\n/**\n * @author yoshikyoto\n */\nclass Main extends MyUtil{\n\tpublic static ArrayList<ArrayList<Integer>> g;\n\t// 0=48 9=57 A=65 Z=90 a=97 z=122 \n\tpublic static boolean isUpper(char c){return 'A'<=c&&c<='Z';}\n\tpublic static boolean isLower(char c){return 'a'<=c&&c<='z';}\n\tpublic static char toUpper(char c){\n\t\tif(isLower(c)) return (char)(c - 'a' + 'A');\n\t\treturn c;\n\t}\n\tpublic static char toLower(char c){\n\t\tif(isUpper(c)) return (char)(c - 'A' + 'a');\n\t\treturn c;\n\t}\n\t\n\tpublic static void main(String[] args) throws Exception{\n\t\twhile(true){\n\t\t\tString[] strs = readLine().split(\" \");\n\t\t\tif(strs[1].equals(\"X\")) return;\n\t\t\t\n\t\t\tArrayList<String> arr = new ArrayList<String>();\n\t\t\t\n\t\t\tchar c = strs[0].charAt(0);\n\t\t\tif(strs[1].equals(\"U\")) c = toUpper(c);\n\t\t\telse c = toLower(c);\n\t\t\tString str = \"\" + c;\n\t\t\t\n\t\t\tfor(int i = 1; i < strs[0].length(); i++){\n\t\t\t\tc = strs[0].charAt(i);\n\t\t\t\tif(isUpper(c)){\n\t\t\t\t\tarr.add(str);\n\t\t\t\t\tif(strs[1].equals(\"D\")) c = toLower(c);\n\t\t\t\t\telse c = toUpper(c);\n\t\t\t\t\tstr = \"\" + c;\n\t\t\t\t}else if(c == '_'){\n\t\t\t\t\tarr.add(str);\n\t\t\t\t\ti++;\n\t\t\t\t\tc = strs[0].charAt(i);\n\t\t\t\t\tif(strs[1].equals(\"D\")) c = toLower(c);\n\t\t\t\t\telse c = toUpper(c);\n\t\t\t\t\tstr = \"\" + c;\n\t\t\t\t}else{\n\t\t\t\t\tstr += c;\n\t\t\t\t}\n\t\t\t}\n\t\t\tarr.add(str);\n\n\t\t\tpr(arr.get(0));\n\t\t\tfor(int i = 1; i < arr.size(); i++){\n\t\t\t\tif(strs[1].equals(\"D\")) pr(\"_\");\n\t\t\t\tpr(arr.get(i));\n\t\t\t}\n\t\t\tp(\"\");\n\t\t}\n\t}\n}\n\nclass Data extends MyUtil{\n\tpublic int i, u, a, p;\n\tData(String str){\n\t\tString strs[] = str.split(\" \");\n\t\ti = parseInt(strs[0]);\n\t\tu = parseInt(strs[1]);\n\t\ta = parseInt(strs[2]);\n\t\tp = parseInt(strs[3]);\n\t}\n}\n\nclass DataComparator implements Comparator<Data>{\n    //比較メソッド（データクラスを比較して-1, 0, 1を返すように記述する）\n    public int compare(Data a, Data b) {\n        // a > b で昇順、a < b で降順\n        if (a.a < b.a) {\n        \t// 正解数が多い方が上位\n            return 1;\n        } else if (a.a > b.a) {        \t\n            return -1;\n        } else {\n        \t// 正解数が同じ場合、ペナルティが小さいほうが上位\n        \tif(a.p > b.p){\n        \t\treturn 1;\n        \t}else if(a.p < b.p){\n        \t\treturn -1;\n        \t}else{\n        \t\t// 最終的にIDが小さいほうが上位\n        \t\tif(a.i > b.i){\n        \t\t\treturn 1;\n        \t\t}else{\n        \t\t\treturn -1;\n        \t\t}\n        \t}\n        }\n    }\n}\n\n/**\n * UnionFindTree Set周りは未実装\n * @author yoshikyoto\n */\nclass UnionFindTree{\n    public int[] parent, rank;\n    public int n;\n    public Set<Integer> set;\n    // 初期化\n    UnionFindTree(int _n){\n        n = _n;\n        for(int i = 0; i < n; i++){\n        \tparent = new int[n];\n        \trank = new int[n];\n            parent[i] = i;\n            rank[i] = 0;\n        }\n    }\n    // 根を求める\n    int find(int x){\n        if(parent[x] == x){\n            return x;\n        }else{\n            return parent[x] = find(parent[x]);\n        }\n    }\n    // xとyの集合を結合\n    void unite(int x, int y){\n        x = find(x);\n        y = find(y);\n        if(x == y){\n            return;\n        }\n        if(rank[x] < rank[y]){\n            parent[x] = y;\n        }else{\n            parent[y] = x;\n            if(rank[x] == rank[y]) rank[x]++;\n        }\n    }\n    // xとyが同じ集合か\n    boolean same(int x, int y){\n        return find(x) == find(y);\n    }\n};\n\n\n/**\n * 整数を数え上げたりするクラス\n * new Prime(int n) でnまでエラトステネスの篩を実行。\n * @author yoshikyoto\n * @param a[i] iが素数の時true\n * @param count[i] i以下の素数の数\n */\nclass Prime{\n\tboolean[] a;\n\tint[] count;\n\tPrime(int n){\n\t\ta = new boolean[n+1];\n\t\ta[0] = false; a[1] = false;\n\t\tfor(int i = 2; i <= n; i++) a[i] = true;\n\t\t// ふるい\n\t\tfor(int i = 2; i < (n - 3) / 2; i++)\n\t\t\tif(a[i]) for(int j = 2; j * i <= n; j++)\n\t\t\t\t\ta[j * i] = false;\n\t\t\n\t\t// 数え上げ\n\t\tcount = new int[n+1];\n\t\tcount[0] = 0;\n\t\tfor(int i = 1; i <= n; i++){\n\t\t\tint gain = 0;\n\t\t\tif(a[i]) gain = 1;\n\t\t\tcount[i] = count[i-1] + gain;\n\t\t}\n\t}\n}\n\nclass AI extends ArrayList<Integer>{}\nclass SI extends Stack<Integer>{}\n\nclass CountHashMap<E> extends HashMap<E, Integer>{\n\tArrayList<E> keyArray = new ArrayList<E>();\n\tpublic void add(E key){add(key, 1);}\n\tpublic void add(E key, Integer value){\n\t\tif(containsKey(key)){value += get(key);\n\t\t}else{keyArray.add(key);}\n\t\tput(key, value);\n\t}\n}\nclass HM extends CountHashMap<String>{} \n\nclass Q<E> extends ArrayDeque<E>{\n\tpublic void push(E item){add(item);}\n\tpublic E pop(){return poll();}\n}\nclass QS extends Q<String>{}\nclass QI extends Q<Integer>{}\n\n/**\n * MyUtil\n * @author yoshikyoto\n */\nclass MyUtil extends MyIO{\n\tpublic static Random rand = new Random();\n\tpublic static long start_time = 0;\n\tpublic static void start(){start_time = System.currentTimeMillis();}\n\tpublic static void end(){\n\t\tif(start_time == 0) return;\n\t\tlong time = System.currentTimeMillis() - start_time;\n\t\tif(DEBUG) p(time + \"ms\");\n\t}\n\tpublic static int digit(int n){return String.valueOf(n).length();}\n\tpublic static String reverse(String s){\n\t\tStringBuffer sb = new StringBuffer(s);\n\t\treturn sb.reverse().toString();\n\t}\n\tpublic static void sort(int[] a){Arrays.sort(a);}\n\tpublic static void dsort(int[] a){\n\t\tArrays.sort(a);\n\t\tint l = a.length;\n\t\tfor(int i = 0; i < l/2; i++){\n\t\t\tint tmp = a[i]; a[i] = a[l-1-i]; a[l-1-i] = tmp;\n\t\t}\n\t}\n\tpublic static void sleep(int t){try{Thread.sleep(t);}catch(Exception e){}}\n\tpublic static int sum(int[] a){int s = 0; for(int i = 0; i < a.length; i++)s+=a[i]; return s;}\n\tpublic static int[] cp(int[] a){\n\t\tint[] b = new int[a.length];\n\t\tfor(int i = 0; i < a.length; i++) b[i] = a[i];\n\t\treturn b;\n\t}\n\tpublic static int randomInt(int min, int max){return min + rand.nextInt(max - min + 1);}\n\tstatic boolean inside(int y, int x, int h, int w){return 0 <= y && y <= (h-1) && 0 <= x && x <= (w-1);};\n}\n\n/**\n * MyIO\n * @author yoshikyoto\n */\nclass MyIO extends MyMath{\n\tstatic Scanner sc = new Scanner(new InputStreamReader(System.in));\n\tpublic static char scNextChar(){return sc.next().charAt(0);}\n\tstatic BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\tpublic static boolean DEBUG = false;\n\tpublic static String line;\n\tpublic static void debug(){DEBUG = !DEBUG;};\n\tpublic static int[] readIntMap() throws IOException{return parseInt(readLine().split(\" \"));}\n\tpublic static int[] readNoDistIntMap() throws IOException{\n\t\tString[] strs = readLine().split(\"\");\n\t\tint l = strs.length;\n\t\tint[] ret = new int[l-1];\n\t\tfor(int i = 1; i < l; i++)\n\t\t\tret[i-1] = parseInt(strs[i]);\n\t\treturn ret;\n\t}\n\tpublic static boolean readToLine() throws IOException{return (line = br.readLine()) != null;}\n\tpublic static String readLine() throws IOException{return br.readLine();}\n\tpublic static int readInt() throws IOException{return Integer.parseInt(br.readLine());}\n\tpublic static void p(Object o){System.out.println(o.toString());}\n\tpublic static void pr(Object o){System.out.print(o.toString());}\n\tpublic static void d(Object o){if(DEBUG)System.out.println(o.toString());}\n\tpublic static void dr(Object o){if(DEBUG)System.out.print(o.toString());}\n\tpublic static void da(Object[] o){if(DEBUG)System.out.println(Arrays.toString(o));}\n\tpublic static void da(int[] arr){if(DEBUG)System.out.println(Arrays.toString(arr));}\n\tpublic static void da(double[] arr){if(DEBUG)System.out.println(Arrays.toString(arr));}\n\tpublic static void da(boolean[] arr){if(DEBUG)System.out.println(Arrays.toString(arr));}\n\tpublic static int[] parseInt(String[] arr){\n\t\tint[] res = new int[arr.length];\n\t\tfor(int i = 0; i < arr.length; i++)res[i] = Integer.parseInt(arr[i]);\n\t\treturn res;\n\t}\n\tpublic static double[] parseDouble(String[] arr){\n\t\tdouble[] res = new double[arr.length];\n\t\tfor(int i = 0; i < arr.length; i++)res[i] = Double.parseDouble(arr[i]);\n\t\treturn res;\n\t}\n\tpublic static boolean[] parseBool(String[] arr){\n\t\tint[] t = parseInt(arr);\n\t\tboolean[] res = new boolean[t.length];\n\t\tfor(int i = 0; i < t.length; i++){\n\t\t\tif(t[i] == 1){res[i] = true;\n\t\t\t}else{res[i] = false;}\n\t\t}\n\t\treturn res;\n\t}\n\tpublic static int parseInt(Object o){return Integer.parseInt(o.toString());}\n\tpublic static PrintWriter getFilePrintWriter(String file) throws IOException{\n\t\tFileWriter fw = new FileWriter(file);\n\t\tBufferedWriter bw = new BufferedWriter(fw);\n\t\tPrintWriter pw = new PrintWriter(bw);\n\t\treturn pw;\n\t}\n\tpublic static BufferedReader getFileBufferdReader(String file) throws FileNotFoundException{\n\t\tFileReader fr = new FileReader(file);\n\t\tBufferedReader br = new BufferedReader(fr);\n\t\treturn br;\n\t}\n}\n\nclass MyMath{\n\t/**\n\t * 弧度法の角度を入力してsinの値を返す（Math.sin の入力はラジアン）\n\t */\n\tpublic static double sin(int r){return Math.sin(Math.toRadians(r));}\n\n\t/**\n\t * 弧度法の角度を入力してcosの値を返す（Math.sin の入力はラジアン）\n\t */\n\tpublic static double cos(int r){return Math.cos(Math.toRadians(r));}\n\tpublic static int max(int a, int b){return Math.max(a, b);}\n\tpublic static int min(int a, int b){return Math.min(a, b);}\n\tpublic static boolean isCross(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4){\n\t    // 並行な場合\n\t    int m = (x2-x1)*(y4-y3)-(y2-y1)*(x4-x3);\n\t    if(m == 0) return false;\n\t    // 媒介変数の値が0より大きく1以下なら交差する、これは問題の状況によって変わるかも。\n\t    double r =(double)((y4-y3)*(x3-x1)-(x4-x3)*(y3-y1))/m;\n\t    double s =(double)((y2-y1)*(x3-x1)-(x2-x1)*(y3-y1))/m;\n\t    return (0 < r && r <= 1 && 0 < s && s <= 1);\n\t}\n\tpublic static boolean isParallel(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4){\n\t    if((x2-x1)*(y4-y3) == (y2-y1)*(x4-x3)) return true;\n\t    else return false;\n\t}\n\tpublic static double sq(double d){return d*d;}\n\tpublic static int sq(int i){return i*i;}\n\tpublic static int sqdist(int x1, int y1, int x2, int y2){\n\t\treturn sq(x1-x2) + sq(y1-y2);}\n\tpublic static double sqdist(double x1, double y1, double x2, double y2){\n\t\treturn sq(x1-x2) + sq(y1-y2);}\n\tpublic static double dist(int x1, int y1, int x2, int y2){\n\t\treturn Math.sqrt(sqdist(x1, y1, x2, y2));}\n\tpublic static double dist(double x1, double y1, double x2, double y2){\n\t\treturn Math.sqrt(sqdist(x1, y1, x2, y2));}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//CamelCase\npublic class Main{\n\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tString s = sc.next();\n\t\t\tchar ch = sc.next().charAt(0);\n\t\t\tif(ch=='X')break;\n\t\t\tchar f = Character.isUpperCase(s.charAt(0))?'U':s.contains(\"_\")?'D':'L';\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tchar[] t = s.toCharArray();\n\t\t\tif(f==ch)sb.append(s);\n\t\t\telse if(f=='U'){\n\t\t\t\tif(ch=='L'){\n\t\t\t\t\tt[0] = Character.toLowerCase(t[0]);\n\t\t\t\t\tsb.append(t);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tt[0] = Character.toLowerCase(t[0]);\n\t\t\t\t\tfor(int i=0;i<t.length;i++){\n\t\t\t\t\t\tif(Character.isUpperCase(t[i]))sb.append('_');\n\t\t\t\t\t\tsb.append(Character.toLowerCase(t[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(f=='L'){\n\t\t\t\tif(ch=='U'){\n\t\t\t\t\tt[0] = Character.toUpperCase(t[0]);\n\t\t\t\t\tsb.append(t);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(int i=0;i<t.length;i++){\n\t\t\t\t\t\tif(Character.isUpperCase(t[i]))sb.append('_');\n\t\t\t\t\t\tsb.append(Character.toLowerCase(t[i]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(ch=='U'){\n\t\t\t\t\tsb.append(Character.toUpperCase(t[0]));\n\t\t\t\t\tfor(int i=1;i<t.length;i++){\n\t\t\t\t\t\tif(t[i]=='_'){\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tsb.append(Character.toUpperCase(t[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse sb.append(t[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor(int i=0;i<t.length;i++){\n\t\t\t\t\t\tif(t[i]=='_'){\n\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\tsb.append(Character.toUpperCase(t[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse sb.append(t[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\tstatic char[] tango;\n\tstatic String str;\n\tpublic static void main(String[] args) {\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tstr = cin.next();\n\t\t\tString c = cin.next();\n\t\t\tif(c.equals(\"X\")){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttango = new char[300];\n\t\t\tSystem.out.println(CamelCase(c.charAt(0)));\n\t\t}\n\t}\n\tstatic String CamelCase(char c){\n\t\tString res = \"\";\n\t\tint wordCnt=0;\n\t\tint before=0;\n\t\tboolean under=false;;\n\t\tString[] words = new String[100];\n\t\tfor(int i = 0; i < 100; i++){\n\t\t\twords[i]=\"\";\n\t\t}\n\t\tfor(int i = 0; i < str.length(); i++){\n\t\t\tif(str.charAt(i)=='_'){\n\t\t\t\tunder=true;\n\t\t\t\twords[wordCnt]=str.substring(before, i);\n\t\t\t\tbefore = i+1;\n\t\t\t\twordCnt++;\n\t\t\t}\n\n\t\t}\n\t\tif(under){\n\t\t\twords[wordCnt]=str.substring(before, str.length());\n\t\t\twordCnt++;\n\t\t}\n\t\telse{\n\t\t\tfor(int i = 1; i < str.length();i++){\n\t\t\t\tchar a = str.charAt(i);\n\t\t\t\tif(a <= 'Z' && a >= 'A'){\n\t\t\t\t\twords[wordCnt++]=str.substring(before, i);\n\t\t\t\t\tbefore=i;\n\t\t\t\t}\n\t\t\t}\n\t\t\twords[wordCnt++]=str.substring(before, str.length());\n\t\t}\n\t\tfor(int i = 0; i < wordCnt; i++){\n\t\t\t//System.out.println(words[i]);\n\t\t}\n\t\tif(c == 'L'){\n\t\t\tfor(int i = 0; i < wordCnt; i++){\n\t\t\t\tif(i==0){\n\t\t\t\t\tchar a = words[i].charAt(0);\n\t\t\t\t\ta = Character.toLowerCase(a);\n\t\t\t\t\twords[i] = a + words[i].substring(1, words[i].length());\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tchar a = words[i].charAt(0);\n\t\t\t\t\ta = Character.toUpperCase(a);\n\t\t\t\t\twords[i] = a + words[i].substring(1, words[i].length());\n\t\t\t\t}\n\t\t\t\tres += words[i];\n\t\t\t}\n\t\t}\n\t\telse if(c == 'U'){\n\t\t\tfor(int i = 0; i < wordCnt; i++){\n\t\t\t\tchar a = words[i].charAt(0);\n\t\t\t\ta = Character.toUpperCase(a);\n\t\t\t\twords[i] = a + words[i].substring(1, words[i].length());\n\t\t\t\tres += words[i];\n\t\t\t}\n\t\t\t\n\t\t}\n\t\telse if(c == 'D'){\n\t\t\tfor(int i = 0; i < wordCnt; i++){\n\t\t\t\tchar a = words[i].charAt(0);\n\t\t\t\ta = Character.toLowerCase(a);\n\t\t\t\twords[i] = a + words[i].substring(1, words[i].length());\n\t\t\t\tif(i!=0){\n\t\t\t\t\tres += \"_\";\n\t\t\t\t}\n\t\t\t\tres += words[i];\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main ( String[] args ){\n\t\tScanner sc = new Scanner( System.in );\n\t\twhile( true ){\n\t\t\tString src = sc.next();\n\t\t\tchar[] strc = src.toCharArray();\n\t\t\tString type = sc.next();\n\t\t\tchar diff =  'a' - 'A';\n\t\t\tswitch (type.toCharArray()[ 0 ] ){\n\t\t\tcase 'X':\n\t\t\t\treturn;\n\t\t\tcase 'U':\n\t\t\t\tif( 'a' <= strc[ 0 ] && strc[ 0 ] <= 'z' ){\n\t\t\t\t\tstrc[ 0 ] -= diff; // to upper case\n\t\t\t\t}\n\t\t\t\tfor( int i = 1; i < strc.length; i++ ){\n\t\t\t\t\tif( strc[ i ] == '_' ){\n\t\t\t\t\t\tString s1 = \"\";\n\t\t\t\t\t\tString s2 = \"\";\n\t\t\t\t\t\tfor( int j = 0; j < i; j++ ){\n\t\t\t\t\t\t\ts1 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( 'a' <= strc[ i + 1 ] && strc[ i + 1 ] <= 'z' ){\n\t\t\t\t\t\t\tstrc[ i + 1 ] -= diff;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor( int j = i + 1; j < strc.length; j++ ){\n\t\t\t\t\t\t\ts2 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstrc = ( s1 + s2 ).toCharArray();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println( strc );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tif( 'A' <= strc[ 0 ] && strc[ 0 ] <= 'Z' ){\n\t\t\t\t\tstrc[ 0 ] += diff; // to upper case\n\t\t\t\t}\n\t\t\t\tfor( int i = 1; i < strc.length; i++ ){\n\t\t\t\t\tif( strc[ i ] == '_' ){\n\t\t\t\t\t\tString s1 = \"\";\n\t\t\t\t\t\tString s2 = \"\";\n\t\t\t\t\t\tfor( int j = 0; j < i; j++ ){\n\t\t\t\t\t\t\ts1 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( 'a' <= strc[ i + 1 ] && strc[ i + 1 ] <= 'z' ){\n\t\t\t\t\t\t\tstrc[ i + 1 ] -= diff;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor( int j = i + 1; j < strc.length; j++ ){\n\t\t\t\t\t\t\ts2 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstrc = ( s1 + s2 ).toCharArray();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println( strc );\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tif( 'A' <= strc[ 0 ] && strc[ 0 ] <= 'Z' ){\n\t\t\t\t\tstrc[ 0 ] += diff; // to upper case\n\t\t\t\t}\n\t\t\t\tfor( int i = 1; i < strc.length; i++ ){\n\t\t\t\t\tif( 'A' <= strc[ i ] && strc[ i ] <= 'Z' ){\n\t\t\t\t\t\tString s = \"\";\n\t\t\t\t\t\tfor( int j = 0; j < i; j++ ){\n\t\t\t\t\t\t\ts += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts += \"_\";\n\t\t\t\t\t\tstrc[ i ] += diff;\n\t\t\t\t\t\tfor( int j = i; j < strc.length; j++ ){\n\t\t\t\t\t\t\ts += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstrc = s.toCharArray();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println( strc );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            String line;\n            /* input */\n            while(true){\n                line = br.readLine();\n                \n                String str = line.split(\" \")[0], type = line.split(\" \")[1];\n                \n                if(type.equals(\"X\")) break;\n                \n                if(str.indexOf('_')>-1){\n                \tif(type.equals(\"D\")){\n                \t\tSystem.out.println(str);\n                \t} else {\n                \t\tString[] s = str.split(\"_\");\n                \t\tif(type.equals(\"U\")){\n                \t\t\tfor(String t : s){\n                \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t} else {\n                \t\t\tSystem.out.print(s[0]);\n                \t\t\tfor(int i=1;i<s.length;i++){\n                \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t}\n                \t}\n                } else {\n        \t\t\tString[] s = str.split(\"((?<=[a-z])||(?<=[A-Z]))(?=[A-Z])\");\n            \t\tif(type.equals(\"D\")){\n            \t\t\tSystem.out.print(s[0].toLowerCase());\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(\"_\" + s[i].toLowerCase());\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else if(type.equals(\"U\")){\n            \t\t\tfor(String t : s){\n            \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else {\n            \t\t\tSystem.out.print(s[0]);\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t}\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner s=new Scanner(System.in);\n\t\tString str,type;\n\t\twhile(true){\n\t\t\tstr=s.next();\n\t\t\ttype=s.next();\n\t\t\tif(type.charAt(0)=='X')break;\n\t\t\tString ret=\"\";\n\t\t\tString[]table=str.split(\"_\");\n\t\t\tswitch(type.charAt(0)){\n\t\t\t\tcase 'U':\n\t\t\t\t\tif(table.length==1){\n\t\t\t\t\t\tret=(char)(str.charAt(0)&(~32))+str.substring(1);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfor(int i=0;i<table.length;i++){\n\t\t\t\t\t\t\tret+=(char)(table[i].charAt(0)&(~32))+table[i].substring(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\tif(table.length==1){\n\t\t\t\t\t\tret=(char)(str.charAt(0)|(32))+str.substring(1);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tret+=table[0];\n\t\t\t\t\t\tfor(int i=1;i<table.length;i++){\n\t\t\t\t\t\t\tret+=(char)(table[i].charAt(0)&(~32))+table[i].substring(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tfor(int i=0;i<str.length();i++){\n\t\t\t\t\t\tif(i>0&&str.charAt(i)>='A'&&str.charAt(i)<='Z')ret+=\"_\"+(char)(str.charAt(i)|32);\n\t\t\t\t\t\telse ret+=(char)(str.charAt(i)|32);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(ret);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\npublic class Main\n{\n\tpublic static void main(String arg[])\n\t{\n\t\tScanner in=new Scanner(System.in);\n\t\tfor(;;)\n\t\t{\n\t\t\tchar ch[]=in.next().toCharArray();\n\t\t\tString ans=\"\";\n\t\t\tString st=in.next();\n\t\t\tif(st.equals(\"X\"))\n\t\t\t\treturn;\n\t\t\telse if(st.equals(\"U\"))\n\t\t\t\tfor(int i=0;i<ch.length;i++)\n\t\t\t\t{\n\t\t\t\t\tif(ch[i]=='_')\n\t\t\t\t\t{\n\t\t\t\t\t\tans+=(ch[i+1]+\"\").toUpperCase();\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tString tmp=ch[i]+\"\";\n\t\t\t\t\t\tif(i==0)\n\t\t\t\t\t\t\tans+=tmp.toUpperCase();\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tans+=tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse if(st.equals(\"L\"))\n\t\t\t\tfor(int i=0;i<ch.length;i++)\n\t\t\t\t{\n\t\t\t\t\tif(ch[i]=='_')\n\t\t\t\t\t{\n\t\t\t\t\t\tans+=(ch[i+1]+\"\").toUpperCase();\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tString tmp=ch[i]+\"\";\n\t\t\t\t\t\tif(i==0)\n\t\t\t\t\t\t\tans+=tmp.toLowerCase();\n\t\t\t\t\t\telse \n\t\t\t\t\t\t\tans+=tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\telse if(st.equals(\"D\"))\n\t\t\t\tfor(int i=0;i<ch.length;i++)\n\t\t\t\t{\n\t\t\t\t\tif(i!=0&&Character.isUpperCase(ch[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tans+=\"_\";\n\t\t\t\t\t\tans+=(ch[i]+\"\").toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tans+=(ch[i]+\"\").toLowerCase();\n\t\t\t\t}\n\t\t\tSystem.out.println(ans);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nimport java.math.*;\nimport java.awt.geom.*;\nimport java.io.*;\n    \n    \npublic class Main {\n\tstatic int INF = 2 << 27;\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile (true) {\n\t\t\tString name = sc.next();\n\t\t\tchar type   = sc.next().charAt(0);\n\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\tif(type == 'X') break;\n\t\t\telse if(type == 'U') {\n\t\t\t\tsb.append(Character.toUpperCase(name.charAt(0)));\n\t\t\t\tfor(int i = 1; i < name.length(); i++) {\n\t\t\t\t\tif(name.charAt(i) == '_') {\n\t\t\t\t\t\tsb.append(Character.toUpperCase(name.charAt(i+1)));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsb.append(name.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(type == 'L') {\n\t\t\t\tsb.append(Character.toLowerCase(name.charAt(0)));\n\t\t\t\tfor(int i = 1; i < name.length(); i++) {\n\t\t\t\t\tif(name.charAt(i) == '_') {\n\t\t\t\t\t\tsb.append(Character.toUpperCase(name.charAt(i+1)));\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsb.append(name.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(type == 'D') {\n\t\t\t\tsb.append(Character.toLowerCase(name.charAt(0)));\n\t\t\t\tfor(int i = 1; i < name.length(); i++) {\n\t\t\t\t\tif(Character.isUpperCase(name.charAt(i))) {\n\t\t\t\t\t\tsb.append(\"_\");\n\t\t\t\t\t\tsb.append(Character.toLowerCase(name.charAt(i)));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tsb.append(name.charAt(i));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb.toString());\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\tvoid run(){\n\t\tScanner sc=new Scanner(System.in);\n\t\twhile(true){\n\t\t\tchar ch[]=sc.next().toCharArray();\n\t\t\tString type=sc.next();\n\t\t\tif(type.equals(\"X\")) break;\n\t\t\tint now=typeCheck(ch);\n\t\t\tif(type.equals(\"U\")){\n\t\t\t\tSystem.out.println(Uchange(ch, now));\n\t\t\t}\n\t\t\telse if(type.equals(\"L\")){\n\t\t\t\tSystem.out.println(Lchange(ch, now));\n\t\t\t}\n\t\t\telse if(type.equals(\"D\")){\n\t\t\t\tSystem.out.println(Dchange(ch, now));\n\t\t\t}\n\t\t}\n\t}\n\tint typeCheck(char ch[]){\n\t\tfor(int i=0; i<ch.length; i++){\n\t\t\tif(ch[i]=='_'){\n\t\t\t\treturn 2;\n\t\t\t}\n\t\t}\n\t\tif(Character.isUpperCase(ch[0])){\n\t\t\treturn 0;\n\t\t}\n\t\telse return 1;\n\t}\n\tString Uchange(char ch[],int now){\n\t\tif(now==0){//テ・ツ?・テ・ツ環崚」ツ?袈\n\t\t\t//テ」ツ?敕」ツ?ョテ」ツ?セテ」ツ?セテ」ツ?ァOK\n\t\t\treturn String.valueOf(ch);\n\t\t}\n\t\telse if(now==1){//テ・ツ?・テ・ツ環崚」ツ?鍬\n\t\t\tch[0]=Character.toUpperCase(ch[0]);\t\n\t\t\treturn String.valueOf(ch);\n\t\t}\n\t\telse if(now==2){//テ・ツ?・テ・ツ環崚」ツ?轡\n\t\t\tString str=\"\";\n\t\t\tch[0]=Character.toUpperCase(ch[0]);\n\t\t\tstr+=String.valueOf(ch[0]);\n\t\t\tfor(int i=1; i<ch.length; i++){\n\t\t\t\tif(ch[i]=='_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tch[i]=Character.toUpperCase(ch[i]);\n\t\t\t\t\tstr+=String.valueOf(ch[i]);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tstr+=String.valueOf(ch[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\treturn \"NG\";\n\t}\n\tString Lchange(char ch[],int now){\n\t\tif(now==0){//テ・ツ?・テ・ツ環崚」ツ?袈\n\t\t\tch[0]=Character.toLowerCase(ch[0]);\t\n\t\t\treturn String.valueOf(ch);\n\t\t}\n\t\telse if(now==1){//テ・ツ?・テ・ツ環崚」ツ?鍬\n\t\t\t//テ」ツ?敕」ツ?ョテ」ツ?セテ」ツ?セテ」ツ?ァOK\n\t\t\treturn String.valueOf(ch);\n\t\t}\n\t\telse if(now==2){//テ・ツ?・テ・ツ環崚」ツ?轡\n\t\t\tString str=\"\";\n\t\t\tfor(int i=0; i<ch.length; i++){\n\t\t\t\tif(ch[i]=='_'){\n\t\t\t\t\ti++;\n\t\t\t\t\tch[i]=Character.toUpperCase(ch[i]);\n\t\t\t\t\tstr+=String.valueOf(ch[i]);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tstr+=String.valueOf(ch[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\treturn \"NG\";\n\t}\n\tString Dchange(char ch[],int now){\n\t\tif(now==0){//テ・ツ?・テ・ツ環崚」ツ?袈\n\t\t\tch[0]=Character.toLowerCase(ch[0]);\t\n\t\t\tString str=\"\";\n\t\t\tstr+=ch[0];\n\t\t\tfor(int i=1; i<ch.length; i++){\n\t\t\t\tif(Character.isUpperCase(ch[i])){\n\t\t\t\t\tstr+=\"_\";\n\t\t\t\t\tstr+=String.valueOf(Character.toLowerCase(ch[i]));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tstr+=String.valueOf(ch[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\telse if(now==1){//テ・ツ?・テ・ツ環崚」ツ?鍬\n\t\t\tString str=\"\";\n\t\t\tfor(int i=0; i<ch.length; i++){\n\t\t\t\tif(Character.isUpperCase(ch[i])){\n\t\t\t\t\tstr+=\"_\";\n\t\t\t\t\tstr+=String.valueOf(Character.toLowerCase(ch[i]));\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tstr+=String.valueOf(ch[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t}\n\t\telse if(now==2){//テ・ツ?・テ・ツ環崚」ツ?轡\n\t\t\t//テ」ツ?敕」ツ?ョテ」ツ?セテ」ツ?セテ」ツ?ァOK\n\t\t\treturn String.valueOf(ch);\n\t\t}\n\t\treturn \"NG\";\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    private static final String EOF = \"X\";\n\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            String[] line = null;;\n            while((line = scn.nextLine().split(\" \")) != null && !line[1].equals(EOF)) {\n                System.out.println(encode(decode(line[0]), line[1]));\n            }\n        }\n    }\n\n    private static String[] decode(String str) {\n        String[] rslt = null;\n        if(str.indexOf(\"_\") >= 0) {\n            rslt = decodeSnake(str);\n        } else {\n            if(Character.isUpperCase(str.charAt(0))) {\n                rslt = decodePascal(str);\n            } else {\n                rslt = decodeCamel(str);\n            }\n        }\n        return rslt;\n    }\n\n    private static String[] decodePascal(String str) {\n        return decodeCamel(str);\n    }\n\n    private static String[] decodeCamel(String str) {\n        ArrayList<String> list = new ArrayList<>();\n        for(int i = 1; i < str.length(); i++) {\n            if(Character.isUpperCase(str.charAt(i))) {\n                list.add(str.substring(0, i).toLowerCase());\n                str = str.substring(i);\n                i = 1;\n            }\n        }\n        list.add(str.toLowerCase());\n        return list.toArray(new String[0]);\n    }\n\n    private static String[] decodeSnake(String str) {\n        return str.split(\"_\");\n    }\n\n    private static String encode(String[] words, String op) {\n        String rslt = null;\n        switch(op) {\n          case \"U\":\n            rslt = encodePascal(words);\n            break;\n          case \"L\":\n            rslt = encodeCamel(words);\n            break;\n          case \"D\":\n            rslt = encodeSnake(words);\n            break;\n          default:\n            assert false;\n        }\n        return rslt;\n    }\n\n    private static String encodePascal(String[] words) {\n        StringBuilder sb = new StringBuilder();\n        for(String word : words) {\n            sb.append(Character.toUpperCase(word.charAt(0)) + word.substring(1));\n        }\n        return sb.toString();\n    }\n\n    private static String encodeCamel(String[] words) {\n        StringBuilder sb = new StringBuilder(words[0]);\n        for(int i = 1; i < words.length; i++) {\n            sb.append(Character.toUpperCase(words[i].charAt(0)) + words[i].substring(1));\n        }\n        return sb.toString();\n    }\n\n    private static String encodeSnake(String[] words) {\n        StringBuilder sb = new StringBuilder(words[0]);\n        for(int i = 1; i < words.length; i++) {\n            sb.append(\"_\" + words[i]);\n        }\n        return sb.toString();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\n\t\twhile (true) {\n\t\t\tString s = sc.next();\n\t\t\tchar type = sc.next().charAt(0);\n\t\t\tif (type == 'X') {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tString[] words;\n\n\t\t\tif (s.indexOf('_') > -1) {\n\t\t\t\twords = s.split(\"_\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint start = 0;\n\t\t\t\tList<String> wordsTemp = new ArrayList<String>();\n\t\t\t\tfor (int i = 1; i < s.length(); i++) {\n\t\t\t\t\tif (Character.isUpperCase(s.charAt(i))) {\n\t\t\t\t\t\twordsTemp.add(s.substring(start, i));\n\t\t\t\t\t\tstart = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twordsTemp.add(s.substring(start));\n\t\t\t\twords = wordsTemp.toArray(new String[wordsTemp.size()]);\n\t\t\t}\n\n\t\t\tStringBuilder sb = new StringBuilder(s.length() + words.length);\n\n\t\t\tif (type == 'D') {\n\t\t\t\tsb.append(words[0].toLowerCase());\n\t\t\t\tfor (int i = 1; i < words.length; i++) {\n\t\t\t\t\tsb.append('_').append(words[i].toLowerCase());\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (type == 'L') {\n\t\t\t\t\tsb.append(words[0].toLowerCase());\n\t\t\t\t}\n\t\t\t\tfor (int i = (type == 'L' ? 1 : 0); i < words.length; i++) {\n\t\t\t\t\tsb.append(Character.toUpperCase(words[i].charAt(0)));\n\t\t\t\t\tif (words[i].length() > 1)\n\t\t\t\t\t\tsb.append(words[i].substring(1));\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb);\n\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tScanner in = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tnew Main();\n\t}\n\tpublic Main() {\n\t\tnew B().doIt();\n\t}\n\t\n\tclass B{\n\t\t\n\t\tString input;\n\t\tchar type;\n\t\t\n\t\tvoid solve(){\n\t\t\tData d = new Data(input);\n//\t\t\tSystem.out.println(Arrays.toString(d.input));\n\t\t\tif(type=='U')System.out.println(d.toU());\n\t\t\telse if(type=='L')System.out.println(d.toL());\n\t\t\telse if(type=='D')System.out.println(d.toD());\n\t\t}\n\t\t\n\t\tvoid doIt(){\n\t\t\twhile(in.hasNext()){\n\t\t\t\tinput = in.next();\n\t\t\t\ttype = in.next().charAt(0);\n\t\t\t\tif(type=='X')break;\n\t\t\t\tsolve();\n\t\t\t}\n\t\t}\n\t\tclass Data{\n\t\t\tString[] input;\n\t\t\tint n;\n\t\t\tpublic Data(String a) {\n\t\t\t\tString[] test = a.split(\"_\");\n\t\t\t\tif(test.length==1){\n\t\t\t\t\tString b = a.charAt(0)+\"\";\n\t\t\t\t\tfor(int i=1;i<a.length();i++){\n\t\t\t\t\t\tif(Character.isUpperCase(a.charAt(i)))b+=\" \";\n\t\t\t\t\t\tb+=a.charAt(i);\n\t\t\t\t\t}\n\t\t\t\t\tinput = b.split(\" \");\n\t\t\t\t\tn = input.length;\n\t\t\t\t}else{\n\t\t\t\t\tinput = a.split(\"_\");\n\t\t\t\t\tn = test.length;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tString toU(){\n//\t\t\t\tSystem.out.println(Arrays.toString(input));\n//\t\t\t\tSystem.out.println(n);\n\t\t\t\tString result = \"\";\n\t\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\t\tresult += Character.toUpperCase(input[i].charAt(0));\n\t\t\t\t\tfor(int s=1;s<input[i].length();s++)result += input[i].charAt(s);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t\tString toL(){\n\t\t\t\tString result = toU();\n\t\t\t\tString result2 = Character.toLowerCase(result.charAt(0))+\"\";\n\t\t\t\tfor(int i=1;i<result.length();i++)result2+=result.charAt(i);\n\t\t\t\treturn result2;\n\t\t\t}\n\t\t\t\n\t\t\tString toD(){\n\t\t\t\tString result = Character.toLowerCase(input[0].charAt(0))+input[0].substring(1,input[0].length());\n\t\t\t\tfor(int i=1;i<n;i++){\n//\t\t\t\t\tSystem.out.println(input[i]);\n\t\t\t\t\tresult += \"_\";\n\t\t\t\t\tfor(int s=0;s<input[i].length();s++){\n//\t\t\t\t\t\tSystem.out.println(result);\n\t\t\t\t\t\tresult += Character.toLowerCase(input[i].charAt(s));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\n\t\n\n//\tclass B{\n//\t\tint n,a,b;\n//\n//\t\tvoid solve(){\n//\t\t\t\n//\t\t}\n//\n//\t\tvoid doIt(){\n//\t\t\twhile(in.hasNext()){\n//\t\t\t\tn = in.nextInt();\n//\t\t\t\ta = in.nextInt();\n//\t\t\t\tb = in.nextInt();\n//\t\t\t\tif(n+a+b==0)break;\n//\t\t\t\tsolve();\n//\t\t\t}\n//\t\t}\n//\t}\n//\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            String line;\n            /* input */\n            while(true){\n                line = br.readLine();\n                \n                String str = line.split(\" \")[0], type = line.split(\" \")[1];\n                \n                if(type.equals(\"X\")) break;\n                \n                if(str.indexOf('_')>-1){\n                \tif(type.equals(\"D\")){\n                \t\tSystem.out.println(str);\n                \t\tcontinue;\n                \t} else {\n                \t\tString[] s = str.split(\"_\");\n                \t\tif(type.equals(\"U\")){\n                \t\t\tfor(String t : s){\n                \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t\tcontinue;\n                \t\t} else {\n                \t\t\tSystem.out.print(s[0]);\n                \t\t\tfor(int i=1;i<s.length;i++){\n                \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t\tcontinue;\n                \t\t}\n                \t}\n                } else {\n        \t\t\tString[] s = str.split( \"(?<=[a-z])(?=[A-Z])\" );\n            \t\tif(type.equals(\"D\")){\n            \t\t\tSystem.out.print(s[0].toLowerCase());\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(\"_\" + s[i].toLowerCase());\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else if(type.equals(\"U\")){\n            \t\t\tfor(String t : s){\n            \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else {\n            \t\t\tSystem.out.print(s[0]);\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t}\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    private static final String EOF = \"X\";\n\n    public static void main(String[] args) {\n        try(Scanner scn = new Scanner(System.in)) {\n            String[] line = null;\n            while((line = scn.nextLine().split(\" \")) != null && !line[1].equals(EOF)) {\n                System.out.println(encode(decode(line[0]), line[1]));\n            }\n        }\n    }\n\n    private static String[] decode(String str) {\n        String[] rslt = null;\n        if(str.indexOf(\"_\") >= 0) {\n            rslt = decodeSnake(str);\n        } else {\n            if(Character.isUpperCase(str.charAt(0))) {\n                rslt = decodePascal(str);\n            } else {\n                rslt = decodeCamel(str);\n            }\n        }\n        return rslt;\n    }\n\n    private static String[] decodePascal(String str) {\n        return decodeCamel(str);\n    }\n\n    private static String[] decodeCamel(String str) {\n        ArrayList<String> list = new ArrayList<>();\n        for(int i = 1; i < str.length(); i++) {\n            if(Character.isUpperCase(str.charAt(i))) {\n                list.add(str.substring(0, i).toLowerCase());\n                str = str.substring(i);\n                i = 1;\n            }\n        }\n        list.add(str.toLowerCase());\n        return list.toArray(new String[0]);\n    }\n\n    private static String[] decodeSnake(String str) {\n        return str.split(\"_\");\n    }\n\n    private static String encode(String[] words, String op) {\n        String rslt = null;\n        switch(op) {\n          case \"U\":\n            rslt = encodePascal(words);\n            break;\n          case \"L\":\n            rslt = encodeCamel(words);\n            break;\n          case \"D\":\n            rslt = encodeSnake(words);\n            break;\n          default:\n            assert false;\n        }\n        return rslt;\n    }\n\n    private static String encodePascal(String[] words) {\n        StringBuilder sb = new StringBuilder();\n        for(String word : words) {\n            sb.append(Character.toUpperCase(word.charAt(0)) + word.substring(1));\n        }\n        return sb.toString();\n    }\n\n    private static String encodeCamel(String[] words) {\n        StringBuilder sb = new StringBuilder(words[0]);\n        for(int i = 1; i < words.length; i++) {\n            sb.append(Character.toUpperCase(words[i].charAt(0)) + words[i].substring(1));\n        }\n        return sb.toString();\n    }\n\n    private static String encodeSnake(String[] words) {\n        StringBuilder sb = new StringBuilder(words[0]);\n        for(int i = 1; i < words.length; i++) {\n            sb.append(\"_\" + words[i]);\n        }\n        return sb.toString();\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\npublic class Main {\n public static void main(String[] args)throws IOException{\n  BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n  while(true){\n   int f=0;\n   String str4[]=new String[100];  \n   str4=br.readLine().split(\" \");\n   String str1=str4[0];\n   String str2=str4[1]; \n   String str3[]=new String[100];\n   char ch=str2.charAt(0);\n   int n=str1.indexOf(\"_\");\n   //原文の判定\n   if(n>=0){\n    str3=str1.split(\"_\");\n    f=2;\n    }\n   else if(Character.isUpperCase(str1.charAt(0)))f=1;\n   String str=\"\";\n//規則の判定\n  \n   if(ch=='X')break;\n   else if(ch=='U'){\n   //変換\n    if(f==0)str=str1.substring(0,1).toUpperCase()+str1.substring(1);\n    else if(f==2){\n     for(int i=0;i<str3.length;i++)\n      str+=str3[i].substring(0,1).toUpperCase()+str3[i].substring(1);\n    }\n    else str=str1;\n   }\n   else if(ch=='L'){\n   //変換\n    if(f==0)str=str1;\n    else if(f==1)str=str1.substring(0,1).toLowerCase()+str1.substring(1);\n    else if(f==2){\n     str+=str3[0];\n     for(int i=1;i<str3.length;i++)\n      str+=str3[i].substring(0,1).toUpperCase()+str3[i].substring(1);\n    }\n   }\n   else if(ch=='D') {\n   //変換\n    str1=str1.substring(0,1).toLowerCase()+str1.substring(1);\n    int idx=0;\n    for(int i=0;i<str1.length();i++){\n     if(Character.isUpperCase(str1.charAt(i))){\n      str+=str1.substring(idx,i)+\"_\"+str1.substring(i,i+1).toLowerCase();\n      idx=i+1;\n     }\n}\n    str+=str1.substring(idx);\n      }\n  System.out.println(str);\n  }\n }\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tprivate static final int UP = 'A' - 'a';\n\tprivate static final int LOW = -UP;\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tchar s[];\n\t\tchar targetType;\n\t\tStringBuilder sb = new StringBuilder(100);\n\t\twhile (in.hasNext()) {\n\t\t\ts = in.next().toCharArray();\n\t\t\tsb.setLength(0);\n\t\t\ttargetType = in.next().charAt(0);\n\t\t\tif (targetType == 'X') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (targetType == 'U') {\n\t\t\t\tif (!(s[0] <= 'Z')) {\n\t\t\t\t\ts[0] += UP;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (s[0] <= 'Z') {\n\t\t\t\t\ts[0] += LOW;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsb.append(s[0]);\n\t\t\tfor (int i = 1; i < s.length; i++) {\n\t\t\t\tif (s[i] == '_') {\n\t\t\t\t\ts[i + 1] += UP;\n\t\t\t\t} else if (s[i] <= 'Z' && targetType == 'D') {\n\t\t\t\t\ts[i] += LOW;\n\t\t\t\t\tsb.append('_').append(s[i]);\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(s[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb.toString());\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Arrays;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tfinal String input = sc.next();\n\t\t\tfinal String type = sc.next();\n\t\t\t\n\t\t\tif(\"X\".equals(type)){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\n\t\t\tchar[][] units;\n\t\t\t\n\t\t\tif(input.indexOf(\"_\") >= 0){\n\t\t\t\tString[] ret = input.split(\"_\");\n\t\t\t\tunits = new char[ret.length][];\n\t\t\t\tfor(int i = 0; i < ret.length; i++){\n\t\t\t\t\tunits[i] = ret[i].toCharArray();\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tchar[] array = input.toCharArray();\n\t\t\t\t\n\t\t\t\tint count = 0;\n\t\t\t\tfor(int i = 1; i < array.length; i++){\n\t\t\t\t\tif('A' <= array[i] && array[i] <= 'Z'){\n\t\t\t\t\t\tcount++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t\t\n\t\t\t\tunits = new char[count][];\n\t\t\t\t\n\t\t\t\tint start = 0;\n\t\t\t\tint cur = 0;\n\t\t\t\tfor(int i = 1; i < array.length; i++){\n\t\t\t\t\tif('A' <= array[i] && array[i] <= 'Z'){\n\t\t\t\t\t\tfinal int size = i - start;\n\t\t\t\t\t\t\n\t\t\t\t\t\tunits[cur] = new char[size];\n\t\t\t\t\t\tfor(int j = 0; j < size; j++){\n\t\t\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\t\t\tif('A' <= array[start + j] && array[start + j] <= 'Z'){\n\t\t\t\t\t\t\t\t\tunits[cur][j] = (char) (array[start + j] - ('A' - 'a'));\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\tunits[cur][j] = array[start + j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tunits[cur][j] = array[start + j];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tstart = i;\n\t\t\t\t\t\tcur++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfinal int size = input.length() - start;\n\t\t\t\tunits[cur] = new char[size];\n\t\t\t\tfor(int j = 0; j < size; j++){\n\t\t\t\t\tif(j == 0){\n\t\t\t\t\t\tunits[cur][j] = (char) (array[start + j] - ('A' - 'a'));\n\t\t\t\t\t}else{\n\t\t\t\t\t\tunits[cur][j] = array[start + j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\tfor(char[] ch : units){\n\t\t\t\tSystem.out.println(Arrays.toString(ch));\n\t\t\t}\n\t\t\t*/\n\t\t\tif(\"L\".equals(type)){\n\t\t\t\tfor(int i = 0; i < units.length; i++){\n\t\t\t\t\tfor(int j = 0; j < units[i].length; j++){\n\t\t\t\t\t\tSystem.out.print((char)(units[i][j] + (j == 0 && i != 0 ? 'A' - 'a' : 0)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println();\n\t\t\t}else if(\"U\".equals(type)){\n\t\t\t\tfor(int i = 0; i < units.length; i++){\n\t\t\t\t\tfor(int j = 0; j < units[i].length; j++){\n\t\t\t\t\t\tSystem.out.print((char)(units[i][j] + (j == 0 ? 'A' - 'a' : 0)));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println();\n\t\t\t}else if(\"D\".equals(type)){\n\t\t\t\tfor(int i = 0; i < units.length; i++){\n\t\t\t\t\tfor(int j = 0; j < units[i].length; j++){\n\t\t\t\t\t\tSystem.out.print(units[i][j]);\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(i != units.length - 1){\n\t\t\t\t\t\tSystem.out.print(\"_\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\n/**\n * Problem P04: CamelCase\n * Java 7 later.\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\tString[] words;\n\n\t\twhile ((line = br.readLine()) != null && !line.isEmpty()) {\n\n\t\t\tString name = line.substring(0, line.indexOf(' '));\n\t\t\tString type = line.substring(line.indexOf(' ') + 1);\n\t\t\tif (type.equals(\"X\")) break;\n\n\t\t\tArrayList<StringBuilder> tokens = new ArrayList<>();\n\t\t\ttokens.add(new StringBuilder());\n\n\t\t\tfor (char c : name.toCharArray()) {\n\t\t\t\tif (c == '_') {\n\t\t\t\t\ttokens.add(new StringBuilder());\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if ('A' <= c && c <= 'Z') {\n\t\t\t\t\tif (tokens.get(0).length() != 0) {\n\t\t\t\t\t\ttokens.add(new StringBuilder());\n\t\t\t\t\t}\n\t\t\t\t\tc += 32;\n\t\t\t\t}\n\t\t\t\ttokens.get(tokens.size() - 1).append(c);\n\t\t\t}\n\n\t\t\tStringBuilder out = new StringBuilder();\n\t\t\tswitch (type) {\n\t\t\t\tcase \"U\":\n\t\t\t\t\tfor (int i = 0; i < tokens.size(); i++) {\n\t\t\t\t\t\tString token = tokens.get(i).toString();\n\t\t\t\t\t\ttoken = (char) (token.charAt(0) - 32) + token.substring(1);\n\t\t\t\t\t\tout.append(token);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"L\":\n\t\t\t\t\tfor (int i = 0; i < tokens.size(); i++) {\n\t\t\t\t\t\tString token = tokens.get(i).toString();\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\ttoken = (char) (token.charAt(0) - 32) + token.substring(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tout.append(token);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"D\":\n\t\t\t\t\tfor (int i = 0; i < tokens.size(); i++) {\n\t\t\t\t\t\tif (i > 0) out.append(\"_\");\n\t\t\t\t\t\tout.append(tokens.get(i).toString());\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(out.toString());\n\t\t} //end while\n\t} //end main\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tprivate static final int UP = 'A' - 'a';\n\tprivate static final int LOW = -UP;\n\n\tpublic static void main(String[] args) {\n\t\tScanner in = new Scanner(System.in);\n\t\tchar s[];\n\t\tchar targetType;\n\t\tStringBuilder sb = new StringBuilder(100);\n\t\twhile (in.hasNext()) {\n\t\t\ts = in.next().toCharArray();\n\t\t\tsb.setLength(0);\n\t\t\ttargetType = in.next().charAt(0);\n\t\t\tif (targetType == 'X') {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (targetType == 'U') {\n\t\t\t\tif (!isUpper(s[0])) {\n\t\t\t\t\ts[0] += UP;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (isUpper(s[0])) {\n\t\t\t\t\ts[0] += LOW;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsb.append(s[0]);\n\t\t\tfor (int i = 1; i < s.length; i++) {\n\t\t\t\tif (s[i] == '_') {\n\t\t\t\t\ts[i + 1] += UP;\n\t\t\t\t} else {\n\t\t\t\t\tsb.append(s[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(sb.toString());\n\t\t}\n\t}\n\n\tprivate static boolean isUpper(final char charAt) {\n\t\treturn 'A' <= charAt && charAt <= 'Z';\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tStringBuilder sb = new StringBuilder(101);\n\t\twhile(sc.hasNext()){\n\t\t\tchar[] s = sc.next().toCharArray();\n\t\t\tsb.setLength(0);\t\t\t\t\t\t//1文字ずつ\n\t\t\tchar a = sc.next().charAt(0);\n\t\t\tif(a == 'X')break;\n\t\t\tif(a == 'U') {\n\t\t\t\tif(!(s[0] <= 'Z')) {\n\t\t\t\t\ts[0] = Character.toUpperCase(s[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif(s[0] <= 'Z') {\n\t\t\t\t\ts[0] = Character.toLowerCase(s[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsb.append(s[0]);\n\t\t\tfor(int i=1;i<s.length;i++) {\n\t\t\t\tif(s[i]=='_') {\n\t\t\t\t\ts[i+1] = Character.toUpperCase(s[i+1]);\n\t\t\t\t}\n\t\t\t\telse if(s[i]<='Z' && a =='D') {\n\t\t\t\t\ts[i] = Character.toLowerCase(s[i]);\n\t\t\t\t\tsb.append('_').append(s[i]);\n\t\t\t\t}\n\t\t\t\telse sb.append(s[i]);\n\t\t\t}\n\t\t\tSystem.out.println(sb.toString());\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\nclass Main{\n    public static void main(String args[]){\n        Scanner s = new Scanner(System.in);\n        String str, input;\n\n        while(true){\n            str = s.next();\n            input = s.next();\n\n            if(input.charAt(0) == 'X') break;\n\n            String change = \"\";\n            String[]column = str.split(\"_\");\n            \n            switch(input.charAt(0)){\n                case 'U':\n                    if(column.length == 1){\n                        change = (char)(str.charAt(0)&(~32)) + str.substring(1);\n                    }else{\n                        for(int i = 0; i < column.length; i++){\n                            change += (char)(column[i].charAt(0)&(~32)) + column[i].substring(1);\n                        }\n                    }\n                    break;\n                case 'L':\n                    if(column.length == 1){\n                        change = (char)(str.charAt(0)|(32)) + str.substring(1);\n                    }else{\n                        change += column[0];\n                        for(int i = 1; i < column.length; i++){\n                            change += (char)(column[i].charAt(0)&(~32)) + column[i].substring(1);\n                        }\n                    }\n                    break;\n                case 'D':\n                    if(column.length !=1 ) change = str;\n                    else for(int i = 0; i < str.length(); i++){\n                        if(i > 0 && str.charAt(i) >= 'A' && str.charAt(i) <= 'Z'){\n                            change += \"_\"+(char)(str.charAt(i)|32);\n                        }\n                        else change += (char)(str.charAt(i)|32);\n                    }\n                    break;\n            }\n            System.out.println(change);\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            String line;\n            /* input */\n            while(true){\n                line = br.readLine();\n                \n                String str = line.split(\" \")[0], type = line.split(\" \")[1];\n                \n                if(type.equals(\"X\")) break;\n                \n                if(str.indexOf('_')>-1){\n                \tif(type.equals(\"D\")){\n                \t\tSystem.out.println(str);\n                \t} else {\n                \t\tString[] s = str.split(\"_\");\n                \t\tif(type.equals(\"U\")){\n                \t\t\tfor(String t : s){\n                \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t} else {\n                \t\t\tSystem.out.print(s[0]);\n                \t\t\tfor(int i=1;i<s.length;i++){\n                \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t}\n                \t}\n                } else {\n        \t\t\tString[] s = str.split(\"(?<!^)(?=[A-Z])\");\n            \t\tif(type.equals(\"D\")){\n            \t\t\tSystem.out.print(s[0].toLowerCase());\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(\"_\" + s[i].toLowerCase());\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else if(type.equals(\"U\")){\n            \t\t\tfor(String t : s){\n            \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else {\n            \t\t\tSystem.out.print(s[0]);\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t}\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n \npublic class Main {\n    public static void main(String[] args) {\n        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n        try {\n            String line;\n            /* input */\n            while(true){\n                line = br.readLine();\n                \n                String str = line.split(\" \")[0], type = line.split(\" \")[1];\n                \n                if(type.equals(\"X\")) break;\n                \n                if(str.indexOf('_')>-1){\n                \tif(type.equals(\"D\")){\n                \t\tSystem.out.println(str);\n                \t} else {\n                \t\tString[] s = str.split(\"_\");\n                \t\tif(type.equals(\"U\")){\n                \t\t\tfor(String t : s){\n                \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t} else {\n                \t\t\tSystem.out.print(s[0]);\n                \t\t\tfor(int i=1;i<s.length;i++){\n                \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n                \t\t\t}\n                \t\t\tSystem.out.println();\n                \t\t}\n                \t}\n                } else {\n        \t\t\tString[] s = str.split(\"(?<!^)(?=[A-Z])\");\n            \t\tif(type.equals(\"D\")){\n            \t\t\tSystem.out.print(s[0].toLowerCase());\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(\"_\" + s[i].toLowerCase());\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else if(type.equals(\"U\")){\n            \t\t\tfor(String t : s){\n            \t\t\t\tSystem.out.print(t.substring(0,1).toUpperCase() + t.substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t} else {\n            \t\t\tSystem.out.print(s[0].toLowerCase());\n            \t\t\tfor(int i=1;i<s.length;i++){\n            \t\t\t\tSystem.out.print(s[i].substring(0,1).toUpperCase() + s[i].substring(1));\n            \t\t\t}\n            \t\t\tSystem.out.println();\n            \t\t}\n                }\n            }\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\t\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\t\n\t\twhile(true){\n\t\t\tString s = sc.next();\n\t\t\tString t = sc.next();\n\t\t\tif(t.charAt(0)=='X') break;\n\t\t\t\n\t\t\tchar[] a = s.toCharArray();\n\t\t\tchar[] b = t.toCharArray();\n\t\t\t\n\t\t\tif(s.contains(\"_\")==true){\n\t\t\t\tif(b[0]=='D') System.out.print(s);\n\t\t\t\telse{\n\t\t\t\t\tif(b[0]=='U' && (int)a[0]>96) a[0]-=32;\n\t\t\t\t\telse if(b[0]=='L' && (int)a[0]<96) a[0]+=32;\n\t\t\t\t\tfor(int i=0;i<a.length;i++){\n\t\t\t\t\t\tif(a[i]=='_') a[i+1]-=32;\n\t\t\t\t\t\telse System.out.print(a[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tif(b[0]=='D'){\n\t\t\t\t\tif((int)a[0]<96) a[0]+=32;\n\t\t\t\t\tfor(int i=0;i<a.length;i++){\n\t\t\t\t\t\tif((int)a[i]<96){\n\t\t\t\t\t\t\tSystem.out.print('_');\n\t\t\t\t\t\t\ta[i]+=32;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tSystem.out.print(a[i]);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(b[0]=='U' && (int)a[0]>96) a[0]-=32;\n\t\t\t\t\telse if(b[0]=='L' && (int)a[0]<96) a[0]+=32;\n\t\t\t\t\tfor(int i=0;i<a.length;i++) System.out.print(a[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println();\t\n\t\t}\t\n\t}\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\n\tstatic Scanner sc = new Scanner(System.in);\n\n\tpublic static void main(String[] args) {\n\t\twhile (true) {\n\t\t\tString word = sc.next();\n\t\t\tString query = sc.next();\n\t\t\tif (query.equals(\"X\")) break;\n\t\t\tArrayList<String> elems = new ArrayList<String>();\n\t\t\tif (word.indexOf(\"_\") >= 0) {\n\t\t\t\tString[] vals = word.split(\"_\");\n\t\t\t\tfor (String val : vals) {\n\t\t\t\t\telems.add(val);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tint pos = 0;\n\t\t\t\tfor (int i = 1; i < word.length(); ++i) {\n\t\t\t\t\tif (Character.isUpperCase(word.charAt(i))) {\n\t\t\t\t\t\telems.add(word.substring(pos, i).toLowerCase());\n\t\t\t\t\t\tpos = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telems.add(word.substring(pos).toLowerCase());\n\t\t\t}\n\t\t\tStringBuilder result = new StringBuilder();\n\t\t\tif (query.equals(\"U\")) {\n\t\t\t\tfor (int i = 0; i < elems.size(); ++i) {\n\t\t\t\t\tresult.append(Character.toUpperCase(elems.get(i).charAt(0)));\n\t\t\t\t\tresult.append(elems.get(i).substring(1));\n\t\t\t\t}\n\t\t\t} else if (query.equals(\"L\")) {\n\t\t\t\tresult.append(elems.get(0));\n\t\t\t\tfor (int i = 1; i < elems.size(); ++i) {\n\t\t\t\t\tresult.append(Character.toUpperCase(elems.get(i).charAt(0)));\n\t\t\t\t\tresult.append(elems.get(i).substring(1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.append(elems.get(0));\n\t\t\t\tfor (int i = 1; i < elems.size(); ++i) {\n\t\t\t\t\tresult.append(\"_\");\n\t\t\t\t\tresult.append(elems.get(i));\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(result);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main{\n\t\n\tstatic String change(String s, String type, int num) {\n\t\tString ans=\"\";\n\t\tif(type.equals(\"L\")) {\n\t\t\tif(num==0) {\n\t\t\t\tans = s.toLowerCase();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans=String.valueOf(s.charAt(0)).toUpperCase();\n\t\t\t\tfor(int i=1; i<s.length(); i++) {\n\t\t\t\t\tans+=String.valueOf(s.charAt(i)).toLowerCase();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if(type.equals(\"U\")) {\n\t\t\tans=String.valueOf(s.charAt(0)).toUpperCase();\n\t\t\tfor(int i=1; i<s.length(); i++) {\n\t\t\t\tans+=String.valueOf(s.charAt(i)).toLowerCase();\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif(num==0) {\n\t\t\t\tans = s.toLowerCase();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tans = \"_\"+s.toLowerCase();\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn ans;\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\t  try(Scanner sc = new Scanner(System.in)) {\n\t\t\t  while(sc.hasNext()) {\n\t\t\t\t  String str=sc.next();\n\t\t\t\t  String type=sc.next();\n\t\t\t\t  if(type.equals(\"X\")) break;\n\t\t\t\t  int num=0;\n\t\t\t\t  String ans=\"\";\n\t\t\t\t  if(str.contains(\"_\")) {\n\t\t\t\t\t  String[] tokens=str.split(\"_\");\n\t\t\t\t\t  num=0;\n\t\t\t\t\t  for(String t:tokens) {\n\t\t\t\t\t\t  ans+=change(t, type, num);\n\t\t\t\t\t\t  num++;\n\t\t\t\t\t  }\n\t\t\t\t  }\n\t\t\t\t  else {\n\t\t\t\t\t  int start=0,last=0;\n\t\t\t\t\t  num=0;\n\t\t\t\t\t  for(int i=0; i<str.length(); i++) {\n\t\t\t\t\t\t  if(Character.isUpperCase(str.charAt(i))) {\n\t\t\t\t\t\t\t  last=i;\n\t\t\t\t\t\t\t  ans+=change(str.substring(start, i), type, num);\n\t\t\t\t\t\t\t  if(i!=0)num++;\n\t\t\t\t\t\t\t  start=i;\n\t\t\t\t\t\t  }\n\t\t\t\t\t  }\n\t\t\t\t\t  ans+=change(str.substring(last, str.length()), type, num);\n\t\t\t\t  }\n\t\t\t\t  System.out.println(ans);\n\t\t\t  }\n\t\t}\n\t}\n}\n"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n\tpublic static void main(String[] args){\n\t\tnew Main().calc();\n\t}\n\n\tvoid calc(){\n\t\tScanner cin = new Scanner(System.in);\n\t\twhile(true){\n\t\t\tString s = cin.next();\n\t\t\tString t = cin.next();\n\t\t\tif(t.equals(\"X\")) break;\n\t\t\tList<String> l = new LinkedList<String>();\n\t\t\tString now = \"\";\n\t\t\tfor(char c : s.toCharArray()){\n\t\t\t\tif(c=='_' || Character.isUpperCase(c)){\n\t\t\t\t\tif(now.length()!=0) l.add(now);\n\t\t\t\t\tnow = \"\";\n\t\t\t\t}\n\t\t\t\tif(c!='_') now += c;\n\t\t\t}\n\t\t\tif(now.length()!=0) l.add(now);\n\t\t\tint count = 0;\n\t\t\tfor(String ss: l){\n\t\t\t\tint count2 = 0;\n\t\t\t\tfor(char c : ss.toCharArray()){\n\t\t\t\t\tif(count2 == 0 && !t.equals(\"D\") && !(t.equals(\"L\") && count==0)){\n\t\t\t\t\t\tSystem.out.print(Character.toUpperCase(c));\n\t\t\t\t\t}\n\t\t\t\t\telse System.out.print(Character.toLowerCase(c));\n\t\t\t\t\tcount2++;\n\t\t\t\t}\n\t\t\t\tcount++;\n\t\t\t\tif(count!=l.size() && t.equals(\"D\")) System.out.print(\"_\");\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "package aoj10xx;\n\nimport java.util.Scanner;\n\npublic class AOJ1044 {\n\n\n\tpublic static void main ( String[] args ){\n\t\tScanner sc = new Scanner( System.in );\n\t\twhile( true ){\n\t\t\tString src = sc.next();\n\t\t\tchar[] strc = src.toCharArray();\n\t\t\tString type = sc.next();\n\t\t\tchar diff =  'a' - 'A';\n\t\t\tswitch (type.toCharArray()[ 0 ] ){\n\t\t\tcase 'X':\n\t\t\t\treturn;\n\t\t\tcase 'U':\n\t\t\t\tif( 'a' <= strc[ 0 ] && strc[ 0 ] <= 'z' ){\n\t\t\t\t\tstrc[ 0 ] -= diff; // to upper case\n\t\t\t\t}\n\t\t\t\tfor( int i = 1; i < strc.length; i++ ){\n\t\t\t\t\tif( strc[ i ] == '_' ){\n\t\t\t\t\t\tString s1 = \"\";\n\t\t\t\t\t\tString s2 = \"\";\n\t\t\t\t\t\tfor( int j = 0; j < i; j++ ){\n\t\t\t\t\t\t\ts1 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( 'a' <= strc[ i + 1 ] && strc[ i + 1 ] <= 'z' ){\n\t\t\t\t\t\t\tstrc[ i + 1 ] -= diff;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor( int j = i + 1; j < strc.length; j++ ){\n\t\t\t\t\t\t\ts2 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstrc = ( s1 + s2 ).toCharArray();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println( strc );\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tif( 'A' <= strc[ 0 ] && strc[ 0 ] <= 'Z' ){\n\t\t\t\t\tstrc[ 0 ] += diff; // to upper case\n\t\t\t\t}\n\t\t\t\tfor( int i = 1; i < strc.length; i++ ){\n\t\t\t\t\tif( strc[ i ] == '_' ){\n\t\t\t\t\t\tString s1 = \"\";\n\t\t\t\t\t\tString s2 = \"\";\n\t\t\t\t\t\tfor( int j = 0; j < i; j++ ){\n\t\t\t\t\t\t\ts1 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif( 'a' <= strc[ i + 1 ] && strc[ i + 1 ] <= 'z' ){\n\t\t\t\t\t\t\tstrc[ i + 1 ] -= diff;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor( int j = i + 1; j < strc.length; j++ ){\n\t\t\t\t\t\t\ts2 += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstrc = ( s1 + s2 ).toCharArray();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println( strc );\n\t\t\t\tbreak;\n\t\t\tcase 'D':\n\t\t\t\tif( 'A' <= strc[ 0 ] && strc[ 0 ] <= 'Z' ){\n\t\t\t\t\tstrc[ 0 ] += diff; // to upper case\n\t\t\t\t}\n\t\t\t\tfor( int i = 1; i < strc.length; i++ ){\n\t\t\t\t\tif( 'A' <= strc[ i ] && strc[ i ] <= 'Z' ){\n\t\t\t\t\t\tString s = \"\";\n\t\t\t\t\t\tfor( int j = 0; j < i; j++ ){\n\t\t\t\t\t\t\ts += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts += \"_\";\n\t\t\t\t\t\tstrc[ i ] += diff;\n\t\t\t\t\t\tfor( int j = i; j < strc.length; j++ ){\n\t\t\t\t\t\t\ts += strc[ j ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstrc = s.toCharArray();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tSystem.out.println( strc );\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.*;\nclass Main{\n\tpublic static void main(String args[]){\n\t\tScanner s=new Scanner(System.in);\n\t\tString str,type;\n\t\twhile(true){\n\t\t\tstr=s.next();\n\t\t\ttype=s.next();\n\t\t\tif(type.charAt(0)=='X')break;\n\t\t\tString ret=\"\";\n\t\t\tString[]table=str.split(\"_\");\n\t\t\tswitch(type.charAt(0)){\n\t\t\t\tcase 'U':\n\t\t\t\t\tif(table.length==1){\n\t\t\t\t\t\tret=(char)(str.charAt(0)&(~32))+str.substring(1);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tfor(int i=0;i<table.length;i++){\n\t\t\t\t\t\t\tret+=(char)(table[i].charAt(0)&(~32))+table[i].substring(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'L':\n\t\t\t\t\tif(table.length==1){\n\t\t\t\t\t\tret=(char)(str.charAt(0)|(32))+str.substring(1);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tret+=table[0];\n\t\t\t\t\t\tfor(int i=1;i<table.length;i++){\n\t\t\t\t\t\t\tret+=(char)(table[i].charAt(0)&(~32))+table[i].substring(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'D':\n\t\t\t\t\tif(table.length!=1)ret=str;\n\t\t\t\t\telse for(int i=0;i<str.length();i++){\n\t\t\t\t\t\tif(i>0&&str.charAt(i)>='A'&&str.charAt(i)<='Z')ret+=\"_\"+(char)(str.charAt(i)|32);\n\t\t\t\t\t\telse ret+=(char)(str.charAt(i)|32);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tSystem.out.println(ret);\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class Main {\n\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tString var;\n\t\tString type;\n\n\t\twhile (true) {\n\t\t\tvar = sc.next();\n\t\t\ttype = sc.next();\n\t\t\tif (type.equals(\"X\")) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tint n = 0;\n\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\tif (var.charAt(i) == '_') {\n\t\t\t\t\tn = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (n != 3) {\n\t\t\t\tif ('A' <= var.charAt(0) && var.charAt(0) <= 'Z') {\n\t\t\t\t\tn = 1;\n\t\t\t\t} else if ('a' <= var.charAt(0) && var.charAt(0) <= 'z') {\n\t\t\t\t\tn = 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type.equals(\"U\")) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t} else if (n == 2) {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t} else {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif (var.charAt(i) == '_') {\n\t\t\t\t\t\t\tv = var.substring(i + 1, i + 2);\n\t\t\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + v + var.substring(i + 2);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type.equals(\"L\")) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t} else if (n == 2) {\n\t\t\t\t} else {\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif (var.charAt(i) == '_') {\n\t\t\t\t\t\t\tString v = var.substring(i + 1, i + 2);\n\t\t\t\t\t\t\tv = v.toUpperCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + v + var.substring(i + 2);\n\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type.equals(\"D\")) {\n\t\t\t\tif (n == 1) {\n\t\t\t\t\tString v = var.substring(0, 1);\n\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\tvar = v + var.substring(1);\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif ('A' <= var.charAt(i) && var.charAt(i) <= 'Z') {\n\t\t\t\t\t\t\tv = var.substring(i, i + 1);\n\t\t\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + '_' + v + var.substring(i + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (n == 2) {\n\t\t\t\t\tfor (int i = 0; i < var.length(); i++) {\n\t\t\t\t\t\tif ('A' <= var.charAt(i) && var.charAt(i) <= 'Z') {\n\t\t\t\t\t\t\tString v = var.substring(i, i + 1);\n\t\t\t\t\t\t\tv = v.toLowerCase();\n\t\t\t\t\t\t\tvar = var.substring(0, i) + '_' + v + var.substring(i + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t}\n\t\t\t}\n\t\t\tSystem.out.println(var);\n\t\t}\n\t}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\nnamespace AOJ\n{\n\tclass Program\n\t{\n\t\tstatic void Main(string[] args)\n\t\t{\n\t\t\tstring[] nametype;\n\t\t\twhile ((nametype = Console.ReadLine().Split(' '))[1] != \"X\")\n\t\t\t{\n\t\t\t\tvar w = SplitWord(nametype[0]);\n\n\t\t\t\tif (nametype[1] == \"U\")\n\t\t\t\t{\n\t\t\t\t\tvar s = string.Join(\"\", w.Select(ss => char.ToUpper(ss[0]) + ss.Substring(1)).ToArray());\n\t\t\t\t\tConsole.WriteLine(s);\n\t\t\t\t}\n\t\t\t\telse if (nametype[1] == \"L\")\n\t\t\t\t{\n\t\t\t\t\tvar s = string.Join(\"\", w.Select(ss => char.ToUpper(ss[0]) + ss.Substring(1)).ToArray());\n\t\t\t\t\ts = char.ToLower(s[0]) + s.Substring(1);\n\t\t\t\t\tConsole.WriteLine(s);\n\t\t\t\t}\n\t\t\t\telse if (nametype[1] == \"D\")\n\t\t\t\t{\n\t\t\t\t\tvar s = string.Join(\"_\", w.Select(ss => ss.ToLower()).ToArray());\n\t\t\t\t\tConsole.WriteLine(s);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstatic string[] SplitWord(string s)\n\t\t{\n\t\t\tstring[] r;\n\n\t\t\tif (s.Contains('_'))\n\t\t\t{\n\t\t\t\tr = s.Split('_');\n\t\t\t}\n\t\t\telse if (char.IsUpper(s[0]))\n\t\t\t{\n\t\t\t\tvar list = new List<string>();\n\t\t\t\tint index = -1;\n\t\t\t\tfor (int i = 0; i < s.Length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (char.IsUpper(s[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tlist.Add(s[i].ToString());\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlist[index] += s[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tr = list.ToArray();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar list = new List<string>();\n\t\t\t\tlist.Add(\"\");\n\t\t\t\tint index = 0;\n\t\t\t\tfor (int i = 0; i < s.Length; i++)\n\t\t\t\t{\n\t\t\t\t\tif (char.IsUpper(s[i]))\n\t\t\t\t\t{\n\t\t\t\t\t\tlist.Add(s[i].ToString());\n\t\t\t\t\t\tindex++;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t{\n\t\t\t\t\t\tlist[index] += s[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tr = list.ToArray();\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\n \nclass TEST{\n\tstatic void Main(){\n\t\twhile(true){\n\t\t\tvar ss=Console.ReadLine().Split(' ');\n\t\t\tif(ss[1][0]=='X')break;\n\t\t\tSol mySol =new Sol(ss);\n\t\t\tmySol.Solve();\n\t\t}\n\t}\n}\n\nclass Sol{\n\tpublic void Solve(){\n\t\tchar T='L';\n\t\tif(V[0]<='Z' && V[0]>='A')T='U';\n\t\tfor(int i=0;i<V.Length;i++){\n\t\t\tif(V[i]=='_'){\n\t\t\t\tT='D';break;\n\t\t\t}\n\t\t}\n\t\t\n\t\tList<String> words=new List<String>();\n\t\tif(T=='D'){\n\t\t\tvar A=V.Split('_');\n\t\t\tfor(int j=0;j<A.Length;j++)words.Add(A[j]);\n\t\t}\n\t\tif(T=='U'||T=='L'){\n\t\t\tint from=0;\n\t\t\tint cnt=1;\n\t\t\tfor(int j=1;j<V.Length;j++){\n\t\t\t\tif(V[j]<='Z' && V[j]>='A'){\n\t\t\t\t\twords.Add(V.Substring(from,cnt));\n\t\t\t\t\tfrom=j;\n\t\t\t\t\tcnt=1;\n\t\t\t\t}else{\n\t\t\t\t\tcnt++;\n\t\t\t\t}\n\t\t\t}\n\t\t\twords.Add(V.Substring(from,cnt));\n\t\t}\n\t\tfor(int i=0;i<words.Count;i++){\n\t\t\tvar snew=words[i].ToCharArray();\n\t\t\tif(snew[0]<='Z' && snew[0]>='A')snew[0]+=(char)('a'-'A');\n\t\t\tif(Next=='L'){\n\t\t\t\tif(i>0)snew[0]-=(char)('a'-'A');\n\t\t\t\tConsole.Write(\"{0}\",new String(snew));\n\t\t\t}\n\t\t\tif(Next=='U'){\n\t\t\t\tsnew[0]-=(char)('a'-'A');\n\t\t\t\tConsole.Write(\"{0}\",new String(snew));\n\t\t\t}\n\t\t\tif(Next=='D'){\n\t\t\t\tConsole.Write(i==0?\"{0}\":\"_{0}\",new String(snew));\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tConsole.WriteLine(\"\");\n\t}\n\n\tString V;\n\tchar Next;\n\tpublic Sol(String[] ss_){\n\t\tV=ss_[0];Next=ss_[1][0];\n\t}\n\n\n\n\n\tstatic String rs(){return Console.ReadLine();}\n\tstatic int ri(){return int.Parse(Console.ReadLine());}\n\tstatic long rl(){return long.Parse(Console.ReadLine());}\n\tstatic double rd(){return double.Parse(Console.ReadLine());}\n\tstatic String[] rsa(){return Console.ReadLine().Split(' ');}\n\tstatic int[] ria(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>int.Parse(e));}\n\tstatic long[] rla(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>long.Parse(e));}\n\tstatic double[] rda(){return Array.ConvertAll(Console.ReadLine().Split(' '),e=>double.Parse(e));}\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections.Generic;\nusing System.Globalization;\nusing System.Linq;\n\nnamespace UOA_PCKWU_1044\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            string[] input;\n            while ( (input = Console.ReadLine().Split(' '))[1] != \"X\")\n            {\n                if (input[1] == \"X\") break;\n                Console.WriteLine(NamingConvention.Convert(input[0], input[1]));\n            }\n        }\n    }\n\n    static class NamingConvention\n    {\n        public static string Convert(string value, string type)\n        {\n            if (!value.Contains('_'))\n            {\n                List<string> strs = value.Select(c => c.ToString()).ToList();\n                strs[0] = strs[0].ToLower();\n                value = strs.Select(s => char.IsUpper(s.First()) ? \"_\" + s.ToLower() : s).Aggregate((all, next) => all += next);\n            }\n            if (type == \"D\") return value;\n            value = value.Split('_').Select(s => CultureInfo.CurrentCulture.TextInfo.ToTitleCase(s)).Aggregate((all, next) => all += next);\n            if (type == \"U\") return value;\n            if (type == \"L\") return char.ToLower(value[0]) + value.Remove(0,1);\n            throw new Exception();\n        }\n    }\n}\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\n\npublic class hello\n{\n    public static void Main()\n    {\n        while (true)\n        {\n            string[] s = Console.ReadLine().Trim().Split(' ');\n            if (s[1] == \"X\") break;\n            if (s[0].Contains(\"_\")) getAns1(s[0], s[1]);\n            else if (s[1] == \"U\" | s[1] == \"L\") getAns2(s[0], s[1]);\n            else getAns3(s[0]);\n        }\n    }\n    public static void getAns3(string s)\n    {\n        var sL = s.Length;\n        if (sL == 1) Console.WriteLine(s.ToLower());\n        else\n        {\n            Console.Write(s[0].ToString().ToLower());\n            for (int i = 1; i < sL; i++)\n                if (Char.IsUpper(s[i]))\n                {\n                    Console.Write(\"_\");\n                    Console.Write(s[i].ToString().ToLower());\n                }\n                else Console.Write(s[i]);\n            Console.WriteLine();\n        }\n    }\n    public static void getAns2(string s, string c)\n    {\n        if (c == \"U\") print(s);\n        else\n        {\n            Console.Write(s.Substring(0, 1).ToLower());\n            Console.Write(s.Substring(1));\n        }\n        Console.WriteLine();\n    }\n    public static void getAns1(string s, string c)\n    {\n        if (c == \"D\") { Console.WriteLine(s); return; }\n        string[] s2 = s.Split('_');\n        if (c == \"U\") print(s2[0]);\n        else Console.Write(s2[0]);\n        for (int i = 1; i < s2.Length; i++)\n            print(s2[i]);\n        Console.WriteLine();\n    }\n    public static void print(string a)\n    {\n        if (a.Length == 1) Console.Write(a.ToUpper());\n        else\n        {\n            Console.Write(a.Substring(0, 1).ToUpper());\n            Console.Write(a.Substring(1));\n        }\n    }\n}\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Linq;\nusing System.Collections.Generic;\n\n\nnamespace Test1 {\n\n    class ClassMain {\n\n        public static void Main(String[] args) {\n            string line;\n            while ((line = Console.ReadLine()) != null) {\n                //int[] ints = line.Split(' ').Select(int.Parse).ToArray();\n                //int n = int.Parse(line);\n                //if(n==0){break;}\n                if (line.EndsWith(\"X\")) { break; }\n                string[] strs = line.Split(' ');\n\n                string syuyaku = strs[0];\n                string dekita = \"\";\n                if (syuyaku.Contains('_')) {\n                    //under-score\n                    if(strs[1].Equals(\"D\")){\n                        //nothing.\n                        dekita = syuyaku;\n                    }\n                    else if (strs[1].Equals(\"U\")) {\n                        string tmp = \"\";\n                        string[] strs2 = syuyaku.Split('_');\n                        for (int i = 0; i < strs2.Length; i++) {\n                            char sentou = char.ToUpper(strs2[i][0]);\n                            tmp += sentou + strs2[i].Substring(1);\n                        }\n                        dekita = tmp;\n                    }\n                    else if (strs[1].Equals(\"L\")) {\n                        string tmp = \"\";\n                        string[] strs2 = syuyaku.Split('_');\n                        tmp += strs2[0];\n                        for (int i = 1; i < strs2.Length; i++) {\n                            char sentou = char.ToUpper(strs2[i][0]);\n                            tmp += sentou + strs2[i].Substring(1);\n                        }\n                        dekita = tmp;\n                    }\n                }\n                else if (char.IsLower(syuyaku[0])) {\n                    //lower camle case\n                    if (strs[1].Equals(\"D\")) {\n                        //under-score\n                        List<string> stlis = new List<string>();\n                        string buff = syuyaku[0]+\"\";\n                        for (int i = 1; i < syuyaku.Length; i++) {\n                            if (char.IsLower(syuyaku[i])) {\n                                buff += syuyaku[i];\n                            }\n                            else { //uppercase\n                                stlis.Add(buff);\n                                buff = \"\";\n                                buff += char.ToLower(syuyaku[i]);                                \n                            }\n                        }\n                        stlis.Add(buff);\n                        for (int i = 0; i < stlis.Count; i++) {\n                            dekita += stlis.ElementAt(i);\n                            if (i != stlis.Count - 1) {\n                                dekita += \"_\";\n                            }\n                        }                        \n                    }\n                    else if (strs[1].Equals(\"U\")) {\n                        //upper\n                        char sentou = char.ToUpper(syuyaku[0]);\n                        dekita = sentou + syuyaku.Substring(1);\n                    }\n                    else if (strs[1].Equals(\"L\")) {\n                        dekita = syuyaku;\n                    }\n\n                }\n                else if (char.IsUpper(syuyaku[0])) {\n                    //upper camle case\n                    if (strs[1].Equals(\"D\")) {\n                        //under-score\n                        List<string> stlis = new List<string>();\n                        string buff = char.ToLower(syuyaku[0]) + \"\";\n                        for (int i = 1; i < syuyaku.Length; i++) {\n                            if (char.IsLower(syuyaku[i])) {\n                                buff += syuyaku[i];\n                            }\n                            else { //uppercase\n                                stlis.Add(buff);\n                                buff = \"\";\n                                buff += char.ToLower(syuyaku[i]);\n                            }\n                        }\n                        stlis.Add(buff);\n                        for (int i = 0; i < stlis.Count; i++) {\n                            dekita += stlis.ElementAt(i);\n                            if (i != stlis.Count - 1) {\n                                dekita += \"_\";\n                            }\n                        }\n                    }\n                    else if (strs[1].Equals(\"L\")) {\n                        //lower\n                        char sentou = char.ToLower(syuyaku[0]);\n                        dekita = sentou + syuyaku.Substring(1);\n                    }\n                    else if (strs[1].Equals(\"U\")) {\n                        //upper\n                        dekita = syuyaku;\n                    }\n\n                }//henkei owari.\n                Console.WriteLine(dekita);\n            }   \n        }   \n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Linq;\nusing System.Collections.Generic;\nusing System.Text.RegularExpressions;\n\nnamespace aizu\n{\n    public class OnlineJudge\n    {\n        static void Main()\n        {\n            var pattern = new Regex(@\"[^_][^A-Z_]*\");\n            var split = new Func<string, string[]>(arg => {\n                return (from Match p in pattern.Matches(arg) select p.Value).ToArray();\n            });\n            var convert = new Dictionary<string, Func<string, string>> {\n                { \"U\", arg => string.Join(\"\", Upper(split(arg), 0))},\n                { \"L\", arg => string.Join(\"\", Upper(split(arg), 1))},\n                { \"D\", arg => string.Join(\"_\", split(arg)).ToLower()},\n            };\n            string[] input;\n            while((input = Console.ReadLine().Split())[1] != \"X\") {\n                Console.WriteLine(convert[input[1]](input[0]));\n            }\n        }\n        static string[] Upper(string[] str, int lower)\n        {\n            var conv = new Func<char,char>[] { char.ToUpper, char.ToLower };\n            var result = new string[str.Length];\n            for(int i=0;i < str.Length;++i){\n                result[i] = conv[i < lower ? 1 : 0](str[i][0]) + str[i].Substring(1);\n            }\n            return result;\n        }\n    }\n}"
  },
  {
    "language": "JavaScript",
    "code": "var input = require('fs').readFileSync('/dev/stdin', 'utf8');\nvar Arr=(input.replace(/\\n$/,\"\")).split(\"\\n\");\nwhile(true){\n   var nt=(Arr.shift()).split(\" \");\n   var str=nt[0];\n   var type=nt[1];\n   if(type==\"X\")break;\n   str=str.replace(/^./,function(s){\n      return s.toLowerCase();\n   });\n   str=str.replace(/[A-Z]/g,function(s){\n      return \"_\"+s;\n   });\n   var arr=str.split(\"_\");\n   for(var i=1;i<arr.length;i++){\n      arr[i]=arr[i].replace(/./,function(s){\n         return s.toUpperCase();\n      });\n   }\n   if(type==\"U\"){\n      arr[0]=arr[0].replace(/^./,function(s){\n         return s.toUpperCase();\n      });\n      console.log(arr.join(\"\"));\n   }\n   if(type==\"L\")console.log(arr.join(\"\"));\n   if(type==\"D\")console.log(arr.join(\"_\").toLowerCase());\n}"
  },
  {
    "language": "Ruby",
    "code": "while (ary = gets.split) != [\"EndOfInput\", \"X\"]\n  str_ary = []\n  tmp_str = ary[0][0]\n  for num in (1..(ary[0].size - 1))\n    tmp_char = ary[0][num]\n    unless tmp_char == \"_\" or tmp_char.ord.between?(65, 90)\n      tmp_str += tmp_char\n      next\n    else\n      str_ary << tmp_str\n      if tmp_char == \"_\"\n        tmp_str = \"\"\n      else\n        tmp_str = tmp_char\n      end\n    end\n  end\n  str_ary << tmp_str\n\n  case ary[1]\n  when \"L\"\n    for num in (0..(str_ary.size - 1))\n      str_ary[num].downcase! if num == 0\n      str_ary[num].capitalize! if num != 0\n    end\n    puts str_ary.join\n  when \"U\"\n    str_ary.each {|s| s.capitalize!}\n    puts str_ary.join\n  when \"D\"\n    str_ary.each {|s| s.downcase!}\n    puts str_ary.join(\"_\")\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def up2words str\n  low2words(str)[1..-1]\nend\n\ndef low2words str\n  str.gsub! /([A-Z])/, '*\\1'\n  str.split(?*).map &:downcase\nend\n\ndef under2wods str\n  str.split ?_\nend\n\ndef what_case str\n  return ?D if str.include? ?_\n  return ?U if str[0] =~ /[A-Z]/\n  return ?L\nend\n\ndef words2up words\n  words.map(&:capitalize).join\nend\n\ndef words2low words\n  result = words2up(words)\n  result[0] = result[0].downcase\n  result\nend\n\ndef words2under words\n  words.join ?_\nend\n\n$<.each do |line|\n  str, rule = line.chomp.split\n  break if rule == ?X\n  str_rule = what_case str\n  words = case str_rule\n          when ?U\n            up2words str\n          when ?L\n            low2words str\n          when ?D\n            under2wods str\n          end\n  result = case rule\n           when ?U\n             words2up words\n           when ?L\n             words2low words\n           when ?D\n             words2under words\n           end\n  puts result\nend"
  },
  {
    "language": "Ruby",
    "code": "while (ary = gets.split) != [\"EndOfInput\", \"X\"]\n  str_ary = []\n  tmp_str = ary[0][0]\n  for num in (1..(ary[0].size - 1))\n    tmp_char = ary[0][num]\n    unless tmp_char == \"_\" or tmp_char.ord.between?(65, 90)\n      tmp_str += tmp_char\n      next\n    else\n      str_ary << tmp_str\n      if tmp_char == \"_\"\n        tmp_str = \"\"\n      else\n        tmp_str = tmp_char\n      end\n    end\n  end\n  str_ary << tmp_str\n\n  case ary[1]\n  when \"L\"\n    for num in (1..(str_ary.size - 1))\n      str_ary[num].capitalize!\n    end\n    puts str_ary.join\n  when \"U\"\n    str_ary.each {|s| s.capitalize!}\n    puts str_ary.join\n  when \"D\"\n    str_ary.each {|s| s.downcase!}\n    puts str_ary.join(\"_\")\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def split(datum)\n  datum.include?('_') ? datum.split('_') : (datum.split(/([A-Z][a-z]*)/) - [\"\"])\nend\n\nloop do\n  datum, cmd = gets.split\n  case cmd\n  when 'L'\n    head, *tail = split(datum)\n    puts head.downcase + tail.map(&:capitalize).join\n  when 'U'\n    puts split(datum).map(&:capitalize).join\n  when 'D'\n    puts split(datum).map(&:downcase).join(\"_\")\n  when 'X'\n    break\n  end\nend\n\n"
  },
  {
    "language": "Ruby",
    "code": "while l = gets\n  name, type = l.split\n  break if type == \"X\"\n  ret = \"\"\n  if name.include?(\"_\")\n    if type == \"D\"\n      ret = name\n    else\n      names = name.split(\"_\")\n      sz = names.size\n      if type == \"L\"\n        ret = names[0]\n      else\n        ret = names[0].capitalize\n      end\n    end\n    (1..sz-1).each do |i|\n      ret << names[i].capitalize\n    end\n  else\n    sz = name.size\n    if type == \"U\"\n      x = name[0].capitalize\n      ret << x << name[1,sz-1]\n    else\n      x = name[0].downcase\n      ret = x\n      if type == \"L\"\n        ret << name[1,sz-1]\n      else\n        (1..sz-1).each do |i|\n          if name[i].match(/[A-Z]/) == nil\n            ret << name[i]\n          else \n            ret << \"_\" << name[i].downcase\n          end\n        end\n      end\n    end\n  end\n  puts ret\nend"
  },
  {
    "language": "Ruby",
    "code": "# AOJ 1044 CamelCase\n\ndef underscored(s)\n  s.gsub(/([A-Z])/, '_\\1').gsub(/_{2,}/, \"_\").sub(/^_/, \"\").downcase\nend\n\ndef upper_camel_case(s)\n  s = underscored(s)\n  words = s.split(\"_\").map {|word| word.capitalize}\n  words.join(\"\")\nend\n\ndef lower_camel_case(s)\n  s = underscored(s)\n  words = s.split(\"_\").map {|word| word.capitalize}\n  words[0].downcase!\n  words.join(\"\")\nend\n\nARGF.each_line do |line|\n  line.chomp!\n  name, type = line.split(\" \")\n\n  case type\n  when \"X\"\n    break\n  when \"U\"\n    puts upper_camel_case(name)\n  when \"L\"\n    puts lower_camel_case(name)\n  when \"D\"\n    puts underscored(name)\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def main\n  loop do\n    str,pattern = gets.chomp.split(' ')\n    break if pattern.eql?('X')\n\n    case pattern\n    when 'U'\n      puts conversion_to_upper_camel_case(str)\n    when 'L'\n      puts conversion_to_lower_camel_case(str)\n    when 'D'\n      puts conversion_to_snake_case(str)\n    end\n  end\nend\n\ndef split_word str\n  words = []\n  word = ''\n  str.length.times do |i|\n    if str[i].match(/_/)\n      words << word\n      word = ''\n    elsif str[i].match(/[A-Z]/)\n      words << word unless i == 0\n      word = str[i]\n    else\n      word << str[i]\n    end\n  end\n  words << word\n  words\nend\n\ndef conversion_to_upper_camel_case str\n  words = split_word(str)\n  words.map{|word|word.capitalize}.join\nend\n\ndef conversion_to_lower_camel_case str\n  conversion_word = ''\n  words = split_word(str)\n  words.each_with_index do |word, i|\n    if i == 0\n      conversion_word << word.downcase\n    else\n      conversion_word << word.capitalize\n    end\n  end\n  conversion_word\nend\n\ndef conversion_to_snake_case str\n  words = split_word(str)\n  words.each.map{|word|word.downcase}.join('_')\nend\n\nmain"
  },
  {
    "language": "Ruby",
    "code": "class Q1044\n  CONS = ?a - ?A\n  def change name,type\n    names = divStr name\n    len = names.length\n    ans = \"\"\n    #cons = ?a - ?A\n    if(type == \"U\")\n      for i in 0..len-1\n        names[i][0] = (names[i][0] - CONS).chr\n        ans += names[i]\n      end\n    elsif(type == \"L\")\n        ans += names[0]\n      for i in 1..len-1\n        names[i][0] = (names[i][0] - CONS).chr\n        ans += names[i]\n      end\n    else\n      ans += names[0]\n      for i in 1..len-1\n        ans += \"_\" + names[i]\n      end\n    end\n    puts ans\n  end\n  def divStr str\n    ary = Array.new\n    tmp = \"\"\n    len = str.length\n    i = 0\n    while(i < len)\n      c = str[i]\n      if(c == ?_)\n        ary.push tmp\n        tmp = \"\"\n      elsif(?A <= c && c <= ?Z)\n        if(tmp != \"\")\n          ary.push tmp\n        end\n        tmp = \"\"\n        tmp += (c + CONS).chr\n      else\n        tmp += c.chr\n      end\n      i += 1\n      #puts tmp\n=begin\n      print \"tmp = \"\n      puts tmp\n      print \"ary = \"\n      puts ary\n=end\n    end\n    ary.push tmp\n    return ary\n  end\n  \n  def doIt\n    s = gets.split \" \"\n    while(s[1] != \"X\")\n      change s[0],s[1]\n      s = gets.split \" \"\n    end\n  end\nend\n\nQ1044.new.doIt"
  },
  {
    "language": "Ruby",
    "code": "loop {\n    s, type = gets.chomp.split\n    break if type == ?X\n    a = s.split(/_|(?=[A-Z])/).map(&:downcase)\n    case type\n    when ?L\n        puts a[0] + a[1..a.size-1].map(&:capitalize).join\n    when ?U\n        puts a.map(&:capitalize).join\n    when ?D\n        puts a.join(\"_\")\n    end \n}"
  },
  {
    "language": "Ruby",
    "code": "loop do\n  name,type = gets.split\n  break if type =='X'\n  if name.include?('_')\n    words = name.split('_')\n  else\n    name.gsub!(/([A-Z])/,' \\1')\n    words = name.split\n  end\n  case type\n  when 'U'\n    puts  words.map(&:capitalize).join\n  when 'L'\n    words.map!(&:capitalize)\n    words[0].downcase!\n    puts words.join\n  when 'D'\n    words.map!(&:downcase)\n    puts words.join('_')\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def main\n  loop do\n    str,pattern = gets.chomp.split(' ')\n    break if pattern.eql?('X')\n\n    answers << case pattern\n    when 'U'\n      puts conversion_to_upper_camel_case(str)\n    when 'L'\n      puts conversion_to_lower_camel_case(str)\n    when 'D'\n      puts conversion_to_snake_case(str)\n    end\n  end\nend\n\ndef split_word str\n  words = []\n  word = ''\n  str.length.times do |i|\n    if str[i].match(/_/)\n      words << word\n      word = ''\n    elsif str[i].match(/[A-Z]/)\n      words << word unless i == 0\n      word = str[i]\n    else\n      word << str[i]\n    end\n  end\n  words << word\n  words\nend\n\ndef conversion_to_upper_camel_case str\n  words = split_word(str)\n  words.map{|word|word.capitalize}.join\nend\n\ndef conversion_to_lower_camel_case str\n  conversion_word = ''\n  words = split_word(str)\n  words.each_with_index do |word, i|\n    if i == 0\n      conversion_word << word.downcase\n    else\n      conversion_word << word.capitalize\n    end\n  end\n  conversion_word\nend\n\ndef conversion_to_snake_case str\n  words = split_word(str)\n  words.each.map{|word|word.downcase}.join('_')\nend\n\nmain"
  },
  {
    "language": "Ruby",
    "code": "def decode(str)\n  res = []\n  if str.count('_') > 0\n    res = str.split('_')\n  else\n    if /[a-z]/.match(str[0])\n      str[0] = str[0].upcase\n    end\n    str.chars.each do |c|\n      if /[A-Z]/.match(c)\n        res << c.downcase\n      else\n        res[-1] << c.downcase\n      end\n    end\n  end\n  return res\nend\n\ndef encode(vs, t)\n  res = \"\"\n  if t == 'D'\n    res = vs * '_'\n  else\n    vs.each do |str|\n      str[0] = str[0].upcase\n      res << str\n    end\n    if t == 'L'\n      res[0] = res[0].downcase\n    end\n  end\n  return res\nend\n\nwhile true\n  str, t = gets.split\n  break if t == 'X'\n  puts(encode(decode(str), t))\nend\n"
  },
  {
    "language": "Ruby",
    "code": "while gets\n  n, s = $_.split.map(&:to_i)\n  break if n == 0 \n  table = Hash.new(0)\n  n.times do\n    table[gets.to_i] += 1    \n  end\n  ret = 0\n  table.each_key do |i|\n    if i * 2 > s\n      ret += table[i]*(table[i]-1) / 2\n    end\n    for j in (i+1)..100\n      if table.key?(j) && i + j > s\n        ret += table[i] * table[j]\n      end\n    end\n  end\n  p ret\nend"
  },
  {
    "language": "Ruby",
    "code": "loop do\n  name,type = gets.split\n  break if type =='X'\n  if name.include?('_')\n    words = name.split('_')\n  else\n    name.gsub!(/(.)([A-Z])/,'\\1 \\2')\n    words = name.split\n  end\n  case type\n  when 'U'\n    puts  words.map(&:capitalize).join\n  when 'L'\n    words.map!(&:capitalize)\n    words[0].downcase!\n    puts words.join\n  when 'D'\n    words.map!(&:downcase)\n    puts words.join('_')\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "while l = gets\n  name, type = l.split\n  break if type == \"X\"\n  ret = \"\"\n  if name.include?(\"_\")\n    if type == \"D\"\n      ret = name\n    else\n      names = name.split(\"_\")\n      sz = names.size\n      if type == \"L\"\n        ret = names[0]\n      else\n        ret = names[0].capitalize\n      end\n      (1..sz-1).each do |i|\n        ret << names[i].capitalize\n      end\n    end\n  else\n    sz = name.size\n    if type == \"U\"\n      x = name[0].capitalize\n      ret << x << name[1,sz-1]\n    else\n      x = name[0].downcase\n      ret = x\n      if type == \"L\"\n        ret << name[1,sz-1]\n      else\n        (1..sz-1).each do |i|\n          if name[i].match(/[A-Z]/) == nil\n            ret << name[i]\n          else \n            ret << \"_\" << name[i].downcase\n          end\n        end\n      end\n    end\n  end\n  puts ret\nend"
  },
  {
    "language": "Ruby",
    "code": "while gets\n  n, s = $_.split.map(&:to_i)\n  break if n == 0 \n  table = Hash.new(0)\n  n.times do\n    table[gets.to_i] += 1    \n  end\n  ret = 0\n  table.each_key do |k|\n    if k * 2 > s\n      ret += table[i]*(table[i]-1) / 2\n    end\n    for j in (k+1)..100\n      if table.key?(j) && k + j > s\n        ret += table[k]*table[j]\n      end\n    end\n  end\n  p ret\nend"
  },
  {
    "language": "Ruby",
    "code": "while true do\n  identifier, role = gets.chomp.split(' ')\n  break if role == 'X'\n\n  words = Array.new\n  if identifier[0] =~ /[A-Z]/ then\n    words = identifier.scan(/[A-Z][a-z]*/).map {|x| x.downcase }\n  elsif identifier.include? '_' then\n    words = identifier.split '_'\n  else\n    words = identifier.scan(/(?:^[a-z]*)|(?:[A-Z][a-z]*)/).map {|x| x.downcase }\n  end\n\n  if role == 'U'\n    puts words.map {|x| x.capitalize }.join\n  elsif role == 'L'\n    print words.shift\n    puts words.map {|x| x.capitalize }.join\n  elsif role == 'D'\n    puts words.join '_'\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def main\n  answers = []\n  loop do\n    str,pattern = gets.chomp.split(' ')\n    break if pattern.eql?('X')\n\n    answers << case pattern\n    when 'U'\n      conversion_to_upper_camel_case(str)\n    when 'L'\n      conversion_to_lower_camel_case(str)\n    when 'D'\n      conversion_to_snake_case(str)\n    end\n  end\n\n  answers.each {|answer|puts answer}\nend\n\ndef split_word str\n  words = []\n  word = ''\n  str.length.times do |i|\n    if str[i].match(/_/)\n      words << word\n      word = ''\n    elsif str[i].match(/[A-Z]/)\n      words << word unless i == 0\n      word = str[i]\n    else\n      word << str[i]\n    end\n  end\n  words << word\n  words\nend\n\ndef to_first_char_upcase word\n  result_word = ''\n  word.length.times do |i|\n    if i == 0\n      result_word << word[i].upcase\n    else\n      result_word << word[i].downcase\n    end\n  end\n  result_word\nend\n\ndef conversion_to_upper_camel_case str\n  conversion_word = ''\n  words = split_word(str)\n  words.each do |word|\n    conversion_word << to_first_char_upcase(word)\n  end\n  conversion_word\nend\n\ndef conversion_to_lower_camel_case str\n  conversion_word = ''\n  words = split_word(str)\n  words.each_with_index do |word, i|\n    if i == 0\n      conversion_word << word.downcase\n    else\n      conversion_word << to_first_char_upcase(word)\n    end\n  end\n  conversion_word\nend\n\ndef conversion_to_snake_case str\n  words = split_word(str)\n  words.each.map{|word|word.downcase}.join('_')\nend\n\nmain"
  },
  {
    "language": "Ruby",
    "code": "def main\n  answers = []\n  loop do\n    str,pattern = gets.chomp.split(' ')\n    break if pattern.eql?('X')\n\n    answers << case pattern\n    when 'U'\n      conversion_to_upper_camel_case(str)\n    when 'L'\n      conversion_to_lower_camel_case(str)\n    when 'D'\n      conversion_to_snake_case(str)\n    end\n  end\n\n  answers.each {|answer|puts answer}\nend\n\ndef split_word str\n  words = []\n  word = ''\n  str.length.times do |i|\n    if str[i].match(/_/)\n      words << word\n      word = ''\n    elsif str[i].match(/[A-Z]/)\n      words << word unless i == 0\n      word = str[i]\n    else\n      word << str[i]\n    end\n  end\n  words << word\n  words\nend\n\ndef conversion_to_upper_camel_case str\n  words = split_word(str)\n  words.map{|word|word.capitalize}.join\nend\n\ndef conversion_to_lower_camel_case str\n  conversion_word = ''\n  words = split_word(str)\n  words.each_with_index do |word, i|\n    if i == 0\n      conversion_word << word.downcase\n    else\n      conversion_word << word.capitalize\n    end\n  end\n  conversion_word\nend\n\ndef conversion_to_snake_case str\n  words = split_word(str)\n  words.each.map{|word|word.downcase}.join('_')\nend\n\nmain"
  },
  {
    "language": "Ruby",
    "code": "### subroutines\n\ndef parse_name(name)\n  return name.split('_') if ! name.index('_').nil?\n\n  name[0] = name[0].upcase\n  name.scan(/[A-Z][a-z]*/).map{|s| s.downcase}\nend\n\n### main\n\nloop do\n  name, type = gets.strip.split\n  break if type == 'X'\n  #p [name, type]\n\n  words = parse_name(name)\n\n  case type\n  when 'U'\n    puts words.map{|s| s[0] = s[0].upcase; s}.join('')\n  when 'L'\n    cc = words.map{|s| s[0] = s[0].upcase; s}.join('')\n    cc[0] = cc[0].downcase\n    puts cc\n  when 'D'\n    puts words.join('_')\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "while l = gets\n  name, type = l.split\n  break if type == \"X\"\n  ret = \"\"\n  if name.include?(\"_\") \n    names = name.split(\"_\")\n    sz = names.size\n    if type == \"L\"\n      ret = names[0]\n    elsif type == \"U\"\n      ret = names[0].capitalize\n    end\n    (1..sz-1).each do |i|\n      ret << names[i].capitalize\n    end\n  else\n    sz = name.size\n    if type == \"U\"\n      x = name[0].capitalize\n      ret << x << name[1,sz-1]\n    else\n      x = name[0].downcase\n      ret = x\n      if type == \"L\"\n        ret << name[1,sz-1]\n      else\n        (1..sz-1).each do |i|\n          if name[i].match(/[A-Z]/) == nil\n            ret << name[i]\n          else \n            ret << \"_\" << name[i].downcase\n          end\n        end\n      end\n    end\n  end\n  puts ret \nend"
  },
  {
    "language": "Ruby",
    "code": "while (ary = gets.split) != [\"EndOfInput\", \"X\"]\n  str_ary = []\n  tmp_str = ary[0][0]\n  for num in (1..(ary[0].size - 1))\n    tmp_char = ary[0][num]\n    unless tmp_char == \"_\" or tmp_char.ord.between?(65, 90)\n      tmp_str += tmp_char\n      next\n    else\n      str_ary << tmp_str\n      if tmp_char == \"_\"\n        tmp_str = \"\"\n      else\n        tmp_str = tmp_char\n      end\n    end\n  end\n  str_ary << tmp_str\n\n  case ary[1]\n  when \"L\"\n    for num in (1..(str_ary.size - 1))\n      str_ary[num].capitalize!\n    end\n    puts str_ary.join\n  when \"U\"\n    str_ary.each {|s| s.capitalize!}\n    puts str_ary.join\n  when \"D\"\n    str_ary.each {|s| s.downcase!}\n    puts str_ary.join(\"_\")\n  end\nend"
  },
  {
    "language": "Ruby",
    "code": "def get_i() #空白区切の入力を数値(整数)の配列で返す\n  return gets.chomp.split(\" \").map(&:to_i)\nend\ndef get_f() #空白区切の入力を数値(実数)の配列で返す\n  return gets.chomp.split(\" \").map(&:to_f)\nend\ndef get() #空白区切の入力を文字列の配列で返す\n  return gets.chomp.split(\" \")\nend\ndef get_nsp() #入力されたものを一文字ずつに区切った文字列の配列で返す\n  return gets.chomp.split(\"\")\nend\ndef yn_judge(bool,y=\"Yes\",n=\"No\") #boolに真偽を投げることで、trueならy、falseならnの値を出力する\n  return bool ? y : n \nend\ndef array(size,n=1,init=nil) #nに配列の次元数、sizeに配列の大きさ、initに初期値を投げることでその配列を返す\n  if n==1\n    return Array.new(size){init}\n  else\n    return Array.new(n).map{Array.new(size){init}}\n  end\nend\n\nloop do\n  word,type=get\n  w_=word.split(\"_\")\n  new_word=[]\n  if w_.size==1\n    w_Nsp=word.split(\"\")\n    temp=\"\"\n    w_Nsp.each_with_index do|c,i|\n      if i.nonzero? and c==c.upcase\n        new_word.push(temp)\n        temp=\"\"\n        temp+=c.downcase\n      else\n        temp+=c.downcase\n      end \n    end\n    new_word.push(temp)\n    word=new_word\n  else\n    word=w_\n  end\n  case type\n  when \"X\" then\n    break\n  when \"L\" then\n    ans=word[0]\n    word.shift\n    word.each do|str|\n      str_spl=str.split(\"\")\n      i=0\n      str_spl.each do|c|\n        if i.zero?\n          ans+=c.upcase\n          i+=1\n        else\n          ans+=c\n        end\n      end\n    end\n    puts ans\n  when \"U\" then\n    ans=\"\"\n    word.each do|str|\n      str_spl=str.split(\"\")\n      i=0\n      str_spl.each do|c|\n        if i.zero?\n          ans+=c.upcase\n          i+=1\n        else\n          ans+=c\n        end \n      end\n    end\n    puts ans\n  when \"D\" then\n    puts word.join(\"_\")\n  end\nend\n"
  },
  {
    "language": "Go",
    "code": "package main\n\nimport (\n\t\"bufio\"\n\t\"fmt\"\n\t\"os\"\n\t\"strconv\"\n\t\"strings\"\n)\n\nfunc configure(scanner *bufio.Scanner) {\n\tscanner.Split(bufio.ScanWords)\n\tscanner.Buffer(make([]byte, 1000005), 1000005)\n}\nfunc getNextString(scanner *bufio.Scanner) string {\n\tscanned := scanner.Scan()\n\tif !scanned {\n\t\tpanic(\"scan failed\")\n\t}\n\treturn scanner.Text()\n}\nfunc getNextInt(scanner *bufio.Scanner) int {\n\ti, _ := strconv.Atoi(getNextString(scanner))\n\treturn i\n}\nfunc getNextInt64(scanner *bufio.Scanner) int64 {\n\ti, _ := strconv.ParseInt(getNextString(scanner), 10, 64)\n\treturn i\n}\nfunc getNextFloat64(scanner *bufio.Scanner) float64 {\n\ti, _ := strconv.ParseFloat(getNextString(scanner), 64)\n\treturn i\n}\nfunc main() {\n\tfp := os.Stdin\n\twfp := os.Stdout\n\textra := 0\n\tif os.Getenv(\"I\") == \"IronMan\" {\n\t\tfp, _ = os.Open(os.Getenv(\"END_GAME\"))\n\t\textra = 100\n\t}\n\tscanner := bufio.NewScanner(fp)\n\tconfigure(scanner)\n\twriter := bufio.NewWriter(wfp)\n\tdefer func() {\n\t\tr := recover()\n\t\tif r != nil {\n\t\t\tfmt.Fprintln(writer, r)\n\t\t}\n\t\twriter.Flush()\n\t}()\n\tsolve(scanner, writer)\n\tfor i := 0; i < extra; i++ {\n\t\tfmt.Fprintln(writer, \"-----------------------------------\")\n\t\tsolve(scanner, writer)\n\t}\n}\nfunc solve(scanner *bufio.Scanner, writer *bufio.Writer) {\n\tfor s, c := getNextString(scanner), getNextString(scanner); c != \"X\"; s, c = getNextString(scanner), getNextString(scanner) {\n\t\tif strings.Index(s, \"_\") != -1 {\n\t\t\tfmt.Fprintln(writer, translate(strings.Split(s, \"_\"), c))\n\t\t\tcontinue\n\t\t}\n\t\tss := make([]string, 0)\n\t\tfor len(s) > 0 {\n\t\t\tindex := nextupper(s[1:])\n\t\t\tss = append(ss, s[:index+1])\n\t\t\ts = s[index+1:]\n\t\t}\n\t\tfmt.Fprintln(writer, translate(ss, c))\n\t}\n}\nfunc translate(ss []string, c string) string {\n\tswitch c {\n\tcase \"U\":\n\t\treturn u(ss)\n\tcase \"L\":\n\t\treturn l(ss)\n\tcase \"D\":\n\t\treturn d(ss)\n\t}\n\treturn \"\"\n}\n\nfunc nextupper(s string) int {\n\tn := len(s)\n\tfor i := 0; i < n; i++ {\n\t\tif s[i:i+1] == strings.ToUpper(s[i:i+1]) {\n\t\t\treturn i\n\t\t}\n\t}\n\treturn n\n}\nfunc u(ss []string) string {\n\tn := len(ss)\n\tfor i := 0; i < n; i++ {\n\t\tss[i] = fmt.Sprintf(\"%s%s\", strings.ToUpper(ss[i][0:1]), ss[i][1:])\n\t}\n\treturn strings.Join(ss, \"\")\n}\nfunc l(ss []string) string {\n\tn := len(ss)\n\tss[0] = strings.ToLower(ss[0])\n\tfor i := 1; i < n; i++ {\n\t\tss[i] = fmt.Sprintf(\"%s%s\", strings.ToUpper(ss[i][0:1]), ss[i][1:])\n\t}\n\treturn strings.Join(ss, \"\")\n}\nfunc d(ss []string) string {\n\tn := len(ss)\n\tfor i := 0; i < n; i++ {\n\t\tss[i] = strings.ToLower(ss[i])\n\t}\n\treturn strings.Join(ss, \"_\")\n}\n\n"
  },
  {
    "language": "D",
    "code": "import std.stdio, std.string, std.conv, std.regex, std.algorithm, std.array;\n\nimmutable int L = 0;\nimmutable int U = 1;\nimmutable int D = 2;\n\nint parseType( string type ) {\n  switch( type ) {\n  case \"L\": return L;\n  case \"U\": return U;\n  case \"D\": return D;\n  default: return -1;\n  }\n}\n\nint judgeType( string str ) {\n  if ( count( \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", str[ 0..1 ] ) > 0 ) {\n\treturn U;\n  } else if ( count( str, \"_\" ) > 0 ) {\n\treturn D;\n  } else {\n\treturn L;\n  }\n}\n\nstring convertTypeToD( string input, int type ) {\n  switch( type ){\n  case L:\n\treturn toLower( replace( input, regex( \"([A-Z])\", \"g\" ), \"_$1\" ) );\n  case U:\n\treturn toLower( replace( input, regex( \"([A-Z])\", \"g\" ), \"_$1\" )[ 1..$ ] );\n  default:\n\treturn input;\n  }\n}\n\nstring frontUpper( string input ) {\n  return toUpper( input[ 0..1 ] ) ~ input[ 1..$ ];\n}\n\nstring convertTypeFromD( string input, int type ) {\n  switch( type ) {\n  case U:\n\treturn join( array( map!( frontUpper )( split( input, \"_\" ) ) ), \"\" );\n  case L:\n\tauto tokens = split( input, \"_\" );\n\treturn tokens[ 0 ] ~ join( array( map!( frontUpper )( tokens[ 1..$ ] ) ), \"\" );\n  default:\n\treturn input;\n  }\n}\n\nvoid main()\n{\n  while ( true ) {\n\tstring[] input = split( strip( readln ) );\n\tif ( input[ 0 ] == \"EndOfInput\" && input[ 1 ] == \"X\" ) {\n\t  break;\n\t}\n\timmutable int typeTo = parseType( input[ 1 ] );\n\timmutable int type = judgeType( input[ 0 ] );\n\t\n\tif ( typeTo == type ) {\n\t  writeln( input[ 0 ] );\n\t} else {\n\t  string origin = convertTypeToD( input[ 0 ], type );\n\t  writeln( convertTypeFromD( origin, typeTo ) );\n\t}\n  }\n}"
  },
  {
    "language": "D",
    "code": "import std.stdio, std.string, std.conv, std.regex, std.algorithm, std.array;\n\nimmutable int L = 0;\nimmutable int U = 1;\nimmutable int D = 2;\n\nint parseType( string type ) {\n  switch( type ) {\n  case \"L\": return L;\n  case \"U\": return U;\n  case \"D\": return D;\n  default: return -1;\n  }\n}\n\nint judgeType( string str ) {\n  if ( count( \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\", str[ 0..1 ] ) > 0 ) {\n\treturn U;\n  } else if ( count( str, \"_\" ) > 0 ) {\n\treturn D;\n  } else {\n\treturn L;\n  }\n}\n\nstring convertTypeToD( string input, int type ) {\n  switch( type ){\n  case L:\n\treturn toLower( replace( input, regex( \"([A-Z])\", \"g\" ), \"_$1\" ) );\n  case U:\n\treturn toLower( replace( input, regex( \"([A-Z])\", \"g\" ), \"_$1\" )[ 1..$ ] );\n  default:\n\treturn input;\n  }\n}\n\nstring frontUpper( string input ) {\n  return toUpper( input[ 0..1 ] ) ~ input[ 1..$ ];\n}\n\nstring convertTypeFromD( string input, int type ) {\n  switch( type ) {\n  case U:\n\treturn join( array( map!( frontUpper )( std.string.split( input, \"_\" ) ) ), \"\" );\n  case L:\n\tauto tokens = std.string.split( input, \"_\" );\n\treturn tokens[ 0 ] ~ join( array( map!( frontUpper )( tokens[ 1..$ ] ) ), \"\" );\n  default:\n\treturn input;\n  }\n}\n\nvoid main()\n{\n  while ( true ) {\n\tstring[] input = std.string.split( strip( readln ) );\n\tif ( input[ 0 ] == \"EndOfInput\" && input[ 1 ] == \"X\" ) {\n\t  break;\n\t}\n\timmutable int typeTo = parseType( input[ 1 ] );\n\timmutable int type = judgeType( input[ 0 ] );\n\t\n\tif ( typeTo == type ) {\n\t  writeln( input[ 0 ] );\n\t} else {\n\t  string origin = convertTypeToD( input[ 0 ], type );\n\t  writeln( convertTypeFromD( origin, typeTo ) );\n\t}\n  }\n}"
  },
  {
    "language": "D",
    "code": "module aoj;\nimport std.algorithm;\nimport std.ascii;\nimport std.range;\nimport std.stdio;\nimport std.string;\n\nvoid main() {\n  string name, type;\n  for (;;) {\n    string[] line = split(readln());\n    name = line[0];\n    type = line[1];\n    if (type == \"X\") { break; }\n    string[] words;\n    ulong prev = 0;\n    foreach (i; 1 .. name.length) {\n      if (name[i] == '_') {\n        words ~= name[prev .. i];\n        prev = i + 1;\n      } else if (isUpper(name[i])) {\n        words ~= name[prev .. i];\n        prev = i;\n      }\n    }\n    words ~= name[prev .. $];\n    if (type == \"U\") {\n      writeln(join(words.map!capitalize, \"\"));\n    } else if (type == \"L\") {\n      write(toLower(words[0]));\n      writeln(join(words[1 .. $].map!capitalize, \"\"));\n    } else if (type == \"D\") {\n      writeln(join(words.map!toLower, \"_\"));\n    } else {\n      assert(false);\n    }\n  }\n}"
  },
  {
    "language": "Python",
    "code": "while True:\n    a, b = input().split()\n    if b == 'X':\n        break\n\n    if '_' in a:\n        ans = a.split('_')\n    else:\n        ans = []\n        j = 0\n        for i in range(1, len(a)):\n            if a[i].isupper():\n                ans.append(a[j:i])\n                j = i\n        ans.append(a[j:])\n        \n    if b == 'D':\n        ans = '_'.join(map(str.lower, ans))\n    else:\n        ans = ''.join(map(str.capitalize, ans))\n        \n        if b == 'L':\n            ans = ans[0].lower() + ans[1:]\n\n    print(ans)\n"
  },
  {
    "language": "Python",
    "code": "#!/usr/bin/env python\n\nfrom collections import deque\nimport itertools as it\nimport sys\nimport math\n\nsys.setrecursionlimit(10000000)\n\nwhile True:\n    S, tp = raw_input().split()\n    if tp == 'X':\n        break\n    if tp == 'L':\n        if '_' in S:\n            ls = S.split('_')\n            S = ''\n            for s in ls:\n                S += chr(ord('A') + ord(s[0]) - ord('a')) + s[1:]\n        if 0 <= ord(S[0]) - ord('A') < 26:\n            S = chr(ord('a') + ord(S[0]) - ord('A')) + S[1:]\n    if tp == 'U':\n        if '_' in S:\n            ls = S.split('_')\n            S = ''\n            for s in ls:\n                S += chr(ord('A') + ord(s[0]) - ord('a')) + s[1:]\n        if 0 <= ord(S[0]) - ord('a') < 26:\n            S = chr(ord('A') + ord(S[0]) - ord('a')) + S[1:]\n    if tp == 'D':\n        for i in range(26):\n            S = S.replace(chr(ord('A') + i), '_' + chr(ord('a') + i))\n        if S[0] == '_':\n            S = S[1:]\n    print S\n"
  },
  {
    "language": "Python",
    "code": "upp = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nlow = \"abcdefghijklmnopqrstuvwxyz\"\n\nwhile 1:\n\ta,type = raw_input().split()\n\tif type == \"X\": break\n\tans = \"\"\n\tif type == \"U\":\n\t\tif \"_\" in a:\n\t\t\twords = a.split(\"_\")\n\t\t\tfor word in words:\n\t\t\t\tans += upp[low.index(word[0])] + word[1:]\n\t\telse:\n\t\t\tans = upp[low.index(a[0])] + a[1:]\n\telif type == \"L\":\n\t\tif \"_\" in a:\n\t\t\twords = a.split(\"_\")\n\t\t\tans += words[0]\n\t\t\tfor word in words[1:]:\n\t\t\t\tans += upp[low.index(word[0])] + word[1:]\n\t\telse:\n\t\t\tans = low[upp.index(a[0])] + a[1:]\n\telse:\n\t\twords = []\n\t\tsp = 0\n\t\tfor i in range(1,len(a)):\n\t\t\tif a[i] in upp:\n\t\t\t\twords.append(a[sp:i].lower())\n\t\t\t\tsp = i\n\t\twords.append(a[sp:].lower())\n\t\tans = \"_\".join(words)\n\tprint ans"
  },
  {
    "language": "Python",
    "code": "while True:\n    name,typ=raw_input().split()\n    if name==\"EndOfInput\" and typ==\"X\":break\n    L=[]\n    if \"_\" in name:\n        L=name.split(\"_\")\n    elif  name[0].islower():\n        temp=\"\"\n        for ch in name:\n            if ch.islower():\n                temp+=ch\n            else:\n                L.append(temp)\n                temp=\"\"\n                temp+=ch\n        L.append(temp)\n    else:\n        temp=name[0]\n        for ch in name[1:]:\n            if ch.islower():\n                temp+=ch\n            else:\n                L.append(temp)\n                temp=\"\"\n                temp+=ch\n        L.append(temp)\n\n    if typ==\"D\":\n        print \"_\".join(map(lambda s:s.lower(),L))\n    elif typ==\"U\":\n        print \"\".join(map(lambda s:s.capitalize(),L))\n    else:\n        print L[0]+\"\".join(map(lambda s:s.capitalize(),L[1:]))"
  },
  {
    "language": "Python",
    "code": "while(1):\n    [inp, s]=raw_input().split()\n    if s=='X':\n        break\n    else:\n        words=[]\n        if '_' in inp:\n            words=inp.split('_')\n        else:\n            w=inp[0].lower()\n            for c in inp[1:]:\n                if c.isupper():\n                    words.append(w)\n                    w=c.lower()\n                else:\n                    w+=c\n            words.append(w)\n        if s=='D':\n            print '_'.join(words)\n        else:\n            if s=='U':\n                words=[w[0].upper()+w[1:] for w in words]\n            else:\n                words=[words[0]]+[w[0].upper()+w[1:] for w in words[1:]]\n            print ''.join(words)"
  },
  {
    "language": "Python",
    "code": "# coding: utf-8\n# 89\nimport re\n\nwhile True:\n    n,t = input().split()\n    if t == 'X':\n        break\n    if '_' in n:\n        N=n.split('_')\n        #print(N)\n    else:\n        i = n[0].upper()\n        #print(i)\n        k = n[1:]\n        K = i +k\n        #print(K)\n        #N = re.split('[A-Z]',n)\n        N = re.findall('[A-Z][^A-Z]*',K)\n        #print(N)\n    if t=='U':\n        for i in range(len(N)):\n            if i == len(N)-1:\n                print(N[i].capitalize())\n            else:\n                print(N[i].capitalize(),end='')\n    elif t=='L':\n        for j in range(len(N)):\n            if j == 0:\n                if j==len(N)-1:\n                    print(N[j].lower())\n                else:\n                    print(N[j].lower(),end='')\n            elif j == len(N)-1:\n                print(N[j].capitalize())\n            else:\n                print(N[j].capitalize(),end='')\n        \n    elif t=='D':\n        for z in range(len(N)):\n            if z == len(N)-1:\n                print(N[z].lower())\n            else:\n                print(N[z].lower(),end='')\n                print('_',end='')\n        \n\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    words, type_ = input().split()\n    if type_ == \"L\":\n        if \"_\" in words:\n            words = words.split(\"_\")\n            words = words[0] + \"\".join([w[0].upper() + w[1:] for w in words[1:]])\n        else:\n            words = words[0].lower() + words[1:]\n    elif type_ == \"U\":\n        if \"_\" in words:\n            words = words.split(\"_\")\n            words = \"\".join([w[0].upper() + w[1:] for w in words])\n        else:\n            words = words[0].upper() + words[1:]\n    elif type_ == \"D\":\n        indices = [i for i, w in enumerate(words) if w.isupper()] + [len(words)]\n        if words[0].islower():\n            indices.insert(0, 0)\n        words = \"_\".join([words[indices[i]].lower() + words[indices[i]+1: indices[i+1]] for i in range(len(indices) - 1)])\n    else:\n        break\n    print(words)\n\n\n"
  },
  {
    "language": "Python",
    "code": "import re\nwhile True:\n    name,typ=raw_input().split()\n    if name==\"EndOfInput\" and typ==\"X\":break\n    if \"_\" in name:\n        L=name.split(\"_\")\n    else:\n        L=re.findall(\"[A-Z][a-z]*\",name[0].upper()+name[1:])\n\n    if typ==\"D\":\n        print \"_\".join(map(lambda s:s.lower(),L))\n    elif typ==\"U\":\n        print \"\".join(map(lambda s:s.capitalize(),L))\n    else:\n        print L[0]+\"\".join(map(lambda s:s.capitalize(),L[1:]))"
  },
  {
    "language": "Python",
    "code": "from string import ascii_uppercase\nwhile 1:\n    s, t = input().split()\n    if t == 'X':\n        break\n    if \"_\" in s:\n        W = s.split(\"_\")\n    else:\n        W = []; w = []\n        for c in s:\n            if c in ascii_uppercase:\n                if w:\n                    W.append(\"\".join(w).lower())\n                w = [c]\n            else:\n                w.append(c)\n        if w:\n            W.append(\"\".join(w).lower())\n    if t == 'D':\n        print(*W, sep='_')\n    elif t == 'U':\n        print(*map(lambda x: x.capitalize(), W), sep='')\n    else:\n        print(W[0], *map(lambda x: x.capitalize(), W[1:]), sep='')\n"
  },
  {
    "language": "Python",
    "code": "# AOJ 1044: CamelCase\n# Python3 2018.7.6 bal4u\n\nwhile True:\n\tn, t = input().split()\n\tif t == 'X': break\n\tans, n = '', list(n)\n\tif t == 'U':\n\t\tans += n.pop(0).upper()\n\t\twhile n != []:\n\t\t\twhile n != [] and n[0] != '_': ans += n.pop(0)\n\t\t\tif len(n) > 1 and n[0] == '_':\n\t\t\t\tdel n[0]\n\t\t\t\tans += n.pop(0).upper()\n\telif t == 'L':\n\t\tans += n.pop(0).lower()\n\t\twhile n != []:\n\t\t\twhile n != [] and n[0] != '_': ans += n.pop(0)\n\t\t\tif len(n) > 1 and n[0] == '_':\n\t\t\t\tdel n[0]\n\t\t\t\tans += n.pop(0).upper()\n\telse:\n\t\tans += n.pop(0).lower()\n\t\twhile n != []:\n\t\t\twhile n != [] and n[0].isupper() == False: ans += n.pop(0)\n\t\t\tif n != [] and n[0].isupper(): ans += '_' + n.pop(0).lower()\n\tprint(ans)\n\n\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    name,typ=raw_input().split()\n    if name==\"EndOfInput\" and typ==\"X\":break\n    L=[]\n    if \"_\" in name:\n        L=name.split(\"_\")\n    elif  name[0].islower():\n        temp=\"\"\n        for ch in name:\n            if ch.islower():\n                temp+=ch\n            else:\n                L.append(temp)\n                temp=\"\"\n                temp+=ch\n        L.append(temp)\n    else:\n        temp=name[0]\n        for ch in name[1:]:\n            if ch.islower():\n                temp+=ch\n            else:\n                L.append(temp)\n                temp=\"\"\n                temp+=ch\n        L.append(temp)\n\n    if typ==\"D\":\n        print \"_\".join(map(lambda s:s.lower(),L))\n    elif typ==\"U\":\n        print \"\".join(map(lambda s:s.capitalize(),L))\n    else:\n        print L[1]+\"\".join(map(lambda s:s.capitalize(),L[1:]))"
  },
  {
    "language": "Python",
    "code": "while True:\n    s = input()\n    s, order = s.split()\n    if order == 'X':\n        break\n    if '_' in s:\n        if order == 'U':\n            s = s.split('_')\n            a = ''\n            for i in s:\n                a += i.capitalize()\n            print(a)\n        elif order == 'L':\n            s = s.split('_')\n            a = ''\n            a += s[0].lower()\n            for i in s[1:]:\n                a += i.capitalize()\n            print(a)\n        else:\n            print(s.lower())\n    else:\n        if order == 'U':\n            if s[0].isupper():\n                print(s)\n            else:\n                s = s[0].upper() + s[1:]\n                print(s)\n        elif order == 'L':\n            if s[0].islower():\n                print(s)\n            else:\n                s = s[0].lower() + s[1:]\n                print(s)\n        else: \n            index = []\n            c = 0\n            for i in range(len(s[1:])):\n                if s[i+1].isupper():\n                    index.append(i + 1+c)\n                    c += 1\n            for j in index:\n                s = s[: j] + '_' + s[j:]\n            print(s.lower())\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    name,type = map(str, raw_input().split())\n    ans = \"\"\n    if (type == 'X'):\n        break\n    names = []\n    if (name.find(\"_\") != -1):\n        names = name.split(\"_\")\n    elif (name[0].islower() == True):\n        tmp = name[0]\n        for i in range(1, len(name)):\n            if (name[i].isupper() == True):\n                names.append(tmp)\n                tmp = name[i]\n            else:\n                tmp += name[i]\n        if (len(tmp) > 1):\n            names.append(tmp)\n    else:\n        tmp = name[0]\n        for i in range(1, len(name)):\n            if (name[i].isupper() == True):\n                names.append(tmp)\n                tmp = name[i]\n            else:\n                tmp += name[i]\n        if (len(tmp) > 1):\n            names.append(tmp)\n    if (type == \"U\"):\n        for x in names:\n            ans += x[0].upper()\n            ans += x[1:].lower()\n    elif (type == \"L\"):\n        cnt = 0\n        for x in names:\n            if (cnt == 0):\n                ans += x.lower()\n            else:\n                ans += x[0].upper()\n                ans += x[1:].lower()\n            cnt += 1\n    else:\n        ans = \"_\".join(names)\n        ans = ans.lower()\n    print ans"
  },
  {
    "language": "Python",
    "code": "while True:\n    words, type_ = input().split()\n    if type_ == \"L\":\n        if \"_\" in words:\n            words = words.split(\"_\")\n            words = words[0] + \"\".join([w[0].upper() + w[1:] for w in words[1:]])\n        else:\n            words = words[0].lower() + words[1:]\n    elif type_ == \"U\":\n        if \"_\" in words:\n            words = words.split(\"_\")\n            words = \"\".join([w[0].upper() + w[1:] for w in words])\n        else:\n            words = words[0].upper() + words[1:]\n    elif type_ == \"D\":\n        indices = [i for i, w in enumerate(words) if w.isupper()] + [len(words)]\n        if words[0].islower():\n            indices.insert(0, 0)\n        words = \"_\".join([words[indices[i]].lower() + words[indices[i]+1: indices[i+1]] for i in range(len(indices) - 1)])\n    else:\n        break\n    print(words)"
  },
  {
    "language": "Python",
    "code": "import re\nwhile True:\n    n,t=input().split()\n    \n    if t=='X':\n        break\n    \n    if '_'in t:\n        ans=s.split('_')\n    else :\n        ans=re.findall(r'[a-z]+|[A-Z][a-z]*',n)\n        \n    if t=='D':\n        ans='_'.join(map(str.lower,ans))\n    else :\n        ans=''.join(map(str.capitalize,ans))\n        if t=='L':\n            ans=ans[0].lower()+ans[1:]\n    \n    print(ans)\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    s, cc = input().split()\n    if cc == \"X\":break\n    if \"_\" in s:\n        t = s.split(\"_\")\n    else:\n        t = []\n        j = 0\n        for i in range(1, len(s)):\n            if s[i].isupper():\n                t.append(s[j:i])\n                j = i\n        t.append(s[j:])\n    if cc == \"U\":\n        for i in range(len(t)):t[i] = t[i][0].upper() + t[i][1:]\n        print(\"\".join(t))\n    elif cc == \"L\":\n        t[0] = t[0].lower()\n        for i in range(1, len(t)):t[i] = t[i][0].upper() + t[i][1:]\n        print(\"\".join(t))\n    else:\n        for i in range(len(t)):t[i] = t[i].lower()\n        print(\"_\".join(t))\n"
  },
  {
    "language": "Python",
    "code": "upp = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\nlow = \"abcdefghijklmnopqrstuvwxyz\"\n\nwhile 1:\n\ta,type = raw_input().split()\n\tif type == \"X\": break\n\tans = \"\"\n\tif type == \"U\":\n\t\tif \"_\" in a:\n\t\t\twords = a.split(\"_\")\n\t\t\tfor word in words:\n\t\t\t\tans += upp[low.index(word[0])] + word[1:]\n\t\telse:\n\t\t\tans = upp[low.index(a[0])] + a[1:] if a[0] in low else a\n\telif type == \"L\":\n\t\tif \"_\" in a:\n\t\t\twords = a.split(\"_\")\n\t\t\tans += words[0]\n\t\t\tfor word in words[1:]:\n\t\t\t\tans += upp[low.index(word[0])] + word[1:]\n\t\telse:\n\t\t\tans = low[upp.index(a[0])] + a[1:] if a[0] in upp else a\n\telse:\n\t\tif \"_\" not in a:\n\t\t\twords = []\n\t\t\tsp = 0\n\t\t\tfor i in range(1,len(a)):\n\t\t\t\tif a[i] in upp:\n\t\t\t\t\twords.append(a[sp:i].lower())\n\t\t\t\t\tsp = i\n\t\t\twords.append(a[sp:].lower())\n\t\t\tans = \"_\".join(words)\n\t\telse:\n\t\t\tans = a\n\tprint ans"
  },
  {
    "language": "Python",
    "code": "while True:\n    name,type = map(str, raw_input().split())\n    ans = \"\"\n    if (type == 'X'):\n        break\n    names = []\n    if (name.find(\"_\") != -1):\n        names = name.split(\"_\")\n    elif (name[0].islower() == True):\n        tmp = name[0]\n        for i in range(1, len(name)):\n            if (name[i].isupper() == True):\n                names.append(tmp)\n                tmp = name[i]\n            else:\n                tmp += name[i]\n        if (len(tmp) > 0):\n            names.append(tmp)\n    else:\n        tmp = name[0]\n        for i in range(1, len(name)):\n            if (name[i].isupper() == True):\n                names.append(tmp)\n                tmp = name[i]\n            else:\n                tmp += name[i]\n        if (len(tmp) > 0):\n            names.append(tmp)\n    # print names\n    if (type == \"U\"):\n        for x in names:\n            ans += x[0].upper()\n            ans += x[1:].lower()\n    elif (type == \"L\"):\n        cnt = 0\n        for x in names:\n            if (cnt == 0):\n                ans += x.lower()\n            else:\n                ans += x[0].upper()\n                ans += x[1:].lower()\n            cnt += 1\n    else:\n        ans = \"_\".join(names)\n        ans = ans.lower()\n    print ans"
  },
  {
    "language": "Python",
    "code": "# coding: utf-8\n# Your code here!\nimport re\nwhile True:\n    name,type = input().split()\n    if type == \"X\":\n        break\n    if \"_\" in name:\n        X = name.split(\"_\")\n    else:\n        tmp = name.upper()\n        name = tmp[0]+name[1:]\n        X = re.findall('[A-Z][^A-Z]*',name)\n    if type == \"U\":\n        for i in range(len(X)):\n            X[i] = X[i].capitalize()\n    elif type == \"L\":\n        X[0] = X[0].lower()\n        for i in range(1,len(X)):\n            X[i] = X[i].capitalize()\n    else:\n        X[0] = X[0].lower()\n        for i in range(1,len(X)):\n            X[i] = \"_\"+X[i].lower()\n    print(\"\".join(X))\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    s,cc=input().split()\n    if cc==\"X\":\n        break\n    if \"_\" in s:\n        t = s.split(\"_\")\n    else:\n        t = []\n        j = 0\n        for i in range(1, len(s)):\n            if s[i].isupper():\n                t.append(s[j:i])\n                j = i\n        t.append(s[j:])\n    if cc == \"U\":\n        for i in range(len(t)):\n            t[i] = t[i][0].upper() + t[i][1:]\n        print(\"\".join(t))\n    elif cc == \"L\":\n        t[0] = t[0].lower()\n        for i in range(1, len(t)):\n            t[i] = t[i][0].upper() + t[i][1:]\n        print(\"\".join(t))\n    else:\n        for i in range(len(t)):\n            t[i] = t[i].lower()\n        print(\"_\".join(t))\n"
  },
  {
    "language": "Python",
    "code": "\nwhile True:\n    name,typ = input().split()\n    if typ==\"X\": break\n    ans = []\n    \n    if \"_\" in name:\n        ans = name.split(\"_\")\n    else:\n        j = 0\n        for i in range(1,len(name)):\n            if name[i].isupper():\n                ans.append(name[j:i])\n                j = i\n        ans.append(name[j:])\n                \n    if typ==\"D\":\n        ans = map(str.lower, ans)\n        print(*ans,sep=\"_\")\n        \n    else:\n        ans = \"\".join(map(str.capitalize, ans))\n        if typ==\"L\":\n            ans = ans[0].lower() + ans[1:]\n        print(ans)\n            \n      \n"
  },
  {
    "language": "Python",
    "code": "while True:\n    a, b = input().split()\n    if b == 'X':\n        break\n\n    if '_' in a:\n        ans = a.split('_')\n    else:\n        ans = []\n        j = 0\n        for i in range(1, len(a)):\n            if a[i].isupper():\n                ans.append(a[j:i])\n                j = i\n        ans.append(a[j:])\n        \n    if b == 'D':\n        ans = '_'.join(map(str.lower, ans))\n    else:\n        ans = ''.join(map(str.capitalize, ans))\n        \n        if b == 'L':\n            ans = ans[0].lower() + ans[1:]\n\n    print(ans)\n\n"
  },
  {
    "language": "Python",
    "code": "import re\nwhile True:\n    name,typ=raw_input().split()\n    if name==\"EndOfInput\" and typ==\"X\":break\n    if \"_\" in name:\n        L=name.split(\"_\")\n    else:\n        L=re.findall(\"[A-Z][a-z]*\",name[0].upper()+name[1:])\n\n    if typ==\"D\":\n        print \"_\".join(map(lambda s:s.lower(),L))\n    elif typ==\"U\":\n        print \"\".join(map(lambda s:s.capitalize(),L))\n    else:\n        print L[0].lower()+\"\".join(map(lambda s:s.capitalize(),L[1:]))"
  },
  {
    "language": "Python",
    "code": "import re\nwhile True:\n    c, t = input().split()\n    if t == \"X\":\n        break\n    if t == \"U\":\n        if \"_\" in c:\n            tmp = c.split(\"_\")\n            hoge = \"\"\n            for t in tmp:\n                hoge += t[0].upper() + t[1:]\n            c = hoge\n        else:\n            c = c[0].upper() + c[1:]\n    elif t == \"L\":\n        if \"_\" in c:\n            tmp = c.split(\"_\")\n            flag = True if len(tmp) > 1 else False\n            hoge = \"\"\n            for t in tmp:\n                hoge += t[0].upper() + t[1:]\n            if flag:\n                hoge = hoge[0].lower() + hoge[1:]\n            c = hoge\n        else:\n            c = c[0].lower() + c[1:]\n    else:\n        tmp = re.findall('[a-zA-Z][a-z]+', c)\n        hoge = \"\"\n        for t in tmp:\n            hoge += t[0].lower() + t[1:] + \"_\"\n        c = hoge[:-1]\n    print(c)"
  },
  {
    "language": "Python",
    "code": "import re\nwhile True:\n    c, t = input().split()\n    if t == \"X\":\n        break\n    if t == \"U\":\n        if \"_\" in c:\n            tmp = c.split(\"_\")\n            hoge = \"\"\n            for t in tmp:\n                hoge += t[0].upper() + t[1:]\n            c = hoge\n        else:\n            c = c[0].upper() + c[1:]\n    elif t == \"L\":\n        if \"_\" in c:\n            tmp = c.split(\"_\")\n            flag = True if len(tmp) > 1 else False\n            hoge = \"\"\n            for t in tmp:\n                hoge += t[0].upper() + t[1:]\n            if flag:\n                hoge = hoge[0].lower() + hoge[1:]\n            c = hoge\n        else:\n            if re.match('[A-Z]', c):\n                c = c[0].lower() + c[1:]\n            else:\n                c = c[0].upper() + c[1:]\n    else:\n        tmp = re.findall('[a-zA-Z][a-z]+', c)\n        hoge = \"\"\n        for t in tmp:\n            hoge += t[0].lower() + t[1:] + \"_\"\n        c = hoge[:-1]\n    print(c)"
  },
  {
    "language": "Python",
    "code": "import re\n\nwhile True:\n    s, c = input().split()\n    if c == 'X':\n        break\n\n    if '_' in s:\n        t = s.split('_')\n    else:\n        t = re.findall(r'^[a-z]+|[A-Z][a-z]*', s)\n\n    if c == 'D':\n        t = '_'.join(map(str.lower, t))\n    else:\n        t = ''.join(map(str.capitalize, t))\n        if c == 'L':\n            t = t[0].lower() + t[1:]\n\n    print(t)\n\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    a,b=input().split()\n    if b=='X':\n        break\n    a=list(a)\n    if ('_' in a) and (b=='U' or b=='L'):\n        c=0\n        for i in range(len(a)):\n            if i==0 and b=='U':\n                a[i]=a[i].upper()\n            elif a[i]=='_':\n                c+=1\n            elif c==1:\n                a[i]=a[i].upper()\n                c=0\n        a=[i for i in a if i!='_']\n    elif b=='U':\n        a[0]=a[0].upper()\n    elif b=='L':\n        a[0]=a[0].lower()\n    else:\n        s=0\n        for i in range(len(a)):\n            if i==0:\n                a[0]=a[0].lower()\n                s+=1\n            elif a[s].isupper():\n                a[s]=a[s].lower()\n                a.insert(s,'_')\n                s+=2\n            else:\n                s+=1\n    for i in range(len(a)):\n        if i==len(a)-1:\n            print(a[i])\n        else:\n            print(a[i],end='')\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    s=list(map(str,input().split(' ')))\n    if s[1]=='X':\n        break\n    name=list(s[0])\n    der=0\n    n=[]\n    for i in range(1,len(name)):\n        if name[i].isupper()==True:\n            n.append(i)\n        if name[i]=='_':\n            n.append(i-der)\n            der+=1\n    if s[1]=='U':\n        name[0]=name[0].upper()\n        for u in range(len(n)):\n            if name[n[u]]=='_':\n                name.pop(n[u])\n                name[n[u]]=name[n[u]].upper()\n        print(''.join(name))\n    if s[1]=='L':\n        name[0]=name[0].lower()\n        for l in range(len(n)):\n            if name[n[l]]=='_':\n                name.pop(n[l])\n                name[n[l]]=name[n[l]].upper()\n        print(''.join(name))\n    if s[1]=='D':\n        if '_' in name:\n            print(''.join(name))\n        else:\n            name[0]=name[0].lower()\n            der=0\n            for d in range(len(n)):\n                name[n[d]+der]=name[n[d]+der].lower()\n                name.insert(n[d]+der,'_')\n                der+=1\n            print(''.join(name))\n"
  },
  {
    "language": "Python",
    "code": "import re\nwhile True:\n    n,t=input().split()\n    \n    if t=='X':\n        break\n    \n    if '_'in t:\n        ans=s.split('_')\n    else :\n        ans=re.findall(r'[a-z]+|[A-Z][a-z]*',n)\n        \n    if t=='D':\n        ans='_'.join(map(str.lower,ans))\n    else :\n        ans=''.join(map(str.capitalize,ans))\n        if t=='L':\n            ans=ans[0].lower()+ans[1:]\n    \n    print(ans)\n"
  },
  {
    "language": "Python",
    "code": "large = list(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\")\nsmall = list(\"abcdefghijklmnopqrstuvwxyz\")\n\nwhile 1:\n    word, alpha = input().split()\n    if alpha == \"X\":\n        break\n\n    word = list(word)\n\n    ans = \"\"\n    if alpha == \"L\":\n        first = word.pop(0)\n        if first in large:\n            ans += small[large.index(first)]\n        else:\n            ans += first\n\n        while word != []:\n            w = word.pop(0)\n            if w == \"_\":\n                target = word.pop(0)\n                if target in small:\n                    ans += large[small.index(target)]\n                else:\n                    ans += target\n            else:\n                ans += w\n\n    elif alpha == \"U\":\n        first = word.pop(0)\n        if first in small:\n            ans += large[small.index(first)]\n        else:\n            ans += first\n\n        while word != []:\n            w = word.pop(0)\n            if w == \"_\":\n                target = word.pop(0)\n                if target in small:\n                    ans += large[small.index(target)]\n                else:\n                    ans += target\n            else:\n                ans += w\n\n    elif alpha == \"D\":\n        first = word.pop(0)\n        if first in large:\n            ans += small[large.index(first)]\n        else:\n            ans += first\n\n        while word != []:\n            w = word.pop(0)\n            if w in large:\n                ans += \"_\" + small[large.index(w)]\n            else:\n                ans += w\n\n    print(ans)\n\n"
  },
  {
    "language": "Python",
    "code": "while 1:\n\ta,type = raw_input().split()\n\tif type == \"X\": break\n\tans = \"\"\n\tif type == \"U\":\n\t\tfor word in a.split(\"_\"):\n\t\t\tans += word.capitalize()\n\telif type == \"L\":\n\t\tfor word in a.split(\"_\"):\n\t\t\tans += word.capitalize()\n\t\tans = ans[0].lower() + ans[1:]\n\telse:\n\t\tif \"_\" not in a:\n\t\t\twords = []\n\t\t\tsp = 0\n\t\t\tfor i in range(1,len(a)):\n\t\t\t\tif a[i].isupper() :\n\t\t\t\t\twords.append(a[sp:i].lower())\n\t\t\t\t\tsp = i\n\t\t\twords.append(a[sp:].lower())\n\t\t\tans = \"_\".join(words)\n\t\telse:\n\t\t\tans = a\n\tprint ans"
  },
  {
    "language": "Python",
    "code": "while True:\n    Name, Type = input().split()\n    \n    if Type=='X':\n        break\n    \n    if '_' in Name:\n        \n        Name_ = Name\n        _n_ = [0]\n        i = 0\n        while True:\n            Namelist_ = list(Name_)\n            n_ = Name_.find('_')\n            if n_==-1:\n                break\n            _n_.append(n_+_n_[i])\n            i += 1\n            del(Namelist_[0:n_+1])\n            Name_ = ''.join(Namelist_)\n        \n        Name = ''.join(Name.split('_'))\n        Namelist = list(Name)\n        for i in range(len(_n_)):\n            o = str(Namelist[_n_[i]])\n            O = o.upper()\n            Namelist.pop(_n_[i])\n            Namelist.insert(_n_[i],O)\n        Name = ''.join(Namelist)\n        \n    if Type=='U':\n        NameLIST = list(Name)\n        o = str(NameLIST[0])\n        O = o.upper()\n        NameLIST.pop(0)\n        NameLIST.insert(0,O)\n        NAME = ''.join(NameLIST)\n    \n    if Type=='L':\n        NameLIST = list(Name)\n        O = str(NameLIST[0])\n        o = O.lower()\n        NameLIST.pop(0)\n        NameLIST.insert(0,o)\n        NAME = ''.join(NameLIST)\n    \n    if Type=='D':\n        NameLIST = list(Name)\n        _T_ = []\n        t = 0\n        for i in range(len(NameLIST)):\n            T = str(NameLIST[i])\n            if T.isupper()==False:\n                pass\n            if T.isupper()==True:\n                if i==0:\n                    pass\n                if i>0:\n                    _T_.append(i+t)\n                    t += 1\n                Tt = T.lower()\n                NameLIST.pop(i)\n                NameLIST.insert(i,Tt)\n        for i in range(len(_T_)):\n            NameLIST.insert(_T_[i],'_')\n        NAME = ''.join(NameLIST)\n        \n    \n    print(NAME)\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    a, b = input().split()\n    if b == 'X':\n        break\n\n    if '_' in a:\n        ans = a.split('_')\n    else:\n        ans = []\n        j = 0\n        for i in range(1, len(a)):\n            if a[i].isupper():\n                ans.append(a[j:i])\n                j = i\n        ans.append(a[j:])\n        \n    if b == 'D':\n        ans = '_'.join(map(str.lower, ans))\n    else:\n        ans = ''.join(map(str.capitalize, ans))\n        \n        if b == 'L':\n            ans = ans[0].lower() + ans[1:]\n\n    print(ans)\n\n\n"
  },
  {
    "language": "Python",
    "code": "while True:\n  n, t = input().split()\n  if t == \"X\":\n    break\n\n  if \"_\" in n:\n    names = n.split(\"_\")\n  else:\n    n = list(n)\n    for i, c in enumerate(n):\n      if c.isupper():\n        if i:\n          n[i] = \"#\" + c.lower()\n        else:\n          n[i] = c.lower()\n    names = \"\".join(n).split(\"#\")\n\n  if t == \"U\":\n    print(*[name.title() for name in names], sep=\"\")\n  elif t == \"L\":\n    print(*[name.title() if i !=  0 else name for i, name in enumerate(names)], sep=\"\")\n  else:\n    print(*names, sep=\"_\")\n"
  },
  {
    "language": "Python",
    "code": "while 1:\n\ta,type = raw_input().split()\n\tif type == \"X\": break\n\tans = \"\"\n\tif type == \"U\":\n\t\tfor word in a.split(\"_\"):\n\t\t\tans += word[0].upper() + word[1:]\n\telif type == \"L\":\n\t\tfor word in a.split(\"_\"):\n\t\t\tans += word[0].upper() + word[1:]\n\t\tans = ans[0].lower() + ans[1:]\n\telse:\n\t\tif \"_\" not in a:\n\t\t\twords = []\n\t\t\tsp = 0\n\t\t\tfor i in range(1,len(a)):\n\t\t\t\tif a[i].isupper() :\n\t\t\t\t\twords.append(a[sp:i].lower())\n\t\t\t\t\tsp = i\n\t\t\twords.append(a[sp:].lower())\n\t\t\tans = \"_\".join(words)\n\t\telse:\n\t\t\tans = a\n\tprint ans"
  },
  {
    "language": "Python",
    "code": "while True :\n    name, type = map(str, input().split())\n    \n    if type == \"X\" :\n        break\n    \n    else :\n        N = list(name)\n        \n        if \"_\" in N :\n            if type == \"U\" or type == \"L\" :\n                cnt = 0\n                \n                for i in range(len(N)) :\n                    if i == 0 and type == \"U\" :\n                        N[i] = N[i].upper()\n                    elif N[i] == \"_\" :\n                        cnt += 1\n                    elif cnt == 1 :\n                        N[i] = N[i].upper()\n                        cnt = 0\n                \n                N = [i for i in N if i != \"_\"]\n                \n        elif type == \"U\" :\n            N[0] = N[0].upper()\n            \n        elif type == \"L\" :\n            N[0] = N[0].lower()\n            \n        else :\n            s = 0\n            for i in range(len(N)) :\n                if i == 0 :\n                    N[s] = N[s].lower()\n                    s += 1\n                elif N[s].isupper() :\n                    N[s] = N[s].lower()\n                    N.insert(s, \"_\")\n                    s += 2\n                else :\n                    s += 1\n            \n        for i in range(len(N)) :\n            if i == len(N) - 1 :\n                print(N[i])\n            else :\n                print(N[i], end = \"\")\n                \n                \n                \n                \n        \n"
  },
  {
    "language": "Python",
    "code": "while 1:\n\ta,type = raw_input().split()\n\tif type == \"X\": break\n\tans = \"\"\n\tif type == \"U\":\n\t\tfor word in a.split(\"_\"):\n\t\t\tans += word[0].upper() + word[1:]\n\telif type == \"L\":\n\t\tfor word in a.split(\"_\"):\n\t\t\tans += word.capitalize()\n\t\tans = ans[0].lower() + ans[1:]\n\telse:\n\t\tif \"_\" not in a:\n\t\t\twords = []\n\t\t\tsp = 0\n\t\t\tfor i in range(1,len(a)):\n\t\t\t\tif a[i].isupper() :\n\t\t\t\t\twords.append(a[sp:i].lower())\n\t\t\t\t\tsp = i\n\t\t\twords.append(a[sp:].lower())\n\t\t\tans = \"_\".join(words)\n\t\telse:\n\t\t\tans = a\n\tprint ans"
  },
  {
    "language": "Python",
    "code": "def Upper(s) :\n    New = []\n    i = 0\n    while True :\n        if i == 0 :\n            New.append(s[i].upper())\n        elif s[i] == \"_\" :\n            i += 1\n            New.append(s[i].upper())\n        elif 65 <= ord(s[i]) <= 90 :\n            New.append(s[i].upper())\n        else :\n            New.append(s[i].lower())\n        i += 1\n        if i >= len(s) :\n            break\n    return New\n\ndef Lower(s) :\n    New = []\n    i = 0\n    while True :\n        if s[i] == \"_\" :\n            i += 1\n            New.append(s[i].upper())\n        elif 65 <= ord(s[i]) <= 90 and i != 0:\n            New.append(s[i].upper())\n        else :\n            New.append(s[i].lower())\n        i += 1\n        if i >= len(s) :\n            break\n    return New\n\ndef Under_Score(s) :\n    New = []\n    i = 0\n    while True :\n        if 65 <= ord(s[i]) <= 90 and i != 0:\n            New.append(\"_\")\n            New.append(s[i].lower())\n        else :\n            New.append(s[i].lower())\n        i += 1\n        if i >= len(s) :\n            break\n    return New\n\nwhile True :\n    l, x = map(str, input().split())\n    if x == \"X\" :\n        break\n    \n    elif x == \"U\" :\n        print(*Upper(l), sep=\"\")\n    elif x == \"L\" :\n        print(*Lower(l), sep=\"\")\n    elif x == \"D\" :\n        print(*Under_Score(l), sep=\"\")\n        \n            \n"
  },
  {
    "language": "Python",
    "code": "import re\nwhile True:\n    n,t=map(str,input().split())\n    if t == 'X':\n        break\n    if '_' in n :\n        if t == 'D':\n            print(n)\n        else:\n            m = n.title()\n            l= re.sub('_', '',m)\n            \n            if t == 'U':\n                print(l)\n            elif t == 'L':\n                p = l[0].lower() + l[1:]\n                print(p)\n    else:\n        q = n[0].upper() + n[1:]\n        r = re.findall('[A-Z][a-z]*',q)\n        \n        if t == 'D':\n            s = '_'.join(r)\n            print(s.lower())\n        elif t == 'U':\n            print(\"\".join(r))\n        elif t == 'L':\n            u = \"\".join(r)\n            v = u[0].lower() + u[1:]\n            print(v)\n"
  },
  {
    "language": "Python",
    "code": "while True:\n    a, b = map(str,input().split())\n    if b=='X':\n        break\n    if '_' in a:\n        c = a.split('_')\n    else:\n        c=[]\n        k = 0\n        for i in range(1,len(a)):\n            if a[i].isupper():\n                c.append(a[k:i])\n                k = i\n        c.append(a[k:])\n    if b=='D':\n        c = '_'.join(map(str.lower,c))\n    else:\n        c = ''.join(map(str.capitalize,c))\n        if b =='L':\n            c = c[0].lower() + c[1:]\n    print(c)\n"
  }
]