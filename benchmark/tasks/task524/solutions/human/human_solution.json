[
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(n);++i)\n#define ALL(A) A.begin(), A.end()\n#define INF 1<<28\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef pair<int, int> P;\ntypedef pair<int,vector<int> > IV;\n\nclass ARRAY{\npublic:\n\tint rot;\n\tvector<int> v;\n\tARRAY(){}\n\tARRAY(int _rot, vector<int> _v):rot(_rot),v(_v){}\n\tbool operator<(const ARRAY& right) const{\n\t\treturn rot < right.rot;\n\t}\n};\n\n//bool operator<(const ARRAY& left, const ARRAY& right){ return left.rot < right.rot; }\n\nbool operator==(vector<int> &a, vector<int> &b){ rep (i, a.size()){ if (a[i] != b[i]) return false;} return true;};\n\nset<vector<int> > same;\n\nvoid disp_v(ARRAY curr){\n\tcerr << \"rot: \" << setw(2) << curr.rot << ' ';\n\trep (i, curr.v.size()){\n\t\tcerr << curr.v[i] << ' ';\n\t} // end rep\n\tcerr << endl;\n}\n\nint main()\n{\n\tsame.clear();\n\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\tint n, m; cin >> n >> m;\n\tvector<int> t(n, 0);\n\tARRAY init(0,t);\n\n\trep (i, n) cin >> t[i];\n\t\n\tint res = INF;\n\tpriority_queue<ARRAY, vector<ARRAY> > que;\n\n\tque.push(init);\n\tsame.insert(init.v);\t\n\t\n\twhile(!que.empty()){\n\t\tARRAY curr = que.top(); que.pop();\n//\t\tdisp_v(curr);\n\t\tif (curr.v == t){\n\t\t\tres = curr.rot;\n\t\t\tbreak;\n\t\t} // end if\n\n\t\tint rot = curr.rot;\n\t\tvector<int> nextv = curr.v;\n\n\t\tfor (int i = 0; i < n; ++i){\n\t\t\tfor (int j = i + 1; j < n; ++j){\n\t\t\t\tint prei = curr.v[i];\n\t\t\t\tint prej = curr.v[j];\n\t\t\t\tnextv[i] = (curr.v[i] + 1) % m;\n\t\t\t\tnextv[j] = (curr.v[j] + 1) % m;\n\t\t\t\tif (!same.count(nextv)){\n\t\t\t\t\tsame.insert(nextv);\n\t\t\t\t\tque.push(ARRAY(rot + 1, nextv));\n\t\t\t\t} // end if\n\t\t\t\tnextv[i] = (m + curr.v[i] - 1) % m;\n\t\t\t\tnextv[j] = (m + curr.v[j] - 1) % m;\n\t\t\t\tif (!same.count(nextv)){\n\t\t\t\t\tsame.insert(nextv);\n\t\t\t\t\tque.push(ARRAY(rot + 1, nextv));\n\t\t\t\t} // end if\n\t\t\t\tnextv[i] = prei;\n\t\t\t\tnextv[j] = prej;\n\t\t\t} // end for\n\t\t} // end for\n\t} // end while\n\n\tcout << (res == INF ? -1 : res) << endl;\n\n\treturn 0;\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n\n            if (false) {\n\n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n\n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n\n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n//        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": " \n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n\n    boolean main() throws IOException {\n//        Scanner sc = new Scanner(systemin);\n\n//        result.printf(\"%d\\n\", ret);\n//        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n\n    boolean main() throws IOException {\n\n        int[] ir = readIntArray();\n        int N = ir[0];\n        int M = ir[1];\n        \n        ir = readIntArray();\n        int[] T = ir;\n\n        int sum = 0;\n        for(int i = 0; i < N; i++) {\n            sum += Math.min(T[i], M - T[i]);\n        }\n        sum /= 2; \n        \n        result.printf(\"%d\\n\", sum);\n\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        result = System.out;\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\t// 標準入力より1行分の区切り文字区切りでの整数値を読む\n\t// EOFの場合はnullを返す\n\tprivate int[] readIntArray() throws IOException {\n\n\t\tString s = null;\n\t\tfor(;;) {\n\t\t\ts = systemin.readLine();\n\t\t\tif (s == null)\n\t\t\t\treturn null;\n\t\t\ts = s.trim();\n\t\t\tif (s.length() != 0) // 突然空行を読むことがある。読み飛ばすとうまくいくらしい\n\t\t\t\tbreak;\n\t\t}\n\n\t\tString[] sp = s.split(\"[ ,]\"); // 区切り文字はスペースかカンマ\n\t\tint[] a = new int[sp.length];\n\t\tfor(int i = 0; i < sp.length; i++) {\n\t\t\ta[i] = Integer.parseInt(sp[i]);\n\t\t}\n\t\treturn a;\n\t}\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    int sov() {return 0; }\n    int solv() {return 0; }\n    int min() {return 0; }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n\n            if (false) {\n\n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n\n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n\n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    int sov() {return 0; }\n    int solv() {return 0; }\n    int min() {return 0; }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n//            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n//            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n//            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n\n        result.printf(\"%d\\n\", ret);\n//        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0) /*&& M % 2 == 1*/) {\n            sum1 += 2; // +1手\n        }\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 != 0) {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else {\n                log.printf(\"1個反転\\n\");\n                // 1個反転\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                min = minmin;\n                \n            }\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min(T) / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    // 未使用\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 != 0) {\n            if (nidx == 0) {\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n            }\n            else if (nidx == N) {\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n            }\n            else {\n                // 1個反転\n                T[nidx - 1] -= M;\n            }\n            min = min(T);\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min(T) / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n\n            if (false) {\n\n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n\n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n\n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n//        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    int sov() {return 0; }\n    int solv() {return 0; }\n    int min() {return 0; }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    // 未使用\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 != 0) {\n            if (nidx == 0) {\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n            }\n            else if (nidx == M) {\n                // 3個反転\n                T[M - 1] -= M;\n                T[M - 2] -= M;\n                T[M - 3] -= M;\n            }\n            else {\n                // 1個反転\n                T[nidx - 1] -= M;\n            }\n            min = min(T);\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min(T) / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    int sov() {return 0; }\n    int solv() {return 0; }\n    int min() {return 0; }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n//            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n//            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n//            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n\n        result.printf(\"%d\\n\", ret);\n        //sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n\n    boolean main() throws IOException {\n\n        int[] ir = readIntArray();\n        int N = ir[0];\n        int M = ir[1];\n        \n        ir = readIntArray();\n        int[] T = ir;\n\n        int sum = 0;\n        for(int i = 0; i < N; i++) {\n            sum += Math.min(T[i], M - T[i]);\n        }\n        if (sum % 2 != 0)\n            sum = -1;\n        else\n            sum /= 2; \n        \n        result.printf(\"%d\\n\", sum);\n\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        result = System.out;\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\t// 標準入力より1行分の区切り文字区切りでの整数値を読む\n\t// EOFの場合はnullを返す\n\tprivate int[] readIntArray() throws IOException {\n\n\t\tString s = null;\n\t\tfor(;;) {\n\t\t\ts = systemin.readLine();\n\t\t\tif (s == null)\n\t\t\t\treturn null;\n\t\t\ts = s.trim();\n\t\t\tif (s.length() != 0) // 突然空行を読むことがある。読み飛ばすとうまくいくらしい\n\t\t\t\tbreak;\n\t\t}\n\n\t\tString[] sp = s.split(\"[ ,]\"); // 区切り文字はスペースかカンマ\n\t\tint[] a = new int[sp.length];\n\t\tfor(int i = 0; i < sp.length; i++) {\n\t\t\ta[i] = Integer.parseInt(sp[i]);\n\t\t}\n\t\treturn a;\n\t}\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        int f = 0;\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0)) {\n            sum1 += 2; // +1手\n            f = 1;\n        }\n        \n        if (max1 * 2 - sum1 > 0) {\n            log.printf(\"3bai1 %d\\n\", (max1 * 2 - sum1) * 2);\n            sum1 += (max1 * 2 - sum1-f) * 2;\n            f = 0;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            log.printf(\"3bai2 %d\\n\", (max2 * 2 - sum2) * 2);\n            sum2 += (max2 * 2 - sum2-f) * 2;\n            f = 0;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 == 0) {\n            if (nidx > 0) {\n                int old = T[nidx - 1];\n                T[nidx - 1] -= M;\n                int m = min(T);\n                T[nidx - 1] = old;\n                if (m < min) \n                    min = m;\n            }\n            if (nidx < N) {\n                int old = T[nidx];\n                T[nidx] += M;\n                int m = min(T);\n                T[nidx] = old;\n                if (m < min) \n                    min = m;\n            }\n        }\n        else {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else {\n                // 1個反転\n                log.printf(\"1個反転\\n\");\n                if (false) {\n                if (nidx > 0) {\n                    int old = T[nidx - 1];\n                    T[nidx - 1] -= M;\n                    int m = min(T);\n                    T[nidx - 1] = old;\n                    if (m < min) \n                        min = m;\n                }\n                if (nidx < N) {\n                    int old = T[nidx];\n                    T[nidx] += M;\n                    int m = min(T);\n                    T[nidx] = old;\n                    if (m < min) \n                        min = m;\n                }\n                }else {\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                min = minmin;\n                }\n            }\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\" min = %.1f\\n\",  min / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 手数の2倍を返す\n    int tesu(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        int f = 0;\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0)) {\n            sum1 += 2; // +1手\n            f = 1;\n        }\n        \n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1-f) * 2;\n            f = 0;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2-f) * 2;\n            f = 0;\n        }\n        return sum1 + sum2;\n    }\n\n    int sov() {\n        int min = tesu(T);\n        if (min % 2 == 0) {\n            if (nidx > 0) {\n                int old = T[nidx - 1];\n                T[nidx - 1] -= M;\n                int m = tesu(T);\n                T[nidx - 1] = old;\n                if (m < min) \n                    min = m;\n            }\n            if (nidx < N) {\n                int old = T[nidx];\n                T[nidx] += M;\n                int m = tesu(T);\n                T[nidx] = old;\n                if (m < min) \n                    min = m;\n            }\n        }\n        else {\n            if (nidx == 0) {\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = tesu(T);\n            }\n            else if (nidx == N) {\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = tesu(T);\n            }\n            else {\n                min = 99999999;\n                if (nidx > 0) {\n                    int old = T[nidx - 1];\n                    T[nidx - 1] -= M;\n                    int m = tesu(T);\n                    T[nidx - 1] = old;\n                    if (m < min) \n                        min = m;\n                }\n                if (nidx < N) {\n                    int old = T[nidx];\n                    T[nidx] += M;\n                    int m = tesu(T);\n                    T[nidx] = old;\n                    if (m < min) \n                        min = m;\n                }\n            }\n        }\n        return min / 2;\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        N = sc.nextInt();\n        M = sc.nextInt();\n        log.printf(\"%d %d\\n\",  N, M);\n\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1;\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            int min = tesu(T);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        if (sum1 % 2 != 0 || sum2 % 2 != 0) {\n            sum1 += 2;\n        }\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 != 0) {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n            }\n            else {\n                log.printf(\"1個反転\\n\");\n                // 1個反転\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                \n            }\n            min = min(T);\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min(T) / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0) && M % 2 == 1) {\n            sum1 += 2; // +1手\n        }\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 != 0) {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else {\n                log.printf(\"1個反転\\n\");\n                // 1個反転\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                min = minmin;\n                \n            }\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min(T) / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n    \n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n        \n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n    \n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n                \n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n        \n        return min / 2;\n        \n    }\n    \n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n        \n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n            \n            if (false) {\n    \n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n            \n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n        \n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n//        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        int f = 0;\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0)) {\n            sum1 += 2; // +1手\n            f = 1;\n        }\n        \n        if (max1 * 2 - sum1 > 0) {\n            log.printf(\"3bai1 %d\\n\", (max1 * 2 - sum1) * 2);\n            sum1 += (max1 * 2 - sum1-f) * 2;\n            f = 0;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            log.printf(\"3bai2 %d\\n\", (max2 * 2 - sum2) * 2);\n            sum2 += (max2 * 2 - sum2-f) * 2;\n            f = 0;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 == 0) {\n            if (nidx > 0) {\n                int old = T[nidx - 1];\n                T[nidx - 1] -= M;\n                int m = min(T);\n                T[nidx - 1] = old;\n                if (m < min) \n                    min = m;\n            }\n            if (nidx < N) {\n                int old = T[nidx];\n                T[nidx] += M;\n                int m = min(T);\n                T[nidx] = old;\n                if (m < min) \n                    min = m;\n            }\n        }\n        else {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else {\n                // 1個反転\n                log.printf(\"1個反転\\n\");\n                min = 99999999;\n                if (true) {\n                if (nidx > 0) {\n                    int old = T[nidx - 1];\n                    T[nidx - 1] -= M;\n                    int m = min(T);\n                    T[nidx - 1] = old;\n                    if (m < min) \n                        min = m;\n                }\n                if (nidx < N) {\n                    int old = T[nidx];\n                    T[nidx] += M;\n                    int m = min(T);\n                    T[nidx] = old;\n                    if (m < min) \n                        min = m;\n                }\n                }else {\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                min = minmin;\n                }\n            }\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\" min = %.1f\\n\",  min / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n\n            if (false) {\n\n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n\n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n\n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    // 未使用\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 != 0) {\n            if (nidx == 0) {\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n            }\n            else if (nidx == N) {\n                // 3個反転\n                T[M - 1] -= M;\n                T[M - 2] -= M;\n                T[M - 3] -= M;\n            }\n            else {\n                // 1個反転\n                T[nidx - 1] -= M;\n            }\n            min = min(T);\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min(T) / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    int sov() {return 0; }\n    int solv() {return 0; }\n    int min() {return 0; }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n//            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n//            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n//            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0)) {\n            sum1 += 2; // +1手\n        }\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 == 0) {\n            if (nidx > 0) {\n                int old = T[nidx - 1];\n                T[nidx - 1] -= M;\n                int m = min(T);\n                T[nidx - 1] = old;\n                if (m < min) \n                    min = m;\n            }\n            if (nidx < N) {\n                int old = T[nidx];\n                T[nidx] += M;\n                int m = min(T);\n                T[nidx] = old;\n                if (m < min) \n                    min = m;\n            }\n        }\n        else {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else {\n                log.printf(\"1個反転\\n\");\n                // 1個反転\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                min = minmin;\n                \n            }\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\" min = %.1f\\n\",  min / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0) && M % 2 == 1) {\n            sum1 += 2; // +1手\n        }\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 != 0) {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n            }\n            else {\n                log.printf(\"1個反転\\n\");\n                // 1個反転\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                \n            }\n            min = min(T);\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min(T) / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純回数(2倍)を返す\n    int min(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        int f = 0;\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0)) {\n            sum1 += 2; // +1手\n            f = 1;\n        }\n        \n        if (max1 * 2 - sum1 > 0) {\n            log.printf(\"3bai1 %d\\n\", (max1 * 2 - sum1) * 2);\n            sum1 += (max1 * 2 - sum1-f) * 2;\n            f = 0;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            log.printf(\"3bai2 %d\\n\", (max2 * 2 - sum2) * 2);\n            sum2 += (max2 * 2 - sum2-f) * 2;\n            f = 0;\n        }\n        log.printf(\"sum1,sum2 = %d,%d\\n\",  sum1, sum2);\n        return sum1 + sum2;\n    }\n\n\n    int sov() {\n        int min = min(T);\n        if (min % 2 == 0) {\n            if (nidx > 0) {\n                int old = T[nidx - 1];\n                T[nidx - 1] -= M;\n                int m = min(T);\n                T[nidx - 1] = old;\n                if (m < min) \n                    min = m;\n            }\n            if (nidx < N) {\n                int old = T[nidx];\n                T[nidx] += M;\n                int m = min(T);\n                T[nidx] = old;\n                if (m < min) \n                    min = m;\n            }\n        }\n        else {\n            if (nidx == 0) {\n                log.printf(\"3個反転1\\n\");\n                // 3個反転\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else if (nidx == N) {\n                log.printf(\"3個反転2\\n\");\n                // 3個反転\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = min(T);\n                log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n            }\n            else {\n                // 1個反転\n                log.printf(\"1個反転\\n\");\n                if (nidx > 0) {\n                    int old = T[nidx - 1];\n                    T[nidx - 1] -= M;\n                    int m = min(T);\n                    T[nidx - 1] = old;\n                    if (m < min) \n                        min = m;\n                }\n                if (nidx < N) {\n                    int old = T[nidx];\n                    T[nidx] += M;\n                    int m = min(T);\n                    T[nidx] = old;\n                    if (m < min) \n                        min = m;\n                }\n                if (false) {\n                //T[nidx - 1] -= M;\n                //T[nidx] += M;\n                int minmin = 99999999;\n                for(int i = 0; i < N; i++) {\n                    int old = T[i];\n                    if (T[i] >= 0)\n                        T[i] -= M;\n                    else \n                        T[i] += M;\n                    min = min(T);\n                    if (min < minmin) {\n                        minmin = min;\n                    }\n                    //log.printf(\"all %s min=%d\\n\", Arrays.toString(T), min);\n                    log.printf(\"all min=%d old=%d\\n\", min, old);\n                    T[i] = old;\n                }\n                log.printf(\"minmin=%d\\n\", minmin/2);\n                min = minmin;\n                }\n            }\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n//        else if (N == 3 && T[0] == 1 && T[1] == 1 && T[2] == 1) {\n//            ret = 3;\n//        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min(T);\n            log.printf(\" min = %.1f\\n\",  min / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n\n            if (false) {\n\n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n\n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n\n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n//        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main4 instance = new Main4();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    int sov() {return 0; }\n    int solv() {return 0; }\n    int min() {return 0; }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        result.printf(\"%d\\n\", 5);\n        //sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n    \n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n        \n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n    \n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n                \n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n        \n        return min / 2;\n        \n    }\n    \n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n        \n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n            \n            if (false) {\n    \n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n            \n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n        \n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tint N = Integer.MAX_VALUE;\n\t\t//int N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = instance.main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\n\n        instance.systemin.close();\n\t}\n\n\n}\n\n\n"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 手数の2倍を返す\n    int tesu(int[] T) {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        int f = 0;\n        if ((sum1 % 2 != 0 || sum2 % 2 != 0)) {\n            sum1 += 2; // +1手\n            f = 1;\n        }\n        \n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1-f) * 2;\n            f = 0;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2-f) * 2;\n            f = 0;\n        }\n        return sum1 + sum2;\n    }\n\n    int sov() {\n        int min = tesu(T);\n        if (min % 2 == 0) {\n            if (nidx > 0) {\n                int old = T[nidx - 1];\n                T[nidx - 1] -= M;\n                int m = tesu(T);\n                T[nidx - 1] = old;\n                if (m < min) \n                    min = m;\n            }\n            if (nidx < N) {\n                int old = T[nidx];\n                T[nidx] += M;\n                int m = tesu(T);\n                T[nidx] = old;\n                if (m < min) \n                    min = m;\n            }\n        }\n        else {\n            if (nidx == 0) {\n                T[0] += M;\n                T[1] += M;\n                T[2] += M;\n                min = tesu(T);\n            }\n            else if (nidx == N) {\n                T[N - 1] -= M;\n                T[N - 2] -= M;\n                T[N - 3] -= M;\n                min = tesu(T);\n            }\n            else {\n                min = 99999999;\n                if (nidx > 0) {\n                    int old = T[nidx - 1];\n                    T[nidx - 1] -= M;\n                    int m = tesu(T);\n                    T[nidx - 1] = old;\n                    if (m < min) \n                        min = m;\n                }\n                if (nidx < N) {\n                    int old = T[nidx];\n                    T[nidx] += M;\n                    int m = tesu(T);\n                    T[nidx] = old;\n                    if (m < min) \n                        min = m;\n                }\n            }\n        }\n\n        return min / 2;\n    }\n\n    boolean main() throws IOException {\n\n        Scanner sc = new Scanner(systemin);\n\n        N = sc.nextInt();\n        M = sc.nextInt();\n        log.printf(\"%d %d\\n\",  N, M);\n\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1;\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = N;\n            int min = tesu(T);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n        result.printf(\"%d\\n\", ret);\n        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main instance = new Main();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.IO;\nusing System.Text;\nusing System.Globalization;\nusing System.Diagnostics;\n\n\n\nclass Myon\n{\n    public Myon() { }\n    public static int Main()\n    {\n        new Myon().calc();\n        return 0;\n    }\n\n    Scanner cin;\n    \n\n    int N, M;\n    int[] T;\n    void calc()\n    {\n        cin = new Scanner();\n        N = cin.nextInt();\n        M = cin.nextInt();\n        T = cin.ArrayInt(N);\n        int sum = T.Sum();\n\n        if (N == 2)\n        {\n            if (T[0] != T[1]) Console.WriteLine(-1);\n            else Console.WriteLine(Math.Min(T[0], M - T[0]));\n            return;\n        }\n        if (M % 2 == 0 && sum % 2 == 1)\n        {\n            Console.WriteLine(\"-1\");\n            return;\n        }\n        Array.Sort(T);\n\n        long ans = long.MaxValue / 10;\n\n        //?¢???????\n        for (int i = 0; i <= N; i++)\n        {\n            int sumL = 0;\n            List<int> l = new List<int>();\n            for (int j = 0; j < i; j++)\n            {\n                l.Add(T[j]);\n                sumL += T[j];\n            }\n            l.Sort();\n            int sumR = 0;\n\n            List<int> r = new List<int>();\n            for (int j = i; j < N; j++)\n            {\n                r.Add(M - T[j]);\n                sumR += T[j];\n            }\n            r.Sort();\n\n            ans = Math.Min(ans, calc2(l, r));\n\n        }\n\n        Console.WriteLine(ans);\n    }\n\n\n    long calc2(List<int> a, List<int> b)\n    {\n        long ans = long.MaxValue / 10;\n        ans = Math.Min(ans, calc3(a) + calc3(b));\n\n        /*\n        Console.WriteLine(a.Count + \" \" + b.Count + \" \" + ans);\n\n        for (int i = 0; i < a.Count; i++)\n        {\n            Console.Write(a[i] + \" \");\n        }\n        Console.WriteLine();\n        for (int i = 0; i < b.Count; i++)\n        {\n            Console.Write(b[i] + \" \");\n        }\n        Console.WriteLine();\n        */\n\n        int amin = 0;\n        int amax = a.Count - 1;\n        /*\n        for (int i = 0; i < a.Count; i++)\n        {\n            if(a[i] != 0)\n            {\n                amin = i;break;\n            }\n        }\n        */\n\n        int bmin = 0;\n        int bmax = b.Count - 1;\n\n        /*\n        for (int i = 0; i < b.Count; i++)\n        {\n            if(b[i] != 0)\n            {\n                bmin = i;\n                break;\n            }\n        }\n        */\n\n        if (a.Count != 0 && b.Count != 0)\n        {\n            a[amin] = (a[amin] + 1) % M;\n            b[bmax] = (b[bmax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            a[amin] = (a[amin] + (M - 1)) % M;\n            b[bmax] = (b[bmax] + 1) % M;\n\n            b[bmin] = (b[bmin] + 1) % M;\n            a[amax] = (a[amax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            b[bmin] = (b[bmin] + (M - 1)) % M;\n            a[amax] = (a[amax] + 1) % M;\n        }\n\n        return ans;\n    }\n\n    long calc3(List<int> a)\n    {\n        if (a.Count == 0) return 0;\n        int sum = 0;\n        int max = 0;\n        int min = 99999999;\n        foreach (var num in a)\n        {\n            sum += num;\n            max = Math.Max(num, max);\n            min = Math.Min(num, min);\n        }\n\n        if(sum % 2 == 1)\n        {\n            if (M % 2 == 0) return long.MaxValue / 10;\n            else\n            {\n                sum += M;\n                max = min + M;\n            }\n        }\n\n        long nokori = Math.Max(0, max - (sum - max));\n        long ans = (sum - nokori) / 2;\n        ans += nokori / 2 * 3;\n\n        //Console.WriteLine(ans);\n\n        return ans;\n    }\n    \n}\n\n\nclass Scanner\n{\n    string[] s;\n    int i;\n\n    char[] cs = new char[] { ' ' };\n\n    public Scanner()\n    {\n        s = new string[0];\n        i = 0;\n    }\n\n    public string next()\n    {\n        if (i < s.Length) return s[i++];\n        string st = Console.ReadLine();\n        while (st == \"\") st = Console.ReadLine();\n        s = st.Split(cs, StringSplitOptions.RemoveEmptyEntries);\n        if (s.Length == 0) return next();\n        i = 0;\n        return s[i++];\n    }\n\n    public int nextInt()\n    {\n        return int.Parse(next());\n    }\n    public int[] ArrayInt(int N, int add = 0)\n    {\n        int[] Array = new int[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextInt() + add;\n        }\n        return Array;\n    }\n\n    public long nextLong()\n    {\n        return long.Parse(next());\n    }\n\n    public long[] ArrayLong(int N, long add = 0)\n    {\n        long[] Array = new long[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextLong() + add;\n        }\n        return Array;\n    }\n\n    public double nextDouble()\n    {\n        return double.Parse(next());\n    }\n\n\n    public double[] ArrayDouble(int N, double add = 0)\n    {\n        double[] Array = new double[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextDouble() + add;\n        }\n        return Array;\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.IO;\nusing System.Text;\nusing System.Globalization;\nusing System.Diagnostics;\n\n\n\nclass Myon\n{\n    public Myon() { }\n    public static int Main()\n    {\n        new Myon().calc();\n        return 0;\n    }\n\n    Scanner cin;\n    \n\n    int N, M;\n    int[] T;\n    void calc()\n    {\n        cin = new Scanner();\n        N = cin.nextInt();\n        M = cin.nextInt();\n        T = cin.ArrayInt(N);\n        int sum = T.Sum();\n\n        if (N == 2)\n        {\n            if (T[0] != T[1]) Console.WriteLine(-1);\n            else Console.WriteLine(Math.Min(T[0], M - T[0]));\n            return;\n        }\n        if (M % 2 == 0 && sum % 2 == 1)\n        {\n            Console.WriteLine(\"-1\");\n            return;\n        }\n        Array.Sort(T);\n\n        long ans = long.MaxValue / 10;\n\n        //?¢???????\n        for (int i = 0; i <= N; i++)\n        {\n            int sumL = 0;\n            List<int> l = new List<int>();\n            for (int j = 0; j < i; j++)\n            {\n                l.Add(T[j]);\n                sumL += T[j];\n            }\n            l.Sort();\n            int sumR = 0;\n\n            List<int> r = new List<int>();\n            for (int j = i; j < N; j++)\n            {\n                r.Add(M - T[j]);\n                sumR += T[j];\n            }\n            r.Sort();\n\n            ans = Math.Min(ans, calc2(l, r));\n\n        }\n        if (ans >= long.MaxValue / 20) Console.WriteLine(-1);\n        else Console.WriteLine(ans);\n    }\n\n\n    long calc2(List<int> a, List<int> b)\n    {\n        long ans = long.MaxValue / 10;\n        ans = Math.Min(ans, calc3(a) + calc3(b));\n\n        /*\n        Console.WriteLine(a.Count + \" \" + b.Count + \" \" + ans);\n\n        for (int i = 0; i < a.Count; i++)\n        {\n            Console.Write(a[i] + \" \");\n        }\n        Console.WriteLine();\n        for (int i = 0; i < b.Count; i++)\n        {\n            Console.Write(b[i] + \" \");\n        }\n        Console.WriteLine();\n        */\n\n        int amin = 0;\n        int amax = a.Count - 1;\n        /*\n        for (int i = 0; i < a.Count; i++)\n        {\n            if(a[i] != 0)\n            {\n                amin = i;break;\n            }\n        }\n        */\n\n        int bmin = 0;\n        int bmax = b.Count - 1;\n\n        /*\n        for (int i = 0; i < b.Count; i++)\n        {\n            if(b[i] != 0)\n            {\n                bmin = i;\n                break;\n            }\n        }\n        */\n\n        if (a.Count != 0 && b.Count != 0)\n        {\n            a[amin] = (a[amin] + 1) % M;\n            b[bmax] = (b[bmax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            a[amin] = (a[amin] + (M - 1)) % M;\n            b[bmax] = (b[bmax] + 1) % M;\n\n            b[bmin] = (b[bmin] + 1) % M;\n            a[amax] = (a[amax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            b[bmin] = (b[bmin] + (M - 1)) % M;\n            a[amax] = (a[amax] + 1) % M;\n        }\n\n        return ans;\n    }\n\n    long calc3(List<int> a)\n    {\n        if (a.Count == 0) return 0;\n        int sum = 0;\n        int max = 0;\n        int min = 99999999;\n        foreach (var num in a)\n        {\n            sum += num;\n            max = Math.Max(num, max);\n            min = Math.Min(num, min);\n        }\n\n        if(sum % 2 == 1)\n        {\n            if (M % 2 == 0) return long.MaxValue / 10;\n            else\n            {\n                sum += M;\n                max = min + M;\n            }\n        }\n\n        long nokori = Math.Max(0, max - (sum - max));\n        long ans = (sum - nokori) / 2;\n        ans += nokori / 2 * 3;\n\n        //Console.WriteLine(ans);\n\n        return ans;\n    }\n    \n}\n\n\nclass Scanner\n{\n    string[] s;\n    int i;\n\n    char[] cs = new char[] { ' ' };\n\n    public Scanner()\n    {\n        s = new string[0];\n        i = 0;\n    }\n\n    public string next()\n    {\n        if (i < s.Length) return s[i++];\n        string st = Console.ReadLine();\n        while (st == \"\") st = Console.ReadLine();\n        s = st.Split(cs, StringSplitOptions.RemoveEmptyEntries);\n        if (s.Length == 0) return next();\n        i = 0;\n        return s[i++];\n    }\n\n    public int nextInt()\n    {\n        return int.Parse(next());\n    }\n    public int[] ArrayInt(int N, int add = 0)\n    {\n        int[] Array = new int[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextInt() + add;\n        }\n        return Array;\n    }\n\n    public long nextLong()\n    {\n        return long.Parse(next());\n    }\n\n    public long[] ArrayLong(int N, long add = 0)\n    {\n        long[] Array = new long[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextLong() + add;\n        }\n        return Array;\n    }\n\n    public double nextDouble()\n    {\n        return double.Parse(next());\n    }\n\n\n    public double[] ArrayDouble(int N, double add = 0)\n    {\n        double[] Array = new double[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextDouble() + add;\n        }\n        return Array;\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.IO;\nusing System.Text;\nusing System.Globalization;\nusing System.Diagnostics;\n\n\n\nclass Myon\n{\n    public Myon() { }\n    public static int Main()\n    {\n        new Myon().calc();\n        return 0;\n    }\n\n    Scanner cin;\n    \n\n    int N, M;\n    int[] T;\n    void calc()\n    {\n        cin = new Scanner();\n        N = cin.nextInt();\n        M = cin.nextInt();\n        T = cin.ArrayInt(N);\n        int sum = T.Sum();\n\n        if (N == 2)\n        {\n            if (T[0] != T[1]) Console.WriteLine(-1);\n            else Console.WriteLine(Math.Min(T[0], M - T[0]));\n            return;\n        }\n        if (M % 2 == 0 && sum % 2 == 1)\n        {\n            Console.WriteLine(\"-1\");\n            return;\n        }\n        Array.Sort(T);\n\n        long ans = long.MaxValue / 10;\n\n        //?¢???????\n        for (int i = 0; i <= N; i++)\n        {\n            int sumL = 0;\n            List<int> l = new List<int>();\n            for (int j = 0; j < i; j++)\n            {\n                l.Add(T[j]);\n                sumL += T[j];\n            }\n\n            int sumR = 0;\n\n            List<int> r = new List<int>();\n            for (int j = i; j < N; j++)\n            {\n                r.Add(M - T[j]);\n                sumR += T[j];\n            }\n            r.Sort();\n\n            ans = Math.Min(ans, calc2(l, r));\n\n        }\n\n        Console.WriteLine(ans);\n    }\n\n\n    long calc2(List<int> a, List<int> b)\n    {\n        long ans = long.MaxValue / 10;\n        ans = Math.Min(ans, calc3(a) + calc3(b));\n\n        /*\n        Console.WriteLine(a.Count + \" \" + b.Count + \" \" + ans);\n\n        for (int i = 0; i < a.Count; i++)\n        {\n            Console.Write(a[i] + \" \");\n        }\n        Console.WriteLine();\n        for (int i = 0; i < b.Count; i++)\n        {\n            Console.Write(b[i] + \" \");\n        }\n        Console.WriteLine();\n        */\n\n        int amin = 0;\n        int amax = a.Count - 1;\n        for (int i = 0; i < a.Count; i++)\n        {\n            if(a[i] != 0)\n            {\n                amin = i;break;\n            }\n        }\n\n        int bmin = 0;\n        int bmax = b.Count - 1;\n\n        for (int i = 0; i < b.Count; i++)\n        {\n            if(b[i] != 0)\n            {\n                bmin = i;\n                break;\n            }\n        }\n\n        if (a.Count != 0 && b.Count != 0)\n        {\n            a[amin] = (a[amin] + 1) % M;\n            b[bmax] = (b[bmax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            a[amin] = (a[amin] + (M - 1)) % M;\n            b[bmax] = (b[bmax] + 1) % M;\n\n            b[bmin] = (b[bmin] + 1) % M;\n            a[amax] = (a[amax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            b[bmin] = (b[bmin] + (M - 1)) % M;\n            a[amax] = (a[amax] + 1) % M;\n        }\n\n        return ans;\n    }\n\n    long calc3(List<int> a)\n    {\n        if (a.Count == 0) return 0;\n        int sum = 0;\n        int max = 0;\n        int min = 99999999;\n        foreach (var num in a)\n        {\n            sum += num;\n            max = Math.Max(num, max);\n            min = Math.Min(num, min);\n        }\n\n        if(sum % 2 == 1)\n        {\n            if (M % 2 == 0) return long.MaxValue / 10;\n            else\n            {\n                sum += M;\n                max = min + M;\n            }\n        }\n\n        long nokori = Math.Max(0, max - (sum - max));\n        long ans = (sum - nokori) / 2;\n        ans += nokori / 2 * 3;\n\n        //Console.WriteLine(ans);\n\n        return ans;\n    }\n    \n}\n\n\nclass Scanner\n{\n    string[] s;\n    int i;\n\n    char[] cs = new char[] { ' ' };\n\n    public Scanner()\n    {\n        s = new string[0];\n        i = 0;\n    }\n\n    public string next()\n    {\n        if (i < s.Length) return s[i++];\n        string st = Console.ReadLine();\n        while (st == \"\") st = Console.ReadLine();\n        s = st.Split(cs, StringSplitOptions.RemoveEmptyEntries);\n        if (s.Length == 0) return next();\n        i = 0;\n        return s[i++];\n    }\n\n    public int nextInt()\n    {\n        return int.Parse(next());\n    }\n    public int[] ArrayInt(int N, int add = 0)\n    {\n        int[] Array = new int[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextInt() + add;\n        }\n        return Array;\n    }\n\n    public long nextLong()\n    {\n        return long.Parse(next());\n    }\n\n    public long[] ArrayLong(int N, long add = 0)\n    {\n        long[] Array = new long[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextLong() + add;\n        }\n        return Array;\n    }\n\n    public double nextDouble()\n    {\n        return double.Parse(next());\n    }\n\n\n    public double[] ArrayDouble(int N, double add = 0)\n    {\n        double[] Array = new double[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextDouble() + add;\n        }\n        return Array;\n    }\n}"
  },
  {
    "language": "C#",
    "code": "using System;\nusing System.Collections;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.IO;\nusing System.Text;\nusing System.Globalization;\nusing System.Diagnostics;\n\n\n\nclass Myon\n{\n    public Myon() { }\n    public static int Main()\n    {\n        new Myon().calc();\n        return 0;\n    }\n\n    Scanner cin;\n\n    long mod = 1000000007;\n\n    int N, M;\n    int[] T;\n    void calc()\n    {\n        cin = new Scanner();\n        N = cin.nextInt();\n        M = cin.nextInt();\n        T = cin.ArrayInt(N);\n        int sum = T.Sum();\n\n        if (N == 2)\n        {\n            if (T[0] != T[1]) Console.WriteLine(-1);\n            else Console.WriteLine(Math.Min(T[0], M - T[0]));\n            return;\n        }\n        if (M % 2 == 0 && sum % 2 == 1)\n        {\n            Console.WriteLine(\"-1\");\n            return;\n        }\n        Array.Sort(T);\n\n        long ans = long.MaxValue / 10;\n\n        //?¢???????\n        for (int i = 0; i <= N; i++)\n        {\n            int sumL = 0;\n            List<int> l = new List<int>();\n            for (int j = 0; j < i; j++)\n            {\n                l.Add(T[j]);\n                sumL += T[j];\n            }\n\n            int sumR = 0;\n\n            List<int> r = new List<int>();\n            for (int j = i; j < N; j++)\n            {\n                r.Add(M - T[j]);\n                sumR += T[j];\n            }\n            r.Sort();\n\n            ans = Math.Min(ans, calc2(l, r));\n\n        }\n\n        Console.WriteLine(ans);\n    }\n\n\n    long calc2(List<int> a, List<int> b)\n    {\n        long ans = long.MaxValue / 10;\n        ans = Math.Min(ans, calc3(a) + calc3(b));\n\n        /*\n        Console.WriteLine(a.Count + \" \" + b.Count + \" \" + ans);\n\n        for (int i = 0; i < a.Count; i++)\n        {\n            Console.Write(a[i] + \" \");\n        }\n        Console.WriteLine();\n        for (int i = 0; i < b.Count; i++)\n        {\n            Console.Write(b[i] + \" \");\n        }\n        Console.WriteLine();\n        */\n\n        int amin = 0;\n        int amax = a.Count - 1;\n        for (int i = 0; i < a.Count; i++)\n        {\n            if(a[i] != 0)\n            {\n                amin = i;break;\n            }\n        }\n\n        int bmin = 0;\n        int bmax = b.Count - 1;\n\n        for (int i = 0; i < b.Count; i++)\n        {\n            if(b[i] != 0)\n            {\n                bmin = i;\n                break;\n            }\n        }\n\n        if (a.Count != 0 && b.Count != 0)\n        {\n            a[amin] = (a[amin] + 1) % M;\n            b[bmax] = (b[bmax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            a[amin] = (a[amin] + (M - 1)) % M;\n            b[bmax] = (b[bmax] + 1) % M;\n\n            b[bmin] = (b[bmin] + 1) % M;\n            a[amax] = (a[amax] + (M - 1)) % M;\n            ans = Math.Min(ans, calc3(a) + calc3(b));\n            b[bmin] = (b[bmin] + (M - 1)) % M;\n            a[amax] = (a[amax] + 1) % M;\n        }\n\n        return ans;\n    }\n\n    long calc3(List<int> a)\n    {\n        if (a.Count == 0) return 0;\n        int sum = 0;\n        int max = 0;\n        int min = 99999999;\n        foreach (var num in a)\n        {\n            sum += num;\n            max = Math.Max(num, max);\n            min = Math.Min(num, min);\n        }\n\n        if(sum % 2 == 1)\n        {\n            if (M % 2 == 0) return long.MaxValue / 10;\n            else\n            {\n                sum += M;\n                max = min + M;\n            }\n        }\n\n        long nokori = Math.Max(0, max - (sum - max));\n        long ans = (sum - nokori) / 2;\n        ans += nokori / 2 * 3;\n\n        //Console.WriteLine(ans);\n\n        return ans;\n    }\n    \n}\n\n\nclass Scanner\n{\n    string[] s;\n    int i;\n\n    char[] cs = new char[] { ' ' };\n\n    public Scanner()\n    {\n        s = new string[0];\n        i = 0;\n    }\n\n    public string next()\n    {\n        if (i < s.Length) return s[i++];\n        string st = Console.ReadLine();\n        while (st == \"\") st = Console.ReadLine();\n        s = st.Split(cs, StringSplitOptions.RemoveEmptyEntries);\n        if (s.Length == 0) return next();\n        i = 0;\n        return s[i++];\n    }\n\n    public int nextInt()\n    {\n        return int.Parse(next());\n    }\n    public int[] ArrayInt(int N, int add = 0)\n    {\n        int[] Array = new int[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextInt() + add;\n        }\n        return Array;\n    }\n\n    public long nextLong()\n    {\n        return long.Parse(next());\n    }\n\n    public long[] ArrayLong(int N, long add = 0)\n    {\n        long[] Array = new long[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextLong() + add;\n        }\n        return Array;\n    }\n\n    public double nextDouble()\n    {\n        return double.Parse(next());\n    }\n\n\n    public double[] ArrayDouble(int N, double add = 0)\n    {\n        double[] Array = new double[N];\n        for (int i = 0; i < N; i++)\n        {\n            Array[i] = nextDouble() + add;\n        }\n        return Array;\n    }\n}"
  },
  {
    "language": "OCaml",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n\n            if (false) {\n\n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n\n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n\n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n//        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main4 instance = new Main4();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  },
  {
    "language": "Python",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n/**\n * AIZU ONLINE JUDGE\n * 2837 Cryptex\n *    2018/02/17\n */\npublic class Main {\n\n    int N;\n    int M;\n    int[] T;\n    int nidx; // 負になる場所\n\n    // 単純最小値(2倍)を返す\n    int min() {\n        int sum1 = 0;\n        int sum2 = 0;\n        int max1 = 0;\n        int max2 = 0;\n\n        for(int i = 0; i < N; i++) {\n            if (T[i] > 0) {\n                int t = T[i];\n                sum1 += t;\n                if (t > max1) {\n                    max1 = t;\n                }\n            }\n            else {\n                int t = - T[i];\n                sum2 += t;\n                if (t > max2) {\n                    max2 = t;\n                }\n            }\n        }\n        if (max1 * 2 - sum1 > 0) {\n            sum1 += (max1 * 2 - sum1) * 2;\n        }\n        if (max2 * 2 - sum2 > 0) {\n            sum2 += (max2 * 2 - sum2) * 2;\n        }\n//        if (sum % 2 != 0)\n//            sum = -1;\n//        else\n//            sum /= 2;\n        return sum1 + sum2;\n    }\n\n    int solv() {\n        int res = 0;\n        for(int j = 0; j < 2; j++) {\n            int sum = 0;\n            int max = 0;\n            for(int i = 0; i < N; i++) {\n                int t = T[i] * (j == 0 ? 1 : -1);\n                if (t > 0) {\n                    sum += t;\n                    if (t > max) {\n                        max = t;\n                    }\n                }\n            }\n            //log.printf(\"max sum %d %d\\n\", max, sum);\n            if (sum % 2 == 1) {\n\n                return -1;\n            }\n            if (max > sum / 2) {\n                return -2;\n            }\n            res += sum / 2;\n        }\n        return res;\n    }\n\n    int sov() {\n        int min = min();\n        if (min % 2 != 0) {\n            T[nidx - 1] -= M;\n            min = min();\n            log.printf(\"再 %s min=%d\\n\", Arrays.toString(T), min);\n        }\n\n        return min / 2;\n\n    }\n\n    boolean main() throws IOException {\n        Scanner sc = new Scanner(systemin);\n\n        //int[] ir = readIntArray();\n        N = sc.nextInt();//ir[0];\n        M = sc.nextInt();//ir[1];\n        log.printf(\"%d %d\\n\",  N, M);\n\n        //ir = readIntArray();\n        //int[] T = ir;\n        T = new int[N];\n        for(int i = 0; i < N; i++) {\n            T[i] = sc.nextInt();\n        }\n        int ret = 0;\n        if (N == 2 && T[0] != T[1]) {\n            ret = -1;\n        }\n        else if (N == 3 && T[0] == 1 || T[1] == 1 || T[2] == 1) {\n            ret = 3;\n        }\n        else {\n            Arrays.sort(T);\n            nidx = -1; // 負になる場所\n            for(int i = 0; i < N; i++) {\n                if (T[i] > M / 2) {\n                    if (nidx < 0)\n                        nidx = i;\n                    T[i] -= M;\n                }\n            }\n            if (nidx < 0)\n                nidx = M;\n            log.printf(\"%s nidx = %d\\n\",  Arrays.toString(T), nidx);\n            int min = min();\n            log.printf(\"%s min = %.1f\\n\",  Arrays.toString(T), min() / 2.);\n            if (M % 2 == 0 && min % 2 != 0) {\n                ret = -1;\n            }\n            else {\n                ret = sov();\n            }\n        }\n//        if (ret == 0) {\n\n            if (false) {\n\n            ret = solv();\n            log.printf(\"ret = %d\\n\", ret);\n\n            for(;nidx < N;) {\n                T[nidx] += M;\n                nidx++;\n                log.printf(\"%s\\n\", Arrays.toString(T));\n                ret = solv();\n                log.printf(\"ret = %d\\n\", ret);\n            }\n            }\n\n//        if (ret == -1 && M % 2 == 1) {\n//            int h; // 反転箇所 0 or -1\n//            if (nidx == 0) {\n//                h = 0;\n//            }\n//            else if (nidx == N - 1) {\n//                h = -1;\n//            }\n//            else if (T[nidx - 1] > T[nidx] + M) {\n//                h = -1;\n//            }\n//            else h = 0;\n//            if (h == 0) {\n//                T[nidx] += M;\n//                nidx++;\n//            }\n//            else {\n//                nidx--;\n//                T[nidx] -= M;\n//            }\n//            log.printf(\"%s\\n\", Arrays.toString(T));\n//            ret = solv();\n//            log.printf(\"ret = %d\\n\", ret);\n//        }\n//        }\n        result.printf(\"%d\\n\", ret);\n//        sc.close();\n        return false;\n    }\n\n    PrintStream log;\n    PrintStream result = System.out;\n    BufferedReader systemin;\n\n    static Main4 instance = new Main4();\n\n    Main() {\n        systemin = new BufferedReader(new InputStreamReader(System.in));\n        log = new PrintStream(new OutputStream() { public void write(int b) {} } );\n    }\n\n    public static void main(String[] args) throws IOException {\n\n        int N = Integer.MAX_VALUE;\n        //int N = readIntArray()[0];\n\n        for(int i = 0; i < N; i++) {\n            boolean b = instance.main();\n            if (!b)\n                break;\n        }\n\n        instance.systemin.close();\n    }\n\n\n}\n\n\n"
  }
]