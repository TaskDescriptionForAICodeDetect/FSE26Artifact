[
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <stdbool.h>\n\nbool solve(int A, int B, int C, int N, char choices[][3]) {\n    int a = A, b = B, c = C;\n    int path[100];\n    \n    for (int i = 0; i < N; i++) {\n        bool found = false;\n        \n        if (strcmp(choices[i], \"AB\") == 0) {\n            if (a > 0 && b < B + a) {\n                a--; b++; path[i] = 1;\n                found = true;\n            } else if (b > 0 && a < A + b) {\n                b--; a++; path[i] = 2;\n                found = true;\n            }\n        }\n        \n        if (strcmp(choices[i], \"AC\") == 0) {\n            if (a > 0 && c < C + a) {\n                a--; c++; path[i] = 1;\n                found = true;\n            } else if (c > 0 && a < A + c) {\n                c--; a++; path[i] = 2;\n                found = true;\n            }\n        }\n        \n        if (strcmp(choices[i], \"BC\") == 0) {\n            if (b > 0 && c < C + b) {\n                b--; c++; path[i] = 1;\n                found = true;\n            } else if (c > 0 && b < B + c) {\n                c--; b++; path[i] = 2;\n                found = true;\n            }\n        }\n        \n        if (!found) return false;\n    }\n    \n    return true;\n}\n\nint main() {\n    int A, B, C, N;\n    scanf(\"%d %d %d %d\", &A, &B, &C, &N);\n    \n    char choices[100][3];\n    for (int i = 0; i < N; i++) {\n        scanf(\"%s\", choices[i]);\n    }\n    \n    if (solve(A, B, C, N, choices)) {\n        printf(\"Yes\\n\");\n    } else {\n        printf(\"No\\n\");\n    }\n    \n    return 0;\n}",
    "timestamp": "2025-08-05 22:33:02"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "C",
    "code": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nint main() {\n    int A, B, C, N;\n    scanf(\"%d %d %d %d\", &A, &B, &C, &N);\n    char **events = (char **)malloc(N * sizeof(char *));\n    for (int i = 0; i < N; i++) {\n        events[i] = (char *)malloc(3 * sizeof(char));\n        scanf(\"%s\", events[i]);\n    }\n    \n    char **choices = (char **)malloc(N * sizeof(char *));\n    for (int i = 0; i < N; i++) {\n        choices[i] = (char *)malloc(3 * sizeof(char));\n    }\n    \n    int possible = 1;\n    for (int i = 0; i < N; i++) {\n        if (strcmp(events[i], \"AB\") == 0) {\n            if (A > B) {\n                A--;\n                B++;\n                strcpy(choices[i], \"B\");\n            } else if (B > A) {\n                B--;\n                A++;\n                strcpy(choices[i], \"A\");\n            } else {\n                if (C == 0) {\n                    possible = 0;\n                    break;\n                } else {\n                    A++;\n                    B--;\n                    strcpy(choices[i], \"A\");\n                }\n            }\n        } else if (strcmp(events[i], \"AC\") == 0) {\n            if (A > C) {\n                A--;\n                C++;\n                strcpy(choices[i], \"C\");\n            } else if (C > A) {\n                C--;\n                A++;\n                strcpy(choices[i], \"A\");\n            } else {\n                if (B == 0) {\n                    possible = 0;\n                    break;\n                } else {\n                    A++;\n                    C--;\n                    strcpy(choices[i], \"A\");\n                }\n            }\n        } else if (strcmp(events[i], \"BC\") == 0) {\n            if (B > C) {\n                B--;\n                C++;\n                strcpy(choices[i], \"C\");\n            } else if (C > B) {\n                C--;\n                B++;\n                strcpy(choices[i], \"B\");\n            } else {\n                if (A == 0) {\n                    possible = 0;\n                    break;\n                } else {\n                    B++;\n                    C--;\n                    strcpy(choices[i], \"B\");\n                }\n            }\n        }\n        if (A < 0 || B < 0 || C < 0) {\n            possible = 0;\n            break;\n        }\n    }\n    \n    if (possible) {\n        printf(\"Yes\\n\");\n        for (int i = 0; i < N; i++) {\n            printf(\"%s\\n\", choices[i]);\n        }\n    } else {\n        printf(\"No\\n\");\n    }\n    \n    for (int i = 0; i < N; i++) {\n        free(events[i]);\n        free(choices[i]);\n    }\n    free(events);\n    free(choices);\n    \n    return 0;\n}",
    "timestamp": "2025-08-05 22:34:03"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nint main() {\n    int A, B, C;\n    cin >> A >> B >> C;\n    int N;\n    cin >> N;\n    vector<string> s(N);\n    for (int i = 0; i < N; ++i) {\n        cin >> s[i];\n    }\n\n    vector<char> res;\n    bool possible = true;\n\n    for (int i = 0; i < N; ++i) {\n        if (s[i] == \"AB\") {\n            if (A > B) {\n                A--;\n                B++;\n                res.push_back('B');\n            } else if (B > A) {\n                B--;\n                A++;\n                res.push_back('A');\n            } else {\n                if (i + 1 < N && (s[i+1] == \"AC\" || s[i+1] == \"BC\")) {\n                    if (s[i+1] == \"AC\") {\n                        A++;\n                        B--;\n                        res.push_back('A');\n                    } else {\n                        B++;\n                        A--;\n                        res.push_back('B');\n                    }\n                } else {\n                    A++;\n                    B--;\n                    res.push_back('A');\n                }\n            }\n        } else if (s[i] == \"AC\") {\n            if (A > C) {\n                A--;\n                C++;\n                res.push_back('C');\n            } else if (C > A) {\n                C--;\n                A++;\n                res.push_back('A');\n            } else {\n                if (i + 1 < N && (s[i+1] == \"AB\" || s[i+1] == \"BC\")) {\n                    if (s[i+1] == \"AB\") {\n                        A++;\n                        C--;\n                        res.push_back('A');\n                    } else {\n                        C++;\n                        A--;\n                        res.push_back('C');\n                    }\n                } else {\n                    A++;\n                    C--;\n                    res.push_back('A');\n                }\n            }\n        } else if (s[i] == \"BC\") {\n            if (B > C) {\n                B--;\n                C++;\n                res.push_back('C');\n            } else if (C > B) {\n                C--;\n                B++;\n                res.push_back('B');\n            } else {\n                if (i + 1 < N && (s[i+1] == \"AB\" || s[i+1] == \"AC\")) {\n                    if (s[i+1] == \"AB\") {\n                        B++;\n                        C--;\n                        res.push_back('B');\n                    } else {\n                        C++;\n                        B--;\n                        res.push_back('C');\n                    }\n                } else {\n                    B++;\n                    C--;\n                    res.push_back('B');\n                }\n            }\n        }\n        if (A < 0 || B < 0 || C < 0) {\n            possible = false;\n            break;\n        }\n    }\n\n    if (possible) {\n        cout << \"Yes\" << endl;\n        for (char c : res) {\n            cout << c << endl;\n        }\n    } else {\n        cout << \"No\" << endl;\n    }\n\n    return 0;\n}",
    "timestamp": "2025-08-05 22:34:31"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Main {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int C = sc.nextInt();\n        int N = sc.nextInt();\n        String[] s = new String[N];\n        for (int i = 0; i < N; i++) {\n            s[i] = sc.next();\n        }\n        \n        List<String> res = new ArrayList<>();\n        boolean possible = true;\n        \n        for (int i = 0; i < N; i++) {\n            String choice = s[i];\n            if (choice.equals(\"AB\")) {\n                if (A > B) {\n                    A--;\n                    B++;\n                    res.add(\"B\");\n                } else if (B > A) {\n                    B--;\n                    A++;\n                    res.add(\"A\");\n                } else {\n                    if (i + 1 < N && s[i + 1].equals(\"AC\")) {\n                        A++;\n                        B--;\n                        res.add(\"A\");\n                    } else if (i + 1 < N && s[i + 1].equals(\"BC\")) {\n                        B++;\n                        A--;\n                        res.add(\"B\");\n                    } else {\n                        A++;\n                        B--;\n                        res.add(\"A\");\n                    }\n                }\n            } else if (choice.equals(\"AC\")) {\n                if (A > C) {\n                    A--;\n                    C++;\n                    res.add(\"C\");\n                } else if (C > A) {\n                    C--;\n                    A++;\n                    res.add(\"A\");\n                } else {\n                    if (i + 1 < N && s[i + 1].equals(\"AB\")) {\n                        A++;\n                        C--;\n                        res.add(\"A\");\n                    } else if (i + 1 < N && s[i + 1].equals(\"BC\")) {\n                        C++;\n                        A--;\n                        res.add(\"C\");\n                    } else {\n                        A++;\n                        C--;\n                        res.add(\"A\");\n                    }\n                }\n            } else if (choice.equals(\"BC\")) {\n                if (B > C) {\n                    B--;\n                    C++;\n                    res.add(\"C\");\n                } else if (C > B) {\n                    C--;\n                    B++;\n                    res.add(\"B\");\n                } else {\n                    if (i + 1 < N && s[i + 1].equals(\"AB\")) {\n                        B++;\n                        C--;\n                        res.add(\"B\");\n                    } else if (i + 1 < N && s[i + 1].equals(\"AC\")) {\n                        C++;\n                        B--;\n                        res.add(\"C\");\n                    } else {\n                        B++;\n                        C--;\n                        res.add(\"B\");\n                    }\n                }\n            }\n            \n            if (A < 0 || B < 0 || C < 0) {\n                possible = false;\n                break;\n            }\n        }\n        \n        if (possible) {\n            System.out.println(\"Yes\");\n            for (String action : res) {\n                System.out.println(action);\n            }\n        } else {\n            System.out.println(\"No\");\n        }\n    }\n}",
    "timestamp": "2025-08-05 22:34:57"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "Java",
    "code": "import java.util.*;\n\npublic class Solution {\n    public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n        int N = sc.nextInt();\n        int A = sc.nextInt();\n        int B = sc.nextInt();\n        int C = sc.nextInt();\n        \n        List<String> choices = new ArrayList<>();\n        \n        for (int i = 0; i < N; i++) {\n            String s = sc.next();\n            boolean found = false;\n            \n            if (s.equals(\"AB\")) {\n                if (A > B) {\n                    A--; B++;\n                    choices.add(\"B\");\n                    found = true;\n                } else if (B > A) {\n                    A++; B--;\n                    choices.add(\"A\");\n                    found = true;\n                }\n            } else if (s.equals(\"AC\")) {\n                if (A > C) {\n                    A--; C++;\n                    choices.add(\"C\");\n                    found = true;\n                } else if (C > A) {\n                    A++; C--;\n                    choices.add(\"A\");\n                    found = true;\n                }\n            } else if (s.equals(\"BC\")) {\n                if (B > C) {\n                    B--; C++;\n                    choices.add(\"C\");\n                    found = true;\n                } else if (C > B) {\n                    B++; C--;\n                    choices.add(\"B\");\n                    found = true;\n                }\n            }\n            \n            if (!found || A < 0 || B < 0 || C < 0) {\n                System.out.println(\"No\");\n                return;\n            }\n        }\n        \n        System.out.println(\"Yes\");\n        for (String choice : choices) {\n            System.out.println(choice);\n        }\n    }\n}",
    "timestamp": "2025-08-05 22:35:04"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\nusing namespace std;\n\nbool solve(int A, int B, int C, vector<string>& events) {\n    vector<int> path;\n    \n    for (string event : events) {\n        bool found = false;\n        if (event == \"AB\") {\n            if (A > 0) {\n                A--; B++;\n                path.push_back(0);\n                found = true;\n            } else if (B > 0) {\n                B--; A++;\n                path.push_back(1);\n                found = true;\n            }\n        } else if (event == \"AC\") {\n            if (A > 0) {\n                A--; C++;\n                path.push_back(0);\n                found = true;\n            } else if (C > 0) {\n                C--; A++;\n                path.push_back(1);\n                found = true;\n            }\n        } else if (event == \"BC\") {\n            if (B > 0) {\n                B--; C++;\n                path.push_back(0);\n                found = true;\n            } else if (C > 0) {\n                C--; B++;\n                path.push_back(1);\n                found = true;\n            }\n        }\n        \n        if (!found) return false;\n    }\n    \n    return true;\n}\n\nint main() {\n    int A, B, C, N;\n    cin >> A >> B >> C >> N;\n    \n    vector<string> events(N);\n    for (int i = 0; i < N; i++) {\n        cin >> events[i];\n    }\n    \n    if (solve(A, B, C, events)) {\n        cout << \"Yes\" << endl;\n    } else {\n        cout << \"No\" << endl;\n    }\n    \n    return 0;\n}",
    "timestamp": "2025-08-05 22:35:10"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def is_possible_game_choices(N, choices):\n    A, B, C = 1, 1, 1\n    result = []\n    \n    for s in choices:\n        if s == 'AB':\n            if A > B:\n                A, B = A - 1, B + 1\n                result.append('B')\n            elif A < B:\n                A, B = A + 1, B - 1\n                result.append('A')\n            else:\n                A, B = A + 1, B - 1\n                result.append('A')\n        elif s == 'AC':\n            if A > C:\n                A, C = A - 1, C + 1\n                result.append('C')\n            elif A < C:\n                A, C = A + 1, C - 1\n                result.append('A')\n            else:\n                A, C = A + 1, C - 1\n                result.append('A')\n        elif s == 'BC':\n            if B > C:\n                B, C = B - 1, C + 1\n                result.append('C')\n            elif B < C:\n                B, C = B + 1, C - 1\n                result.append('B')\n            else:\n                B, C = B + 1, C - 1\n                result.append('B')\n\n        if A < 0 or B < 0 or C < 0:\n            return \"No\", []\n\n    return \"Yes\", result\n\n# Example usage\nN = 3\nchoices = ['AB', 'AC', 'BC']\npossible, result = is_possible_game_choices(N, choices)\nprint(possible)\nif possible == \"Yes\":\n    print(result)",
    "timestamp": "2025-08-13 11:21:38"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "java",
    "code": "import java.util.*;\n\npublic class GameChoices {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        // Read the number of events\n        int N = scanner.nextInt();\n        scanner.nextLine(); // consume newline character\n\n        // Read the event strings\n        String[] events = new String[N];\n        for (int i = 0; i < N; i++) {\n            events[i] = scanner.nextLine();\n        }\n        \n        // Initialize scores\n        int A = 1;\n        int B = 1;\n        int C = 1;\n        \n        // List to store choices\n        List<String> choices = new ArrayList<>();\n        \n        for (String s : events) {\n            switch (s) {\n                case \"AB\":\n                    if (A > B) {\n                        A--;\n                        B++;\n                        choices.add(\"B\");\n                    } else {\n                        A++;\n                        B--;\n                        choices.add(\"A\");\n                    }\n                    break;\n                case \"AC\":\n                    if (A > C) {\n                        A--;\n                        C++;\n                        choices.add(\"C\");\n                    } else {\n                        A++;\n                        C--;\n                        choices.add(\"A\");\n                    }\n                    break;\n                case \"BC\":\n                    if (B > C) {\n                        B--;\n                        C++;\n                        choices.add(\"C\");\n                    } else {\n                        B++;\n                        C--;\n                        choices.add(\"B\");\n                    }\n                    break;\n            }\n            \n            if (A < 0 || B < 0 || C < 0) {\n                System.out.println(\"NO\");\n                return;\n            }\n        }\n        \n        System.out.println(\"YES\");\n        for (String choice : choices) {\n            System.out.println(choice);\n        }\n    }\n}",
    "timestamp": "2025-08-13 11:21:44"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "c",
    "code": "#include <stdio.h>\n#include <stdbool.h>\n#include <string.h>\n\nbool makeChoices(int N, char choices[][3], int *A, int *B, int *C) {\n    // Initialize A, B, C to zero\n    *A = *B = *C = 0;\n\n    for (int i = 0; i < N; i++) {\n        if (strcmp(choices[i], \"AB\") == 0) {\n            if (*A < *B) { (*A)++; (*B)--; }\n            else { (*A)--; (*B)++; }\n        } else if (strcmp(choices[i], \"AC\") == 0) {\n            if (*A < *C) { (*A)++; (*C)--; }\n            else { (*A)--; (*C)++; }\n        } else if (strcmp(choices[i], \"BC\") == 0) {\n            if (*B < *C) { (*B)++; (*C)--; }\n            else { (*B)--; (*C)++; }\n        }\n        \n        if (*A < 0 || *B < 0 || *C < 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nint main() {\n    int N;\n    scanf(\"%d\", &N);\n    char choices[N][3];\n    for (int i = 0; i < N; i++) {\n        scanf(\"%s\", choices[i]);\n    }\n\n    int A, B, C;\n    if (makeChoices(N, choices, &A, &B, &C)) {\n        printf(\"Possible\\n\");\n        printf(\"A: %d, B: %d, C: %d\\n\", A, B, C);\n    } else {\n        printf(\"Impossible\\n\");\n    }\n\n    return 0;\n}",
    "timestamp": "2025-08-13 11:21:54"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "js",
    "code": "function findChoices(N, events) {\n    let A = 0, B = 0, C = 0;\n    let result = [];\n\n    for (let i = 0; i < N; i++) {\n        const s_i = events[i];\n        if (s_i === 'AB') {\n            if (A > B) {\n                A--; B++;\n                result.push('B');\n            } else {\n                A++; B--;\n                result.push('A');\n            }\n        } else if (s_i === 'AC') {\n            if (A > C) {\n                A--; C++;\n                result.push('C');\n            } else {\n                A++; C--;\n                result.push('A');\n            }\n        } else if (s_i === 'BC') {\n            if (B > C) {\n                B--; C++;\n                result.push('C');\n            } else {\n                B++; C--;\n                result.push('B');\n            }\n        }\n\n        if (A < 0 || B < 0 || C < 0) {\n            return 'Impossible';\n        }\n    }\n    return result.join('');\n}",
    "timestamp": "2025-08-13 11:21:57"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def solve_game(N, events):\n    A, B, C = 0, 0, 0\n    choices = []\n\n    for s in events:\n        if s == 'AB':\n            if A > B:\n                A += 1\n                B -= 1\n                choices.append('A')\n            else:\n                A -= 1\n                B += 1\n                choices.append('B')\n        elif s == 'AC':\n            if A > C:\n                A += 1\n                C -= 1\n                choices.append('A')\n            else:\n                A -= 1\n                C += 1\n                choices.append('C')\n        else:  # BC\n            if B > C:\n                B += 1\n                C -= 1\n                choices.append('B')\n            else:\n                B -= 1\n                C += 1\n                choices.append('C')\n\n        if A < 0 or B < 0 or C < 0:\n            return None\n\n    return choices\n\ndef main():\n    N = int(input())\n    events = []\n    for _ in range(N):\n        events.append(input().strip())\n\n    result = solve_game(N, events)\n    if result is None:\n        print(\"No\")\n    else:\n        print(\"Yes\")\n        print('\\n'.join(result))\n\nif __name__ == \"__main__\":\n    main()",
    "timestamp": "2025-08-13 11:22:03"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "js",
    "code": "function solveGame(N, events) {\n    let A = 0, B = 0, C = 0;\n    let choices = [];\n\n    for (let event of events) {\n        let possible = false;\n        if (event === 'AB') {\n            if (A > B && B > 0) {\n                B++; A--;\n                choices.push('BA');\n                possible = true;\n            } else if (B >= A && A >= 0) {\n                A++; B--;\n                choices.push('AB');\n                possible = true;\n            }\n        } else if (event === 'AC') {\n            if (A > C && C > 0) {\n                C++; A--;\n                choices.push('CA');\n                possible = true;\n            } else if (C >= A && A >= 0) {\n                A++; C--;\n                choices.push('AC');\n                possible = true;\n            }\n        } else if (event === 'BC') {\n            if (B > C && C > 0) {\n                C++; B--;\n                choices.push('CB');\n                possible = true;\n            } else if (C >= B && B >= 0) {\n                B++; C--;\n                choices.push('BC');\n                possible = true;\n            }\n        }\n\n        if (!possible) return null;\n    }\n\n    return choices;\n}",
    "timestamp": "2025-08-13 11:22:09"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def solve():\n    N, A, B, C = map(int, input().split())\n    s = [input().strip() for _ in range(N)]\n    res = []\n    \n    for i in range(N):\n        current = s[i]\n        if current == 'AB':\n            if A == 0 and B == 0:\n                print(\"No\")\n                return\n            if A > B:\n                A -= 1\n                B += 1\n                res.append('B')\n            elif B > A:\n                B -= 1\n                A += 1\n                res.append('A')\n            else:\n                if i + 1 < N and s[i+1] == 'AC':\n                    A += 1\n                    B -= 1\n                    res.append('A')\n                else:\n                    A -= 1\n                    B += 1\n                    res.append('B')\n        elif current == 'AC':\n            if A == 0 and C == 0:\n                print(\"No\")\n                return\n            if A > C:\n                A -= 1\n                C += 1\n                res.append('C')\n            elif C > A:\n                C -= 1\n                A += 1\n                res.append('A')\n            else:\n                if i + 1 < N and s[i+1] == 'AB':\n                    A += 1\n                    C -= 1\n                    res.append('A')\n                else:\n                    A -= 1\n                    C += 1\n                    res.append('C')\n        elif current == 'BC':\n            if B == 0 and C == 0:\n                print(\"No\")\n                return\n            if B > C:\n                B -= 1\n                C += 1\n                res.append('C')\n            elif C > B:\n                C -= 1\n                B += 1\n                res.append('B')\n            else:\n                if i + 1 < N and s[i+1] == 'AB':\n                    B += 1\n                    C -= 1\n                    res.append('B')\n                else:\n                    B -= 1\n                    C += 1\n                    res.append('C')\n    \n    print(\"Yes\")\n    for choice in res:\n        print(choice)\n\nsolve()",
    "timestamp": "2025-08-13 11:22:23"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "js",
    "code": "function solve() {\n    const fs = require('fs');\n    const input = fs.readFileSync('/dev/stdin', 'utf8').trim().split('\\n');\n    let [A, B, C] = input[0].split(' ').map(Number);\n    const N = parseInt(input[1]);\n    const queries = input.slice(2, 2 + N).map(s => s.trim());\n    const res = [];\n\n    for (const s of queries) {\n        if (s === 'AB') {\n            if (A <= 0 && B <= 0) {\n                console.log('No');\n                return;\n            }\n            if (A > B) {\n                A--;\n                B++;\n                res.push('B');\n            } else {\n                B--;\n                A++;\n                res.push('A');\n            }\n        } else if (s === 'AC') {\n            if (A <= 0 && C <= 0) {\n                console.log('No');\n                return;\n            }\n            if (A > C) {\n                A--;\n                C++;\n                res.push('C');\n            } else {\n                C--;\n                A++;\n                res.push('A');\n            }\n        } else if (s === 'BC') {\n            if (B <= 0 && C <= 0) {\n                console.log('No');\n                return;\n            }\n            if (B > C) {\n                B--;\n                C++;\n                res.push('C');\n            } else {\n                C--;\n                B++;\n                res.push('B');\n            }\n        }\n    }\n\n    console.log('Yes');\n    console.log(res.join('\\n'));\n}\n\nsolve();",
    "timestamp": "2025-08-13 11:22:33"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "c++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n\nusing namespace std;\n\nbool canMakeChoices(vector<string>& events, int &A, int &B, int &C, vector<string> &result) {\n    for (const string &s : events) {\n        if (s == \"AB\") {\n            if (A < B) {\n                A++; B--; result.push_back(\"A\");\n            } else {\n                A--; B++; result.push_back(\"B\");\n            }\n        } else if (s == \"AC\") {\n            if (A < C) {\n                A++; C--; result.push_back(\"A\");\n            } else {\n                A--; C++; result.push_back(\"C\");\n            }\n        } else if (s == \"BC\") {\n            if (B < C) {\n                B++; C--; result.push_back(\"B\");\n            } else {\n                B--; C++; result.push_back(\"C\");\n            }\n        }\n        if (A < 0 || B < 0 || C < 0) return false;\n    }\n    return true;\n}\n\nint main() {\n    int N;\n    cin >> N;\n    vector<string> events(N);\n    for (int i = 0; i < N; ++i) {\n        cin >> events[i];\n    }\n\n    int A = 1, B = 1, C = 1;\n    vector<string> result;\n\n    if (canMakeChoices(events, A, B, C, result)) {\n        cout << \"Yes\" << endl;\n        for (const string &choice : result) {\n            cout << choice << endl;\n        }\n    } else {\n        cout << \"No\" << endl;\n    }\n\n    return 0;\n}",
    "timestamp": "2025-08-13 12:03:22"
  }
]