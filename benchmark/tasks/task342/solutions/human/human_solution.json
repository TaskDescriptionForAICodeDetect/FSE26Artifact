[
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll gcd(ll m, ll n){\n\treturn n ? gcd(n, m%n) : m;\n}\n\nll lcm(ll m, ll n){\n\treturn m / gcd(m, n) * n;\n}\n\nstring hexstr = \"0123456789ABCDEF\";\n\nint main(){\t\n\tint T;\n\tcin >> T;\n\tint abc = 0;\n\twhile (T--){\n\t\tint N;\n\t\tcin >> N;\n\t\tvector<string> v(N);\n\t\tvector<int> gcds;\n\t\tfor (int i = 0; i < N; ++i) cin >> v[i];\n\n\t\tll total = 1;\n\t\tfor (auto &s : v){\n\t\t\tint g = s.size() / 2;\n\t\t\tfor (int i = 0; i < s.size(); i += 2){\n\t\t\t\tif (s[i] != '0' || s[i+1] != '0') g = gcd(g, i / 2);\n\t\t\t}\n\t\t\ttotal = lcm(total, s.size() / 2 / g);\n\t\t\ttotal = min(total, 1025ll);\n\t\t\tgcds.push_back(g);\n\t\t}\n\n\t\tif (total * 2 <= 2048){\n\t\t\tvector<int> ans(total);\n\t\t\tfor (int j = 0; j < v.size(); ++j){\n\t\t\t\tstring &s = v[j];\n\t\t\t\tint g = gcds[j];\n\t\t\t\tint mul = total / (s.size() / 2 / g);\n\t\t\t\tfor (int i = 0; i < s.size(); i += 2){\n\t\t\t\t\tif (s[i] == '0' && s[i + 1] == '0') continue;\n\t\t\t\t\tint pos = i / 2 / g * mul;\n\t\t\t\t\tans[pos] |= (s[i] - '0') * 16;\n\t\t\t\t\tans[pos] |= (s[i + 1] - '0');\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (auto &e : ans){\n\t\t\t\tint x = e / 16, y = e % 16;\n\t\t\t\tcout << hexstr[x] << hexstr[y];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t\telse{\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t}\n\t}\n\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g = Gcd(m, n);\n\treturn m * n / g;\n}\n\nconst char *str = \"0123456789ABCDEF\";\n\nint f(char c0, char c1){\n\tconst char *p0 = strchr(str, c0);\n\tconst char *p1 = strchr(str, c1);\n\treturn (p0 - str) * 16 + (p1 - str);\n}\n\nint length(string &s){\n\tint g = s.length()/2;\n\tfor (int j = 2; j<s.length(); j+=2){\n\t\tint n = f(s[j], s[j + 1]);\n\t\tif (n != 0) g = Gcd(g, j / 2);\n\t}\n\treturn g;\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor (int i = 0; i<N; i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<unsigned char>> mm(n);\n\t\tstring m;\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tcin >> m;\n\n\t\t\tint ln = length(m);\n\t\t\tint g = m.length() / ln;\n\t\t\tmm[j].reserve(ln);\n\t\t\tfor (int k = 0; k<m.length(); k += g){\n\t\t\t\tchar c0 = m[k];\n\t\t\t\tchar c1 = m[k + 1];\n\t\t\t\tint num = f(c0, c1);\n\t\t\t\tmm[j].push_back(num);\n\t\t\t\t//\t\t\t\tcout << num << \" \";\n\t\t\t}\n\t\t\t//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor (int j = 1; j<n; j++){\n\t\t\tlen = Lcm(len, mm[j].size());\n\t\t}\n\t\tcout << len << endl;\n\t\tvector<int> ans(len, 0);\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tint g = len / mm[j].size();\n\t\t\tfor (int k = 0; k<mm[j].size(); k++){\n\t\t\t\tans[k*g] |= mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g = len;\n\t\tfor (int j = 1; j<len; j++){\n\t\t\tif (ans[j] != 0) g = Gcd(g, j);\n\t\t}\n\t\tif (len / g>1024){\n//\t\t\tcout << \"Too complex.\";\n\t\t}\n\t\telse{\n\t\t\tfor (int j = 0; j<len; j += g){\n\t\t\t\tint n0 = ans[j] >> 4;\n\t\t\t\tint n1 = ans[j] & 15;\n//\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\n#include <numeric>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nint gcd(int a, int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\n\nint c2i(const char c) { return c-'0'; }\n\nint s0x2i(const string& s) {\n  return c2i(s[0]) * 16 + c2i(s[1]);\n}\n\nvector<char> conv;\n\nint N;\nvector<string> vs;\nconst string zero = \"00\";\n\nvoid solve() {\n  vector<int> maxDenom;\n  rep(i,N) {\n    const int baseDenom = vs[i].size() / 2;\n    int mxDenom = -1;\n    for (int j = 0; j < vs[i].size(); j+=2) {\n      string sub = vs[i].substr(j, 2);\n      if (sub == zero) continue;\n      int num = j / 2;\n      int denom = baseDenom / gcd(num, baseDenom);\n      if (denom > mxDenom) mxDenom = denom;\n    }\n    if (mxDenom != -1)\n      maxDenom.push_back(mxDenom);\n  }\n\n  // rep(i,maxDenom.size()) printf(\"{%d}\", maxDenom[i]); puts(\"\");\n\n  map<int,int> m;\n  rep(i,maxDenom.size()) {\n    int num = maxDenom[i];\n    for (int j = 2; j * j <= num; ++j) {\n      int cnt = 0;\n      while (num % j == 0) {\n        ++cnt;\n        num /= j;\n      }\n      if (cnt) {\n        m[j] = max(m[j], cnt);\n      }\n    }\n    if (num > 1 && m.count(num) == 0)\n      m[num] = 1;\n  }\n\n  // foreach(m, itr) { printf(\"[%d:%d]\", itr->first, itr->second); } puts(\"\"); \n\n  int finalDenom = 1;\n  foreach(m, itr) {\n    finalDenom *= pow(itr->first, itr->second);\n  }\n  // printf(\"finalDenom::%d\\n\", finalDenom);\n  if (finalDenom > (2048/2)) {\n    cout << \"Too complex.\" << endl;\n    return;\n  }\n\n  vector<int> resInt(finalDenom, 0);\n  rep(i,N) {\n    const int baseDenom = vs[i].size() / 2;\n    for (int j = 0; j < vs[i].size(); j+=2) {\n      string sub = vs[i].substr(j, 2);\n      int num = s0x2i(sub);\n      if (finalDenom > baseDenom) {\n        int index = (j / 2) * (finalDenom / baseDenom);\n        resInt[index] += num;\n      } else {\n        int index = (j / 2) / (baseDenom / finalDenom);\n        resInt[index] += num;\n      }\n    }\n  }\n\n  rep(i,resInt.size()) {\n    int num = resInt[i];\n    cout << conv[num/16] << conv[num%16];\n  }\n  cout << endl;\n}\n\nvoid input() {\n  // vs clear\n  vs.clear();\n  \n  cin >> N;\n  cin.ignore();\n  string s;\n  rep(i,N) {\n    getline(cin, s);\n    vs.push_back(s);\n  }\n}\n\nint main() {\n  ios_base::sync_with_stdio(false);\n\n  rep(i,10) {\n    conv.push_back('0'+i);\n  }\n  rep(i,6) {\n    conv.push_back('A'+i);\n  }\n  \n  int T;\n  cin >> T;\n  while (T--) {\n    input();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <iomanip>\n\nusing namespace std;\n\nint opt(int p[], int nlen){\n\tint m = 1;\n\twhile(m < nlen && !p[m]) ++m;\n\tfor(int i = m; i>1 ; i--){\n\t\tif(nlen%i==0){\n\t\t\tbool f = false;\n\t\t\tfor(int j = 0; !f && j < nlen; j++){\n\t\t\t\tif(j%i) f |= p[j];\n\t\t\t}\n\t\t\tif(!f){\n\t\t\t\tfor(int j = 0; j*i < nlen; j++){\n\t\t\t\t\tp[j] = p[j*i];\n\t\t\t\t}\n\t\t\t\treturn nlen/i;\n\t\t\t}\n\t\t}\n\t}\n\treturn nlen;\n}\n\nint gcd(int a,int b){\n\tif(a<b) swap(a,b);\n\tif(a%b) return gcd(b,a%b);\n\telse return b;\n}\n\nint lcm(const int a[], int n){\n\tint m = 1;\n\tfor(int i = 0; i < n; i++){\n\t\tm = m*a[i]/gcd(m,a[i]);\n\t}\n\treturn m;\n}\n\nint main(){\n\tint t;\n\tcin >> t;\n\twhile(t--){\n\t\tint n;\n\t\tcin >> n;\n\t\tchar c[8][2050];\n\t\tint len[8];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tcin >> c[i];\n\t\t\tlen[i] = strlen(c[i]);\n\t\t}\n\t\tint pattern[8][1024];\n\t\tmemset(pattern,0,sizeof pattern);\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < len[i]; j++){\n\t\t\t\tpattern[i][j/2] *= 16;\n\t\t\t\tpattern[i][j/2] += c[i][j]-'0';\n\t\t\t}\n\t\t\tlen[i] = opt(pattern[i],len[i]/2);\n\t\t}\n\t\tint nlcm = lcm(len,n);\n\t\tif(nlcm > 1024){\n\t\t\tcout << \"Too complex\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint p[1024];\n\t\tmemset(p,0,sizeof(p));\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < nlcm; j++){\n\t\t\t\tint s = nlcm/len[i];\n\t\t\t\tif(j%s == 0){\n\t\t\t\t\tp[j] += pattern[i][j/s];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < nlcm; i++){\n\t\t\tcout << hex <<setw(2) << setfill('0')<< uppercase << p[i];\n\t\t}\n\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\n\nvoid solve(int n,vector<pair<int,ll> >&ans,ll &ansnum, \n\t   vector<pair<int,ll> >&in,ll &num){\n  ll l=ansnum*num/gcd(ansnum,num);\n\n  ll tmp=l/num;\n  rep(j,in.size()){\n    in[j].sec*=tmp;\n    //cout << in[j].sec <<\" \" ;\n  }\n  //  cout << endl;\n  tmp=l/ansnum;\n  //  cout <<\"tmp \" << tmp <<\" \" << l <<\" \" << ansnum << endl;\n  rep(j,ans.size()){\n    ans[j].sec*=tmp;\n    //    cout << ans[j].sec <<\" \" ;\n  }\n  //  cout << endl;\n  \n  ansnum=l;\n  vector<pair<int,ll> >& out2=ans;\n  rep(k,in.size()){\n    bool hassame=false;\n    rep(j,out2.size()){\n      if (out2[j].sec == in[k].sec){\n\tout2[j].fir|=in[k].fir;\n\thassame=true;\n\tbreak;\n      }\n    }\n    if (!hassame)out2.pb(in[k]);\n  }\n\n  minimize(out2,ansnum);\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in,ll *num){\n  vector<pair<int,ll> > &ans=in[0];\n  minimize(ans,num[0]);\n  REP(i,1,n){\n    solve(n,ans,num[0],in[i],num[i]);\n    if (num[0] > 1024){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n\n//   rep(i,n){\n//     cout << num[i] << endl;\n//     rep(j,in[i].size())cout << i<<\" \"<< in[i][j].fir<<\" \" << in[i][j].sec << endl;\n//     cout << endl;\n//   }\n\n\n  vector<int> out(num[0],0);\n  rep(i,ans.size()){\n    out[ans[i].sec]=ans[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n\n}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\ncompute(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    bool un=false;\n    for(int i=0;i<sum.vf.size();i+=L){\n      for(int j=1;j<L;++j){\n\tif(i+j>=sum.vf.size()){\n\t  un=true;\n\t  break;\n\t}\n\tif(sum.vf[i+j]!=0){\n\t  un=true;\n\t  break;\n\t}\n      }\n    }\n    if(!un){\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  sum.vf[i+j]=-1;\n\t}\n      }\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n    \n    string s;\n    getline(cin,s);\n    int left=N;\n    for(int i = 0; i < N; ++i){\n      getline(cin,s);\n      int len;\n      Phrase t(s);\n      --left;\n      if(s.length()==0)t.vf.push_back(0);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    for(int i = 0; i < left; ++i){\n      getline(cin,s);\n    }\n    \n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        if(L>100000){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;  \n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n\t\n\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,int> > *in,int *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n    if (l > 2048){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n  \n  //cout << l << endl;\n  vector<int> out(l);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n      out[in[i][j].sec]|=in[i][j].fir;\n    }\n  }\n  vector<pair<int,int> > out2;\n  rep(i,out.size()){\n    if (out[i] != 0)out2.pb(mp(out[i],i));\n  }\n  int ansnum=out.size();\n  minimize(out2,ansnum);\n  out.clear();\n  out=vector<int>(ansnum);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            //if(j>=sz||(j%(sz/i))>=sz){\n            //    return vector<us>();\n            //}\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                //if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                con=true;\n                //break;\n            }\n        }\n        if(con){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        //else{\n        //res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            nums[i]=dePos(nums[i]);\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        res=dePos(res);\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9'){\n            num+=s[j]-'0';\n        }\n        else{\n            num+=s[j]-'A'+10;\n        }\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\n// ³kÅ«éñÈçÎA³k·é\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    // iÌå«³ÌñÉ³k·é\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        // ³kÅ«é©`FbN\n        bool isDecom=true;\n        // sz/iÂÌubNÉª\n        // »ê¼êÌÓªÇ¤ÈÁÄ¢é©`FbN\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        // ³kÂ\\\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    // ³ks\\\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        // »ê¼êÌYp^[ÌTCYÌÅ¬ö{ðæé\n        // »Ì·³ÉSÄÌñð²®µA»Ìã¬\n        // ¬ãAp^[ð³k·é\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                // Yp^[ðL£\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        // ·³ð²®µ½ ÆA¬\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++){\n                num|=nums[j][i];\n            }\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            vector<string> ret;\n            for(int i=0;i<res.size();i++)\n                cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        if(L>2000){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        //if(match){\n        //    vector<us> tmp;\n        //    tmp.push_back(res[0]);\n        //    res=tmp;\n        //}\n        //else{\n        res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\ntypedef vector<int> vi;\n\ninline int gcd(int a, int b){ return b?gcd(b,a%b):a; }\ninline int lcm(int a, int b){ return a/gcd(a,b)*b; }\ninline int hex(char a){ return isdigit(a)?(a-'0'):(a-'A'); }\ninline char inv_hex(int a){ return (a<10)?(a+'0'):(a-10+'A'); }\n\ninline vi reduce(vi a){\n  int n = a.size();\n  for(int i=n;i>=2;i--){\n    if(n%i)continue;\n    bool f = true;\n    rep(j,n){\n      if(j%i && a[j]){\tf = false; break; }\n    }\n    if(f){\n      int k = n/i;\n      vi res(k);\n      for(int j=0;j<k;j++)res[j] = a[j*i];\n      return res;\n    }\n  }\n  return a;\n}\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  int casenum;\n  cin >> casenum;\n  while(casenum--){\n    int n;\n    cin >> n;\n    int len = 1;\n    vector< vi > rhythm(n);\n    rep(i,n){\n      string s;\n      cin >> s;\n      if(len<=1024){\n\tvi tmp(s.size()/2);\n\trep(j,s.size()/2){\n\t  tmp[j] = hex(s[2*j])*16 + hex(s[2*j+1]);\n\t}\n\trhythm[i] = reduce(tmp);\n\tlen = lcm(len,rhythm[i].size());\n      }\n    }\n\n    if(len>1024)cout << \"Too complex.\" << endl;\n    else{\n      vi res(len,0);\n      rep(i,n){\n\tint k = len/rhythm[i].size();\n\trep(j,rhythm[i].size())res[j*k] |= rhythm[i][j];\n      }\n      rep(i,len){\n\tcout << inv_hex(res[i]/16) << inv_hex(res[i]%16);\n      }\n      cout << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,int> > *in,int *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n    if (l > 2048){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n  \n  //cout << l << endl;\n  vector<int> out(l);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n      out[in[i][j].sec]|=in[i][j].fir;\n    }\n  }\n  vector<pair<int,int> > out2;\n  rep(i,out.size()){\n    if (out[i] != 0)out2.pb(mp(out[i],i));\n  }\n  int ansnum=out.size();\n  minimize(out2,ansnum);\n  out.clear();\n  out=vector<int>(ansnum);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      \n      if (in[i].size() == 1){\n\tif (in[i][0].sec==0)num[i]=1;\n      }else {\n\tminimize(in[i],num[i]);\n      }\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    assert(LCM>0);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len_erase=0;\n  int zero_num=0;\n\n  bool cont=false;\n  for(int i = 0; i < sum.vf.size(); ++i){\n    if( sum.vf[i] != 0 ) cont=true;\n  }\n  if(!cont){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }\n  \n  for(int L = sum.vf.size()/2; L >= 2; --L){\n    if( sum.vf.size() % L == 0 ){\n      bool un = false;\n      for(int i = 0; i < sum.vf.size(); i+=L){\n\tfor(int j = 1; j < L; ++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n\tif(un)break;\n      }\n      if(!un){\n\tfor(int i = 0; i < sum.vf.size(); i+=L){\n\t  for(int j = 1; j < L; ++j){\n\t    sum.vf[i+j] = -1;\n\t  }\n\t}\n\tbreak;\n      }\n    }\n  }\n \n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  cin >> T;\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n\n    cin >> N;\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      cin >> s;\n      int len;\n      Phrase t(s);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// g++ -std=c++11 a.cpp\n#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<unordered_map>\n#include<utility>\n#include<cmath>\n#include<random>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#include<assert.h>\n#include<typeinfo>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define FOR(i,a) for(auto i:a)\n#define pb push_back\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\n//#define int ll\ntypedef int Def;\ntypedef pair<Def,Def> pii;\ntypedef vector<Def> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<Def,pii> pip;\ntypedef vector<pip>vip;\n#define mt make_tuple\ntypedef tuple<int,int,int> tp;\ntypedef vector<tp> vt;\ntemplate<typename A,typename B>bool cmin(A &a,const B &b){return a>b?(a=b,true):false;}\ntemplate<typename A,typename B>bool cmax(A &a,const B &b){return a<b?(a=b,true):false;}\n//template<class C>constexpr int size(const C &c){return (int)c.size();}\n//template<class T,size_t N> constexpr int size(const T (&xs)[N])noexcept{return (int)N;}\nconst double PI=acos(-1);\nconst double EPS=1e-9;\nDef inf = sizeof(Def) == sizeof(long long) ? 2e18 : 1e9+10;\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nll gcd(ll a,ll b){\n\treturn (b==0?a:gcd(b,a%b));\n}\nll lcm(ll a,ll b){\n\treturn a/gcd(a,b)*b;\n}\nint main(){\n\tint q;\n\tcin>>q;\n\twhile(q--){\n\t\tint n;cin>>n;\n\t\tvs in(n);\n\t\trep(i,n)cin>>in[i];\n\t\t\n\t\trep(i,n){\n\t\t\tint t=in[i].size()/2;\n\t\t\trep(j,in[i].size())if(in[i][j]!='0')t=gcd(t,j/2);\n\t\t\tif(t==0){\n\t\t\t\tin[i]=\"00\";\n\t\t\t}else{\n\t\t\t\tstring w=\"\";\n\t\t\t\trep(j,in[i].size()/t/2){\n\t\t\t\t\tw+=in[i][j*2*t];\n\t\t\t\t\tw+=in[i][j*2*t+1];\n\t\t\t\t}\n\t\t\t\tin[i]=w;\n\t\t\t}\n\t\t}\n\t\tll t=1;\n\t\trep(i,n)t=lcm(t,in[i].size());\n\t\trep(i,n){\n\t\t\tint w=t/in[i].size();\n\t\t\tstring a=\"\";\n\t\t\trep(j,in[i].size()/2){\n\t\t\t\ta+=in[i][2*j];\n\t\t\t\ta+=in[i][2*j+1];\n\t\t\t\ta+=string(2*w-2,'0');\n\t\t\t}\n\t\t\tin[i]=a;\n\t\t}\n\t\t\n//\t\trep(i,n)cout<<in[i]<<endl;cout<<endl;\n\t\tif(t>2048)cout<<\"Too complex.\"<<endl;\n\t\telse{\n\t\t\trep(i,t){\n\t\t\t\tint s=0;\n\t\t\t\trep(j,n)s+=in[j][i]-'0';\n\t\t\t\tprintf(\"%01X\",s);\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}\n\n\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\ntypedef unsigned char uchar;\n\nvector<vector<short> > RI(8,vector<short>(1024));\nvector<short> ret(1024);\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n\n        vector<int> resi(N);\n        //vector<vector<short> > RI(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            resi[i] = s.length()/2;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                short x;\n                ss >> x;\n                RI[i][j/2] = x;\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = resi[i];\n            for(int j=0;j<(int)resi[i];j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,resi[i]/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            for(int i=0;i<1024;i++) ret[i] = 0;\n\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)resi[i];j++){\n                    if((j*len) % (int)resi[i] == 0){\n                        int here = j*len /resi[i];\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nlong long gcd(long long a, long long b){ // Ååöñ\n    if(a == 0 || b == 0)\n        return 0;\n    if(b > a)\n        swap(a, b);\n    long long tmp;\n    while((tmp = a % b) != 0){\n        a = b;\n        b = tmp;\n    }\n    return b;\n}\n\nlong long lcm(long long a, long long b){ // Å¬ö{\n    return a / gcd(a, b) * b;\n}\n\nchar add(char a, char b)\n{\n    int c;\n    if('0' <= a && a <= '9')\n        c = a - '0';\n    else\n        c = a - 'A' + 10;\n    if('0' <= b && b <= '9')\n        c += b - '0';\n    else\n        c += b - 'A' + 10;\n    if(c < 10)\n        return '0' + c;\n    else\n        return 'A' + c - 10;\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    while(--t >= 0){\n        int n;\n        cin >> n;\n        vector<string> s(n);\n        for(int i=0; i<n; ++i){\n            cin >> s[i];\n            if(count(s[i].begin(), s[i].end(), 0) == s[i].size())\n                s[i] = \"00\";\n            while(s[i].size() % 4 == 0){\n                unsigned j;\n                string tmp;\n                for(j=0; j<s[i].size(); j+=4){\n                    tmp += s[i][j];\n                    tmp += s[i][j+1];\n                    if(s[i][j+2] != '0' || s[i][j+3] != '0')\n                        break;\n                }\n                if(j < s[i].size()){\n                    break;\n                }else{\n                    s[i] = tmp;\n                }\n            }\n        }\n\n        int len = 1;\n        for(int i=0; i<n; ++i){\n            len = lcm(len, s[i].size()/2);\n            if(len > 2048)\n                break;\n        }\n        if(len > 2048){\n            cout << \"Too complex.\" << endl;\n            continue;\n        }\n\n        string ret(len*2, '0');\n        for(int i=0; i<n; ++i){\n            int a = len / (s[i].size()/2);\n            for(unsigned j=0; j<s[i].size()/2; ++j){\n                ret[2*j*a] = add(ret[2*j*a], s[i][2*j]);\n                ret[2*j*a+1] = add(ret[2*j*a+1], s[i][2*j+1]);\n            }\n        }\n        cout << ret << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            //if(j>=sz||(j%(sz/i))>=sz){\n            //    return vector<us>();\n            //}\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                //if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                //break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        //else{\n        //res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;  \n  if (in.size() == 1){\n    if (in[0].sec == 0){\n      num=1;\n      return;\n    }\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n\t\n\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,int> > *in,int *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n    if (l > 2048){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n  \n  //cout << l << endl;\n  vector<int> out(l);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n      out[in[i][j].sec]|=in[i][j].fir;\n    }\n  }\n  vector<pair<int,int> > out2;\n  rep(i,out.size()){\n    if (out[i] != 0)out2.pb(mp(out[i],i));\n  }\n  int ansnum=out.size();\n  minimize(out2,ansnum);\n  out.clear();\n  out=vector<int>(ansnum);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nlong long gcd(long long a, long long b){ // Ååöñ\n    if(a == 0 || b == 0)\n        return 0;\n    if(b > a)\n        swap(a, b);\n    long long tmp;\n    while((tmp = a % b) != 0){\n        a = b;\n        b = tmp;\n    }\n    return b;\n}\n\nlong long lcm(long long a, long long b){ // Å¬ö{\n    return a / gcd(a, b) * b;\n}\n\nchar add(char a, char b)\n{\n    int c;\n    if('0' <= a && a <= '9')\n        c = a - '0';\n    else\n        c = a - 'A' + 10;\n    if('0' <= b && b <= '9')\n        c += b - '0';\n    else\n        c += b - 'A' + 10;\n    if(c < 10)\n        return '0' + c;\n    else\n        return 'A' + c - 10;\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    while(--t >= 0){\n        int n;\n        cin >> n;\n        vector<string> s(n);\n        for(int i=0; i<n; ++i){\n            string tmp;\n            cin >> tmp;\n            int a = tmp.size()/2;\n            for(int j=1; j<tmp.size()/2; ++j){\n                if(tmp[2*j] != '0' || tmp[2*j+1] != '0'){\n                    if(a == -1)\n                        a = j;\n                    else\n                        a = gcd(a, j);\n                }\n            }\n            for(unsigned j=0; j<tmp.size()/2; j+=a){\n                s[i] += tmp[j*2];\n                s[i] += tmp[j*2+1];\n            }\n        }\n\n        int len = 1;\n        for(int i=0; i<n; ++i){\n            len = lcm(len, s[i].size()/2);\n            if(len > 1024)\n                break;\n        }\n        if(len > 1024){\n            cout << \"Too complex.\" << endl;\n            continue;\n        }\n\n        string ret(len*2, '0');\n        for(int i=0; i<n; ++i){\n            int a = len / (s[i].size()/2);\n            for(unsigned j=0; j<s[i].size()/2; ++j){\n                ret[2*j*a] = add(ret[2*j*a], s[i][2*j]);\n                ret[2*j*a+1] = add(ret[2*j*a+1], s[i][2*j+1]);\n            }\n        }\n        cout << ret << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    while(L>1&&L<sum.vf.size()/2+2){\n      bool un=false;\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n      }\n      if(!un){\n\tfor(int i=0;i<sum.vf.size();i+=L){\n\t  for(int j=1;j<L;++j){\n\t    sum.vf[i+j]=-1;\n\t  }\n\t}\n\tbreak;\n      }\n      --L;\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n    \n    string s;\n    getline(cin,s);\n    for(int i = 0; i < N; ++i){\n      getline(cin,s);\n      int len;\n      Phrase t(s);\n\n      if(s.length()==0)t.vf.push_back(0);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\n\nvector<long long int> divisor(long long int n) {\n\tvector<long long int> res;\n\tfor (long long int i = 1; i * i <= n; ++i) {\n\t\tif (n % i == 0) {\n\t\t\tres.push_back(i);\n\t\t\tif (i * i != n) res.push_back(n / i);\n\t\t}\n\t}\n\tsort(begin(res), end(res));\n\treturn res;\n}\n\nvector<int>compress(vector<int>nums) {\n\tauto divs(divisor(nums.size()));\n\treverse(divs.begin(),divs.end());\n\tfor (auto div : divs) {\n\t\tbool ok=true;\n\n\t\tfor (int i = 0; i < nums.size() / div; ++i) {\n\t\t\tfor (int j = 1; j < div; ++j) {\n\t\t\t\tif(nums[i*div+j])ok=false;\n\t\t\t}\n\t\t}\n\t\tif (ok) {\n\t\t\tvector<int>ans(nums.size()/div);\n\t\t\tfor (int i = 0; i < nums.size() / div; ++i) {\n\t\t\t\tans[i]=nums[i*div];\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t}\n\tassert(false);\n\treturn vector<int>();\n}\n\nvector<int>mk(string st) {\n\tvector<int>nums(st.size()/2);\n\tfor (int i = 0; i < st.size() / 2; ++i) {\n\t\tchar c1 = st[2*i];\n\t\tchar c2=st[2*i+1];\n\t\tint num=!isdigit(c1)?(c1-'A'+10):c1-'0';\n\t\tnum*=16;\n\t\tnum+=!isdigit(c2)?(c2-'A'+10):c2-'0';\n\n\t\tnums[i]=num;\n\t}\n\treturn compress(nums);\n}\n\nlong long int gcd(long long int l, long long int r) {\n\tif (l > r)return gcd(r, l);\n\telse {\n\t\tif (r%l) {\n\t\t\treturn gcd(l, r%l);\n\n\t\t}\n\t\telse {\n\t\t\treturn l;\n\t\t}\n\t}\n}\n\nint main() {\n\tint Q;cin>>Q;\n\twhile (Q--) {\n\t\tint N;cin>>N;\n\n\t\tvector<vector<int>>rythms;\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\tstring st; cin >> st;\n\t\t\trythms.push_back(mk(st));\n\t\t}\n\n\t\tint alca=1;\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\talca=alca*rythms[i].size()/gcd(alca,rythms[i].size());\n\t\t\tif (alca > 1024) {\n\t\t\t\talca=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (alca == -1) {\n\t\t\tcout<<\"Too complex.\"<<endl;\n\t\t}\n\t\telse {\n\t\t\tvector<int>anss(alca);\n\t\t\tfor (auto rythm: rythms) {\n\t\t\t\t\n\t\t\t\tfor (int i = 0; i < rythm.size(); ++i) {\n\t\t\t\t\tanss[i*(alca/rythm.size())] |= rythm[i];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tanss=compress(anss);\n\t\t\tfor (auto ans : anss) {\n\t\t\t\tint l=ans/16;\n\t\t\t\tint r=ans%16;\n\t\t\t\tif(l>=10)cout<<string(1,char('A'+l-10));\n\t\t\t\telse cout<<l;\n\n\t\t\t\tif(r>=10)cout<<string(1,char('A'+r-10));\n\t\t\t\telse cout<<r;\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <ctime>\n#include <iostream>\n#include <algorithm>\n#include <sstream>\n#include <string>\n#include <vector>\n#include <queue>\n#include <stack>\n#include <map>\n#include <set>\n#include <utility>\n#include <cctype>\n#include <numeric>\n#include <cassert>\nusing namespace std;\n\n#define rep(i,n) for(int (i)=0; (i)<(int)(n); ++(i))\n#define foreach(c,i) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n\nint gcd(int a, int b) {\n  if (b == 0) return a;\n  return gcd(b, a % b);\n}\n\nint c2i(const char c) { return c-'0'; }\n\nint s0x2i(const string& s) {\n  return c2i(s[0]) * 16 + c2i(s[1]);\n}\n\nvector<char> conv;\n\nint N;\nvector<string> vs;\nconst string zero = \"00\";\n\nvoid solve() {\n  vector<int> denoms;\n  rep(i,N) {\n    const int baseDenom = vs[i].size() / 2;\n    for (int j = 0; j < vs[i].size(); j+=2) {\n      string sub = vs[i].substr(j, 2);\n      if (sub == zero) continue;\n      int num = j / 2;\n      int denom = baseDenom / gcd(baseDenom, num);\n\n      // if (baseDenom == 880 && num == 776) {\n      //   printf(\"especially !! denom->%d\\n\", denom);\n      // }\n      \n      denoms.push_back(denom);\n    }\n  }\n  \n  sort(denoms.begin(), denoms.end());\n  denoms.erase(unique(denoms.begin(), denoms.end()), denoms.end());\n  // rep(i,denoms.size()) {printf(\"[%d]\", denoms[i]);} puts(\"\");\n\n  map<int,int> m;\n  rep(i,denoms.size()) {\n    int num = denoms[i];\n    for (int j = 2; j * j <= num; ++j) {\n      int cnt = 0;\n      while (num % j == 0) {\n        ++cnt;\n        num /= j;\n      }\n      if (cnt) {\n        m[j] = max(m[j], cnt);\n      }\n    }\n    if (num > 1 && m.count(num) == 0)\n      m[num] = 1;\n  }\n\n  // foreach(m, itr) { printf(\"[%d:%d]\", itr->first, itr->second); } puts(\"\"); \n\n  int finalDenom = 1;\n  foreach(m, itr) {\n    finalDenom *= pow(itr->first, itr->second);\n    if (finalDenom > (2048)/2) break;\n  }\n  \n  // printf(\"finalDenom::%d\\n\", finalDenom);\n  if (finalDenom > (2048/2)) {\n    cout << \"Too complex.\" << endl;\n    return;\n  }\n\n  vector<int> resInt(finalDenom, 0);\n  rep(i,N) {\n    const int baseDenom = vs[i].size() / 2;\n    for (int j = 0; j < vs[i].size(); j+=2) {\n      string sub = vs[i].substr(j, 2);\n      int num = s0x2i(sub); // index = (j/2) / gcd(baseDenom, j/2);\n      if (num == 0) continue;\n      const int kgcd = gcd(baseDenom, j/2);\n      int index = (j/2) / kgcd;\n      \n      if (finalDenom > (baseDenom/kgcd)) {\n        index *= finalDenom/(baseDenom/kgcd);\n        // index = (j / 2) * (finalDenom / gcd(baseDenom, j/2));\n      } else {\n        index /= (baseDenom/kgcd)/finalDenom;\n        // index = (j / 2) / (gcd(baseDenom, j/2) / finalDenom);\n      }\n      if (index >= finalDenom) {\n        // printf(\"index:finalDenom -- %d:%d\\n\", index, finalDenom);\n        // printf(\"j:vs[i].size() -- %d:%d\\n\", j, vs[i].size());\n        // printf(\"num -- %d\\n\", num);\n      }\n      assert(index < finalDenom);\n      resInt[index] += num;\n    }\n  }\n\n  rep(i,resInt.size()) {\n    int num = resInt[i];\n    if (num > 255) {\n      printf(\"num assert :: %d\\n\", num);\n    }\n    assert(num <= 255);\n    cout << conv[num/16] << conv[num%16];\n  }\n  cout << endl;\n}\n\nvoid input() {\n  // vs clear\n  vs.clear();\n  \n  cin >> N;\n  cin.ignore();\n  string s;\n  rep(i,N) {\n    getline(cin, s);\n    vs.push_back(s);\n  }\n}\n\nint main() {\n  // cout << \"gcd(1760, 1552) = \" << gcd(1760, 1552) << endl;\n  rep(i,10) {\n    conv.push_back('0'+i);\n  }\n  rep(i,6) {\n    conv.push_back('A'+i);\n  }\n  int T;\n  cin >> T;\n  int cT = T;\n  while (T--) {\n    // cout << \"Case #\" << cT - T << endl;\n    input();\n    solve();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9'){\n            num+=s[j]-'0';\n        }\n        else{\n            num+=s[j]-'A'+10;\n        }\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    // iツづ個妥・ツつォツつウツづ個療アツづ可按ウツ縮ツつキツづゥ\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        // ツ按ウツ縮ツづつォツづゥツつゥツチツェツッツク\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        // ツ按ウツ縮ツ嘉つ能\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++){\n                num|=nums[j][i];\n            }\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            vector<string> ret;\n            for(int i=0;i<res.size();i++)\n                cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\nint gcd(int a, int b){\n  if(a > b) swap(a,b);\n  if(a == 0) return b;\n  return gcd(a, b%a);\n}\n\nchar toChar(int i){\n  if(i<10) return i+'0';\n  return 'A'+(i-10);\n}\n\nint main(){\n  int n; cin>>n;\n  while(n --> 0){\n    int m; cin>>m;\n    vector<string> str(m);\n    vector<int> step(m);\n    REP(i,m){\n      cin>>str[i];\n      for(int j = 2; j<=(str[i].size()/2); j++){\n        if((str[i].size()/2) % j != 0) continue;\n        bool flag = true;\n        REP(k,str[i].size()/2){\n          //printf(\"test: %c %c\\n\",str[i][k*2],str[i][k*2+1]);\n          if(k % j == 0) continue;\n          if(str[i][k*2] == '0' && str[i][k*2+1] == '0')\n            continue;\n          flag = false;\n          break;\n        }\n        if(flag){\n          string tmp;\n          REP(k,str[i].size()/2){\n            if(k % j == 0){\n              tmp += str[i][k*2];\n              tmp += str[i][k*2+1];\n            }\n          }\n          str[i] = tmp;\n          j--;\n          //cout << \"tmp:\" << tmp << endl;\n          //cout << \"size:\" << tmp.size() << endl;\n        }\n      }\n    }\n    int len = 1;\n    REP(i,m){\n      int tmp = str[i].size()/2;\n      len = len * tmp / gcd(len, tmp);\n      if(len > 1024) break;\n    }\n    if(len > 1024){\n      puts(\"Too complex.\");\n      continue;\n    }\n    REP(i,m){\n      step[i] = len / (str[i].size()/2);\n    }\n    char buff[len*2 + 1];\n    buff[len*2] = '\\0';\n    REP(i, len){\n      int fst = 0;\n      int scd = 0;\n      REP(j,m){\n        if(i % step[j] == 0){\n          //cout << str[j][(i/step[j])*2] << endl;\n          //cout << str[j][(i/step[j])*2+1] << endl;\n          fst |= str[j][(i/step[j])*2] - '0';\n          scd |= str[j][(i/step[j])*2 + 1] - '0';\n        }\n      }\n      buff[i*2] = toChar(fst);\n      buff[i*2+1] = toChar(scd);\n    }\n    puts(buff);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  ll g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> >&ans,ll &ansnum, \n\t   vector<pair<int,ll> >&in,ll &num){\n  ll l=ansnum*num/gcd(ansnum,num);\n\n  ll tmp=l/num;\n  rep(j,in.size()){\n    in[j].sec*=tmp;\n  }\n  tmp=l/ansnum;\n  rep(j,ans.size()){\n    ans[j].sec*=tmp;\n  }\n  \n  ansnum=l;\n  vector<pair<int,ll> >& out2=ans;\n  rep(k,in.size()){\n    bool hassame=false;\n    rep(j,out2.size()){\n      if (out2[j].sec == in[k].sec){\n\tout2[j].fir|=in[k].fir;\n\thassame=true;\n\tbreak;\n      }\n    }\n    if (!hassame)out2.pb(in[k]);\n  }\n\n  minimize(out2,ansnum);\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in,ll *num){\n  for(int i=0;i<n;i++){\n    for(int j=i+1;j<n;j++){\n      if (num[j] < num[i])swap(num[i],num[j]),swap(in[i],in[j]);\n    }\n  }\n  vector<pair<int,ll> > &ans=in[0];\n  minimize(ans,num[0]);\n  REP(i,1,n){\n    solve(n,ans,num[0],in[i],num[i]);\n    if (num[0] > 1024){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n\n  vector<int> out(num[0],0);\n  rep(i,ans.size()){\n    out[ans[i].sec]=ans[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    compute(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g=Gcd(m,n);\n\treturn m * n / g; \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<unsigned char>> mm(n);\n\t\tstring m;\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m;\n\t\t\tmm[j].reserve(m.length()/2);\n\t\t\tfor(int k=0;k<m.length();k+=2){\n\t\t\t\tchar c0=m[k];\n\t\t\t\tchar c1=m[k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n//\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<n;j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n\t\tcout << len << endl;\n\t\tvector<unsigned char> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t}else{\n\t\t\tfor(int j=0;j<len;j+=g){\n\t\t\t\tint n0=ans[j]/16;\n\t\t\t\tint n1=ans[j]%16;\n\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> > *in,ll *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n  }\n  \n  ll ansnum=l;\n  rep(i,n){\n    ll tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n    }\n  }\n\n  vector<pair<int,ll> > out2;\n  rep(i,n){\n    rep(k,in[i].size()){\n      bool hassame=false;\n      rep(j,out2.size()){\n\tif (out2[j].sec == in[i][k].sec){\n\t  out2[j].fir|=in[i][k].fir;\n\t  hassame=true;\n\t  break;\n\t}\n      }\n      if (!hassame)out2.pb(in[i][k]);\n    }\n  }\n\n  minimize(out2,ansnum);\n\n  if (ansnum > 1024){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n  if (ansnum < 0)return ;\n\n  vector<int> out(ansnum,0);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in){\n\n}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;  \n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n\t\n\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,int> > *in,int *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n    if (l > 2048){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n  \n  //cout << l << endl;\n  vector<int> out(l);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n      out[in[i][j].sec]|=in[i][j].fir;\n    }\n  }\n  vector<pair<int,int> > out2;\n  rep(i,out.size()){\n    if (out[i] != 0)out2.pb(mp(out[i],i));\n  }\n  int ansnum=out.size();\n  minimize(out2,ansnum);\n  out.clear();\n  out=vector<int>(ansnum);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<vector>\n#include<utility>\n#include<cstring>\n\nusing namespace std;\n\nint gcd(int a,int b){\n  return b?gcd(b,a%b):a;\n}\n\nint main(){\n  int T;\n  scanf(\"%d\",&T);\n  while(T--){\n    int N;\n    scanf(\"%d\",&N);\n    vector<pair<int,int> > v[16];\n    while(N--){\n      char buf[2049];\n      scanf(\"%s\",buf);\n      int l=strlen(buf);\n      for(int i=0;i<l;i+=2){\n\tchar n[3]={};\n\tn[0]=buf[i];\n\tn[1]=buf[i+1];\n\tint b=strtol(n,nullptr,16);\n\tfor(int j=0;j<16;j++){\n\t  if(b>>j&1){\n\t    v[j].push_back((i==0)?make_pair(0,1):make_pair(i/gcd(i,l),l/gcd(i,l)));\n\t  }\n\t}\n      }\n    }\n    int den=1;\n    for(auto e:v){\n      for(auto f:e){\n\tden=den*f.second/gcd(den,f.second);\n\tif(den>1024)goto fail;\n      }\n    }\n    {\n      int syn[1024]={};\n      for(int i=0;i<16;i++){\n\tfor(auto e:v[i]){\n\t  syn[e.first*den/e.second]|=1<<i;\n\t}\n      }\n      for(int i=0;i<den;i++){\n\tprintf(\"%02X\",syn[i]);\n      }\n      puts(\"\");\n      continue;\n    }\n  fail:\n    puts(\"Too complex.\");\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        //res=dePos(res);\n        //if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        //else{\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n        //}\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#define _GLIBCXX_DEBUG\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\nvector<vector<short> > RI(10,vector<short>(2000));\nvector<short> ret(2000);\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        vector<int> resi(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            resi[i] = s.length()/2;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                ss >> RI[i][j/2];\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = resi[i];\n            for(int j=0;j<(int)resi[i];j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,resi[i]/least);\n        }\n        if(len > 1024){\n            cout << \"Too complex.\" << endl;\n        }else{\n            for(int i=0;i<1024;i++) ret[i] = 0;\n            for(int i=0;i<N;i++){\n                for(int j=0;j<resi[i];j++){\n                    if((j*len) % resi[i] == 0){\n                        int here = j*len/resi[i];\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            for(int i=0;i<len;i++){\n                cout << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n                cerr << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            cout << endl;\n            cerr << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            //if(j>=sz||(j%(sz/i))>=sz){\n            //    return vector<us>();\n            //}\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                //if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            if(nums[i].size()==0){\n                continue;\n            }\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        //if(match){\n        //    vector<us> tmp;\n        //    tmp.push_back(res[0]);\n        //    res=tmp;\n        //}\n        //else{\n        res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            //if(j>=sz||(j%(sz/i))>=sz){\n            //    return vector<us>();\n            //}\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                //if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                //break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        //if(match){\n        //    vector<us> tmp;\n        //    tmp.push_back(res[0]);\n        //    res=tmp;\n        //}\n        //else{\n        res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    while(L>1){\n      bool un=false;\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  if(i+j>sum.vf.size()){\n\t    un=true;\n\t    break;\n\t  }\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n      }\n      if(!un){\n\tfor(int i=0;i<sum.vf.size();i+=L){\n\t  for(int j=1;j<L;++j){\n\t    sum.vf[i+j]=-1;\n\t  }\n\t}\n\tbreak;\n      }\n      --L;\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n    \n    string s;\n    getline(cin,s);\n    for(int i = 0; i < N; ++i){\n      getline(cin,s);\n      int len;\n      Phrase t(s);\n\n      if(s.length()==0)t.vf.push_back(0);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos(nums[i]);\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            res=dePos(res);\n            res=dePos2(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g = Gcd(m, n);\n\treturn m * n / g;\n}\n\nconst char *str = \"0123456789ABCDEF\";\n\nint f(char c0, char c1){\n\tconst char *p0 = strchr(str, c0);\n\tconst char *p1 = strchr(str, c1);\n\treturn (p0 - str) * 16 + (p1 - str);\n}\n\nint length(string &s){\n\tint g = s.length()/2;\n\tfor (int j = 2; j<s.length(); j+=2){\n\t\tint n = f(s[j], s[j + 1]);\n\t\tif (n != 0) g = Gcd(g, j / 2);\n\t}\n\treturn g;\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor (int i = 0; i<N; i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<unsigned char>> mm(n);\n\t\tstring m;\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tcin >> m;\n\n\t\t\tint ln = length(m);\n\t\t\tint g = m.length() / ln;\n\t\t\tmm[j].reserve(ln);\n\t\t\tfor (int k = 0; k<m.length(); k += g){\n\t\t\t\tchar c0 = m[k];\n\t\t\t\tchar c1 = m[k + 1];\n\t\t\t\tint num = f(c0, c1);\n\t\t\t\tmm[j].push_back(num);\n\t\t\t\t//\t\t\t\tcout << num << \" \";\n\t\t\t}\n\t\t\t//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor (int j = 1; j<n; j++){\n\t\t\tlen = Lcm(len, mm[j].size());\n\t\t}\n\t\tcout << len << endl;\n\t\tvector<unsigned char> ans(len, 0);\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tint g = len / mm[j].size();\n\t\t\tfor (int k = 0; k<mm[j].size(); k++){\n\t\t\t\tans[k*g] |= mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g = len;\n\t\tfor (int j = 1; j<len; j++){\n\t\t\tif (ans[j] != 0) g = Gcd(g, j);\n\t\t}\n\t\tif (len / g>1024){\n//\t\t\tcout << \"Too complex.\";\n\t\t}\n\t\telse{\n\t\t\tfor (int j = 0; j<len; j += g){\n\t\t\t\tint n0 = ans[j] / 16;\n\t\t\t\tint n1 = ans[j] % 16;\n//\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<vector>\n#include<bitset>\nusing namespace std;\nint GCD(int x,int y)\n{\n\twhile(int z=x%y)x=y,y=z;\n\treturn y;\n}\nint LCM(int x,int y){return x/GCD(x,y)*y;}\nint A(char c)\n{\n\tchar s[2]={c};\n\treturn strtol(s,0,16);\n}\nint F(vector<int>&v,int n)\n{\n\tvector<int>u;\n\tfor(int i=0;i<v.size();++i)\n\t{\n\t\tif(i%n)\n\t\t{\n\t\t\tif(v[i])return 0;\n\t\t}\n\t\telse u.push_back(v[i]);\n\t}\n\tv=u;\n\treturn 1;\n}\nint main()\n{\n\tconst int N=2050;\n\tint n,T,i,j,d;\n\tbitset<N>P;\n\tP.set();\n\tP[0]=P[1]=0;\n\tfor(i=2;i*2<N;++i)if(P[i])for(j=i*2;j<N;j+=i)P[j]=0;\nscanf(\"%d\",&T);\n\tvector<vector<int> >r;\n\tvector<int>v;\n\tchar*p,s[2049];\n\twhile(T--)\n\t{\n\t\tr.clear();\n\t\tscanf(\"%d\",&n);\n\t\twhile(n--)\n\t\t{\n\t\t\tv.clear();\n\t\t\tscanf(\"%s\",s);\n\t\t\tfor(p=s;*p;p+=2)v.push_back(A(*p)*16+A(p[1]));\n\t\t\tfor(i=v.size();i>1;)\n\t\t\t{\n\t\t\t\tif(P[i]&&v.size()%i==0 && F(v,i));\n\t\t\t\telse --i;\n\t\t\t}\n\t\t\tr.push_back(v);\n\t\t}\n\t\tfor(d=1,i=0;i<r.size();++i)\n\t\t{\n\t\t\td=LCM(d,r[i].size());\n\t\t\tif(d>1024)goto E;\n\t\t}\n\t\tv.resize(d,0);\n\t\tfor(i=0;i<r.size();++i)\n\t\t\tfor(j=0;j<r[i].size();++j)\n\t\t\t\tv[d/r[i].size()*j]|=r[i][j];\n\t\tfor(i=0;i<v.size();++i)printf(\"%02X\",v[i]);\n\t\tputs(\"\");\n\n\t\tcontinue;\nE:;\n\t\tputs(\"Too complex.\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nint gcd(int a,int b){ return b?gcd(b,a%b):a; }\nint lcm(int a,int b){ return a/gcd(a,b)*b; }\n\nint regularize(const char *s,int *r){\n\tint len=strlen(s)/2;\n\trep(i,len){\n\t\tchar x[3]={s[2*i],s[2*i+1],'\\0'};\n\t\tsscanf(x,\"%X\",r+i);\n\t}\n\n\tfor(int i=1;i<=len;i++) if(len%i==0) {\n\t\tbool ok=true;\n\t\trep(j,i) for(int k=1;k<len/i;k++) if(r[j*len/i+k]!=0) ok=false;\n\t\tif(ok){\n\t\t\trep(j,i) r[j]=r[j*len/i];\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nint main(){\n\tint T; scanf(\"%d\",&T);\n\twhile(T--){\n\t\tint n,l[8]; scanf(\"%d\",&n);\n\t\tstatic int r[8][1024];\n\t\trep(i,n){\n\t\t\tchar s[2049]; scanf(\"%s\",s);\n\t\t\tl[i]=regularize(s,r[i]);\n\t\t}\n\n\t\tint len=1;\n\t\tbool over=false;\n\t\trep(i,n){\n\t\t\tlen=lcm(len,l[i]);\n\t\t\tif(len>1024) over=true;\n\t\t}\n\t\tif(over){\n\t\t\tputs(\"Too complex.\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tint ans[1024]={};\n\t\trep(i,n) rep(j,l[i]) ans[j*len/l[i]]|=r[i][j];\n\t\trep(j,len) printf(\"%02X\",ans[j]);\n\t\tputs(\"\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#define _GLIBCXX_DEBUG\n\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\nvector<vector<short> > RI(8,vector<short>(1024));\nvector<short> ret(1024);\nstring s;\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n\n        vector<int> resi(N);\n        for(int i=0;i<N;i++){\n            cin >> s;\n            resi[i] = s.length()/2;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                ss >> RI[i][j/2];\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = resi[i];\n            for(int j=0;j<(int)resi[i];j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,resi[i]/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            for(int i=0;i<1024;i++) ret[i] = 0;\n\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)resi[i];j++){\n                    if((j*len) % (int)resi[i] == 0){\n                        int here = j*len /resi[i];\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            for(int i=0;i<len;i++){\n                cout << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            cout << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nll gcd(int n, int m){\n  return (n % m) ? gcd(m, n % m) : m;\n}\nll lcm(int n, int m){\n  return (ll)n * m / gcd(n, m);\n}\nint toint(string unit){\n  int n;\n  sscanf(unit.c_str(), \"%x\", &n);\n  return n;\n}\nstring tostr(vector<int> v){\n  string res;\n  REP(i, v.size()){\n    int n = v[i];\n    char s[100];\n    sprintf(s, \"%02X\", n);\n    res +=  string(s);\n  }\n  return res;\n}\n\nint main(){\n  int T;\n  cin>>T;\n  while(T--){\n    int N; cin>>N;\n    string s[8];\n    ll len = 1;\n    REP(i, N){\n      cin>>s[i];\n      REP(j, s[i].size()/2) if(s[i].substr(j * 2, 2) != \"00\"){\n        //printf(\"%d/%d \", j, s[i].size() /2);\n        if(len <= 1024)len = lcm(len, (s[i].size() / 2 / gcd(j, s[i].size() / 2)));\n      }\n    }\n    if(len > 1024){\n      cout<<\"Too complex.\"<<endl;\n      continue;\n    }\n    vector<int> data(len);\n    REP(i, len){\n      REP(j, N){\n        //int l = s[j].size() / 2;\n        //if(i * l % len == 0) data[i] |= toint(s[j].substr(i * l / len * 2, 2));\n      }\n    }\n    cout<<tostr(data)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n            nums[i]=dePos(nums[i]);\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        res=dePos(res);\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\ntypedef unsigned char uchar;\n\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n\n        vector<vector<short> > RI(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            RI[i].resize(s.length()/2);\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                short x;\n                ss >> x;\n                RI[i][j/2] = x;\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<(int)RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            vector<short> ret(len);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)RI[i].size();j++){\n                    if((j*len) % (int)RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    bool un=false;\n    for(int i=0;i<sum.vf.size();i+=L){\n      for(int j=1;j<L;++j){\n\tif(i+j>=sum.vf.size()){\n\t  un=true;\n\t  break;\n\t}\n\tif(sum.vf[i+j]!=0){\n\t  un=true;\n\t  break;\n\t}\n      }\n    }\n    if(!un){\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  sum.vf[i+j]=-1;\n\t}\n      }\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n    \n    string s;\n    getline(cin,s);\n    for(int i = 0; i < N; ++i){\n      getline(cin,s);\n      int len;\n      Phrase t(s);\n\n      if(s.length()==0)t.vf.push_back(0);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g = Gcd(m, n);\n\treturn m * n / g;\n}\n\nconst char *str = \"0123456789ABCDEF\";\n\nint f(char c0, char c1){\n\tconst char *p0 = strchr(str, c0);\n\tconst char *p1 = strchr(str, c1);\n\treturn (p0 - str) * 16 + (p1 - str);\n}\n\nint length(string &s){\n\tint g = s.length()/2;\n\tfor (int j = 2; j<s.length(); j+=2){\n\t\tint n = f(s[j], s[j + 1]);\n\t\tif (n != 0) g = Gcd(g, j / 2);\n\t}\n\treturn g;\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor (int i = 0; i<N; i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<int>> mm(n);\n\t\tstring m;\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tcin >> m;\n\n\t\t\tint ln = length(m);\n\t\t\tint g = m.length() / ln;\n\t\t\tmm[j].reserve(ln);\n\t\t\tfor (int k = 0; k<m.length(); k += g){\n\t\t\t\tchar c0 = m[k];\n\t\t\t\tchar c1 = m[k + 1];\n\t\t\t\tint num = f(c0, c1);\n\t\t\t\tmm[j].push_back(num);\n\t\t\t\t//\t\t\t\tcout << num << \" \";\n\t\t\t}\n\t\t\t//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor (int j = 1; j<n; j++){\n\t\t\tlen = Lcm(len, mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len, 0);\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tint g = len / mm[j].size();\n\t\t\tfor (int k = 0; k<mm[j].size(); k++){\n\t\t\t\tans[k*g] |= mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g = len;\n\t\tfor (int j = 1; j<len; j++){\n\t\t\tif (ans[j] != 0) g = Gcd(g, j);\n\t\t}\n\t\tif (len / g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t}\n\t\telse{\n\t\t\tfor (int j = 0; j<len; j += g){\n\t\t\t\tint n0 = ans[j] / 16;\n\t\t\t\tint n1 = ans[j] % 16;\n\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\nusing namespace std;\n\ntypedef long long ll;\nconst int INF = 1e+8;\nstring to_c = \"0123456789ABCDEF\";\n\n// aとbの最大公約数を返す(ユークリッドの互除法)\nll gcd(ll a, ll b){\n    return (b > 0)? gcd(b, a%b) : a ;\n}\n\n// aとbの最小公倍数を返す\nll lcm(ll a, ll b){\n    return a / gcd(a, b) * b ;\n}\n\n// 分数型, p : 分子, q : 分母\nstruct Fraction{\n\tll p, q;\n\t// コンストラクタ\n\tFraction(ll p_, ll q_){\n\t\tif( p_ == 0 ){ // 分子が 0 のとき\n\t\t\tp = p_;\n\t\t\tq = 1;\n\t\t}else if( q_ == 0 ){ // 分母が 0 のとき\n\t\t\tp = INF;\n\t\t\tq = 1;\n\t\t}else{\n\t\t\tll d = gcd(abs(p_),q_);\n\t\t\tp_ /= d;\n\t\t\tq_ /= d;\n\t\t\tp = p_;\n\t\t\tq = q_;\n\t\t}\n\t}\n\tFraction(ll a){\n\t\tp = a;\n\t\tq = 1;\n\t}\n\tFraction operator*(const Fraction& n){\n\t\treturn Fraction( p * n.p , q * n.q );\n\t}\n\tFraction operator/(const Fraction& n){\n\t\treturn Fraction( p * n.q , q * n.p );\n\t}\n\tFraction operator+(const Fraction& n){\n\t\treturn Fraction( p * n.q + n.p * q , q * n.q );\n\t}\n\tFraction operator-(const Fraction& n){\n\t\treturn Fraction( p * n.q - n.p * q , q * n.q );\n\t}\n\tbool operator==(const Fraction& n){\n\t\treturn (p == n.p && q == n.q);\n\t}\n};\ntypedef pair<Fraction,int> P;\n\n// 複数の最小公倍数\nll n_lcm(vector<P> &ans){\n\tll res = 1;\n\tfor(int i=0 ; i < ans.size() ; i++ ){\n\t\tres = lcm(res, ans[i].first.q);\n\t\tif( res > 1024 ) return -1;\n\t}\n\treturn res;\n}\n\n// 16進数2桁を返す.\nstring to_hex(int x){\n\tint a = x / 16;\n\tint b = x % 16;\n\tstring s;\n\ts.push_back( to_c[a] );\n\ts.push_back( to_c[b] );\n\treturn s;\n}\n\nint main(){\n\tint T;\n\tcin >> T;\n\tfor(int t_ = 0 ; t_ < T ; t_++ ){\n\t\tint N;\n\t\tvector<P> ans;\n\t\tcin >> N;\n\t\tfor(int i=0 ; i < N ; i++ ){\n\t\t\tstring R;\n\t\t\tcin >> R;\n\t\t\t\n\t\t\tfor(int i=0 ; i < R.size() ; i += 2 ){\n\t\t\t\tint k = (R[i] - '0') * 16 + (R[i+1] - '0');\n\t\t\t\tif( k ){\n\t\t\t\t\tans.push_back( P(Fraction(i/2, R.size()/2), k) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\t// 音が鳴っていないとき\n\t\tif( ans.size() == 0 ){\n\t\t\tcout << \"00\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tll L = n_lcm(ans);\n\t\tif( L == -1 ){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t}else{\n\t\t\tvector<int> a(L, 0);\n\t\t\tfor(int i=0 ; i < ans.size() ; i++ ){\n\t\t\t\tint k = (ans[i].first * Fraction(L)).p;\n\t\t\t\ta[k] |= ans[i].second;\n\t\t\t}\n\t\t\tfor(int i=0 ; i < L ; i++ ){\n\t\t\t\tcout << to_hex(a[i]);\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <cstdio>\n#include <cstdlib>\n#include <cmath>\n#include <ctime>\n#include <cstring>\n#include <string>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <map>\n#include <set>\n#include <bitset>\n#include <numeric>\n#include <utility>\n#include <iomanip>\n#include <algorithm>\n#include <functional>\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vint;\ntypedef vector<long long> vll;\ntypedef pair<int,int> pint;\ntypedef pair<long long, long long> pll;\n\n#define MP make_pair\n#define PB push_back\n#define ALL(s) (s).begin(),(s).end()\n#define EACH(i, s) for (__typeof__((s).begin()) i = (s).begin(); i != (s).end(); ++i)\n#define COUT(x) cout << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << endl\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, pair<T1,T2> P) \n{ return s << '<' << P.first << \", \" << P.second << '>'; }\ntemplate<class T> ostream& operator << (ostream &s, vector<T> P) \n{ for (int i = 0; i < P.size(); ++i) { if (i > 0) { s << \" \"; } s << P[i]; } return s; }\ntemplate<class T> ostream& operator << (ostream &s, vector<vector<T> > P) \n{ for (int i = 0; i < P.size(); ++i) { s << endl << P[i]; } return s << endl; }\ntemplate<class T1, class T2> ostream& operator << (ostream &s, map<T1,T2> P) \n{ EACH(it, P) { s << \"<\" << it->first << \"->\" << it->second << \"> \"; } return s; }\n\ninline int gcd(int a, int b) {\n    if (b == 0) return a;\n    if (a < 0) a = -a; if (b < 0) b = -b;\n    return gcd(b, a % b);\n}\ninline int lcm(int a, int b) {\n    int g = gcd(a, b);\n    return a * b / g;\n}\nstruct frac {\n    int first, second;\n    \n    frac normalize() {\n        if (second < 0) {first = -first; second = -second;}\n        int d = gcd(first, second);\n        if (d == 0) {first = 0; second = 1;}\n        else {first /= d; second /= d;}\n        return *this;\n    }\n    frac(int f = 0, int s = 1) : first(f), second(s) { normalize(); }\n    inline frac operator - () { (*this).first *= -1; return (*this); }\n    inline const frac& operator = (int a) { *this = frac(a, 1); return *this; }\n    inline const frac& operator += (const frac& a);\n    inline const frac& operator += (int a);\n    inline const frac& operator -= (const frac& a);\n    inline const frac& operator -= (int a);\n    inline const frac& operator *= (const frac& a);\n    inline const frac& operator *= (int a);\n    inline const frac& operator /= (const frac& a);\n    inline const frac& operator /= (int a);\n    friend ostream& operator << (ostream& s, const frac& f) { \n        s << f.first; if (f.second != 1) s << \"/\" << f.second; return s;\n    }\n};\nbool operator < (const frac& a, const frac& b) {\n    return a.first * b.second < a.second * b.first;\n}\nbool operator > (const frac& a, const frac& b) { return b < a; }\nbool operator <= (const frac& a, const frac& b) { return !(b < a); }\nbool operator >= (const frac& a, const frac& b) { return !(a < b); }\nbool operator != (const frac& a, const frac& b) { return a < b || b < a; }\nbool operator == (const frac& a, const frac& b) { return !(a < b) && !(b < a); }\n\nint CASE;\n\nint BASE[16] = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' };\nstring str;\n\nint main() {\n    //freopen( \"/Users/macuser/Dropbox/Contest/input.in\", \"r\", stdin );\n    cin >> CASE;\n    for (int AAA = 0; AAA < CASE; ++AAA) {\n        int n; cin >> n;\n        map<frac,int> ma;\n        for (int i = 0; i < n; ++i) {\n            cin >> str;\n            int bo = str.size();\n            for (int k = 0; k < str.size(); k += 2) {\n                string sub = str.substr(k, 2);\n                int num = 0;\n                for (int l = 0; l < 16; ++l) {\n                    if (BASE[l] == sub[0]) num += l * 16;\n                    if (BASE[l] == sub[1]) num += l;\n                }\n                if (num != 0) ma[ frac(k/2, bo/2) ] += num;\n            }\n        }\n        int LCM = 1;\n        \n        bool ok = true;\n        EACH(it,ma) {\n            LCM = lcm(LCM, it->first.second);\n            if (LCM > 1024) ok = false;\n        }\n\n        if (!ok) puts(\"Too complex.\");\n        else {\n            string res = \"\";\n            for (int i = 0; i < LCM*2; ++i) res += '0';\n            EACH(it,ma) {\n                int pos = (it->first.first) * LCM / (it->first.second);\n                int num = it->second;\n            \n                char c1 = BASE[num/16];\n                char c2 = BASE[num%16];\n            \n                res[pos*2] = c1;\n                res[pos*2+1] = c2;\n            }\n            cout << res << endl;\n        }\n    }\n    return 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    while(L>1){\n      bool un=false;\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  if(sum.vf[i+j]!=0){un=true;break;}\n\t}\n      }\n      if(!un){\n\tfor(int i=0;i<sum.vf.size();i+=L){\n\t  for(int j=1;j<L;++j){\n\t    sum.vf[i+j]=-1;\n\t  }\n\t}\n\tbreak;\n      }\n      --L;\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      char str[8192];\n      scanf(\"%s\",str);\n      s=str;\n      int len;\n      Phrase t(s);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g=Gcd(m,n);\n\treturn m * n / g; \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<int>> mm(n);\n\t\tstring m;\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m;\n\t\t\tmm[j].reserve(m.length()/2);\n\t\t\tfor(int k=0;k<m.length();k+=2){\n\t\t\t\tchar c0=m[k];\n\t\t\t\tchar c1=m[k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<n;j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t}else{\n\t\t\tfor(int j=0;j<len;j+=g){\n\t\t\t\tint n0=ans[j]/16;\n\t\t\t\tint n1=ans[j]%16;\n\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len_erase=0;\n  int zero_num=0;\n\n  bool cont=false;\n  for(int i = 0; i < sum.vf.size(); ++i){\n    if( sum.vf[i] != 0 ) cont=true;\n  }\n  if(!cont){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }\n  \n  for(int L = sum.vf.size()/2; L >= 2; --L){\n    if( sum.vf.size() % L == 0 ){\n      bool un = false;\n      for(int i = 0; i < sum.vf.size(); i+=L){\n\tfor(int j = 1; j < L; ++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n\tif(un)break;\n      }\n      if(!un){\n\tfor(int i = 0; i < sum.vf.size(); i+=L){\n\t  for(int j = 1; j < L; ++j){\n\t    sum.vf[i+j] = -1;\n\t  }\n\t}\n\tbreak;\n      }\n    }\n  }\n \n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  cin >> T;\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n\n    cin >> N;\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      cin >> s;\n      int len;\n      Phrase t(s);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<int>> mm(n);\n\t\tstring m;\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m;\n\t\t\tmm[j].reserve(m.length()/2);\n\t\t\tfor(int k=0;k<m.length();k+=2){\n\t\t\t\tchar c0=m[k];\n\t\t\t\tchar c1=m[k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<n;j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t}else{\n\t\t\tfor(int j=0;j<len;j+=g){\n\t\t\t\tint n0=ans[j]/16;\n\t\t\t\tint n1=ans[j]%16;\n\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len_erase=0;\n  int zero_num=0;\n\n  bool cont=false;\n  for(int i = 0; i < sum.vf.size(); ++i){\n    if( sum.vf[i] != 0 ) cont=true;\n  }\n  if(!cont){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }\n  \n  for(int L = sum.vf.size()/2; L >= 2; --L){\n    if( sum.vf.size() % L == 0 ){\n      bool un = false;\n      for(int i = 0; i < sum.vf.size(); i+=L){\n\tfor(int j = 1; j < L; ++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n\tif(un)break;\n      }\n      if(!un){\n\tfor(int i = 0; i < sum.vf.size(); i+=L){\n\t  for(int j = 1; j < L; ++j){\n\t    sum.vf[i+j] = -1;\n\t  }\n\t}\n\tbreak;\n      }\n    }\n  }\n \n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n    return ;\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  cin >> T;\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n\n    cin >> N;\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      cin >> s;\n      int len;\n      Phrase t(s);\n      while(true){\n\tlen = t.vf.size();\n\tEraseExtraZeroes(t);\n\tif(len==t.vf.size())break;\n      }\n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tmm[j].reserve(m[j].length()/2);\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<n;j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(i>0) cout << endl;\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<vector>\n#include<bitset>\nusing namespace std;\nint GCD(int x,int y)\n{\n\twhile(int z=x%y)x=y,y=z;\n\treturn y;\n}\nint LCM(int x,int y){return x/GCD(x,y)*y;}\nint A(char c)\n{\n\tchar s[2]={c};\n\treturn strtol(s,0,16);\n}\nint F(vector<int>&v,int n)\n{\n\tvector<int>u;\n\tfor(int i=0;i<v.size();++i)\n\t{\n\t\tif(i%n)\n\t\t{\n\t\t\tif(v[i])return 0;\n\t\t}\n\t\telse u.push_back(v[i]);\n\t}\n\tv=u;\n\treturn 1;\n}\nint main()\n{\n\tconst int N=2050;\n\tint n,T,i,j,d;\n\tbitset<N>P;\n\tP.set();\n\tP[0]=P[1]=0;\n\tfor(i=2;i*2<N;++i)if(P[i])for(j=i*2;j<N;j+=i)P[j]=0;\nscanf(\"%d\",&T);\n\tvector<vector<int> >r;\n\tvector<int>v;\n\tchar*p,s[2049];\n\twhile(T--)\n\t{\n\t\tr.clear();\n\t\tscanf(\"%d\",&n);\n\t\twhile(n--)\n\t\t{\n\t\t\tv.clear();\n\t\t\tscanf(\"%s\",s);\n\t\t\tfor(p=s;*p;p+=2)v.push_back(A(*p)*16+A(p[1]));\n\t\t\tfor(i=v.size();i>1;)\n\t\t\t{\n\t\t\t\tif(P[i]&&v.size()%i==0 && F(v,i));\n\t\t\t\telse --i;\n\t\t\t}\n\t\t\tr.push_back(v);\n\t\t}\n\t\tfor(d=1,i=0;i<r.size();++i)\n\t\t{\n\t\t\td=LCM(d,r[i].size());\n\t\t\tif(d>1024)goto E;\n\t\t}\n\t\tv.clear();\n\t\tv.resize(d,0);\n\t\tfor(i=0;i<r.size();++i)\n\t\t\tfor(j=0;j<r[i].size();++j)\n\t\t\t\tv[d/r[i].size()*j]|=r[i][j];\n\t\tfor(i=0;i<v.size();++i)printf(\"%02X\",v[i]);\n\t\tputs(\"\");\n\n\t\tcontinue;\nE:;\n\t\tputs(\"Too complex.\");\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\nvector<vector<int> > RI(8);\nvector<int> ret(1024);\nstringstream ss;\n\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        for(int i=0;i<N;i++){\n            RI[i].clear();\n            string s;\n            cin >> s;\n            for(int j=0;j<s.length();j+=2){\n                string here = s.substr(j,2);\n                ss.clear();\n                ss << hex << uppercase << here;\n                int x;\n                ss >> x;\n                RI[i].push_back(x);\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            ret.clear();\n            ret.resize(1024);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<RI[i].size();j++){\n                    if((j*len) % RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            ss.clear();\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nchar *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tchar *p0=strchr(str,c0);\n\tchar *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=0;\n\t\tif(n==1){\n\t\t\tlen=mm[0].size();\n\t\t}else{\n\t\t\tlen = Lcm(mm[0].size(),mm[1].size());\n\t\t\tfor(int j=2;j<mm.size();j++){\n\t\t\t\tlen = Lcm(len,mm[j].size());\n\t\t\t}\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "// g++ -std=c++11 a.cpp\n#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<unordered_map>\n#include<utility>\n#include<cmath>\n#include<random>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#include<assert.h>\n#include<typeinfo>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define FOR(i,a) for(auto i:a)\n#define pb push_back\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\n//#define int ll\ntypedef int Def;\ntypedef pair<Def,Def> pii;\ntypedef vector<Def> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<Def,pii> pip;\ntypedef vector<pip>vip;\n#define mt make_tuple\ntypedef tuple<int,int,int> tp;\ntypedef vector<tp> vt;\ntemplate<typename A,typename B>bool cmin(A &a,const B &b){return a>b?(a=b,true):false;}\ntemplate<typename A,typename B>bool cmax(A &a,const B &b){return a<b?(a=b,true):false;}\n//template<class C>constexpr int size(const C &c){return (int)c.size();}\n//template<class T,size_t N> constexpr int size(const T (&xs)[N])noexcept{return (int)N;}\nconst double PI=acos(-1);\nconst double EPS=1e-9;\nDef inf = sizeof(Def) == sizeof(long long) ? 2e18 : 1e9+10;\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nll gcd(ll a,ll b){\n\treturn (b==0?a:gcd(b,a%b));\n}\nll lcm(ll a,ll b){\n\treturn a/gcd(a,b)*b;\n}\nint main(){\n\tint q;\n\tcin>>q;\n\twhile(q--){\n\t\tint n;cin>>n;\n\t\tvs in(n);\n\t\trep(i,n)cin>>in[i];\n\t\t\n\t\trep(i,n){\n\t\t\tint t=in[i].size()/2;\n\t\t\trep(j,in[i].size())if(in[i][j]!='0')t=gcd(t,j/2);\n\t\t\tif(t==0){\n\t\t\t\tin[i]=\"00\";\n\t\t\t}else{\n\t\t\t\tstring w=\"\";\n\t\t\t\trep(j,in[i].size()/t/2){\n\t\t\t\t\tw+=in[i][j*2*t];\n\t\t\t\t\tw+=in[i][j*2*t+1];\n\t\t\t\t}\n\t\t\t\tin[i]=w;\n\t\t\t}\n\t\t}\n\t\tll t=1;\n\t\trep(i,n)t=lcm(t,in[i].size());\n//\t\trep(i,n)cout<<in[i]<<endl;cout<<endl;\n\t\tif(t>2048)cout<<\"Too complex.\"<<endl;\n\t\telse{\n\t\t\trep(i,n){\n\t\t\t\tint w=t/in[i].size();\n\t\t\t\tstring a=\"\";\n\t\t\t\trep(j,in[i].size()/2){\n\t\t\t\t\ta+=in[i][2*j];\n\t\t\t\t\ta+=in[i][2*j+1];\n\t\t\t\t\ta+=string(2*w-2,'0');\n\t\t\t\t}\n\t\t\t\tin[i]=a;\n\t\t\t}\n\t\t\trep(i,t){\n\t\t\t\tint s=0;\n\t\t\t\trep(j,n)s+=in[j][i]-'0';\n\t\t\t\tprintf(\"%01X\",s);\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}\n\n\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    while(L>1){\n      bool un=false;\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  if(sum.vf[i+j]!=0){un=true;break;}\n\t}\n      }\n      if(!un){\n\tfor(int i=0;i<sum.vf.size();i+=L){\n\t  for(int j=1;j<L;++j){\n\t    sum.vf[i+j]=-1;\n\t  }\n\t}\n\tbreak;\n      }\n      --L;\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      char str[8192];\n      scanf(\"%s\",str);\n      s=str;\n      int len;\n      Phrase t(s);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\n// ³kÅ«éñÈçÎA³k·é\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    // iÌå«³ÌñÉ³k·é\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        // ³kÅ«é©`FbN\n        bool isDecom=true;\n        // sz/iÂÌubNÉª\n        // »ê¼êÌÓªÇ¤ÈÁÄ¢é©`FbN\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        // ³kÂ\\\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    // ³ks\\\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        if(L>2000){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        // »ê¼êÌYp^[ÌTCYÌÅ¬ö{ðæé\n        // »Ì·³ÉSÄÌñð²®µA»Ìã¬\n        // ¬ãAp^[ð³k·é\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                // Yp^[ðL£\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        // ·³ð²®µ½ ÆA¬\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <algorithm>\n#include <iomanip>\n\nusing namespace std;\n\nint opt(int p[], int nlen){\n\tint m = 1;\n\twhile(m < nlen && !p[m]) ++m;\n\tfor(int i = m; i>1 ; i--){\n\t\tif(nlen%i==0){\n\t\t\tbool f = false;\n\t\t\tfor(int j = 0; !f && j < nlen; j++){\n\t\t\t\tif(j%i) f |= p[j];\n\t\t\t}\n\t\t\tif(!f){\n\t\t\t\tfor(int j = 0; j*i < nlen; j++){\n\t\t\t\t\tp[j] = p[j*i];\n\t\t\t\t}\n\t\t\t\treturn nlen/i;\n\t\t\t}\n\t\t}\n\t}\n\treturn nlen;\n}\n\nint mcp(const int _a[], int n){\n\tint a[8];\n\tfor(int i = 0; i < n; i++){\n\t\ta[i] = _a[i];\n\t}\n\tfor(int i = 1; i < n; i++){\n\t\tint b = a[i-1];\n\t\tint c = a[i];\n\t\twhile(a[i] != a[i-1]){\n\t\t\tif(a[i] < a[i-1]) a[i] += c;\n\t\t\telse a[i-1] += b;\n\t\t}\n\t}\n\treturn a[n-1];\n}\n\nint main(){\n\tint t;\n\tcin >> t;\n\twhile(t--){\n\t\tint n;\n\t\tcin >> n;\n\t\tchar c[8][2050];\n\t\tint len[8];\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tcin >> c[i];\n\t\t\tlen[i] = strlen(c[i]);\n\t\t}\n\t\tint pattern[8][1024];\n\t\tmemset(pattern,0,sizeof pattern);\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < len[i]; j++){\n\t\t\t\tpattern[i][j/2] *= 16;\n\t\t\t\tpattern[i][j/2] += c[i][j]-'0';\n\t\t\t}\n\t\t\tlen[i] = opt(pattern[i],len[i]/2);\n\t\t}\n\t\tint nmcp = mcp(len,n);\n\t\tif(nmcp > 1024){\n\t\t\tcout << \"Too complex\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint p[1024];\n\t\tmemset(p,0,sizeof(p));\n\t\tfor(int i = 0; i < n; i++){\n\t\t\tfor(int j = 0; j < nmcp; j++){\n\t\t\t\tint s = nmcp/len[i];\n\t\t\t\tif(j%s == 0){\n\t\t\t\t\tp[j] += pattern[i][j/s];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor(int i = 0; i < nmcp; i++){\n\t\t\tcout << hex <<setw(2) << setfill('0')<< uppercase << p[i];\n\t\t}\n\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<mm.size();j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(i>0) cout << endl;\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <set>\n#include <map>\n#include <queue>\n#include <sstream>\n#include <algorithm>\n#include <numeric>\n#include <cmath>\n#include <complex>\n#include <cstdio>\n#include <cstring>\n#include <cstdlib>\n#include <cassert>\n\n#define rep(i,n) for(int i=0;i<n;i++)\n#define rp(i,c) rep(i,(c).size())\n#define fr(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)\n#define mp make_pair\n#define pb push_back\n#define all(c) (c).begin(),(c).end()\n#define dbg(x) cerr<<#x<<\" = \"<<(x)<<endl\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef vector<int> vi;\ntypedef pair<int,int> pi;\nconst int inf=1<<28;\nconst double INF=1e10,EPS=1e-9;\n\nint n;\nint rythm[8][1024],len[8];\n\nint toi(char c)\n{\n\tif(isdigit(c))return c-'0';\n\treturn c-'A'+10;\n}\nchar toa(int a)\n{\n\tif(a<10)return '0'+a;\n\treturn 'A'+a-10;\n}\nint minimize(int *r,int l)\n{\n\tint mxi=1;\n\tfor(int i=2;i<=l;i++)if(l%i==0)\n\t{\n\t\tbool fail=0;\n\t\trep(j,l)if(j%i&&r[j]){fail=1;break;}\n\t\t\n\t\tif(!fail)mxi=i;\n\t}\n\trep(i,l/mxi)r[i]=r[i*mxi];\n\treturn l/mxi;\n}\n\nint main()\n{\n\tint cs; cin>>cs;\n\twhile(cs--)\n\t{\n\t\tcin>>n;\n\t\trep(i,n)\n\t\t{\n\t\t\tchar c[2100]; cin>>c;\n\t\t\tfor(int j=0;c[j];j+=2)rythm[i][j/2]=toi(c[j])*16+toi(c[j+1]);\n\t\t\tlen[i]=minimize(rythm[i],strlen(c)/2);\n\t\t}\n\t\tint ans[1024]={0},anslen=1;\n\t\trep(i,n)\n\t\t{\n\t\t\tint g=__gcd(anslen,len[i]);\n\t\t\tanslen*=len[i]/g;\n\t\t\tif(anslen>1024)\n\t\t\t{\n\t\t\t\tcout<<\"Too complex.\"<<endl; goto END;\n\t\t\t}\n\t\t}\n\t\trep(i,n)rep(j,len[i])ans[j*anslen/len[i]]|=rythm[i][j];\n\t\trep(i,anslen)cout<<toa(ans[i]/16)<<toa(ans[i]%16);\n\t\tcout<<endl;\n\t\t\n\t\tEND:;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n\t\n\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,int> > *in,int *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n    if (l > 1024){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n  \n  //cout << l << endl;\n  vector<int> out(l);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n      out[in[i][j].sec]|=in[i][j].fir;\n    }\n  }\n  vector<pair<int,int> > out2;\n  rep(i,out.size()){\n    if (out[i] != 0)out2.pb(mp(out[i],i));\n  }\n  int ansnum=out.size();\n  minimize(out2,ansnum);\n  out.clear();\n  out=vector<int>(ansnum);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\n\nint gcd(int a, int b){\n  if(b == 0) return a;\n  else return gcd(b, a % b);\n}\n\nint lcm(int a, int b){\n  return a / gcd(a, b) * b;\n}\n\nstring normalize(int L, string s){\n  stringstream ss;\n  int l = L / s.length() - 1;\n  for(int i = 0; i < s.length(); i += 2){\n    ss << s.substr(i, 2);\n    REP(j, l) ss << \"00\";\n  }\n  return ss.str();\n}\n\nstring conv(int n){\n  stringstream ss;\n  string s = \"0123456789ABCDEF\";\n  while(n){\n    ss << s[n % 16];\n    n /= 16;\n  }\n  string res = ss.str();\n  REVERSE(res);\n  while(res.length() < 2) res += \"0\";\n  REVERSE(res);\n  return res;\n}\n\nstring solve(int N, vector<string> &v){\n  int L = 1;\n  REP(i, N){\n    L = lcm(L, v[i].length());\n    if(L > 2048) return \"Too complex\";\n  }\n  REP(i, N) v[i] = normalize(L, v[i]);\n  stringstream res;\n  for(int i = 0; i < L; i += 2){\n    int n = 0;\n    REP(j, N) n += strtol(v[j].substr(i, 2).c_str(), NULL, 16);\n    res << conv(n);\n  }\n  return res.str();\n}\n\nint main() {\n  int T; cin >>T;\n  REP(t, T){\n    int N; cin >>N;\n    vector<string> v(N);\n    REP(i, N) cin >>v[i];\n    cout <<solve(N, v) <<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <sstream>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <climits>\n#include <queue>\n#include <set>\n#include <map>\n#include <valarray>\n#include <bitset>\n#include <stack>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst int INF = 1<<29;\nconst double PI = acos(-1);\nconst double EPS = 1e-8;\n\nll gcd(ll a, ll b) {\n  return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a, ll b) {\n  return a / gcd(a,b) * b;\n}\nll lcm(vector<ll> v) {\n  ll res = 1;\n  FOR(it,v) {\n    res = lcm(res, *it);\n    if (res > 1e9) return res;\n  }\n  return res;\n}\n\nint rhythm[8][1024];\nstring str[8];\nint ans[1024];\n\nint main() {\n  int T;\n  cin >> T;\n  while(T--) {\n    int n;\n    cin >> n;\n    vector<ll> size;\n    REP(i, n) {\n      cin >> str[i];\n      int sz = str[i].size()/2;\n      int g = sz;\n      REP(j,sz) {\n        int tmp = atoi(str[i].substr(j*2,2).c_str());\n        rhythm[i][j] = tmp;\n        if (tmp)\n          g = gcd(g, j);\n      }\n      for (int j=0; j*g<sz; ++j) {\n        rhythm[i][j] = rhythm[i][j*g];\n      }\n      size.push_back(sz/g);\n    }\n    ll l = lcm(size);\n    if (l > 1024) {\n      cout << \"Too complex.\" << endl;\n      continue;\n    }\n    memset(ans,0,sizeof(ans));\n    REP(i, n) {\n      int p = l/size[i];\n      REP(j,size[i]) {\n        ans[j*p] |= rhythm[i][j];\n      }\n    }\n    REP(i, l) {\n      printf(\"%02X\", ans[i]);\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nll gcd(int n, int m){\n  return (n % m) ? gcd(m, n % m) : m;\n}\nll lcm(int n, int m){\n  return (ll)n * m / gcd(n, m);\n}\nint toint(string unit){\n  int n;\n  sscanf(unit.c_str(), \"%x\", &n);\n  return n;\n}\nstring tostr(vector<int> v){\n  string res;\n  REP(i, v.size()){\n    int n = v[i];\n    char s[100];\n    sprintf(s, \"%02X\", n);\n    res +=  string(s);\n  }\n  return res;\n}\n\nint main(){\n  int T;\n  cin>>T;\n  while(T--){\n    int N; cin>>N;\n    string s[8];\n    ll len = 1;\n    REP(i, N){\n      cin>>s[i];\n      REP(j, s[i].size()/2) if(s[i].substr(j * 2, 2) != \"00\"){\n        //printf(\"%d/%d \", j, s[i].size() /2);\n        if(len <= 1024)len = lcm(len, (s[i].size() / 2 / gcd(j, s[i].size() / 2)));\n      }\n    }\n    if(len > 1024){\n      cout<<\"Too complex.\"<<endl;\n      continue;\n    }\n    vector<int> data(len);\n    REP(i, len){\n      REP(j, N){\n        int l = s[j].size() / 2;\n        if(i * l % len == 0) data[i] |= toint(s[j].substr(i * l / len * 2, 2));\n      }\n    }\n    cout<<tostr(data)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\nint gcd(int a,int b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0){\n      num=1;\n      return;\n    }\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0 && num%g == 0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nbool check(int n,vector<pair<int,int> > *in,int *num,int l){\n  rep(i,n){\n    if (l % num[i] != 0)return false;\n  }\n  \n  vector<int> out(l,0);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      out[in[i][j].sec*tmp]|=in[i][j].fir;\n    }\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");  \n  return true;\n}\n\nvoid solve(int n,vector<pair<int,int> >*in,int *num){\n  REP(i,1,1025){\n    if (check(n,in,num,i))return;\n  }\n  printf(\"Too complex.\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n//       cout <<\"num \" <<  num[i] << endl;\n//              rep(j,in[i].size()){\n//        \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n//              }\n//              cout << endl;\n    }\n\n\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\nvector<vector<short> > RI(8,vector<short>(1024));\nvector<short> ret(1024);\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n\n        vector<int> resi(N);\n        //vector<vector<short> > RI(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            resi[i] = s.length()/2;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                short x;\n                ss >> x;\n                RI[i][j/2] = x;\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = resi[i];\n            for(int j=0;j<(int)resi[i];j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,resi[i]/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            for(int i=0;i<1024;i++) ret[i] = 0;\n\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)resi[i];j++){\n                    if((j*len) % (int)resi[i] == 0){\n                        int here = j*len /resi[i];\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            for(int i=0;i<len;i++){\n                cout << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            cout << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n                //vector<us> tmp=nums[i];\n                //nums[i]=dePos2(nums[i]);\n                //if(tmp==nums[i])nums[i]=dePos(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            res=dePos2(res);\n            //vector<us> tmp=res;\n            //res=dePos2(res);\n            //if(tmp==res)res=dePos(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        //if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        //else{\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n        //}\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\nint gcd(int a,int b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0){\n      num=1;\n      return;\n    }\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nbool check(int n,vector<pair<int,int> > *in,int *num,int l){\n  rep(i,n){\n    if (l % num[i] != 0)return false;\n  }\n  \n  vector<int> out(l,0);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      out[in[i][j].sec*tmp]|=in[i][j].fir;\n    }\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");  \n  return true;\n}\n\nvoid solve(int n,vector<pair<int,int> >*in,int *num){\n  REP(i,1,1025){\n    if (check(n,in,num,i))return;\n  }\n  printf(\"Too complex.\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n//       cout <<\"num \" <<  num[i] << endl;\n//              rep(j,in[i].size()){\n//        \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n//              }\n//              cout << endl;\n    }\n\n\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        if(L>1000000){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\n\nvoid solve(int n,vector<pair<int,ll> >&ans,ll &ansnum, \n\t   vector<pair<int,ll> >&in,ll &num){\n  ll l=ansnum*num/gcd(ansnum,num);\n\n  ll tmp=l/num;\n  rep(j,in.size()){\n    in[j].sec*=tmp;\n    //cout << in[j].sec <<\" \" ;\n  }\n  //  cout << endl;\n  tmp=l/ansnum;\n  //  cout <<\"tmp \" << tmp <<\" \" << l <<\" \" << ansnum << endl;\n  rep(j,ans.size()){\n    ans[j].sec*=tmp;\n    //    cout << ans[j].sec <<\" \" ;\n  }\n  //  cout << endl;\n  \n  ansnum=l;\n  vector<pair<int,ll> >& out2=ans;\n  rep(k,in.size()){\n    bool hassame=false;\n    rep(j,out2.size()){\n      if (out2[j].sec == in[k].sec){\n\tout2[j].fir|=in[k].fir;\n\thassame=true;\n\tbreak;\n      }\n    }\n    if (!hassame)out2.pb(in[k]);\n  }\n\n  minimize(out2,ansnum);\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in,ll *num){\n  vector<pair<int,ll> > &ans=in[0];\n  minimize(ans,num[0]);\n  REP(i,1,n){\n    solve(n,ans,num[0],in[i],num[i]);\n  }\n\n  if (num[0] > 1024){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n  vector<int> out(num[0],0);\n  rep(i,ans.size()){\n    out[ans[i].sec]=ans[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n\n}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\ncompute(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\n\n\n\nusing namespace std;\n\n\n\n\ntypedef unsigned short us;\n\n\n\n\nint N;\nint M;\n\n\n\n\n\n\n\n\nint toInt(char ch){\n&#160; &#160; if(ch>='0'&&ch<='9')return ch-'0';\n&#160; &#160; return ch-'A'+10;\n}\nint toChar(int num){\n&#160; &#160; if(num>=0&&num<=9)return num+'0';\n&#160; &#160; return num-10+'A';\n}\n\n\n\n\nus toHex(string s){\n&#160; &#160; us num=0;\n&#160; &#160; for(int j=0;j<=1;j++){\n&#160; &#160; &#160; &#160; num+=toInt(s[j]);\n&#160; &#160; &#160; &#160; if(j==0)num=(num<<4);\n&#160; &#160; }\n&#160; &#160; return num;\n}\nvector<us> toHexList(string s){\n&#160; &#160; vector<us> vus;\n&#160; &#160; for(int i=0;i<s.size();i+=2){\n&#160; &#160; &#160; &#160; string ss=s.substr(i,2);\n&#160; &#160; &#160; &#160; us num=toHex(ss);\n&#160; &#160; &#160; &#160; vus.push_back(num);\n&#160; &#160; }\n&#160; &#160; return vus;\n}\n\n\n\n\nstring toStr(us num){\n&#160; &#160; us a=num&(0x0F);\n&#160; &#160; us b=(num&(0xF0))>>4;\n&#160; &#160; string s;\n&#160; &#160; s+=toChar(b);\n&#160; &#160; s+=toChar(a);\n&#160; &#160; return s;\n}\n\n\n\n\nvector<us> dePos2(vector<us> vus){\n&#160; &#160; if(vus.size()==1)return vus;\n&#160; &#160; int sz=vus.size();\n&#160; &#160; for(int i=2;i<=sz;i++){\n&#160; &#160; &#160; &#160; if(sz%i!=0)continue;\n&#160; &#160; &#160; &#160; bool isDecom=true;\n&#160; &#160; &#160; &#160; for(int j=0;j<sz;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; if(j%(sz/i)==0)continue;\n&#160; &#160; &#160; &#160; &#160; &#160; else if(vus[j]!=0){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; isDecom=false;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; break;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; if(isDecom){\n&#160; &#160; &#160; &#160; &#160; &#160; vector<us> res;\n&#160; &#160; &#160; &#160; &#160; &#160; for(int j=0;j<sz;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; if(j%(sz/i)==0){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; res.push_back(vus[j]);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; return res;\n&#160; &#160; &#160; &#160; }\n&#160; &#160; }\n&#160; &#160; return vus;\n}\n\n\n\n\nvector<us> dePos(vector<us> vus){\n&#160; &#160; if(vus.size()==1)return vus;\n&#160; &#160; int sz=vus.size();\n&#160; &#160; for(int i=2;i<=sz;i++){\n&#160; &#160; &#160; &#160; if(sz%i!=0)continue;\n&#160; &#160; &#160; &#160; bool isDecom=true;\n&#160; &#160; &#160; &#160; for(int j=0;j<sz;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; if(vus[j]!=vus[j%(sz/i)]){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; isDecom=false;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; break;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; //if(j%(sz/i)==0)continue;\n&#160; &#160; &#160; &#160; &#160; &#160; //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n&#160; &#160; &#160; &#160; &#160; &#160; // &#160; &#160;isDecom=false;\n&#160; &#160; &#160; &#160; &#160; &#160; // &#160; &#160;break;\n&#160; &#160; &#160; &#160; &#160; &#160; //}\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; if(isDecom){\n&#160; &#160; &#160; &#160; &#160; &#160; vector<us> res;\n&#160; &#160; &#160; &#160; &#160; &#160; for(int j=0;j<sz/i;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; res.push_back(vus[j]);\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; return res;\n&#160; &#160; &#160; &#160; }\n&#160; &#160; }\n&#160; &#160; //for(int i=1;i<=sz;i++){\n&#160; &#160; // &#160; &#160;if(sz%i!=0)continue;\n&#160; &#160; // &#160; &#160;bool isDecom=true;\n&#160; &#160; // &#160; &#160;for(int j=0;j<sz;j++){\n&#160; &#160; // &#160; &#160; &#160; &#160;if(j%(sz/i)==0)continue;\n&#160; &#160; // &#160; &#160; &#160; &#160;else if(vus[j]!=0){\n&#160; &#160; // &#160; &#160; &#160; &#160; &#160; &#160;isDecom=false;\n&#160; &#160; // &#160; &#160; &#160; &#160; &#160; &#160;break;\n&#160; &#160; // &#160; &#160; &#160; &#160;}\n&#160; &#160; // &#160; &#160;}\n&#160; &#160; // &#160; &#160;if(isDecom){\n&#160; &#160; // &#160; &#160; &#160; &#160;vector<us> res;\n&#160; &#160; // &#160; &#160; &#160; &#160;for(int j=0;j<sz;j++){\n&#160; &#160; // &#160; &#160; &#160; &#160; &#160; &#160;if(j%(sz/i)==0){\n&#160; &#160; // &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160;res.push_back(vus[j]);\n&#160; &#160; // &#160; &#160; &#160; &#160; &#160; &#160;}\n&#160; &#160; // &#160; &#160; &#160; &#160;}\n&#160; &#160; // &#160; &#160; &#160; &#160;return res;\n&#160; &#160; // &#160; &#160;}\n&#160; &#160; //}\n&#160; &#160; return vus;\n}\n\n\n\n\nvector<us> nums[10];\n\n\n\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n&#160; &#160; if(b==0)return a;\n&#160; &#160; return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n&#160; &#160; return a*b/gcd(a,b);\n}\n\n\n\n\n\n\n\n\nint main(){\n&#160; &#160; cin>>N;\n&#160; &#160; while(N--){\n&#160; &#160; &#160; &#160; cin>>M;\n&#160; &#160; &#160; &#160; ll L=1;\n&#160; &#160; &#160; &#160; bool con=false;\n&#160; &#160; &#160; &#160; for(int i=0;i<M;i++){\n&#160; &#160; &#160; &#160; &#160; &#160; string s;\n&#160; &#160; &#160; &#160; &#160; &#160; cin>>s;\n&#160; &#160; &#160; &#160; &#160; &#160; nums[i]=(toHexList(s));\n&#160; &#160; &#160; &#160; &#160; &#160; bool match=true;\n&#160; &#160; &#160; &#160; &#160; &#160; for(int j=1;j<nums[i].size();j++){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; if(nums[i][0]!=nums[i][j])match=false;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; if(match){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; vector<us> tmp;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; tmp.push_back(nums[i][0]);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; nums[i]=tmp;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; else{\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; nums[i]=dePos2(nums[i]);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; //nums[i]=dePos2(nums[i]);\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; L=lcm(L,(ll)nums[i].size());\n&#160; &#160; &#160; &#160; &#160; &#160; if(L>1024){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; cout<<\"Too complex.\"<<endl;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; con=true;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; break;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; if(con)continue;\n&#160; &#160; &#160; &#160; for(int i=0;i<M;i++){\n&#160; &#160; &#160; &#160; &#160; &#160; if(nums[i].size()==L)continue;\n&#160; &#160; &#160; &#160; &#160; &#160; else{\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; vector<us> nlis;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; for(int j=0;j<L;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; if(j%(nums[i].size())==0){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; nlis.push_back(nums[i][j/(nums[i].size())]);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; else nlis.push_back(0);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; nums[i]=nlis;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; vector<us> res;\n&#160; &#160; &#160; &#160; for(int i=0;i<L;i++){\n&#160; &#160; &#160; &#160; &#160; &#160; us num=0;\n&#160; &#160; &#160; &#160; &#160; &#160; for(int j=0;j<M;j++)num|=nums[j][i];\n&#160; &#160; &#160; &#160; &#160; &#160; res.push_back(num);\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; bool match=true;\n&#160; &#160; &#160; &#160; for(int j=1;j<res.size();j++){\n&#160; &#160; &#160; &#160; &#160; &#160; if(res[0]!=res[j])match=false;\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; if(match){\n&#160; &#160; &#160; &#160; &#160; &#160; vector<us> tmp;\n&#160; &#160; &#160; &#160; &#160; &#160; tmp.push_back(res[0]);\n&#160; &#160; &#160; &#160; &#160; &#160; res=tmp;\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; else{\n&#160; &#160; &#160; &#160; &#160; &#160; res=dePos(res);\n&#160; &#160; &#160; &#160; &#160; &#160;// res=dePos2(res);\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n&#160; &#160; &#160; &#160; cout<<endl;\n&#160; &#160; }\n\n\n\n\n&#160; &#160; return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g = Gcd(m, n);\n\treturn m * n / g;\n}\n\nconst char *str = \"0123456789ABCDEF\";\n\nint f(char c0, char c1){\n\tconst char *p0 = strchr(str, c0);\n\tconst char *p1 = strchr(str, c1);\n\treturn (p0 - str) * 16 + (p1 - str);\n}\n\nint length(string &s){\n\tint g = s.length()/2;\n\tfor (int j = 2; j<s.length(); j+=2){\n\t\tint n = f(s[j], s[j + 1]);\n\t\tif (n != 0) g = Gcd(g, j / 2);\n\t}\n\treturn g;\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor (int i = 0; i<N; i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<unsigned char>> mm(n);\n\t\tstring m;\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tcin >> m;\n\n\t\t\tint ln = length(m);\n\t\t\tint g = m.length() / ln;\n\t\t\tmm[j].reserve(ln);\n\t\t\tfor (int k = 0; k<m.length(); k += g){\n\t\t\t\tchar c0 = m[k];\n\t\t\t\tchar c1 = m[k + 1];\n\t\t\t\tint num = f(c0, c1);\n\t\t\t\tmm[j].push_back(num);\n\t\t\t\t//\t\t\t\tcout << num << \" \";\n\t\t\t}\n\t\t\t//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor (int j = 1; j<n; j++){\n\t\t\tlen = Lcm(len, mm[j].size());\n\t\t}\n\t\tcout << len << endl;\n\t\tvector<unsigned char> ans(len, 0);\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tint g = len / mm[j].size();\n\t\t\tfor (int k = 0; k<mm[j].size(); k++){\n\t\t\t\tans[k*g] |= mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g = len;\n\t\tfor (int j = 1; j<len; j++){\n\t\t\tif (ans[j] != 0) g = Gcd(g, j);\n\t\t}\n\t\tif (len / g>1024){\n//\t\t\tcout << \"Too complex.\";\n\t\t}\n\t\telse{\n\t\t\tfor (int j = 0; j<len; j += g){\n\t\t\t\tint n0 = ans[j] >> 4;\n\t\t\t\tint n1 = ans[j] & 15;\n//\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\ntypedef long long int Int;\n\nInt gcd(Int a, Int b) { return a > 0 ? gcd(b % a, a) : b; }\nInt lcm(int a, int b){ return a / gcd(a, b) * b; }\n\nstruct rational {\n  Int p, q;\n  void normalize() {\n    if (q < 0) p *= -1, q *= -1;\n    Int d = gcd(p < 0 ? -p : p, q);\n    if (d == 0) p = 0,  q = 1;\n    else        p /= d, q /= d;\n  }\n  rational(Int p, Int q = 1, bool norm = true) : p(p), q(q) {\n    if(norm) normalize();\n  }\n};\n\nbool operator < (const rational &a, const rational &b) { return (long double) a.p * b.q < (long double) a.q * b.p; }\n\nvoid solve(int N, vector<string> &v){\n  map<rational, int> M;\n  REP(n, N){\n    string s = v[n];\n    for(int i = 0; i + 1 < s.length(); i += 2){\n      int num = strtol(s.substr(i, 2).c_str(), NULL, 16);\n      if(num) M[rational((i + 1) / 2, (int)(s.length()) / 2)] += num;\n    }\n  }\n  if(M.size() == 0) { cout <<\"00\" <<endl; return ; }\n  Int L = 1;\n  for(auto i : M){\n    L = lcm(i.first.q, L);\n    if(L * 2 > 2049) { cout <<\"Too complex.\" <<endl; return ; }\n  }\n  if(L * 2 > 2049) { cout <<\"Too complex.\" <<endl; return ; }\n  map<rational, int> ans;\n  for(auto i : M){\n    int p = i.first.p, q = i.first.q, n = i.second, m = L / q;\n    ans[rational(p * m, L)] = n;\n  }\n  REP(i, L){\n    if(ans[rational(i, L)] != 0) cout <<setfill('0') << setw(2) << hex  << uppercase << ans[rational(i, L)];\n    else cout <<\"00\";\n  }\n  cout <<endl;\n}\n\nint main() {\n  int T; cin >>T;\n  REP(t, T){\n    int N; cin >>N;\n    vector<string> v(N);\n    REP(i, N) cin >>v[i];\n    solve(N, v);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <vector>\n#include <map>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef pair<int, int> pii;\n\ntypedef struct Sequence {\n\tint length;\n\tmap<int, int> seq;\n} Sequence;\n\nint gcd(int a, int b){\n\tif(a < b){ swap(a, b); }\n\tif(b == 0){ return a; }\n\treturn gcd(b, a % b);\n}\n\nint lcm(int a, int b){\n\treturn a * b / gcd(a, b);\n}\n\nSequence optimize(int length, vector<pii> &seq){\n\tif(seq.size() < 1){ return Sequence(); }\n\tint divisor = length;\n\tfor(vector<pii>::iterator it = seq.begin(); it != seq.end(); it++){\n\t\tdivisor = gcd(divisor, (*it).first);\n\t}\n\tSequence result;\n\tresult.length = length / divisor;\n\tfor(vector<pii>::iterator it = seq.begin(); it != seq.end(); it++){\n\t\tresult.seq.insert(pii((*it).first / divisor, (*it).second));\n\t}\n\treturn result;\n}\n\nint main(){\n\tint datasetCount;\n\tscanf(\"%d\", &datasetCount);\n\twhile(datasetCount--){\n\t\tint N;\n\t\tscanf(\"%d\", &N);\n\t\tvector<Sequence> sequences;\n\t\tfor(int i = 0; i < N; i++){\n\t\t\tchar buffer[2049];\n\t\t\tscanf(\"%s\", buffer);\n\t\t\tint length = strlen(buffer);\n\t\t\tvector<pii> seq;\n\t\t\tfor(int j = 0; j < length; j += 2){\n\t\t\t\tint val;\n\t\t\t\tsscanf(buffer + j, \"%02X\", &val);\n\t\t\t\tif(val != 0){ seq.push_back(pii(j / 2, val)); }\n\t\t\t}\n\t\t\tif(seq.size() > 0){\n\t\t\t\tsequences.push_back(optimize(length / 2, seq));\n\t\t\t}\n\t\t}\n\t\tint sequenceLength = 1;\n\t\tvector<Sequence>::iterator it = sequences.begin();\n\t\twhile(it != sequences.end()){\n\t\t\tsequenceLength = lcm(sequenceLength, (*it).length);\n\t\t\tif(sequenceLength > 1024){ break; }\n\t\t\tit++;\n\t\t}\n\t\tif(sequenceLength > 1024){\n\t\t\tputs(\"Too complex.\");\n\t\t}else{\n\t\t\tint index;\n\t\t\tfor(index = 0; index < sequenceLength; index++){\n\t\t\t\tint val = 0;\n\t\t\t\tvector<Sequence>::iterator it = sequences.begin();\n\t\t\t\twhile(it != sequences.end()){\n\t\t\t\t\tif(index * (*it).length % sequenceLength != 0){\n\t\t\t\t\t\tit++;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tmap<int, int>::iterator evt = (*it).seq.find(\n\t\t\t\t\t\tindex * (*it).length / sequenceLength\n\t\t\t\t\t);\n\t\t\t\t\tif(evt != (*it).seq.end()){ val |= (*evt).second; }\n\t\t\t\t\tit++;\n\t\t\t\t}\n\t\t\t\tprintf(\"%02X\", val);\n\t\t\t}\n\t\t\tputs(\"\");\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nchar *str=\"0123456789ACDEF\";\n\nint f(char c0,char c1){\n\tchar *p0=strchr(str,c0);\n\tchar *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=0;\n\t\tif(n==1){\n\t\t\tlen=mm[0].size();\n\t\t}else{\n\t\t\tlen = Lcm(mm[0].size(),mm[1].size());\n\t\t\tfor(int j=2;j<mm.size();j++){\n\t\t\t\tlen = Lcm(len,mm[j].size());\n\t\t\t}\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tbool all0=true;\n\t\tvector<int> num;\n\t\tfor(int j=0;j<len;j++){\n\t\t\tall0 &= ans[j]==0;\n\t\t\tif(j!=0 && ans[j]!=0) num.push_back(j);\n//\t\t\tcout << ans[j] << \" \";\n\t\t}\n//\t\tcout << endl;\n\t\tif(all0){\n\t\t\tcout << \"00\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint g=1;\n\t\tif(num.size()>1){\n\t\t\tg=Gcd(num[0],num[1]);\n\t\t\tfor(int j=2;j<num.size();j++){\n\t\t\t\tg=Gcd(g,num[j]);\n\t\t\t}\n//\t\t\tcout << \"gcd:\" << g;\n//\t\t\tcout << endl;\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> > *in,ll *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n  }\n  \n  ll ansnum=l;\n  rep(i,n){\n    ll tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n    }\n  }\n\n  vector<pair<int,ll> > out2;\n  rep(i,n){\n    rep(k,in[i].size()){\n      bool hassame=false;\n      rep(j,out2.size()){\n\tif (out2[j].sec == in[i][k].sec){\n\t  //cout << i <<\" \" << in[i][k].fir <<\" \" << in[i][k].sec << \" \" << out2[j].sec <<endl;\n\t  out2[j].fir|=in[i][k].fir;\n\t  hassame=true;\n\t  break;\n\t}\n      }\n      if (!hassame)out2.pb(in[i][k]);\n    }\n  }\n  minimize(out2,ansnum);\n\n  if (ansnum > 1024){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n\n  vector<int> out(ansnum,0);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nint gcd(int a,int b){\n    return b==0 ? a : gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b / gcd(a,b);\n}\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        vector<string> R(N);\n        for(int i=0;i<N;i++) cin >> R[i];\n        vector<vector<int> > RI(N);\n        for(int i=0;i<N;i++){\n            for(int j=0;j<R[i].length();j+=2){\n                string here = R[i].substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                int x;\n                ss >> x;\n                RI[i].push_back(x);\n            }\n        }\n\n        int len = 1;\n        for(int i=0;i<N;i++){\n            int least = RI[i].size();\n            for(int j=0;j<RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << \"Too complex.\" << endl;\n        }else{\n            vector<int> ret(len);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<RI[i].size();j++){\n                    if((j*len) % RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<mm.size();j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tif(i>0) cout << endl;\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<mm.size();j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(i>0) cout << endl;\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\ntypedef vector<int> vi;\n\ninline int gcd(int a, int b){ return b?gcd(b,a%b):a; }\ninline int lcm(int a, int b){ return a/gcd(a,b)*b; }\ninline int hex(char a){ return isdigit(a)?(a-'0'):(a-'A'); }\ninline char inv_hex(int a){ return (a<10)?(a+'0'):(a-10+'A'); }\n\ninline vi reduce(vi a){\n  int n = a.size();\n  for(int i=n;i>=1;i--){\n    if(n%i)continue;\n    bool f = true;\n    rep(j,n){\n      if(j%i && a[j]){\tf = false; break; }\n    }\n    if(f){\n      vi res(n/i);\n      for(int j=0;j<n;j+=i)res[j/i] = a[j];\n      return res;\n    }\n  }\n  return a;\n}\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  int casenum;\n  cin >> casenum;\n  while(casenum--){\n    int n;\n    cin >> n;\n    int len = 1;\n    vector< vi > rhythm(n);\n    rep(i,n){\n      string s;\n      cin >> s;\n      vi tmp(s.size()/2);\n      rep(j,s.size()/2){\n\ttmp[j] = hex(s[2*j])*16 + hex(s[2*j+1]);\n      }\n      rhythm[i] = reduce(tmp);\n      if(len<=2048)len = lcm(len,rhythm[i].size());\n    }\n\n    if(len>2048)cout << \"Too complex.\" << endl;\n    else{\n      vi res(len,0);\n      rep(i,n){\n\tint k = len/rhythm[i].size();\n\trep(j,rhythm[i].size())res[j*k] |= rhythm[i][j];\n      }\n      res = reduce(res);\n      rep(i,len){\n\tcout << inv_hex(res[i]/16) << inv_hex(res[i]%16);\n      }\n      cout << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<numeric>\n#include<cctype>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define in_range(x,l,r) (l<=x && x<r)\nusing namespace std;\ntypedef vector<int> vi;\n\ninline int CtoI(char c){\n  if(isdigit(c))return c-'0';\n  return c-'A'+10;\n}\n\ninline char ItoC(int a){\n  if(a<10)return '0'+a;\n  return 'A'+a-10;\n}\n\ninline vi red(string s){\n  int n = s.size()/2;\n  vi r(n);\n  int nonzero = 0;\n  rep(i,n){\n    r[i] = CtoI(s[2*i])*16 + CtoI(s[2*i+1]);\n    if(r[i])nonzero++;\n  }\n\n  for(int i=n;i>0;i--){\n    if(n%i==0){\n      int vals = 0;\n      for(int j=0;j<n;j+=i){\n\tif(r[j])vals++;\n      }\n      if(nonzero==vals){\n\tvi res(n/i);\n\tfor(int j=0;j<n;j+=i){\n\t  res[j/i] = r[j];\n\t}\n\treturn res;\n      }\n    }\n  }\n  return r;\n}\n      \n\nint main(){\n  int t;\n  cin >> t;\n  while(t--){\n    int n;\n    cin >> n;\n    vector< vi > r(n);\n    rep(i,n){\n      string s;\n      cin >> s;\n      r[i] = red(s);\n    }\n\n    int len = 1;\n    rep(i,n){\n      int s = r[i].size(), gcd = __gcd(len,s);\n      if(len/gcd > 1024/s)len = 1025;\n      else len = len/gcd*s;\n    }\n\n    if(len>1024){\n      cout << \"Too complex.\" << endl;\n    }else{\n      vi res(len,0);\n      rep(i,n){\n\trep(j,r[i].size()){\n\t  res[j*len/r[i].size()] |= r[i][j];\n\t}\n      }\n\n      rep(i,len){\n\tcout << ItoC(res[i]/16) << ItoC(res[i]%16);\n      }\n      cout << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define HUGE_NUM 99999999999999999\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\n#define SIZE 2050\n\nint N;\nint length[8],POW[8];\nint table[8][1025],ans[1025];\nchar buf[8][SIZE];\n\nint gcd(int x,int y){\n\n\tx = abs(x);\n\ty = abs(y);\n\n\tif(x < y){\n\t\tswap(x,y);\n\t}\n\tif(y == 0){\n\t\treturn x;\n\t}else{\n\t\treturn gcd(y,x%y);\n\t}\n}\n\n//最小公倍数\nint lcm(int x,int y){\n\n\treturn (x*y)/gcd(x,y);\n}\n\nint getNUM(char ch){\n\n\tif(ch >= '0' && ch <= '9'){\n\n\t\treturn ch-'0';\n\n\t}else{\n\n\t\treturn 10+(ch-'A');\n\t}\n}\n\n\nvoid func(){\n\n\tscanf(\"%d\",&N);\n\n\tint tmp_len;\n\tint LCM = 1;\n\n\tfor(int i = 0; i < N; i++){\n\n\t\tscanf(\"%s\",buf[i]);\n\n\t\tif(LCM == BIG_NUM)continue;\n\n\t\tfor(tmp_len = 0; buf[i][tmp_len] != '\\0'; tmp_len++);\n\n\t\tint GCD = tmp_len/2;\n\n\t\tfor(int k = 2; k < tmp_len; k += 2){\n\n\t\t\tif(buf[i][k] == '0' && buf[i][k+1] == '0')continue;\n\n\t\t\tGCD = gcd(GCD,k/2);\n\t\t}\n\n\t\tlength[i] = (tmp_len/2)/GCD;\n\n\t\tint index = 0;\n\n\t\tfor(int k = 0; k < tmp_len; k += 2*GCD){\n\n\t\t\ttable[i][index++] = getNUM(buf[i][k])*POW[4]+getNUM(buf[i][k+1]);\n\t\t}\n\n\t\tLCM = lcm(LCM,length[i]);\n\n\t\tif(LCM > 1024){\n\n\t\t\tLCM = BIG_NUM;\n\t\t}\n\t}\n\n\tif(LCM == BIG_NUM){\n\n\t\tprintf(\"Too complex.\\n\");\n\t\treturn;\n\t}\n\n\tfor(int i = 0; i < LCM; i++){\n\n\t\tans[i] = 0;\n\t}\n\n\tfor(int i = 0; i < N; i++){\n\n\t\tint span = LCM/length[i];\n\n\t\tfor(int k = 0; k < length[i]; k++){\n\n\t\t\tans[span*k] |= table[i][k];\n\t\t}\n\t}\n\n\tfor(int i = 0; i < LCM; i++){\n\n\t\tint left = ans[i]/POW[4];\n\n\t\tif(left >= 10){\n\n\t\t\tprintf(\"%c\",'A'+(left-10));\n\t\t}else{\n\n\t\t\tprintf(\"%c\",'0'+left);\n\t\t}\n\n\t\tint right = ans[i]%POW[4];\n\n\t\tif(right >= 10){\n\n\t\t\tprintf(\"%c\",'A'+(right-10));\n\t\t}else{\n\n\t\t\tprintf(\"%c\",'0'+right);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n}\n\nint main(){\n\n\tPOW[0] = 1;\n\tfor(int i = 1; i <= 7; i++){\n\n\t\tPOW[i] = POW[i-1]*2;\n\t}\n\n\tint num_set;\n\tscanf(\"%d\",&num_set);\n\n\tfor(int loop = 0; loop < num_set; loop++){\n\n\t\tfunc();\n\t}\n\n\treturn 0;\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                vector<us> tmp=nums[i];\n                nums[i]=dePos2(nums[i]);\n                if(tmp==nums[i])nums[i]=dePos(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            vector<us> tmp=res;\n            res=dePos2(res);\n            if(tmp==res)res=dePos(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9'){\n            num+=s[j]-'0';\n        }\n        else{\n            num+=s[j]-'A'+10;\n        }\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++){\n                num|=nums[j][i];\n            }\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            vector<string> ret;\n            for(int i=0;i<res.size();i++)\n                cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    //while(L>1){\n      bool un=false;\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  if(i+j>sum.vf.size()){\n\t    un=true;\n\t    break;\n\t  }\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n      }\n      if(!un){\n\tfor(int i=0;i<sum.vf.size();i+=L){\n\t  for(int j=1;j<L;++j){\n\t    sum.vf[i+j]=-1;\n\t  }\n\t}\n\t//break;\n      }\n      //--L;\n      //}\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n    \n    string s;\n    getline(cin,s);\n    for(int i = 0; i < N; ++i){\n      getline(cin,s);\n      int len;\n      Phrase t(s);\n\n      if(s.length()==0)t.vf.push_back(0);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        if(L>1024){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\ntypedef vector<int> vi;\n\ninline int gcd(int a, int b){ return b?gcd(b,a%b):a; }\ninline int lcm(int a, int b){ return a/gcd(a,b)*b; }\ninline int hex(char a){ return isdigit(a)?(a-'0'):(a-'A'); }\ninline char inv_hex(int a){ return (a<10)?(a+'0'):(a-10+'A'); }\n\ninline vi reduce(vi a){\n  int n = a.size();\n  for(int i=n;i>=1;i--){\n    if(n%i)continue;\n    bool f = true;\n    rep(j,n){\n      if(j%i && a[j]){\tf = false; break; }\n    }\n    if(f){\n      int k = n/i;\n      vi res(k);\n      for(int j=0;j<k;j++)res[j] = a[j*i];\n      return res;\n    }\n  }\n  return a;\n}\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  int casenum;\n  cin >> casenum;\n  while(casenum--){\n    int n;\n    cin >> n;\n    int len = 1;\n    vector< vi > rhythm(n);\n    rep(i,n){\n      string s;\n      cin >> s;\n      if(len<1024){\n\tvi tmp(s.size()/2);\n\trep(j,s.size()/2){\n\t  tmp[j] = hex(s[2*j])*16 + hex(s[2*j+1]);\n\t}\n\trhythm[i] = reduce(tmp);\n\tlen = lcm(len,rhythm[i].size());\n      }\n    }\n\n    if(len>1024)cout << \"Too complex.\" << endl;\n    else{\n      vi res(len,0);\n      rep(i,n){\n\tint k = len/rhythm[i].size();\n\trep(j,rhythm[i].size())res[j*k] |= rhythm[i][j];\n      }\n      rep(i,len){\n\tcout << inv_hex(res[i]/16) << inv_hex(res[i]%16);\n      }\n      cout << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n            nums[i]=dePos(nums[i]);\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        res=dePos(res);\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nvector<int> simple(string s){\n\tvector<int> v;\n\tfor(int i = 0 ; i < s.size() ; i += 2 ){\n\t\tv.push_back((s[i]-'0')*16+s[i+1]-'0');\n\t}\n\tfor(int i = 1 ; i <= v.size() ; i++){\n\t\tif( v.size() % i ) continue;\n\t\tint l = v.size() / i;\n\t\tint f = 1;\n\t\tfor(int j = 0 ; j < v.size() ; j++){\n\t\t\tif( j % l && v[j] > 0 ) f = 0;\n\t\t}\n\t\tif(f){\n\t\t\tvector<int> t;\n\t\t\tfor(int j = 0 ; j < v.size() ; j += l )\n\t\t\t\tt.push_back(v[j]);\n\t\t\tv = t;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor(int i = 1 ; i <= v.size() ; i++){\n\t\tif( v.size() % i ) continue;\n\t\tint f = 1;\n\t\tfor(int j = 0 ; j < v.size() ; j+=i){\n\t\t\tfor(int k = 0 ; k < i ; k++){\n\t\t\t\tif( v[j+k] != v[k] ) f = 0;\n\t\t\t}\n\t\t}\n\t\tif(f){\n\t\t\tv.resize(i);\n\t\t\treturn v;\n\t\t}\n\t}\n\treturn v;\n}\nint main(){\n\tint T;\n\tcin >> T;\n\twhile(T--){\n\t\tint n;\n\t\tcin >> n;\n\t\tint ans = 1;\n\t\tvector< vector<int> > vs;\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tstring r;\n\t\t\tcin >> r;\n\t\t\tvs.push_back(simple(r));\n\t\t\tans = ans * vs.back().size() / __gcd(ans,(int)vs.back().size());\n\t\t\tans = min(2000,ans);\n\t\t}\n\t\tif( ans > 1024 ){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t}else{\n\t\t\tvector<int> a(ans);\n\t\t\tfor(int i = 0 ; i < vs.size() ; i++){\n\t\t\t\tint span = ans / vs[i].size();\n\t\t\t\tfor(int j = 0 ; j < vs[i].size() ; j++)\n\t\t\t\t\ta[span*j] |= vs[i][j];\n\t\t\t}\n\t\t\tfor(int i = 0 ; i < a.size() ; i++)\n\t\t\t\tprintf(\"%02X\",a[i]);\n\t\t\tcout << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#define _GLIBCXX_DEBUG\n\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\nvector<vector<short> > RI(10,vector<short>(2000));\nvector<short> ret(2000);\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        vector<int> resi(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            resi[i] = s.length()/2;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                ss >> RI[i][j/2];\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = resi[i];\n            for(int j=0;j<(int)resi[i];j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,resi[i]/least);\n        }\n        if(len > 1024){\n            cout << \"Too complex.\" << endl;\n        }else{\n            for(int i=0;i<1024;i++) ret[i] = 0;\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)resi[i];j++){\n                    if((j*len) % (int)resi[i] == 0){\n                        int here = j*len /resi[i];\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            for(int i=0;i<len;i++){\n                cout << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            cout << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n                //nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            res=dePos(res);\n           // res=dePos2(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=0;\n\t\tif(n==1){\n\t\t\tlen=mm[0].size();\n\t\t}else{\n\t\t\tlen = Lcm(mm[0].size(),mm[1].size());\n\t\t\tfor(int j=2;j<mm.size();j++){\n\t\t\t\tlen = Lcm(len,mm[j].size());\n\t\t\t}\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\ntypedef long long ll;\n\nll gcd(ll m, ll n){\n\treturn n ? gcd(n, m%n) : m;\n}\n\nll lcm(ll m, ll n){\n\treturn m / gcd(m, n) * n;\n}\n\nstring hexstr = \"0123456789ABCDEF\";\n\nint main(){\t\n\tint T;\n\tcin >> T;\n\twhile (T--){\n\t\tint N;\n\t\tcin >> N;\n\t\tvector<string> v(N);\n\t\tvector<int> gcds;\n\t\tfor (int i = 0; i < N; ++i) cin >> v[i];\n\n\t\tll total = 1;\n\t\tfor (auto &s : v){\n\t\t\tint g = s.size() / 2;\n\t\t\tfor (int i = 0; i < s.size(); i += 2){\n\t\t\t\tif (s[i] != '0' || s[i+1] != '0') g = gcd(g, i / 2);\n\t\t\t}\n\t\t\ttotal = lcm(total, s.size() / 2 / g);\n\t\t\tgcds.push_back(g);\n\t\t}\n\t\tif (total * 2 <= 2048){\n\t\t\tvector<int> ans(total);\n\t\t\tfor (int j = 0; j < v.size(); ++j){\n\t\t\t\tstring &s = v[j];\n\t\t\t\tint g = gcds[j];\n\t\t\t\tint mul = total / (s.size() / 2 / g);\n\t\t\t\tfor (int i = 0; i < s.size(); i += 2){\n\t\t\t\t\tif (s[i] == '0' && s[i + 1] == '0') continue;\n\t\t\t\t\tint pos = i / 2 / g*mul;\n\t\t\t\t\tans[pos] |= (s[i] - '0') * 16;\n\t\t\t\t\tans[pos] |= (s[i + 1] - '0');\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (auto &e : ans){\n\t\t\t\tint x = e / 16, y = e % 16;\n\t\t\t\tcout << hexstr[x] << hexstr[y];\n\t\t\t}\n\t\t\tcout << endl;\n\t\t}\n\t\telse{\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t}\n\t}\n\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g=Gcd(m,n);\n\tif(g==0) cout << \"Gcd=0\"<<endl;\n\treturn m * n / g; \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<int>> mm(n);\n\t\tstring m;\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m;\n\t\t\tmm[j].reserve(m.length()/2);\n\t\t\tfor(int k=0;k<m.length();k+=2){\n\t\t\t\tchar c0=m[k];\n\t\t\t\tchar c1=m[k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<n;j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(g==0) cout << \"Gcd==0\"<<endl;\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t}else{\n\t\t\tfor(int j=0;j<len;j+=g){\n\t\t\t\tint n0=ans[j]/16;\n\t\t\t\tint n1=ans[j]%16;\n\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            //res=dePos2(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> > *in,ll *num){\n//void solve(int n,vector<pair<int,ll> >&ansnum,int &num, vector<pair<int,ll> >&in,int &num]);\n  ll l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n  }\n  \n  ll ansnum=l;\n  rep(i,n){\n    ll tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n    }\n  }\n\n  vector<pair<int,ll> > out2;\n  rep(i,n){\n    rep(k,in[i].size()){\n      bool hassame=false;\n      rep(j,out2.size()){\n\tif (out2[j].sec == in[i][k].sec){\n\t  out2[j].fir|=in[i][k].fir;\n\t  hassame=true;\n\t  break;\n\t}\n      }\n      if (!hassame)out2.pb(in[i][k]);\n    }\n  }\n\n  minimize(out2,ansnum);\n\n  if (ansnum > 1024||ansnum<0){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n\n  vector<int> out(ansnum,0);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\n// void compute(int n,vector<pair<int,ll> > *in){\n//   vector<pair<int,ll> ans=in[0];\n//   REP(i,1,n){\n//     solve(n,ans,num[0],in[i],num[i]);\n//   }\n\n//}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <complex>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <deque>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <vector>\n#include <set>\n#include <limits>\n#include <cstdio>\n#include <cctype>\n#include <cmath>\n#include <cstring>\n#include <cstdlib>\n#include <ctime>\nusing namespace std;\n#define REP(i, j) for(int i = 0; i < (int)(j); ++i)\n#define FOR(i, j, k) for(int i = (int)(j); i < (int)(k); ++i)\n#define SORT(v) sort((v).begin(), (v).end())\n#define REVERSE(v) reverse((v).begin(), (v).end())\ntypedef complex<double> P;\ntypedef long long int Int;\n\nInt gcd(Int a, Int b) { return a > 0 ? gcd(b % a, a) : b; }\nInt lcm(int a, int b){ return a / gcd(a, b) * b; }\n\nstruct rational {\n  Int p, q;\n  void normalize() {\n    if (q < 0) p *= -1, q *= -1;\n    Int d = gcd(p < 0 ? -p : p, q);\n    if (d == 0) p = 0,  q = 1;\n    else        p /= d, q /= d;\n  }\n  rational(Int p, Int q = 1, bool norm = true) : p(p), q(q) {\n    if(norm) normalize();\n  }\n};\n\nbool operator < (const rational &a, const rational &b) { return (long double) a.p * b.q < (long double) a.q * b.p; }\n\nvoid solve(int N, vector<string> &v){\n  map<rational, int> M;\n  REP(n, N){\n    string s = v[n];\n    for(int i = 0; i + 1 < s.length(); i += 2){\n      int num = strtol(s.substr(i, 2).c_str(), NULL, 16);\n      if(num) M[rational((i + 1) / 2, (int)(s.length()) / 2)] += num;\n    }\n  }\n  if(M.size() == 0) { cout <<\"00\" <<endl; return ; }\n  Int L = 1;\n  for(auto i : M){\n    L = lcm(i.first.q, L);\n    if(L * 2 > 2049) { cout <<\"Too complex.\" <<endl; return ; }\n  }\n  if(L * 2 > 2049) { cout <<\"Too complex.\" <<endl; return ; }\n  map<rational, int> ans;\n  for(auto i : M){\n    int p = i.first.p, q = i.first.q, n = i.second, m = L / q;\n    ans[rational(p * m, L)] = n;\n  }\n  REP(i, L){\n    if(ans[rational(i, L)] != 0) cout <<setfill('0') << setw(2) << hex  << uppercase << ans[rational(i, L)];\n    else cout <<\"00\";\n  }\n  cout <<endl;\n}\n\nint main() {\n  int T; cin >>T;\n  REP(t, T){\n    int N; cin >>N;\n    vector<string> v(N);\n    REP(i, N) cin >>v[i];\n    solve(N, v);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\ntypedef unsigned char uc;\nstruct R {\n  uc notes[1024];\n  int num;\n  void push(const uc& note) {\n    notes[num++] = note;\n  }\n};\n\nR rolls[8];\nchar hexmap[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n\nint gcd_of(int a, int b) {\n  while (a != b) {\n    if (a > b)\n      a -= b;\n    else\n      b -= a;\n  }\n  return a;\n}\n\nint lcm_of(const int& a, const int& b) {\n  return a * b / gcd_of(a, b);\n}\n\nint main() {\n  int t;\n  cin >> t;\n  while (t --) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      // load\n      char buff[2049];\n      cin >> buff;\n      char* p = buff;\n      auto& r = rolls[i];\n      r.num = 0;\n      while (*p != 0) {\n        r.push((*p - '0') * 16 + (*(p + 1) - '0'));\n        p += 2;\n      }\n\n      // comp\n      int gcd = r.num;\n      int clen = 1;\n      for (int j = 1; j < r.num; j++) {\n        if (r.notes[j] == 0) {\n          clen++;\n        } else {\n          gcd = gcd_of(gcd, clen);\n          clen = 1;\n          if (gcd == 1) break;\n        }\n      }\n      gcd = gcd_of(gcd, clen);\n      if (gcd != 1) {\n        r.num /= gcd;\n        for (int j = 0; j < r.num; j++) r.notes[j] = r.notes[j * gcd];\n      }\n    }\n    int lcm = rolls[0].num;\n\n    for (int i = 1; i < n; i++) {\n      lcm = lcm_of(lcm, rolls[i].num);\n      if (lcm > 1024) break; // for overflow\n    }\n\n    if (lcm > 1024) {\n      cout << \"Too complex.\";\n    } else {\n      // combine\n      int m[8];\n      for (int i = 0; i < n; i++) m[i] = lcm / rolls[i].num;\n      for (int i = 0; i < lcm; i++) {\n        uc v = 0;\n        for (int j = 0; j < n; j++) {\n          if (i % m[j] == 0) v |= rolls[j].notes[i / m[j]];\n        }\n        cout << hexmap[v / 16] << hexmap[v % 16];\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            //if(j>=sz||(j%(sz/i))>=sz){\n            //    return vector<us>();\n            //}\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                //if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            if(nums[i].size()==0){\n                con=true;\n                break;\n            }\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            // debg\n            //if(nums[i].size()==0){\n            //    con=true;\n            //    break;\n            //}\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        //if(match){\n        //    vector<us> tmp;\n        //    tmp.push_back(res[0]);\n        //    res=tmp;\n        //}\n        //else{\n        res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-5;\nconst int inf=1e8;\nint gcd(int a,int b){\n\treturn (b==0?a:gcd(b,a%b));\n}\nll lcm(ll a,ll b){\n\treturn a/gcd(a,b)*b;\n}\nint main(){\n\tint q;\n\tcin>>q;\n\twhile(q--){\n\t\tint n;\n\t\tcin>>n;\n\t\tvvi in(n);\n\t\tvi tmp;\n\t\trep(i,n){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tint N=s.size();\n\t\t\ttmp=vi(N/2);\n\t\t\tint gc=N/2;\n\t\t\trep(j,N/2){\n\t\t\t\ttmp[j]=(s[2*j]-'0')*16+(s[2*j+1]-'0');\n\t\t\t\tif(j&&tmp[j])gc=gcd(gc,j);\n\t\t\t}\n\t\t\tfor(int j=0;j<N/2;j+=gc)in[i].pb(tmp[j]);\n\t\t}\n\t\tint lc=1;\n\t\trep(i,n){\n\t\t\tlc=lcm(lc,in[i].size());\n\t\t\tif(lc>1024)break;\n\t\t}\n\t\tif(lc>1024)cout<<\"Too complex\"<<endl;\n\t\telse{\n\t\t\tvi out(lc);\n\t\t\trep(i,n){\n\t\t\t\tint t=lc/in[i].size();\n\t\t\t\tfor(int j=0;j<lc;j+=t)out[j]|=in[i][j/t];\n\t\t\t}\n\t\t\trep(i,lc)printf(\"%02X\",out[i]);\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<mm.size();j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(i>0) cout << endl;\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> > *in,ll *num){\n//void solve(int n,vector<pair<int,ll> >&ansnum,int &num, vector<pair<int,ll> >&in,int &num]);\n  ll l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n  }\n  \n  ll ansnum=l;\n  rep(i,n){\n    ll tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n    }\n  }\n\n  vector<pair<int,ll> > out2;\n  rep(i,n){\n    rep(k,in[i].size()){\n      bool hassame=false;\n      rep(j,out2.size()){\n\tif (out2[j].sec == in[i][k].sec){\n\t  out2[j].fir|=in[i][k].fir;\n\t  hassame=true;\n\t  break;\n\t}\n      }\n      if (!hassame)out2.pb(in[i][k]);\n    }\n  }\n\n  minimize(out2,ansnum);\n\n  if (ansnum > 1024){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n\n  vector<int> out(ansnum,0);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\n// void compute(int n,vector<pair<int,ll> > *in){\n//   vector<pair<int,ll> ans=in[0];\n//   REP(i,1,n){\n//     solve(n,ans,num[0],in[i],num[i]);\n//   }\n\n//}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\ntypedef vector<int> vi;\n\ninline int gcd(int a, int b){ return b?gcd(b,a%b):a; }\ninline int lcm(int a, int b){ return a/gcd(a,b)*b; }\ninline int hex(char a){ return isdigit(a)?(a-'0'):(a-'A'); }\ninline char inv_hex(int a){ return (a<10)?(a+'0'):(a-10+'A'); }\n\ninline vi reduce(vi a){\n  int n = a.size();\n  for(int i=n;i>=1;i--){\n    if(n%i)continue;\n    bool f = true;\n    rep(j,n){\n      if(j%i && a[j]){\tf = false; break; }\n    }\n    if(f){\n      vi res(n/i);\n      for(int j=0;j<n;j+=i)res[j/i] = a[j];\n      return res;\n    }\n  }\n  return a;\n}\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  int casenum;\n  cin >> casenum;\n  while(casenum--){\n    int n;\n    cin >> n;\n    int len = 1;\n    vector< vi > rhythm(n);\n    rep(i,n){\n      string s;\n      cin >> s;\n      vi tmp(s.size()/2);\n      rep(j,s.size()/2){\n\ttmp[j] = hex(s[2*j])*16 + hex(s[2*j+1]);\n      }\n      rhythm[i] = reduce(tmp);\n      if(len<=1024)len = lcm(len,rhythm[i].size());\n    }\n\n    if(len>1024)cout << \"Too complex.\" << endl;\n    else{\n      vi res(len,0);\n      rep(i,n){\n\tint k = len/rhythm[i].size();\n\trep(j,rhythm[i].size())res[j*k] |= rhythm[i][j];\n      }\n      rep(i,len){\n\tcout << inv_hex(res[i]/16) << inv_hex(res[i]%16);\n      }\n      cout << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n            if(L>1024)cout<<\"Too complex.\"<<endl;\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        //if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        //else{\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n        //}\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\n// ³kÅ«éñÈçÎA³k·é\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    // iÌå«³ÌñÉ³k·é\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        // ³kÅ«é©`FbN\n        bool isDecom=true;\n        // sz/iÂÌubNÉª\n        // »ê¼êÌÓªÇ¤ÈÁÄ¢é©`FbN\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        // ³kÂ\\\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    // ³ks\\\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        if(L>1024){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        // »ê¼êÌYp^[ÌTCYÌÅ¬ö{ðæé\n        // »Ì·³ÉSÄÌñð²®µA»Ìã¬\n        // ¬ãAp^[ð³k·é\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                // Yp^[ðL£\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        // ·³ð²®µ½ ÆA¬\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-5;\nconst int inf=1e8;\nint gcd(int a,int b){\n\treturn (b==0?a:gcd(b,a%b));\n}\nll lcm(ll a,ll b){\n\treturn a/gcd(a,b)*b;\n}\nint main(){\n\tint q;\n\tcin>>q;\n\twhile(q--){\n\t\tint n;\n\t\tcin>>n;\n\t\tvvi in(n);\n\t\tvi tmp;\n\t\trep(i,n){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tint N=s.size();\n\t\t\ttmp=vi(N/2);\n\t\t\tint gc=N/2;\n\t\t\trep(j,N/2){\n\t\t\t\ttmp[j]=(s[2*j]-'0')*16+(s[2*j+1]-'0');\n\t\t\t\tif(j&&tmp[j])gc=gcd(gc,j);\n\t\t\t}\n\t\t\tfor(int j=0;j<N/2;j+=gc)in[i].pb(tmp[j]);\n\t\t}\n\t\tint lc=1;\n\t\trep(i,n){\n\t\t\tlc=lcm(lc,in[i].size());\n\t\t\tif(lc>1024)break;\n\t\t}\n\t\tif(lc>1024)cout<<\"Too complex.\"<<endl;\n\t\telse{\n\t\t\tvi out(lc);\n\t\t\trep(i,n){\n\t\t\t\tint t=lc/in[i].size();\n\t\t\t\tfor(int j=0;j<lc;j+=t)out[j]|=in[i][j/t];\n\t\t\t}\n\t\t\trep(i,lc)printf(\"%02X\",out[i]);\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\nvector<vector<int> > RI(8);\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n\n        for(int i=0;i<N;i++){\n            RI[i].clear();\n            string s;\n            cin >> s;\n            for(int j=0;j<s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                int x;\n                ss >> x;\n                RI[i].push_back(x);\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << \"Too complex.\" << endl;\n        }else{\n            vector<int> ret(len);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<RI[i].size();j++){\n                    if((j*len) % RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> > *in,ll *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n  }\n  \n  ll ansnum=l;\n  rep(i,n){\n    ll tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n    }\n  }\n\n  vector<pair<int,ll> > out2;\n  rep(i,n){\n    rep(k,in[i].size()){\n      bool hassame=false;\n      rep(j,out2.size()){\n\tif (out2[j].sec == in[i][k].sec){\n\t  out2[j].fir|=in[i][k].fir;\n\t  hassame=true;\n\t  break;\n\t}\n      }\n      if (!hassame)out2.pb(in[i][k]);\n    }\n  }\n\n  minimize(out2,ansnum);\n\n  if (ansnum > 1024){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n  assert(ansnum>0);\n\n  vector<int> out(ansnum,0);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in){\n\n}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\n\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        vector<vector<int> > RI(N);\n        for(int i=0;i<N;i++){\n            RI[i].clear();\n            string s;\n            cin >> s;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                int x;\n                ss >> x;\n                RI[i].push_back(x);\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<(int)RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            vector<int> ret(len);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)RI[i].size();j++){\n                    if((j*len) % (int)RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\nint gcd(int a,int b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0){\n      num=1;\n      return;\n    }\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0 && num%g == 0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nbool check(int n,vector<pair<int,int> > *in,int *num,int l){\n  rep(i,n){\n    if (l % num[i] != 0)return false;\n  }\n  \n  vector<int> out(l,0);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      out[in[i][j].sec*tmp]|=in[i][j].fir;\n    }\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");  \n  return true;\n}\n\nvoid solve(int n,vector<pair<int,int> >*in,int *num){\n  REP(i,1,1025){\n    if (check(n,in,num,i))return;\n  }\n  printf(\"Too complex.\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len_erase=0;\n  int zero_num=0;\n  int L=0;\n\n  for(int i=sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    bool un=false;\n    for(int i=0;i<sum.vf.size();i+=L){\n      for(int j=1;j<L;++j){\n\tif(sum.vf[i+j]!=0){un=true;break;}\n      }\n    }\n    if(!un){\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  sum.vf[i+j]=-1;\n\t}\n      }\n    }\n  } \n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  //cout << lcm(5,7) << endl;\n  //cout << lcm(1023,1022) << endl;\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      char str[8192];\n      scanf(\"%s\",str);\n      s=str;\n      int len;\n      Phrase t(s);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>=2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len_erase=0;\n  int zero_num=0;\n\n  bool cont=false;\n  for(int i = 0; i < sum.vf.size(); ++i){\n    if( sum.vf[i] != 0 ) cont=true;\n  }\n  if(!cont){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }\n  \n  for(int L = sum.vf.size()/2; L >= 2; --L){\n    if( sum.vf.size() % L == 0 ){\n      bool un = false;\n      for(int i = 0; i < sum.vf.size(); i+=L){\n\tfor(int j = 1; j < L; ++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n\tif(un)break;\n      }\n      if(!un){\n\tfor(int i = 0; i < sum.vf.size(); i+=L){\n\t  for(int j = 1; j < L; ++j){\n\t    sum.vf[i+j] = -1;\n\t  }\n\t}\n\tbreak;\n      }\n    }\n  }\n \n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n    return ;\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  cin >> T;\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n\n    cin >> N;\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      cin >> s;\n      int len;\n      Phrase t(s);\n      while(true){\n\tlen = t.vf.size();\n\tEraseExtraZeroes(t);\n\tif(len==t.vf.size())break;\n      }\n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\n\n\n\nusing namespace std;\n\n\n\n\ntypedef unsigned short us;\n\n\n\n\nint N;\nint M;\n\n\n\n\nus toHex(string s){\n&#160; &#160; us num=0;\n&#160; &#160; for(int j=0;j<=1;j++){\n&#160; &#160; &#160; &#160; if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n&#160; &#160; &#160; &#160; else num+=s[j]-'A'+10;\n&#160; &#160; &#160; &#160; if(j==0)num=(num<<4);\n&#160; &#160; }\n&#160; &#160; return num;\n}\nvector<us> toHexList(string s){\n&#160; &#160; vector<us> vus;\n&#160; &#160; for(int i=0;i<s.size();i+=2){\n&#160; &#160; &#160; &#160; string ss=s.substr(i,2);\n&#160; &#160; &#160; &#160; us num=toHex(ss);\n&#160; &#160; &#160; &#160; vus.push_back(num);\n&#160; &#160; }\n&#160; &#160; return vus;\n}\nstring toStr(us num){\n&#160; &#160; us a=num&(0x0F);\n&#160; &#160; us b=(num&(0xF0))>>4;\n&#160; &#160; string s;\n&#160; &#160; if(b>=0&&b<=9)s+=('0'+b);\n&#160; &#160; else s+=('A'+b-10);\n&#160; &#160; if(a>=0&&a<=9)s+=('0'+a);\n&#160; &#160; else s+=('A'+a-10);\n&#160; &#160; return s;\n}\n\n\n\n\nvector<us> dePos(vector<us> vus){\n&#160; &#160; if(vus.size()==1)return vus;\n&#160; &#160; int sz=vus.size();\n&#160; &#160; for(int i=1;i<=sz;i++){\n&#160; &#160; &#160; &#160; if(sz%i!=0)continue;\n&#160; &#160; &#160; &#160; bool isDecom=true;\n&#160; &#160; &#160; &#160; for(int j=0;j<sz;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; if(j%(sz/i)==0)continue;\n&#160; &#160; &#160; &#160; &#160; &#160; else if(vus[j]!=0){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; isDecom=false;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; break;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; if(isDecom){\n&#160; &#160; &#160; &#160; &#160; &#160; vector<us> res;\n&#160; &#160; &#160; &#160; &#160; &#160; for(int j=0;j<sz;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; if(j%(sz/i)==0){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; res.push_back(vus[j]);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; return res;\n&#160; &#160; &#160; &#160; }\n&#160; &#160; }\n&#160; &#160; return vus;\n}\nvector<us> nums[10];\n\n\n\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n&#160; &#160; if(b==0)return a;\n&#160; &#160; return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n&#160; &#160; return a*b/gcd(a,b);\n}\n\n\n\n\n\n\n\n\nint main(){\n\n\n\n\n&#160; &#160; cin>>N;\n&#160; &#160; while(N--){\n&#160; &#160; &#160; &#160; cin>>M;\n&#160; &#160; &#160; &#160; ll L=1;\n&#160; &#160; &#160; &#160; bool con=false;\n&#160; &#160; &#160; &#160; for(int i=0;i<M;i++){\n&#160; &#160; &#160; &#160; &#160; &#160; string s;\n&#160; &#160; &#160; &#160; &#160; &#160; cin>>s;\n&#160; &#160; &#160; &#160; &#160; &#160; nums[i]=dePos(toHexList(s));\n&#160; &#160; &#160; &#160; &#160; &#160; bool match=true;\n&#160; &#160; &#160; &#160; &#160; &#160; for(int j=1;j<nums[i].size();j++){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; if(nums[i][0]!=nums[i][j])match=false;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; if(match){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; vector<us> tmp;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; tmp.push_back(nums[i][0]);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; nums[i]=tmp;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; L=lcm(L,(ll)nums[i].size());\n&#160; &#160; &#160; &#160; &#160; &#160; if(L>1024){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; cout<<\"Too complex.\"<<endl;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; con=true;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; break;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; if(con)continue;\n&#160; &#160; &#160; &#160; for(int i=0;i<M;i++){\n&#160; &#160; &#160; &#160; &#160; &#160; if(nums[i].size()==L)continue;\n&#160; &#160; &#160; &#160; &#160; &#160; else{\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; vector<us> nlis;\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; for(int j=0;j<L;j++){\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; else nlis.push_back(0);\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; &#160; &#160; &#160; &#160; nums[i]=nlis;\n&#160; &#160; &#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; vector<us> res;\n&#160; &#160; &#160; &#160; for(int i=0;i<L;i++){\n&#160; &#160; &#160; &#160; &#160; &#160; us num=0;\n&#160; &#160; &#160; &#160; &#160; &#160; for(int j=0;j<M;j++)num|=nums[j][i];\n&#160; &#160; &#160; &#160; &#160; &#160; res.push_back(num);\n&#160; &#160; &#160; &#160; }\n&#160; &#160; &#160; &#160; res=dePos(res);\n&#160; &#160; &#160; &#160; //if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n&#160; &#160; &#160; &#160; //else{\n&#160; &#160; &#160; &#160; for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n&#160; &#160; &#160; &#160; cout<<endl;\n&#160; &#160; &#160; &#160; //}\n&#160; &#160; }\n\n\n\n\n&#160; &#160; return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\nvector<vector<short> > RI(8,vector<short>(1024));\nvector<short> ret(1024);\nstring s;\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n\n        vector<int> resi(N);\n        for(int i=0;i<N;i++){\n            cin >> s;\n            resi[i] = s.length()/2;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                ss >> RI[i][j/2];\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = resi[i];\n            for(int j=0;j<(int)resi[i];j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,resi[i]/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            for(int i=0;i<1024;i++) ret[i] = 0;\n\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)resi[i];j++){\n                    if((j*len) % (int)resi[i] == 0){\n                        int here = j*len /resi[i];\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            for(int i=0;i<len;i++){\n                cout << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            cout << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <vector>\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define MP make_pair\n#define X first\n#define Y second\n#define all(v) v.begin(), v.end()\n#define rev(v) v.rbegin(), v.rend()\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nint gcd(int m, int n){\n\twhile(n){\n\t\tm = m%n;\n\t\tswap(m, n);\n\t}\n\treturn m;\n}\n\nint lcm(int m, int n){\n\tint d = gcd(m, n);\n\treturn m/d*n;\n}\n\nstring opt(string s){\n\tif(s.size()%4) return s;\n\trep(i, s.size()/4){\n\t\tint k = i*4+2;\n\t\tif(s[k] != '0' || s[k+1] != '0') return s;\n\t}\n\tstring t;\n\trep(i, s.size()/4){\n\t\tint k = i*4;\n\t\tt += s[k];\n\t\tt += s[k+1];\n\t}\n\n\treturn opt(t);\n}\n\nint main(){\n\tint hex[200];\n\tchar dec[200];\n\tfor(int i = 0; i <= 9; i++){\n\t\tdec[i] = '0'+i;\n\t\thex[dec[i]] = i;\n\t}\n\tfor(int i = 10; i <= 15; i++){\n\t\tdec[i] = 'A'+i-10;\n\t\thex[dec[i]] = i;\n\t}\n\n\tint T;\n\tcin >> T;\n\trep(sets, T){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> v(n);\n\t\trep(i, n){\n\t\t\tcin >> v[i];\n\t\t\tbool zero = true;\n\t\t\trep(j, v[i].size()){\n\t\t\t\tif(v[i][j] != '0'){\n\t\t\t\t\tzero = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(zero) v[i] = \"00\";\n\t\t\tv[i] = opt(v[i]);\n\t\t}\n\t\tint l = 1;\n\t\trep(i, n){\n\t\t\tl = lcm(l, v[i].size()/2);\n\t\t\tif(l > 1024) break;\n\t\t}\n\t\tstring ans;\n\t\tif(l > 1024){\n\t\t\tans = \"Too complex.\";\n\t\t}else{\n\t\t\tvector<int> s(l, 0);\n\t\t\trep(i, n){\n\t\t\t\tint k = l*2/v[i].size();\n\t\t\t\trep(j, v[i].size()/2){\n\t\t\t\t\ts[k*j] += hex[v[i][j*2]]*16 + hex[v[i][j*2+1]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tans.resize(l*2);\n\t\t\trep(i, l){\n\t\t\t\tans[i*2] = dec[s[i]/16];\n\t\t\t\tans[i*2+1] = dec[s[i]%16];\n\t\t\t}\n\t\t}\n\n\t\tcout << ans << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<string.h>\n#include<stdio.h>\n#include<algorithm>\nusing namespace std;\nint gcd(int a,int b){\n\twhile(a){\n\t\tb%=a;int c=a;a=b;b=c;\n\t}\n\treturn b;\n}\nint lcm(int a,int b){\n\treturn a/gcd(a,b)*b;\n}\nchar str[10][11000];\nint len[10];\nint sz[10];\nint com[10][11000];\nint ret[11000];\nint main(){\n\tint T;scanf(\"%d\",&T);\n\twhile(T--){\n\t\tint a;scanf(\"%d\",&a);\n\t\tfor(int i=0;i<a;i++)scanf(\"%s\",str[i]);\n\t\tfor(int i=0;i<a;i++)len[i]=strlen(str[i])/2;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tint v=0;\n\t\t\tfor(int j=1;j<=len[i];j++){\n\t\t\t\tif(len[i]%j)continue;\n\t\t\t\tbool ok=true;\n\t\t\t\tfor(int k=0;k<len[i];k++){\n\t\t\t\t\tif(k%j&&(str[i][k*2]!='0'||str[i][k*2+1]!='0')){ok=false;break;}\n\t\t\t\t}\n\t\t\t\tif(ok)v=j;\n\t\t\t}\n\t\t\tsz[i]=len[i]/v;\n\t\t\tfor(int j=0;j<len[i]/v;j++){\n\t\t\t\tcom[i][j]=(str[i][v*j*2]-'0')*16+(str[i][v*j*2+1]-'0');\n\t\t\t}\n\t\t}\n\t\tint now=1;\n\t\tfor(int i=0;i<a;i++){\n\t\t\tnow=lcm(now,sz[i]);\n\t\t\tif(now>1024)break;\n\t\t}\n\t\tif(now>1024){\n\t\t\tprintf(\"Too complex.\\n\");\n\t\t}else{\n\t\t\tfor(int i=0;i<now;i++)ret[i]=0;\n\t\t\tfor(int i=0;i<a;i++){\n\t\t\t\tfor(int j=0;j<sz[i];j++)ret[now/sz[i]*j]+=com[i][j];\n\t\t\t}\n\t\t\tfor(int i=0;i<now;i++)printf(\"%02X\",ret[i]);\n\t\t\tprintf(\"\\n\");\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint gcd(int n, int m){\n  if(n % m == 0) return m;\n  else return gcd(m, n % m);\n}\nint lcm(int n, int m){\n  return n * m / gcd(n, m);\n}\nint toint(string unit){\n  int n;\n  sscanf(unit.c_str(), \"%x\", &n);\n  return n;\n}\nstring tostr(int n){\n  char s[100];\n  sprintf(s, \"%02X\", n);\n  return string(s);\n}\nstring least(string s){\n  int N = s.size() / 2;\n  if(string(2*N, '0') == s) return \"00\";\n  for(int i = 1; i <= N; i++){\n    bool ok = true;\n    for(int j = 0; j < N; j++)if(i * j % N != 0 && s.substr(j * 2, 2) != \"00\") ok = false;\n    if(ok){\n      string res = \"\";\n      REP(j, N) if(i * j % N == 0) res += s.substr(j * 2, 2);\n      return res;\n    }\n  }\n  return s;\n}\n\nint main(){\n  int T; cin>>T;\n  while(T--){\n    int N; cin>>N;\n    string s[8];\n    REP(i, N){\n      cin>>s[i];\n    }\n    int len[8];\n    REP(i, N) len[i] = s[i].size() / 2;\n    int anslen = 1;\n    REP(i, N) anslen = lcm(anslen, len[i]);\n    string ans;\n    REP(i, anslen){\n      int data = 0;\n      REP(j, N)if(len[j] * i % anslen == 0) data |= toint(s[j].substr(len[j] * i / anslen * 2, 2));\n      ans += tostr(data);\n    }\n    string res = least(ans);\n    if(res.size() >= 2048) cout<<\"Too complex.\"<<endl;\n    else cout<<least(ans)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-5;\nconst int inf=1e8;\nint gcd(int a,int b){\n\treturn (b==0?a:gcd(b,a%b));\n}\nll lcm(ll a,ll b){\n\treturn a/gcd(a,b)*b;\n}\nint main(){\n\tint q;\n\tcin>>q;\n\twhile(q--){\n\t\tint n;\n\t\tcin>>n;\n\t\tvvi in(n);\n\t\tvi tmp;\n\t\trep(i,n){\n\t\t\tstring s;\n\t\t\tcin>>s;\n\t\t\tint N=s.size();\n\t\t\ttmp=vi(N/2);\n\t\t\tint gc=N/2;\n\t\t\trep(j,N/2){\n\t\t\t\ttmp[j]=(s[2*j]-'0')*16+(s[2*j+1]-'0');\n\t\t\t\tif(j&&tmp[j])gc=gcd(gc,j);\n\t\t\t}\n\t\t\tfor(int j=0;j<N/2;j+=gc)in[i].pb(tmp[j]);\n\t\t}\n\t\tint lc=1;\n\t\trep(i,n)lc=lcm(lc,in[i].size());\n\t\tif(lc>1024)cout<<\"Too complex\"<<endl;\n\t\telse{\n\t\t\tvi out(lc);\n\t\t\trep(i,n){\n\t\t\t\tint t=lc/in[i].size();\n\t\t\t\tfor(int j=0;j<lc;j+=t)out[j]|=in[i][j/t];\n\t\t\t}\n\t\t\trep(i,lc)printf(\"%02X\",out[i]);\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        //res=dePos(res);\n        //if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        //else{\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n        //}\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\tlong g = Gcd(m, n);\n\treturn m * n / g;\n}\n\nconst char *str = \"0123456789ABCDEF\";\n\nint f(char c0, char c1){\n\tconst char *p0 = strchr(str, c0);\n\tconst char *p1 = strchr(str, c1);\n\treturn (p0 - str) * 16 + (p1 - str);\n}\n\nint length(string &s){\n\tint g = s.length()/2;\n\tfor (int j = 2; j<s.length(); j+=2){\n\t\tint n = f(s[j], s[j + 1]);\n\t\tif (n != 0) g = Gcd(g, j / 2);\n\t}\n\treturn g;\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor (int i = 0; i<N; i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<unsigned char>> mm(n);\n\t\tstring m;\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tcin >> m;\n\n\t\t\tint ln = length(m);\n\t\t\tint g = m.length() / ln;\n\t\t\tmm[j].reserve(ln);\n\t\t\tfor (int k = 0; k<m.length(); k += g){\n\t\t\t\tchar c0 = m[k];\n\t\t\t\tchar c1 = m[k + 1];\n\t\t\t\tint num = f(c0, c1);\n\t\t\t\tmm[j].push_back(num);\n\t\t\t\t//\t\t\t\tcout << num << \" \";\n\t\t\t}\n\t\t\t//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor (int j = 1; j<n; j++){\n\t\t\tlen = Lcm(len, mm[j].size());\n\t\t}\n\t\tcout << len << endl;\n\t\tvector<int> ans(len, 0);\n\t\tfor (int j = 0; j<n; j++){\n\t\t\tint g = len / mm[j].size();\n\t\t\tfor (int k = 0; k<mm[j].size(); k++){\n\t\t\t\tans[k*g] |= mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g = len;\n\t\tfor (int j = 1; j<len; j++){\n\t\t\tif (ans[j] != 0) g = Gcd(g, j);\n\t\t}\n\t\tif (len / g>1024){\n//\t\t\tcout << \"Too complex.\";\n\t\t}\n\t\telse{\n\t\t\tfor (int j = 0; j<len; j += g){\n\t\t\t\tint n0 = ans[j] / 16;\n\t\t\t\tint n1 = ans[j] % 16;\n//\t\t\t\tcout << str[n0] << str[n1];\n\t\t\t}\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\n#include<cassert>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> > *in,ll *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n  }\n  \n  ll ansnum=l;\n  rep(i,n){\n    ll tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n    }\n  }\n\n  vector<pair<int,ll> > out2;\n  rep(i,n){\n    rep(k,in[i].size()){\n      bool hassame=false;\n      rep(j,out2.size()){\n\tif (out2[j].sec == in[i][k].sec){\n\t  out2[j].fir|=in[i][k].fir;\n\t  hassame=true;\n\t  break;\n\t}\n      }\n      if (!hassame)out2.pb(in[i][k]);\n    }\n  }\n\n  minimize(out2,ansnum);\n\n  if (ansnum > 1024){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n  assert(ansnum>0);\n\n  vector<int> out(ansnum,0);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in){\n\n}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<vector<int>> mm(n);\n\t\tstring m;\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m;\n\t\t\tmm[j].reserve(m.length()/2);\n\t\t\tfor(int k=0;k<m.length();k+=2){\n\t\t\t\tchar c0=m[k];\n\t\t\t\tchar c1=m[k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<n;j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(i>0) cout << endl;\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nchar *str=\"0123456789ACDEF\";\n\nint f(char c0,char c1){\n\tchar *p0=strchr(str,c0);\n\tchar *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=0;\n\t\tif(n==1){\n\t\t\tlen=mm[0].size();\n\t\t}else{\n\t\t\tlen = Lcm(mm[0].size(),mm[1].size());\n\t\t\tfor(int j=2;j<mm.size();j++){\n\t\t\t\tlen = Lcm(len,mm[j].size());\n\t\t\t}\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tbool all0=true;\n\t\tvector<int> num;\n\t\tfor(int j=0;j<len;j++){\n\t\t\tall0 &= ans[j]==0;\n\t\t\tif(j!=0 && ans[j]!=0) num.push_back(j);\n//\t\t\tcout << ans[j] << \" \";\n\t\t}\n//\t\tcout << endl;\n\t\tif(all0){\n\t\t\tcout << \"00\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tint g=1;\n\t\tif(num.size()>1){\n\t\t\tg=Gcd(num[0],num[1]);\n\t\t\tfor(int j=2;j<num.size();j++){\n\t\t\t\tg=Gcd(g,num[j]);\n\t\t\t}\n//\t\t\tcout << \"gcd:\" << g;\n//\t\t\tcout << endl;\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\t\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n                //vector<us> tmp=nums[i];\n                //nums[i]=dePos2(nums[i]);\n                //if(tmp==nums[i])nums[i]=dePos(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            res=dePos2(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\n\nvector<long long int> divisor(long long int n) {\n\tvector<long long int> res;\n\tfor (long long int i = 1; i * i <= n; ++i) {\n\t\tif (n % i == 0) {\n\t\t\tres.push_back(i);\n\t\t\tif (i * i != n) res.push_back(n / i);\n\t\t}\n\t}\n\tsort(begin(res), end(res));\n\treturn res;\n}\n\nvector<int>compress(vector<int>nums) {\n\tauto divs(divisor(nums.size()));\n\treverse(divs.begin(),divs.end());\n\tfor (auto div : divs) {\n\t\tbool ok=true;\n\n\t\tfor (int i = 0; i < nums.size() / div; ++i) {\n\t\t\tfor (int j = 1; j < div; ++j) {\n\t\t\t\tif(nums[i*div+j])ok=false;\n\t\t\t}\n\t\t}\n\t\tif (ok) {\n\t\t\tvector<int>ans(nums.size()/div);\n\t\t\tfor (int i = 0; i < nums.size() / div; ++i) {\n\t\t\t\tans[i]=nums[i*div];\n\t\t\t}\n\t\t\treturn ans;\n\t\t}\n\t}\n\tassert(false);\n\treturn vector<int>();\n}\n\nvector<int>mk(string st) {\n\tvector<int>nums(st.size()/2);\n\tfor (int i = 0; i < st.size() / 2; ++i) {\n\t\tchar c1 = st[2*i];\n\t\tchar c2=st[2*i+1];\n\t\tint num=!isdigit(c1)?(c1-'A'+10):c1-'0';\n\t\tnum*=16;\n\t\tnum+=!isdigit(c2)?(c2-'A'+10):c2-'0';\n\n\t\tnums[i]=num;\n\t}\n\treturn compress(nums);\n}\n\nlong long int gcd(long long int l, long long int r) {\n\tif (l > r)return gcd(r, l);\n\telse {\n\t\tif (r%l) {\n\t\t\treturn gcd(l, r%l);\n\n\t\t}\n\t\telse {\n\t\t\treturn l;\n\t\t}\n\t}\n}\n\nint main() {\n\tint Q;cin>>Q;\n\twhile (Q--) {\n\t\tint N;cin>>N;\n\n\t\tvector<vector<int>>rythms;\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\tstring st; cin >> st;\n\t\t\trythms.push_back(mk(st));\n\t\t}\n\n\t\tint alca=1;\n\t\tfor (int i = 0; i < N; ++i) {\n\t\t\talca=alca*rythms[i].size()/gcd(alca,rythms[i].size());\n\t\t\tif (alca > 2048) {\n\t\t\t\talca=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (alca == -1) {\n\t\t\tcout<<\"Too complex.\"<<endl;\n\t\t}\n\t\telse {\n\t\t\tvector<int>anss(alca);\n\t\t\tfor (auto rythm: rythms) {\n\t\t\t\t\n\t\t\t\tfor (int i = 0; i < rythm.size(); ++i) {\n\t\t\t\t\tanss[i*(alca/rythm.size())] |= rythm[i];\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\tanss=compress(anss);\n\t\t\tfor (auto ans : anss) {\n\t\t\t\tint l=ans/16;\n\t\t\t\tint r=ans%16;\n\t\t\t\tif(l>=10)cout<<string(1,char('A'+l-10));\n\t\t\t\telse cout<<l;\n\n\t\t\t\tif(r>=10)cout<<string(1,char('A'+r-10));\n\t\t\t\telse cout<<r;\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\nusing namespace std;\ntypedef unsigned char uc;\nstruct R {\n  uc notes[1024];\n  int num;\n  void push(const uc& note) {\n    notes[num++] = note;\n  }\n};\n\nR rolls[8];\nchar hexmap[16] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};\n\nint gcd_of(int a, int b) {\n  while (a != b) {\n    if (a > b)\n      a -= b;\n    else\n      b -= a;\n  }\n  return a;\n}\n\nint lcm_of(const int& a, const int& b) {\n  return a * b / gcd_of(a, b);\n}\n\nint main() {\n  int t;\n  cin >> t;\n  while (t --) {\n    int n;\n    cin >> n;\n    for (int i = 0; i < n; i++) {\n      // load\n      char buff[2049];\n      cin >> buff;\n      char* p = buff;\n      auto& r = rolls[i];\n      r.num = 0;\n      while (*p != 0) {\n        r.push((*p - '0') * 16 + (*(p + 1) - '0'));\n        p += 2;\n      }\n\n      // comp\n      int gcd = r.num;\n      int clen = 1;\n      for (int j = 1; j < r.num; j++) {\n        if (r.notes[j] == 0) {\n          clen++;\n        } else {\n          gcd = gcd_of(gcd, clen);\n          clen = 1;\n          if (gcd == 1) break;\n        }\n      }\n      gcd = gcd_of(gcd, clen);\n      if (gcd != 1) {\n        r.num /= gcd;\n        for (int j = 0; j < r.num; j++) r.notes[j] = r.notes[j * gcd];\n      }\n    }\n    int lcm = rolls[0].num;\n\n    for (int i = 1; i < n; i++) {\n      lcm = lcm_of(lcm, rolls[i].num);\n    }\n\n    if (lcm > 1024) {\n      cout << \"Too complex.\";\n    } else {\n      // combine\n      int m[8];\n      for (int i = 0; i < n; i++) m[i] = lcm / rolls[i].num;\n      for (int i = 0; i < lcm; i++) {\n        uc v = 0;\n        for (int j = 0; j < n; j++) {\n          if (i % m[j] == 0) v |= rolls[j].notes[i / m[j]];\n        }\n        cout << hexmap[v / 16] << hexmap[v % 16];\n      }\n    }\n    cout << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    assert(LCM>=0);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len_erase=0;\n  int zero_num=0;\n\n  bool cont=false;\n  for(int i = 0; i < sum.vf.size(); ++i){\n    if( sum.vf[i] != 0 ) cont=true;\n  }\n  if(!cont){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }\n  \n  for(int L = sum.vf.size()/2; L >= 2; --L){\n    if( sum.vf.size() % L == 0 ){\n      bool un = false;\n      for(int i = 0; i < sum.vf.size(); i+=L){\n\tfor(int j = 1; j < L; ++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n\tif(un)break;\n      }\n      if(!un){\n\tfor(int i = 0; i < sum.vf.size(); i+=L){\n\t  for(int j = 1; j < L; ++j){\n\t    sum.vf[i+j] = -1;\n\t  }\n\t}\n\tbreak;\n      }\n    }\n  }\n \n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  cout << lcm(5,7) << endl;\n  cout << lcm(1023,1022) << endl;\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      char str[8192];\n      scanf(\"%s\",str);\n      s=str;\n      int len;\n      Phrase t(s);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <string>\n#include <vector>\n#include <cstdint>\n#include <algorithm>\n\nsize_t gcd(size_t m, size_t n) {\n  while (n) std::swap(m%=n, n);\n  return m;\n}\n\nsize_t lcm(size_t m, size_t n) {\n  return m/gcd(m, n)*n;\n}\n\nstd::vector<int> parse(const std::string &s) {\n  std::vector<int> res;\n  for (size_t i=0; i<s.length(); i+=2) {\n    int cur=(s[i]-'0');\n    cur <<= 4;\n    cur |= (s[i+1]-'0');\n    res.push_back(cur);\n  }\n  return res;\n}\n\nvoid compress(std::vector<int> &res) {\n  std::vector<int> on;\n  for (size_t i=0; i<res.size(); ++i)\n    if (res[i])\n      on.push_back(i);\n\n  if (on.empty()) {\n    res.assign(1, 0);\n    return;\n  }\n\n  size_t div=res.size();\n  for (size_t i=0; i<on.size(); ++i)\n    div = gcd(div, on[i]);\n\n  if (div == 1)\n    return;\n\n  std::vector<int> tmp(res.size()/div);\n  for (size_t i=0; i<tmp.size(); ++i) {\n    tmp[i] = res[div*i];\n  }\n  res = tmp;\n}\n\nvoid or_seq(std::vector<int> &res, const std::vector<int> &in) {\n  size_t mul=res.size()/in.size();\n  for (size_t i=0; i<in.size(); ++i) {\n    res[mul*i] |= in[i];\n  }\n}\n\nint solve_testcase() {\n  size_t N;\n  scanf(\"%zu\", &N);\n\n  std::vector<std::string> R(N);\n  std::vector<std::vector<int>> T(N);\n  for (size_t i=0; i<N; ++i) {\n    char buf[2048+1];\n    scanf(\"%s\", buf);\n    R[i] = buf;\n    T[i] = parse(R[i]);\n    compress(T[i]);\n    // for (size_t j=0; j<T[i].size(); ++j)\n    //   fprintf(stderr, \"%d%c\", T[i][j], j+1<T[i].size()? ' ':'\\n');\n  }\n\n  size_t len=1;\n  for (size_t i=0; i<N; ++i) {\n    len = lcm(len, T[i].size());\n    if (len > 1024)\n      return !printf(\"Too complex.\\n\");\n  }\n\n  std::vector<int> res(len);\n  for (size_t i=0; i<N; ++i)\n    or_seq(res, T[i]);\n\n  for (size_t i=0; i<len; ++i)\n    printf(\"%02X\", res[i]);\n\n  printf(\"\\n\");\n  return 0;\n}\n\nint main() {\n  int T;\n  scanf(\"%d\", &T);\n\n  for (int i=0; i<T; ++i)\n    solve_testcase();\n}\n\n"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\n#include <bitset>\nconst int PRIME_SIZE = 1000000;\nint psize;\nbitset<PRIME_SIZE + 1> bprime;\nint prime[PRIME_SIZE / 10 + 1000];\nint Eratosthenes(int n) {\n  psize = 0;\n  bprime.set();\n  bprime[0] = bprime[1] = false;\n  for (int i = 2; i <= n; i++) {\n    if (!bprime[i]) { continue; }\n    prime[psize++] = i;\n    if ((long long)i * i > n) { continue; }\n    for (int j = i * i; j <= n; j += i) {\n      bprime[j] = false;\n    }\n  }\n  return psize;\n}\n\nint n;\nchar strs[20][3000];\nint vs[20][3000];\nint lens[20];\nint ans[3000];\n\nint decode(int c1, int c2) {\n  if (isalpha(c1)) { c1 += 10 - 'A'; }\n  else { c1 -= '0'; }\n  if (isalpha(c2)) { c2 += 10 - 'A'; }\n  else { c2 -= '0'; }\n  return c1 * 16 + c2;\n}\n\nchar temp[10];\nchar *encode(int v) {\n  temp[0] = v / 16;\n  temp[1] = v  % 16;\n  temp[2] = 0;\n  if (temp[0] >= 10) { temp[0] += 'A' - 10; }\n  else { temp[0] += '0'; }\n  if (temp[1] >= 10) { temp[1] += 'A' - 10; }\n  else { temp[1] += '0'; }\n  return temp;\n}\n\nvoid Compress(int *vs, int &len) {\n  int temp[3000];\n  REP(k, psize) {\n    while (true) {\n      if (len < prime[k]) { goto next; }\n      if (len % prime[k] != 0) { break; }\n      REP(j, len) {\n        if (j % prime[k] == 0) {\n          temp[j / prime[k]] = vs[j];\n          continue;\n        }\n        if (vs[j] != 0) { goto next; }\n      }\n      memcpy(vs, temp, sizeof(temp));\n      len /= prime[k];\n    }\nnext:;\n  }\n}\n\nint main() {\n  Eratosthenes(1024);\n  int test;\n  scanf(\"%d\", &test);\n  while (test--) {\n    scanf(\"%d\", &n);\n    REP(i, n) {\n      scanf(\"%s\", strs[i]);\n      lens[i] = strlen(strs[i]);\n      for (int j = 0; j < lens[i]; j += 2) {\n        vs[i][j / 2] = decode(strs[i][j], strs[i][j + 1]);\n      }\n      lens[i] /= 2;\n      Compress(vs[i], lens[i]);\n    }\n    int v = 1;\n    REP(i, n) {\n      v *= lens[i] / __gcd(v, lens[i]);\n      if (v > 1024) {\n        puts(\"Too complex.\");\n        goto end;\n      }\n    }\n    MEMSET(ans, 0);\n    REP(i, n) {\n      REP(j, lens[i]) {\n        int index = j * v / lens[i];\n        ans[index] |= vs[i][j];\n      }\n    }\n    Compress(ans, v);\n    REP(i, v) {\n      printf(\"%s\", encode(ans[i]));\n    }\n    puts(\"\");\nend:;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nvector<int> simple(string s){\n\tvector<int> v;\n\tfor(int i = 0 ; i < s.size() ; i += 2 ){\n\t\tv.push_back((s[i]-'0')*16+s[i+1]-'0');\n\t}\n\tfor(int i = 1 ; i <= v.size() ; i++){\n\t\tif( v.size() % i ) continue;\n\t\tint l = v.size() / i;\n\t\tint f = 1;\n\t\tfor(int j = 0 ; j < v.size() ; j++){\n\t\t\tif( j % l && v[j] > 0 ) f = 0;\n\t\t}\n\t\tif(f){\n\t\t\tvector<int> t;\n\t\t\tfor(int j = 0 ; j < v.size() ; j += l )\n\t\t\t\tt.push_back(v[j]);\n\t\t\tv = t;\n\t\t\tbreak;\n\t\t}\n\t}\n\t/*for(int i = 1 ; i <= v.size() ; i++){\n\t\tif( v.size() % i ) continue;\n\t\tint f = 1;\n\t\tfor(int j = 0 ; j < v.size() ; j+=i){\n\t\t\tfor(int k = 0 ; k < i ; k++){\n\t\t\t\tif( v[j+k] != v[k] ) f = 0;\n\t\t\t}\n\t\t}\n\t\tif(f){\n\t\t\tv.resize(i);\n\t\t\treturn v;\n\t\t}\n\t}*/\n\treturn v;\n}\nint main(){\n\tint T;\n\tcin >> T;\n\twhile(T--){\n\t\tint n;\n\t\tcin >> n;\n\t\tint ans = 1;\n\t\tvector< vector<int> > vs;\n\t\tfor(int i = 0 ; i < n ; i++){\n\t\t\tstring r;\n\t\t\tcin >> r;\n\t\t\tvs.push_back(simple(r));\n\t\t\tans = ans * vs.back().size() / __gcd(ans,(int)vs.back().size());\n\t\t\tans = min(2000,ans);\n\t\t}\n\t\tif( ans > 1024 ){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t}else{\n\t\t\tvector<int> a(ans);\n\t\t\tfor(int i = 0 ; i < vs.size() ; i++){\n\t\t\t\tint span = ans / vs[i].size();\n\t\t\t\tfor(int j = 0 ; j < vs[i].size() ; j++)\n\t\t\t\t\ta[span*j] |= vs[i][j];\n\t\t\t}\n\t\t\tfor(int i = 0 ; i < a.size() ; i++)\n\t\t\t\tprintf(\"%02X\",a[i]);\n\t\t\tcout << endl;\n\t\t}\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    while(L>1){\n      bool un=false;\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n      }\n      if(!un){\n\tfor(int i=0;i<sum.vf.size();i+=L){\n\t  for(int j=1;j<L;++j){\n\t    sum.vf[i+j]=-1;\n\t  }\n\t}\n\tbreak;\n      }\n      --L;\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n    \n    string s;\n    getline(cin,s);\n    for(int i = 0; i < N; ++i){\n      getline(cin,s);\n      int len;\n      Phrase t(s);\n\n      if(s.length()==0)t.vf.push_back(0);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\n#include <bitset>\nconst int PRIME_SIZE = 1000000;\nint psize;\nbitset<PRIME_SIZE + 1> bprime;\nint prime[PRIME_SIZE / 10 + 1000];\nint Eratosthenes(int n) {\n  psize = 0;\n  bprime.set();\n  bprime[0] = bprime[1] = false;\n  for (int i = 2; i <= n; i++) {\n    if (!bprime[i]) { continue; }\n    prime[psize++] = i;\n    if ((long long)i * i > n) { continue; }\n    for (int j = i * i; j <= n; j += i) {\n      bprime[j] = false;\n    }\n  }\n  return psize;\n}\n\nint n;\nchar strs[20][3000];\nint vs[20][3000];\nint lens[20];\nint ans[3000];\n\nint decode(int c1, int c2) {\n  if (isalpha(c1)) { c1 += 10 - 'A'; }\n  else { c1 -= '0'; }\n  if (isalpha(c2)) { c2 += 10 - 'A'; }\n  else { c2 -= '0'; }\n  return c1 * 16 + c2;\n}\n\nchar temp[10];\nchar *encode(int v) {\n  temp[0] = v / 16;\n  temp[1] = v  % 16;\n  temp[2] = 0;\n  if (temp[0] >= 10) { temp[0] += 'A' - 10; }\n  else { temp[0] += '0'; }\n  if (temp[1] >= 10) { temp[1] += 'A' - 10; }\n  else { temp[1] += '0'; }\n  return temp;\n}\n\nvoid Compress(int *vs, int &len) {\n  int temp[3000];\n  REP(k, psize) {\n    while (true) {\n      if (len < prime[k]) { goto next; }\n      if (len % prime[k] != 0) { break; }\n      REP(j, len) {\n        if (j % prime[k] == 0) {\n          temp[j / prime[k]] = vs[j];\n          continue;\n        }\n        if (vs[j] != 0) { goto next; }\n      }\n      memcpy(vs, temp, sizeof(temp));\n      len /= prime[k];\n    }\nnext:;\n  }\n}\n\nint main() {\n  Eratosthenes(1024);\n  int test;\n  scanf(\"%d\", &test);\n  while (test--) {\n    scanf(\"%d\", &n);\n    REP(i, n) {\n      scanf(\"%s\", strs[i]);\n      lens[i] = strlen(strs[i]);\n      for (int j = 0; j < lens[i]; j += 2) {\n        vs[i][j / 2] = decode(strs[i][j], strs[i][j + 1]);\n      }\n      lens[i] /= 2;\n      Compress(vs[i], lens[i]);\n    }\n    int v = 1;\n    REP(i, n) {\n      v *= lens[i] / __gcd(v, lens[i]);\n      if (v > 2048) {\n        puts(\"Too complex.\");\n        goto end;\n      }\n    }\n    MEMSET(ans, 0);\n    REP(i, n) {\n      REP(j, lens[i]) {\n        int index = j * v / lens[i];\n        ans[index] |= vs[i][j];\n      }\n    }\n    Compress(ans, v);\n    REP(i, v) {\n      printf(\"%s\", encode(ans[i]));\n    }\n    puts(\"\");\nend:;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=mm[0].size();\n\t\tfor(int j=1;j<mm.size();j++){\n\t\t\tlen = Lcm(len,mm[j].size());\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(i>0) cout << endl;\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\";\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  ll g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> >&ans,ll &ansnum, \n\t   vector<pair<int,ll> >&in,ll &num){\n  ll l=ansnum*num/gcd(ansnum,num);\n\n  ll tmp=l/num;\n  rep(j,in.size()){\n    in[j].sec*=tmp;\n  }\n  tmp=l/ansnum;\n  rep(j,ans.size()){\n    ans[j].sec*=tmp;\n  }\n  \n  ansnum=l;\n  vector<pair<int,ll> >& out2=ans;\n  rep(k,in.size()){\n    bool hassame=false;\n    rep(j,out2.size()){\n      if (out2[j].sec == in[k].sec){\n\tout2[j].fir|=in[k].fir;\n\thassame=true;\n\tbreak;\n      }\n    }\n    if (!hassame)out2.pb(in[k]);\n  }\n\n  minimize(out2,ansnum);\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in,ll *num){\n  for(int i=0;i<n;i++){\n    for(int j=i+1;j<n;j++){\n      if (num[j] < num[i])swap(num[i],num[j]),swap(in[i],in[j]);\n    }\n  }\n  vector<pair<int,ll> > &ans=in[0];\n  minimize(ans,num[0]);\n  REP(i,1,n){\n    solve(n,ans,num[0],in[i],num[i]);\n  }\n    if (num[0] > 1024){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n\n\n  vector<int> out(num[0],0);\n  rep(i,ans.size()){\n    out[ans[i].sec]=ans[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    compute(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n                //nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            res=dePos2(res);\n           // res=dePos2(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\ntypedef vector<int> vi;\n\ninline int gcd(int a, int b){ return b?gcd(b,a%b):a; }\ninline int lcm(int a, int b){ return a/gcd(a,b)*b; }\ninline int hex(char a){ return isdigit(a)?(a-'0'):(a-'A'); }\ninline char inv_hex(int a){ return (a<10)?(a+'0'):(a-10+'A'); }\n\ninline vi reduce(vi a){\n  int n = a.size();\n  for(int i=n;i>=1;i--){\n    if(n%i)continue;\n    bool f = true;\n    rep(j,n){\n      if(j%i && a[j]){\tf = false; break; }\n    }\n    if(f){\n      vi res(n/i);\n      for(int j=0;j<n;j+=i)res[j/i] = a[j];\n      return res;\n    }\n  }\n  return a;\n}\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  int casenum;\n  cin >> casenum;\n  while(casenum--){\n    int n;\n    cin >> n;\n    int len = 1;\n    vector< vi > rhythm(n);\n    rep(i,n){\n      string s;\n      cin >> s;\n      vi tmp(s.size()/2);\n      rep(j,s.size()/2){\n\ttmp[j] = hex(s[2*j])*16 + hex(s[2*j+1]);\n      }\n      rhythm[i] = reduce(tmp);\n      if(len<=2048)len = lcm(len,rhythm[i].size());\n    }\n\n    if(len>2048)cout << \"Too complex.\" << endl;\n    else{\n      vi res(len,0);\n      rep(i,n){\n\tint k = len/rhythm[i].size();\n\trep(j,rhythm[i].size())res[j*k] |= rhythm[i][j];\n      }\n      rep(i,len){\n\tcout << inv_hex(res[i]/16) << inv_hex(res[i]%16);\n      }\n      cout << endl;\n    }\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\nint gcd(int a,int b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nbool check(int n,vector<pair<int,int> > *in,int *num,int l){\n  rep(i,n){\n    if (l % num[i] != 0)return false;\n  }\n  \n  vector<int> out(l,0);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      out[in[i][j].sec*tmp]|=in[i][j].fir;\n    }\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");  \n  return true;\n}\n\n\nvoid solve(int n,vector<pair<int,int> >*in,int *num){\n  REP(i,1,1025){\n    if (check(n,in,num,i))return;\n  }\n  printf(\"Too complex.\\n\");\n}\n\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n\n\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<algorithm>\n#include<cmath>\n#define N 1024\n\nusing namespace std;\n\nbool IsDelete(const vector<string>& data, int n){\n  for(int i=0; i<data.size(); ++i){\n    if(i % n == 0) continue;\n    if(data[i] != \"00\") return false;\n  }\n  return true;\n}\n\nvector<string> ConvertData(string& str){\n  vector<string> data;\n  for(string::iterator it=str.begin(); it!=str.end(); it+=2){\n    string str_(it, it+2);\n    data.push_back(str_);\n  }\n  if(IsDelete(data, data.size())){\n    data.erase(data.begin()+1, data.end());\n    return data;\n  }\n  int i=2;\n  while(i <= sqrt(data.size())){\n    if(data.size()%i == 0 && IsDelete(data, i)){\n      for(vector<string>::iterator j=data.begin(); j!=data.end(); ++j)\n\tdata.erase(j+1, j+i);\n    }else{\n      ++i;\n    }\n  }\n  return data;\n}\n\nint ChangeStrToInt(const string& s){\n  return (s[0] - 48)*16 + (s[1] - 48);\n}\n\nstring ChangeIntToStr(int x){\n  string str;\n  str.push_back(x/16 + 48);\n  if(x%16 < 10) str.push_back(x%16 + 48);\n  else str.push_back(x%16 + 55);\n  return str;\n}\n\nvector<string> Add(const vector<string>& data_a, const vector<string>& data_b,\n\t\t   int lng, int a, int b){\n  vector<string> ans(lng, \"00\");\n  for(int i=0, j=0; i<ans.size(); i+=a, ++j){\n    ans[i] = data_a[j];\n  }\n  for(int i=0, j=0; i<ans.size(); i+=b, ++j){\n    if(ans[i] == \"00\") ans[i] = data_b[j];\n    else ans[i] = ChangeIntToStr(ChangeStrToInt(ans[i]) + ChangeStrToInt(data_b[j]));\n  }\n  return ans;\n}\n\nstring RhythmMachine(const vector< vector<string> >& data){\n  int a, b, gcd;\n  vector<string> sum = data[0];\n  for(int i=1, lng=data[0].size(); i<data.size(); ++i){\n    a = sum.size();\n    b = data[i].size();\n    gcd = __gcd(lng, b);\n    lng *= (b / gcd);\n    if(lng > N) return \"Too complex.\";\n    sum = Add(sum, data[i], lng, lng/a, lng/b);\n  }\n  string str;\n  for(vector<string>::iterator it=sum.begin(); it!=sum.end(); ++it)\n    str.append(*it);\n  return str;\n}\n\nbool Compare(const vector<string>& a, const vector<string>& b){\n  return a.size() <= b.size();\n}\n\nint main(){\n  int n, m;\n  string str;\n  vector< vector<string> > data;\n  cin >> n;\n  for(int i=0; i<n; ++i){\n    cin >> m;\n    for(int j=0; j<m; ++j){\n      cin >> str;\n      data.push_back(ConvertData(str));\n    }\n    sort(data.begin(), data.end(), Compare);\n    cout << RhythmMachine(data) << endl;\n    data.clear();\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      if(i+1>=s.length())return ;\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len=sum.vf.size();\n  int L=0;\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    bool un=false;\n    for(int i=0;i<sum.vf.size();i+=L){\n      for(int j=1;j<L;++j){\n\tif(i+j>=sum.vf.size()){\n\t  un=true;\n\t  break;\n\t}\n\tif(sum.vf[i+j]!=0){\n\t  un=true;\n\t  break;\n\t}\n      }\n    }\n    if(!un){\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  sum.vf[i+j]=-1;\n\t}\n      }\n    }\n  }\n\n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  if(sum.vf.size()!=len)EraseExtraZeroes(sum);\n  return ;\n}\n  \nint main()\n{\n  int T;\n  cin>>T;\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    cin>>N;\n    if( N == 0 )break;\n    \n    string s;\n    getline(cin,s);\n    int left=N;\n    for(int i = 0; i < N; ++i){\n      getline(cin,s);\n      int len;\n      Phrase t(s);\n      --left;\n      \n      EraseExtraZeroes(t);\n      if(s.length()==0)t.vf.push_back(0);\n      if(P.vf.size()==0){ P=t; }else{ P=P.merge(t); }\n      EraseExtraZeroes(P);\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    for(int i = 0; i < left; ++i){\n      getline(cin,s);\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        vector<string> R(N);\n        for(int i=0;i<N;i++) cin >> R[i];\n        vector<vector<int> > RI(N);\n        for(int i=0;i<N;i++){\n            for(int j=0;j<R[i].length();j+=2){\n                string here = R[i].substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                int x;\n                ss >> x;\n                RI[i].push_back(x);\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << \"Too complex.\" << endl;\n        }else{\n            vector<int> ret(len);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<RI[i].size();j++){\n                    if((j*len) % RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else\n                nums[i]=dePos(nums[i]);\n            nums[i]=dePos2(nums[i]);\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else\n            res=dePos(res);\n        res=dePos2(res);\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\ntypedef unsigned char uchar;\n\nvector<vector<short> > RI(8);\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n\n        //vector<vector<short> > RI(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            RI[i].clear();\n            RI[i].resize(s.length()/2);\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                short x;\n                ss >> x;\n                RI[i][j/2] = x;\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<(int)RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            vector<short> ret(len);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)RI[i].size();j++){\n                    if((j*len) % (int)RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "// g++ -std=c++11 a.cpp\n#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<unordered_map>\n#include<utility>\n#include<cmath>\n#include<random>\n#include<cstring>\n#include<queue>\n#include<stack>\n#include<bitset>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#include<assert.h>\n#include<typeinfo>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define FOR(i,a) for(auto i:a)\n#define pb push_back\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\n//#define int ll\ntypedef int Def;\ntypedef pair<Def,Def> pii;\ntypedef vector<Def> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef vector<string> vs;\ntypedef vector<double> vd;\ntypedef vector<vd> vvd;\ntypedef pair<Def,pii> pip;\ntypedef vector<pip>vip;\n#define mt make_tuple\ntypedef tuple<int,int,int> tp;\ntypedef vector<tp> vt;\ntemplate<typename A,typename B>bool cmin(A &a,const B &b){return a>b?(a=b,true):false;}\ntemplate<typename A,typename B>bool cmax(A &a,const B &b){return a<b?(a=b,true):false;}\n//template<class C>constexpr int size(const C &c){return (int)c.size();}\n//template<class T,size_t N> constexpr int size(const T (&xs)[N])noexcept{return (int)N;}\nconst double PI=acos(-1);\nconst double EPS=1e-9;\nDef inf = sizeof(Def) == sizeof(long long) ? 2e18 : 1e9+10;\nint dx[]={0,1,0,-1};\nint dy[]={1,0,-1,0};\nll gcd(ll a,ll b){\n\treturn (b==0?a:gcd(b,a%b));\n}\nll lcm(ll a,ll b){\n\treturn a/gcd(a,b)*b;\n}\nint main(){\n\tint q;\n\tcin>>q;\n\twhile(q--){\n\t\tint n;cin>>n;\n\t\tvs in(n);\n\t\trep(i,n)cin>>in[i];\n\t\t\n\t\trep(i,n){\n\t\t\tint t=in[i].size()/2;\n\t\t\trep(j,in[i].size())if(in[i][j]!='0')t=gcd(t,j/2);\n\t\t\tif(t==0){\n\t\t\t\tin[i]=\"00\";\n\t\t\t}else{\n\t\t\t\tstring w=\"\";\n\t\t\t\trep(j,in[i].size()/t/2){\n\t\t\t\t\tw+=in[i][j*2*t];\n\t\t\t\t\tw+=in[i][j*2*t+1];\n\t\t\t\t}\n\t\t\t\tin[i]=w;\n\t\t\t}\n\t\t}\n\t\tll t=1;\n\t\trep(i,n){\n\t\t\tt=lcm(t,in[i].size());\n\t\t\tif(t>2048)break;\n\t\t}\n//\t\trep(i,n)cout<<in[i]<<endl;cout<<endl;\n\t\tif(t>2048)cout<<\"Too complex.\"<<endl;\n\t\telse{\n\t\t\trep(i,n){\n\t\t\t\tint w=t/in[i].size();\n\t\t\t\tstring a=\"\";\n\t\t\t\trep(j,in[i].size()/2){\n\t\t\t\t\ta+=in[i][2*j];\n\t\t\t\t\ta+=in[i][2*j+1];\n\t\t\t\t\ta+=string(2*w-2,'0');\n\t\t\t\t}\n\t\t\t\tin[i]=a;\n\t\t\t}\n\t\t\trep(i,t){\n\t\t\t\tint s=0;\n\t\t\t\trep(j,n)s+=in[j][i]-'0';\n\t\t\t\tprintf(\"%01X\",s);\n\t\t\t}\n\t\t\tcout<<endl;\n\t\t}\n\t}\n}\n\n\n\n\n\n"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\nconst int MAX_M = 1024;\n\n/* typedef */\n\ntypedef unsigned char uchar;\n\nstruct Rhythm {\n  int m;\n  uchar bytes[MAX_M];\n\n  Rhythm() { m = 1; bytes[0] = 0; }\n  Rhythm(string rstr) {\n    m = rstr.length() / 2;\n    for (int i = 0; i < m; i++) {\n      uchar c0 = rstr[i * 2], c1 = rstr[i * 2 + 1];\n      bytes[i] = ((c0 - '0') << 4) | (c1 - '0');\n    }\n  }\n\n  void normalize() {\n    if (m == 0) return;\n\n    for (int k = 2; k * k <= m;) {\n      if (m % k) {\n\tk++;\n\tcontinue;\n      }\n      bool ok = true;\n      for (int i = 0; i < m; i++)\n\tif (i % k && bytes[i]) {\n\t  ok = false;\n\t  break;\n\t}\n      if (ok) {\n\tm /= k;\n\tfor (int i = 0; i < m; i++)\n\t  bytes[i] = bytes[i * k];\n      }\n      else\n\tk++;\n    }\n\n    bool ok = true;\n    for (int i = 1; i < m; i++)\n      if (bytes[i]) {\n\tok = false;\n\tbreak;\n      }\n    if (ok) m = 1;\n  }\n\n  void mul(int k) {\n    if (m == 0 || m * k > MAX_M) {\n      m = 0;\n      return;\n    }\n\n    uchar bytes0[MAX_M];\n    memcpy(bytes0, bytes, m);\n    memset(bytes, 0, m * k);\n\n    for (int i = 0; i < m; i++) bytes[i * k] = bytes0[i];\n    m *= k;\n  }\n\n  void merge(Rhythm& r0) {\n    if (m == 0 || r0.m == 0) {\n      m = 0;\n      return;\n    }\n\n    int g = __gcd(m, r0.m);\n    int lcm = m * r0.m / g;\n    if (lcm > MAX_M) {\n      m = 0;\n      return;\n    }\n\n    mul(lcm / m);\n    r0.mul(lcm / r0.m);\n\n    for (int i = 0; i < m; i++) bytes[i] |= r0.bytes[i];\n\n    normalize();\n  }\n  \n  void print() {\n    for (int i = 0; i < m; i++) printf(\"%02X\", (int)bytes[i]);\n    putchar('\\n');\n  }\n};\n\n/* global variables */\n\n/* subroutines */\n\n/* main */\n\nint main() {\n  int tn;\n  cin >> tn;\n\n  while (tn--) {\n    int n;\n    cin >> n;\n\n    Rhythm rt;\n    //rt.print();\n\n    for (int i = 0; i < n; i++) {\n      string str;\n      cin >> str;\n\n      Rhythm ri(str);\n      if (rt.m > 0) rt.merge(ri);\n    }\n\n    if (rt.m == 0)\n      cout << \"Too complex.\" << endl;\n    else\n      rt.print();\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint gcd(int n, int m){\n  if(n % m == 0) return m;\n  else return gcd(m, n % m);\n}\nint lcm(int n, int m){\n  return n * m / gcd(n, m);\n}\nint toint(string unit){\n  int n;\n  sscanf(unit.c_str(), \"%x\", &n);\n  return n;\n}\nstring tostr(int n){\n  char s[100];\n  sprintf(s, \"%02X\", n);\n  return string(s);\n}\nstring least(string s){\n  int N = s.size() / 2;\n  if(string(2*N, '0') == s) return \"00\";\n  for(int i = 1; i <= N; i++){\n    bool ok = true;\n    for(int j = 0; j < N; j++)if(i * j % N != 0 && s.substr(j * 2, 2) != \"00\") ok = false;\n    if(ok){\n      string res = \"\";\n      REP(j, N) if(i * j % N == 0) res += s.substr(j * 2, 2);\n      return res;\n    }\n  }\n  return s;\n}\n\nint main(){\n  int T; cin>>T;\n  while(T--){\n    int N; cin>>N;\n    string s[8];\n    REP(i, N){\n      cin>>s[i];\n    }\n    int len[8];\n    REP(i, N) len[i] = s[i].size() / 2;\n    int anslen = 1;\n    REP(i, N) anslen = lcm(anslen, len[i]);\n    if(anslen >= 1024){\n      cout<<\"Too complex\"<<endl;\n      continue;\n    }\n    string ans;\n    REP(i, anslen){\n      int data = 0;\n      REP(j, N)if(len[j] * i % anslen == 0) data |= toint(s[j].substr(len[j] * i / anslen * 2, 2));\n      ans += tostr(data);\n    }\n    cout<<least(ans)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n            //if(j%(sz/i)==0)continue;\n            //else if(vus[j]!=vus[(j/(sz/i))+j%(sz/i)]){\n            //    isDecom=false;\n            //    break;\n            //}\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n                nums[i]=dePos(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        if(match){\n            vector<us> tmp;\n            tmp.push_back(res[0]);\n            res=tmp;\n        }\n        else{\n            res=dePos2(res);\n            res=dePos(res);\n        }\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        //if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        //else{\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n        //}\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <iomanip>\n#include <sstream>\n#include <cstdio>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <complex>\n#include <cstring>\n#include <cstdlib>\n#include <cmath>\n#include <cassert>\n#include <climits>\n#include <queue>\n#include <set>\n#include <map>\n#include <valarray>\n#include <bitset>\n#include <stack>\nusing namespace std;\n\n#define REP(i,n) for(int i=0;i<(int)n;++i)\n#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n#define ALL(c) (c).begin(), (c).end()\ntypedef long long ll;\ntypedef pair<int,int> pii;\nconst int INF = 1<<29;\nconst double PI = acos(-1);\nconst double EPS = 1e-8;\n\nll gcd(ll a, ll b) {\n  return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a, ll b) {\n  return a / gcd(a,b) * b;\n}\nll lcm(vector<ll> v) {\n  ll res = 1;\n  FOR(it,v) {\n    res = lcm(res, *it);\n    if (res > 1e9) return res;\n  }\n  return res;\n}\n\nint rhythm[8][1024];\nstring str[8];\nint ans[1024];\n\nint main() {\n  int T;\n  cin >> T;\n  while(T--) {\n    int n;\n    cin >> n;\n    vector<ll> size;\n    REP(i, n) {\n      cin >> str[i];\n      int sz = str[i].size()/2;\n      int g = sz;\n      REP(j,sz) {\n        int tmp = strtol(str[i].substr(j*2,2).c_str(), NULL, 16);\n        //cout << i << \" \" << j << \" \" << tmp << endl;\n        rhythm[i][j] = tmp;\n        if (tmp) {\n          g = gcd(g, j);\n        }\n      }\n      for (int j=0; j*g<sz; ++j) {\n        rhythm[i][j] = rhythm[i][j*g];\n      }\n      size.push_back(sz/g);\n    }\n    //FOR(it, size) cout << *it << \" \";cout << endl;\n    ll l = lcm(size);\n    if (l > 1024) {\n      cout << \"Too complex.\" << endl;\n      continue;\n    }\n    memset(ans,0,sizeof(ans));\n    REP(i, n) {\n      int p = l/size[i];\n      REP(j,size[i]) {\n        ans[j*p] |= rhythm[i][j];\n      }\n    }\n    REP(i, l) {\n      printf(\"%02X\", ans[i]);\n    }\n    cout << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)n; ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cout<<*i<<\" \"; cout<<endl; }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint gcd(int n, int m){\n  return (n % m) ? gcd(m, n % m) : m;\n}\nint lcm(int n, int m){\n  return (ll)n * m / gcd(n, m);\n}\nint toint(string unit){\n  int n;\n  sscanf(unit.c_str(), \"%x\", &n);\n  return n;\n}\nstring tostr(vector<int> v){\n  string res;\n  REP(i, v.size()){\n    int n = v[i];\n    char s[100];\n    sprintf(s, \"%02X\", n);\n    res +=  string(s);\n  }\n  return res;\n}\n\nint main(){\n  int T;\n  cin>>T;\n  while(T--){\n    int N; cin>>N;\n    string s[8];\n    int len = 1;\n    REP(i, N){\n      cin>>s[i];\n      REP(j, s[i].size()/2) if(s[i].substr(j * 2, 2) != \"00\"){\n        //printf(\"%d/%d \", j, s[i].size() /2);\n        len = lcm(len, (s[i].size()/2/gcd(j, s[i].size() / 2)));\n      }\n    }\n    if(len > 1024){\n      cout<<\"Too complex.\"<<endl;\n      continue;\n    }\n    vector<int> data(len);\n    REP(i, len){\n      REP(j, N){\n        int l = s[j].size() / 2;\n        if(i * l % len == 0) data[i] |= toint(s[j].substr(i * l / len * 2, 2));\n      }\n    }\n    cout<<tostr(data)<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      if(i+1>=s.length())return ;\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n  void eraseExtraZeroes(){\n    vector<int> non_zero_pos;\n    for(int i=1; i <vf.size(); ++i){\n      if(vf[i]!=0)non_zero_pos.push_back(i);\n    }\n    long long int min_gcd=vf.size();\n    for(int i=0;i<non_zero_pos.size();++i){\n      min_gcd = gcd(non_zero_pos[i],min_gcd);\n    }\n    if(min_gcd>1){\n      int n=0;\n      for(int i=0;i<vf.size();i+=min_gcd){\n\tfor(int j=1;j<min_gcd;++j){\n\t  vf[i+j]=-1;\n\t}\n      }\n    }\n    Phrase t;for(int i=0;i<vf.size();++i)if(vf[i]>=0)t.vf.push_back(vf[i]);\n    *this=t;\n  }\n  void print(){\n    for(int i = 0; i < vf.size(); ++i){\n      printf(\"%02X\",vf[i]);\n    }\n    putchar('\\n');\n  }\n};\n  \nint main()\n{\n  int T;\n  cin>>T;\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    string s;\n    bool toocomplex=false;\n    Phrase P;\n    \n    cin>>N;\n    if( N == 0 )break;\n    \n    int left=N;\n    for(int i = 0; i < N; ++i){\n      cin>>s;\n      Phrase t(s);\n      --left;\n      \n      t.eraseExtraZeroes();\n      if(P.vf.size()==0)\n\tP=t;\n      else\n\tP=P.merge(t);\n      P.eraseExtraZeroes();\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    for(int i = 0; i < left; ++i){\n      cin>>s;\n    }\n\n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      P.print();\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            //if(j>=sz||(j%(sz/i))>=sz){\n            //    return vector<us>();\n            //}\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                //if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            //if(nums[i].size()==0){\n            //    continue;\n            //}\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            // debg\n            if(nums[i].size()==0){\n                con=true;\n                break;\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        //if(match){\n        //    vector<us> tmp;\n        //    tmp.push_back(res[0]);\n        //    res=tmp;\n        //}\n        //else{\n        res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,int> > *in,int *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n    if (l > 2048){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n  \n  //cout << l << endl;\n  vector<int> out(l);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n      out[in[i][j].sec]|=in[i][j].fir;\n    }\n  }\n  vector<pair<int,int> > out2;\n  rep(i,out.size()){\n    if (out[i] != 0)out2.pb(mp(out[i],i));\n  }\n  int ansnum=out.size();\n  minimize(out2,ansnum);\n  out.clear();\n  out=vector<int>(ansnum);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      \n      if (in[i].size() == 1){\n\tif (in[i][0].sec==0)in[i][0].sec/=num[i];\n      }else {\n\tminimize(in[i],num[i]);\n      }\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <string.h>\nusing namespace std;\n\nlong Gcd(long m, long n)\n{\n\tlong temp;\n\twhile (m % n != 0)\n\t{\n\t\ttemp = n;\n\t\tn = m % n;\n\t\tm = temp;\n\t}\n\treturn n;\n}\n\nlong Lcm(long m, long n)\n{\n\treturn m * n / Gcd(m,n); \n}\n\nconst char *str=\"0123456789ABCDEF\";\n\nint f(char c0,char c1){\n\tconst char *p0=strchr(str,c0);\n\tconst char *p1=strchr(str,c1);\n\treturn (p0-str)*16 + (p1-str);\n}\n\nint main() {\n\tint N;\n\tcin >> N;\n\tfor(int i=0;i<N;i++){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> m(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tcin >> m[j];\n\t\t}\n\t\tvector<vector<int>> mm(n);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tfor(int k=0;k<m[j].length();k+=2){\n\t\t\t\tchar c0=m[j][k];\n\t\t\t\tchar c1=m[j][k+1];\n\t\t\t\tint num =f(c0,c1);\n\t\t\t\tmm[j].push_back(num);\n//\t\t\t\tcout << num << \" \";\n\t\t\t}\n//\t\t\tcout << endl;\n\t\t}\n\t\tint len=0;\n\t\tif(n==1){\n\t\t\tlen=mm[0].size();\n\t\t}else{\n\t\t\tlen = Lcm(mm[0].size(),mm[1].size());\n\t\t\tfor(int j=2;j<mm.size();j++){\n\t\t\t\tlen = Lcm(len,mm[j].size());\n\t\t\t}\n\t\t}\n//\t\tcout << len << endl;\n\t\tvector<int> ans(len,0);\n\t\tfor(int j=0;j<n;j++){\n\t\t\tint g=len/mm[j].size();\n\t\t\tfor(int k=0;k<mm[j].size();k++){\n\t\t\t\tans[k*g]|=mm[j][k];\n\t\t\t}\n\t\t}\n\t\tint g=len;\n\t\tfor(int j=1;j<len;j++){\n\t\t\tif(ans[j]!=0) g=Gcd(g,j);\n\t\t}\n\t\tif(len/g>1024){\n\t\t\tcout << \"Too complex.\" << endl;\n\t\t\tcontinue;\n\t\t}\n\t\tfor(int j=0;j<len;j+=g){\n\t\t\tint n0=ans[j]/16;\n\t\t\tint n1=ans[j]%16;\n\t\t\tcout << str[n0] << str[n1];\n\t\t}\n\t\tcout << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,int> > &in,int &num){\n  int g=-1;\n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,int> > *in,int *num){\n  int l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n    if (l >= 2048){\n      cout << \"Too complex.\"<<endl;\n      return;\n    }\n  }\n  \n  //cout << l << endl;\n  vector<int> out(l);\n  rep(i,n){\n    int tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n      out[in[i][j].sec]|=in[i][j].fir;\n    }\n  }\n  vector<pair<int,int> > out2;\n  rep(i,out.size()){\n    if (out[i] != 0)out2.pb(mp(out[i],i));\n  }\n  int ansnum=out.size();\n  minimize(out2,ansnum);\n  out.clear();\n  out=vector<int>(ansnum);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  int num[N];\n  vector<pair<int,int> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n\n      if (in[i].size() == 1){\n\tif (in[i][0].sec/num[i]==0)in[i][0].sec/=num[i];\n      }else {\n\tminimize(in[i],num[i]);\n      }\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j>=sz||(j%(sz/i))>=sz){\n                return vector<us>();\n            }\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        //if(match){\n        //    vector<us> tmp;\n        //    tmp.push_back(res[0]);\n        //    res=tmp;\n        //}\n        //else{\n        res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  ll g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> >&ans,ll &ansnum, \n\t   vector<pair<int,ll> >&in,ll &num){\n  ll l=ansnum*num/gcd(ansnum,num);\n\n  ll tmp=l/num;\n  rep(j,in.size()){\n    in[j].sec*=tmp;\n  }\n  tmp=l/ansnum;\n  rep(j,ans.size()){\n    ans[j].sec*=tmp;\n  }\n  \n  ansnum=l;\n  vector<pair<int,ll> >& out2=ans;\n  rep(k,in.size()){\n    bool hassame=false;\n    rep(j,out2.size()){\n      if (out2[j].sec == in[k].sec){\n\tout2[j].fir|=in[k].fir;\n\thassame=true;\n\tbreak;\n      }\n    }\n    if (!hassame)out2.pb(in[k]);\n  }\n\n  minimize(out2,ansnum);\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in,ll *num){\n  vector<pair<int,ll> > &ans=in[0];\n  minimize(ans,num[0]);\n  REP(i,1,n){\n    solve(n,ans,num[0],in[i],num[i]);\n  }\n    if (num[0] > 1024){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n\n\n  vector<int> out(num[0],0);\n  rep(i,ans.size()){\n    out[ans[i].sec]=ans[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    compute(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\nvector<vector<int> > RI(8);\nvector<int> ret(1024);\nstringstream ss;\n\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        for(int i=0;i<N;i++){\n            RI[i].clear();\n            string s;\n            cin >> s;\n            for(int j=0;j<s.length();j+=2){\n                string here = s.substr(j,2);\n                ss.clear();\n                ss << hex << uppercase << here;\n                int x;\n                ss >> x;\n                RI[i].push_back(x);\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << \"Too complex.\" << endl;\n        }else{\n            ret.clear();\n            ret.resize(1024);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<RI[i].size();j++){\n                    if((j*len) % RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            ss.clear();\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\nint gcd(int a,int b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nint lcm(int a,int b){\n    return a*b/gcd(a,b);\n}\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        int L=1;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n        }\n        if(L>10000){\n            cout<<\"Too complex.\"<<endl;\n            continue;\n        }\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        else{\n            for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n            cout<<endl;\n        }\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nint gcd(int a,int b){ return b?gcd(b,a%b):a; }\nint lcm(int a,int b){ return a/gcd(a,b)*b; }\n\nint regularize(const char *s,int *r){\n\tint len=strlen(s)/2;\n\trep(i,len){\n\t\tchar x[3]={s[2*i],s[2*i+1],'\\0'};\n\t\tsscanf(x,\"%X\",r+i);\n\t}\n\n\tfor(int i=1;i<=len;i++) if(len%i==0) {\n\t\tbool ok=true;\n\t\trep(j,i) for(int k=1;k<len/i;k++) if(r[j*len/i+k]!=0) ok=false;\n\t\tif(ok){\n\t\t\trep(j,i) r[j]=r[j*len/i];\n\t\t\treturn i;\n\t\t}\n\t}\n}\n\nint main(){\n\tint T; scanf(\"%d\",&T);\n\twhile(T--){\n\t\tint n,l[8]; scanf(\"%d\",&n);\n\t\tstatic int r[8][1024];\n\t\trep(i,n){\n\t\t\tchar s[2049]; scanf(\"%s\",s);\n\t\t\tl[i]=regularize(s,r[i]);\n\t\t}\n\n\t\tint len=1;\n\t\tbool over=false;\n\t\trep(i,n){\n\t\t\tlen=lcm(len,l[i]);\n\t\t\tif(len>2048) over=true;\n\t\t}\n\t\tif(over){\n\t\t\tputs(\"Too complex.\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tint ans[1024]={};\n\t\trep(i,n) rep(j,l[i]) ans[j*len/l[i]]|=r[i][j];\n\t\trep(j,len) printf(\"%02X\",ans[j]);\n\t\tputs(\"\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nlong long gcd(long long a, long long b){ // Ååöñ\n    if(a == 0 || b == 0)\n        return 0;\n    if(b > a)\n        swap(a, b);\n    long long tmp;\n    while((tmp = a % b) != 0){\n        a = b;\n        b = tmp;\n    }\n    return b;\n}\n\nlong long lcm(long long a, long long b){ // Å¬ö{\n    return a / gcd(a, b) * b;\n}\n\nchar add(char a, char b)\n{\n    int c;\n    if('0' <= a && a <= '9')\n        c = a - '0';\n    else\n        c = a - 'A' + 10;\n    if('0' <= b && b <= '9')\n        c += b - '0';\n    else\n        c += b - 'A' + 10;\n    if(c < 10)\n        return '0' + c;\n    else\n        return 'A' + c - 10;\n}\n\nint main()\n{\n    int t;\n    cin >> t;\n    while(--t >= 0){\n        int n;\n        cin >> n;\n        vector<string> s(n);\n        for(int i=0; i<n; ++i){\n            string tmp;\n            cin >> tmp;\n            int a = tmp.size()/2;\n            for(int j=1; j<tmp.size()/2; ++j){\n                if(tmp[2*j] != '0' || tmp[2*j+1] != '0'){\n                    if(a == -1)\n                        a = j;\n                    else\n                        a = gcd(a, j);\n                }\n            }\n            for(unsigned j=0; j<tmp.size()/2; j+=a){\n                s[i] += tmp[j*2];\n                s[i] += tmp[j*2+1];\n            }\n        }\n\n        int len = 1;\n        for(int i=0; i<n; ++i){\n            len = lcm(len, s[i].size()/2);\n            if(len > 2048)\n                break;\n        }\n        if(len > 2048){\n            cout << \"Too complex.\" << endl;\n            continue;\n        }\n\n        string ret(len*2, '0');\n        for(int i=0; i<n; ++i){\n            int a = len / (s[i].size()/2);\n            for(unsigned j=0; j<s[i].size()/2; ++j){\n                ret[2*j*a] = add(ret[2*j*a], s[i][2*j]);\n                ret[2*j*a+1] = add(ret[2*j*a+1], s[i][2*j+1]);\n            }\n        }\n        cout << ret << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        if(s[j]>='0'&&s[j]<='9')num+=s[j]-'0';\n        else num+=s[j]-'A'+10;\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    if(b>=0&&b<=9)s+=('0'+b);\n    else s+=('A'+b-10);\n    if(a>=0&&a<=9)s+=('0'+a);\n    else s+=('A'+a-10);\n    return s;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=1;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\nvector<us> nums[5000];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=dePos(toHexList(s));\n            L=lcm(L,nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0)nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        res=dePos(res);\n        //if(res.size()>1024)cout<<\"Too complex.\"<<endl;\n        //else{\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n        //}\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    assert(LCM!=0);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len_erase=0;\n  int zero_num=0;\n\n  bool cont=false;\n  for(int i = 0; i < sum.vf.size(); ++i){\n    if( sum.vf[i] != 0 ) cont=true;\n  }\n  if(!cont){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }\n  \n  for(int L = sum.vf.size()/2; L >= 2; --L){\n    if( sum.vf.size() % L == 0 ){\n      bool un = false;\n      for(int i = 0; i < sum.vf.size(); i+=L){\n\tfor(int j = 1; j < L; ++j){\n\t  if(sum.vf[i+j]!=0){\n\t    un=true;\n\t    break;\n\t  }\n\t}\n\tif(un)break;\n      }\n      if(!un){\n\tfor(int i = 0; i < sum.vf.size(); i+=L){\n\t  for(int j = 1; j < L; ++j){\n\t    sum.vf[i+j] = -1;\n\t  }\n\t}\n\tbreak;\n      }\n    }\n  }\n \n  Phrase tmp;\n  for(int i=0;i<sum.vf.size();++i){\n    if(sum.vf[i]>=0){\n      tmp.vf.push_back(sum.vf[i]);\n    }\n  }\n  if(tmp.vf.size()==0){\n    tmp.vf.push_back(0);\n  }\n  sum = tmp;\n  return ;\n}\n  \nint main()\n{\n  cout << lcm(5,7) << endl;\n  cout << lcm(1023,1022) << endl;\n  int T;\n  scanf(\"%d\",&T);\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    bool toocomplex=false;\n    Phrase P;\n    \n    scanf(\"%d\",&N);\n    if( N == 0 )break;\n\n    for(int i = 0; i < N; ++i){\n      string s;\n      char str[8192];\n      scanf(\"%s\",str);\n      s=str;\n      int len;\n      Phrase t(s);\n     \n      if(P.vf.size()==0){\n\tP=t;\n      }else{\n\tP=P.merge(t);\n      }\n\n      while(true){\n\tlen = P.vf.size();\n\tEraseExtraZeroes(P);\n\tif(len==P.vf.size())break;\n      }\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    \n    if(P.vf.size()==0){\n      P.vf.push_back(0);\n    }\n    if(toocomplex){\n      printf(\"Too complex.\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n    }\n    puts(\"\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<vector>\n#include<cassert>\nusing namespace std;\n\nint deg(char c){\n  if(c>='A')return 10+c-'A';\n  return c-'0';\n}\n\nlong long int gcd(long long int a, long long int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nlong long int lcm(long long int a, long long int b){\n  if(a<b){\n    return a*(b/gcd(a,b));\n  }else{\n    return b*(a/gcd(a,b));\n  }\n}\n\nstruct Phrase{\n  vector<int> vf;\n  Phrase(){}\n  Phrase(const string &s){\n    for(int i = 0; i < s.length(); i+=2){\n      char c1=s[i];\n      if(i+1>=s.length())return ;\n      char c2=s[i+1];\n      vf.push_back((deg(c1)*0x10+deg(c2)));\n    }\n  }\n  Phrase merge(const Phrase &t){\n    Phrase ret;\n    long long int len = vf.size();\n    long long int tlen = t.vf.size();\n    long long int LCM = lcm(len,tlen);\n    for(int k = 0; k < LCM; ++k){\n      int s=0;\n      if( k%(LCM/len)==0 )\n\ts+=vf[k/(LCM/len)];\n      if( k%(LCM/tlen)==0 )\n\ts+=t.vf[k/(LCM/tlen)];\n      ret.vf.push_back(s);\n    }\n    return ret;\n  }\n};\n\n\nvoid EraseExtraZeroes(Phrase &sum){\n  int len=sum.vf.size();\n  int L=0;\n\n  if(len==0){\n    sum.vf.push_back(0);\n    return ;\n  }\n\n  for(int i=(int)sum.vf.size()-1;i>=0;--i){\n    if(sum.vf[i]==0){\n      ++L;\n    }else break;\n  }\n\n  if(L==sum.vf.size()){\n    sum.vf.clear();\n    sum.vf.push_back(0);\n    return ;\n  }else{\n    ++L;\n    bool un=false;\n    for(int i=0;i<sum.vf.size();i+=L){\n      for(int j=1;j<L;++j){\n\tif(i+j>=sum.vf.size()){\n\t  un=true;\n\t  break;\n\t}\n\tif(sum.vf[i+j]!=0){\n\t  un=true;\n\t  break;\n\t}\n      }\n    }\n    if(!un){\n      for(int i=0;i<sum.vf.size();i+=L){\n\tfor(int j=1;j<L;++j){\n\t  sum.vf[i+j]=-1;\n\t}\n      }\n    }\n  }\n\n  Phrase tmp;\n\n  for(int i=0;i<sum.vf.size();++i)\n    if(sum.vf[i]>=0)\n      tmp.vf.push_back(sum.vf[i]);\n\n  if(tmp.vf.size()==0)\n    tmp.vf.push_back(0);\n\n  sum = tmp;\n\n  if(sum.vf.size()!=len)EraseExtraZeroes(sum);\n  return ;\n}\n  \nint main()\n{\n  int T;\n  cin>>T;\n  for(int tc=1;tc<=T;++tc){\n    int N;\n    string s;\n    bool toocomplex=false;\n    Phrase P;\n    \n    cin>>N;\n    if( N == 0 )break;\n    \n    int left=N;\n    for(int i = 0; i < N; ++i){\n      cin>>s;\n      Phrase t(s);\n      --left;\n      \n      EraseExtraZeroes(t);\n      if(P.vf.size()==0)\n\tP=t;\n      else\n\tP=P.merge(t);\n      EraseExtraZeroes(P);\n\n      if(2*P.vf.size()>2048){\n\ttoocomplex=true;\n\tbreak;\n      }\n    }\n    for(int i = 0; i < left; ++i){\n      cin>>s;\n    }\n    \n    if(toocomplex){\n      printf(\"Too complex.\\n\");\n    }else{\n      for(int i = 0; i < P.vf.size(); ++i){\n\tprintf(\"%02X\",P.vf[i]);\n      }\n      putchar('\\n');\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#define _GLIBCXX_DEBUG\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\nvector<vector<short> > RI(10,vector<short>(2000));\nvector<short> ret(2000);\n\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        vector<int> resi(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            resi[i] = s.length()/2;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                ss >> RI[i][j/2];\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = resi[i];\n            for(int j=0;j<(int)resi[i];j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,resi[i]/least);\n        }\n        if(len > 1024){\n            cerr << \"hoge\" << endl;\n            cout << \"Too complex.\" << endl;\n        }else{\n            for(int i=0;i<1024;i++) ret[i] = 0;\n            for(int i=0;i<N;i++){\n                for(int j=0;j<resi[i];j++){\n                    if((j*len) % resi[i] == 0){\n                        int here = j*len/resi[i];\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            for(int i=0;i<len;i++){\n                cout << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            cout << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\nint gcd(int a, int b){\n  if(a > b) swap(a,b);\n  if(a == 0) return b;\n  return gcd(a, b%a);\n}\n\nchar toChar(int i){\n  if(i<10) return i+'0';\n  return 'A'+(i-10);\n}\n\nint main(){\n  int n; cin>>n;\n  while(n --> 0){\n    int m; cin>>m;\n    vector<string> str(m);\n    vector<int> step(m);\n    REP(i,m){\n      cin>>str[i];\n      for(int j = 2; j<=(str[i].size()/2); j++){\n        if((str[i].size()/2) % j != 0) continue;\n        bool flag = true;\n        REP(k,str[i].size()/2){\n          //printf(\"test: %c %c\\n\",str[i][k*2],str[i][k*2+1]);\n          if(k % j == 0) continue;\n          if(str[i][k*2] == '0' && str[i][k*2+1] == '0')\n            continue;\n          flag = false;\n          break;\n        }\n        if(flag){\n          string tmp;\n          REP(k,str[i].size()/2){\n            if(k % j == 0){\n              tmp += str[i][k*2];\n              tmp += str[i][k*2+1];\n            }\n          }\n          str[i] = tmp;\n          j--;\n          //cout << \"tmp:\" << tmp << endl;\n          //cout << \"size:\" << tmp.size() << endl;\n        }\n      }\n    }\n    int len = 1;\n    REP(i,m){\n      int tmp = str[i].size()/2;\n      len = len * tmp / gcd(len, tmp);\n      if(len > 1024) break;\n    }\n    if(len > 1024){\n      puts(\"Too complex\");\n      continue;\n    }\n    REP(i,m){\n      step[i] = len / (str[i].size()/2);\n    }\n    char buff[len*2 + 1];\n    buff[len*2] = '\\0';\n    REP(i, len){\n      int fst = 0;\n      int scd = 0;\n      REP(j,m){\n        if(i % step[j] == 0){\n          //cout << str[j][(i/step[j])*2] << endl;\n          //cout << str[j][(i/step[j])*2+1] << endl;\n          fst |= str[j][(i/step[j])*2] - '0';\n          scd |= str[j][(i/step[j])*2 + 1] - '0';\n        }\n      }\n      buff[i*2] = toChar(fst);\n      buff[i*2+1] = toChar(scd);\n    }\n    puts(buff);\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nint gcd(int a,int b){\n  return b==0?a:gcd(b,a%b);\n}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  int g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> > *in,ll *num){\n//void solve(int n,vector<pair<int,ll> >&ansnum,int &num, vector<pair<int,ll> >&in,int &num]);\n  ll l=num[0];\n  REP(i,1,n){\n    l=l*num[i]/gcd(l,num[i]);\n  }\n  \n  ll ansnum=l;\n  rep(i,n){\n    ll tmp=l/num[i];\n    rep(j,in[i].size()){\n      in[i][j].sec*=tmp;\n    }\n  }\n\n  vector<pair<int,ll> > out2;\n  rep(i,n){\n    rep(k,in[i].size()){\n      bool hassame=false;\n      rep(j,out2.size()){\n\tif (out2[j].sec == in[i][k].sec){\n\t  out2[j].fir|=in[i][k].fir;\n\t  hassame=true;\n\t  break;\n\t}\n      }\n      if (!hassame)out2.pb(in[i][k]);\n    }\n  }\n\n  minimize(out2,ansnum);\n\n  if (ansnum > 1024){\n    printf(\"Too complex.\\n\");\n    return;\n  }\n\n  if (ansnum < 0)return ;\n\n  vector<int> out(ansnum,0);\n  rep(i,out2.size()){\n    out[out2[i].sec]=out2[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\n// void compute(int n,vector<pair<int,ll> > *in){\n//   vector<pair<int,ll> ans=in[0];\n//   REP(i,1,n){\n//     solve(n,ans,num[0],in[i],num[i]);\n//   }\n\n//}\n\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    solve(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<queue>\nusing namespace std;\n#include<iostream>\n#include<cstdlib>\nusing namespace std;\n#define REP(i,b,n) for(int i=b;i<n;i++)\n#define rep(i,n)   REP(i,0,n)\n#define fir first\n#define sec second\n#define pb  push_back\n#define mp  make_pair\n\ntypedef long long ll;\n\nconst int N = 120;\n\nll gcd(ll a,ll b){return b==0?a:gcd(b,a%b);}\n\nvoid minimize(vector<pair<int,ll> > &in,ll &num){\n  ll g=-1;\n  if (in.size() == 1){\n    if (in[0].sec == 0)return;\n    g=gcd(in[0].sec,num);\n    num/=g;\n    in[0].sec/=g;\n    return;\n  }\n  \n  rep(j,in.size()){\n    if (in[j].sec == 0);\n    else if (g==-1)g=in[j].sec;\n    else g=gcd(g,in[j].sec);\n  }\n  if (g>0){\n    num/=g;\n    rep(j,in.size())in[j].sec/=g;\n  }\n}\n\nvoid solve(int n,vector<pair<int,ll> >&ans,ll &ansnum, \n\t   vector<pair<int,ll> >&in,ll &num){\n  ll l=ansnum*num/gcd(ansnum,num);\n\n  ll tmp=l/num;\n  rep(j,in.size()){\n    in[j].sec*=tmp;\n  }\n  tmp=l/ansnum;\n  rep(j,ans.size()){\n    ans[j].sec*=tmp;\n  }\n  \n  ansnum=l;\n  vector<pair<int,ll> >& out2=ans;\n  rep(k,in.size()){\n    bool hassame=false;\n    rep(j,out2.size()){\n      if (out2[j].sec == in[k].sec){\n\tout2[j].fir|=in[k].fir;\n\thassame=true;\n\tbreak;\n      }\n    }\n    if (!hassame)out2.pb(in[k]);\n  }\n\n  minimize(out2,ansnum);\n}\n\nvoid compute(int n,vector<pair<int,ll> > *in,ll *num){\n  vector<pair<int,ll> > &ans=in[0];\n  minimize(ans,num[0]);\n  REP(i,1,n){\n    solve(n,ans,num[0],in[i],num[i]);\n    if (num[0] > 1024){\n      printf(\"Too complex.\\n\");\n      return;\n    }\n  }\n\n  vector<int> out(num[0],0);\n  rep(i,ans.size()){\n    out[ans[i].sec]=ans[i].fir;\n  }\n\n  rep(i,out.size())printf(\"%02X\",out[i]);\n  printf(\"\\n\");\n}\n\nmain(){\n  int te;\n  ll num[N];\n  vector<pair<int,ll> > in[N];\n  cin>>te;\n  while(te--){\n    int n;\n    cin>>n;\n    rep(i,n){\n      in[i].clear();\n      string inp;\n      cin>>inp;\n      num[i]=inp.size()/2;\n      rep(j,inp.size()/2){\n\tif (inp[j*2]=='0'&&inp[j*2+1]=='0')continue;\n\tin[i].pb(mp(\n\t\t    (inp[j*2]-'0')*16+(inp[j*2+1]-'0'),\n\t\t    j\n\t\t    )\n\t\t );\n      }\n\n      if (in[i].size() == 0)num[i]=1;\n      minimize(in[i],num[i]);\n\n      //cout <<\"num \" <<  num[i] << endl;\n      //       rep(j,in[i].size()){\n      // \tcout<<in[i][j].fir <<\" \" << in[i][j].sec << endl;\n      //       }\n      //       cout << endl;\n    }\n    compute(n,in,num);\n  }\n  return false;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\ntypedef unsigned short us;\n\nint N;\nint M;\n\n\nint toInt(char ch){\n    if(ch>='0'&&ch<='9')return ch-'0';\n    return ch-'A'+10;\n}\nint toChar(int num){\n    if(num>=0&&num<=9)return num+'0';\n    return num-10+'A';\n}\n\nus toHex(string s){\n    us num=0;\n    for(int j=0;j<=1;j++){\n        num+=toInt(s[j]);\n        if(j==0)num=(num<<4);\n    }\n    return num;\n}\nvector<us> toHexList(string s){\n    vector<us> vus;\n    for(int i=0;i<s.size();i+=2){\n        string ss=s.substr(i,2);\n        us num=toHex(ss);\n        vus.push_back(num);\n    }\n    return vus;\n}\n\nstring toStr(us num){\n    us a=num&(0x0F);\n    us b=(num&(0xF0))>>4;\n    string s;\n    s+=toChar(b);\n    s+=toChar(a);\n    return s;\n}\n\nvector<us> dePos2(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            if(j%(sz/i)==0)continue;\n            else if(vus[j]!=0){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz;j++){\n                if(j%(sz/i)==0){\n                    res.push_back(vus[j]);\n                }\n            }\n            return res;\n        }\n    }\n    return vus;\n}\n\nvector<us> dePos(vector<us> vus){\n    if(vus.size()==1)return vus;\n    int sz=vus.size();\n    for(int i=2;i<=sz;i++){\n        if(sz%i!=0)continue;\n        bool isDecom=true;\n        for(int j=0;j<sz;j++){\n            //if(j>=sz||(j%(sz/i))>=sz){\n            //    return vector<us>();\n            //}\n            if(vus[j]!=vus[j%(sz/i)]){\n                isDecom=false;\n                break;\n            }\n        }\n        if(isDecom){\n            vector<us> res;\n            for(int j=0;j<sz/i;j++){\n                //if(j>=sz)return vector<us>();\n                res.push_back(vus[j]);\n            }\n            return res;\n        }\n    }\n    //for(int i=1;i<=sz;i++){\n    //    if(sz%i!=0)continue;\n    //    bool isDecom=true;\n    //    for(int j=0;j<sz;j++){\n    //        if(j%(sz/i)==0)continue;\n    //        else if(vus[j]!=0){\n    //            isDecom=false;\n    //            break;\n    //        }\n    //    }\n    //    if(isDecom){\n    //        vector<us> res;\n    //        for(int j=0;j<sz;j++){\n    //            if(j%(sz/i)==0){\n    //                res.push_back(vus[j]);\n    //            }\n    //        }\n    //        return res;\n    //    }\n    //}\n    return vus;\n}\n\nvector<us> nums[10];\n\ntypedef long long ll;\nll gcd(ll a,ll b){\n    if(b==0)return a;\n    return gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b/gcd(a,b);\n}\n\n\nint main(){\n    cin>>N;\n    while(N--){\n        cin>>M;\n        ll L=1;\n        bool con=false;\n        for(int i=0;i<M;i++){\n            string s;\n            cin>>s;\n            nums[i]=(toHexList(s));\n            //if(nums[i].size()==0){\n            //    continue;\n            //}\n            bool match=true;\n            for(int j=1;j<nums[i].size();j++){\n                if(nums[i][0]!=nums[i][j])match=false;\n            }\n            if(false&&match){\n                vector<us> tmp;\n                tmp.push_back(nums[i][0]);\n                nums[i]=tmp;\n            }\n            else{\n                nums[i]=dePos2(nums[i]);\n            }\n            // debg\n            //if(nums[i].size()==0){\n            //    con=true;\n            //    break;\n            //}\n            L=lcm(L,(ll)nums[i].size());\n            if(L>1024){\n                cout<<\"Too complex.\"<<endl;\n                con=true;\n                break;\n            }\n        }\n        if(con)continue;\n        for(int i=0;i<M;i++){\n            if(nums[i].size()==L)continue;\n            else{\n                vector<us> nlis;\n                for(int j=0;j<L;j++){\n                    if(j%(L/nums[i].size())==0){\n                        nlis.push_back(nums[i][j/(L/nums[i].size())]);\n                    }\n                    else nlis.push_back(0);\n                }\n                nums[i]=nlis;\n            }\n        }\n        vector<us> res;\n        for(int i=0;i<L;i++){\n            us num=0;\n            for(int j=0;j<M;j++)num|=nums[j][i];\n            res.push_back(num);\n        }\n        bool match=true;\n        for(int j=1;j<res.size();j++){\n            if(res[0]!=res[j])match=false;\n        }\n        //if(match){\n        //    vector<us> tmp;\n        //    tmp.push_back(res[0]);\n        //    res=tmp;\n        //}\n        //else{\n        res=dePos(res);\n        //}\n        for(int i=0;i<res.size();i++)cout<<toStr(res[i]);\n        cout<<endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <cstring>\n#include <vector>\n\n#define rep(i, n) for(int i = 0; i < (n); i++)\n#define MP make_pair\n#define X first\n#define Y second\n#define all(v) v.begin(), v.end()\n#define rev(v) v.rbegin(), v.rend()\n\nusing namespace std;\n\ntypedef pair<int, int> P;\n\nint gcd(int m, int n){\n\twhile(n){\n\t\tm = m%n;\n\t\tswap(m, n);\n\t}\n\treturn m;\n}\n\nint lcm(int m, int n){\n\tint d = gcd(m, n);\n\treturn m/d*n;\n}\n\nstring opt(string s){\n\tif(s.size()%4) return s;\n\trep(i, s.size()/4){\n\t\tint k = i*4+2;\n\t\tif(s[k] != '0' || s[k+1] != '0') return s;\n\t}\n\tstring t;\n\trep(i, s.size()/4){\n\t\tint k = i*4;\n\t\tt += s[k];\n\t\tt += s[k+1];\n\t}\n\tstring u = opt(t);\n\twhile(t != u){\n\t\tt = u;\n\t\tu = opt(t);\n\t}\n\treturn t;\n}\n\nint main(){\n\tint hex[200];\n\tchar dec[200];\n\tfor(int i = 0; i <= 9; i++){\n\t\tdec[i] = '0'+i;\n\t\thex[dec[i]] = i;\n\t}\n\tfor(int i = 10; i <= 15; i++){\n\t\tdec[i] = 'A'+i-10;\n\t\thex[dec[i]] = i;\n\t}\n\n\tint T;\n\tcin >> T;\n\trep(sets, T){\n\t\tint n;\n\t\tcin >> n;\n\t\tvector<string> v(n);\n\t\trep(i, n){\n\t\t\tcin >> v[i];\n\t\t\tbool zero = true;\n\t\t\trep(j, v[i].size()){\n\t\t\t\tif(v[i][j] != '0'){\n\t\t\t\t\tzero = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(zero) v[i] = \"00\";\n\t\t\tv[i] = opt(v[i]);\n\t\t}\n\t\tint l = 1;\n\t\trep(i, n){\n\t\t\tl = lcm(l, v[i].size()/2);\n\t\t}\n\t\tstring ans;\n\t\tif(l > 1024){\n\t\t\tans = \"Too complex.\";\n\t\t}else{\n\t\t\tvector<int> s(l, 0);\n\t\t\trep(i, n){\n\t\t\t\tint k = l*2/v[i].size();\n\t\t\t\trep(j, v[i].size()/2){\n\t\t\t\t\ts[k*j] += hex[v[i][j*2]]*16 + hex[v[i][j*2+1]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tans.resize(l*2);\n\t\t\trep(i, l){\n\t\t\t\tans[i*2] = dec[s[i]/16];\n\t\t\t\tans[i*2+1] = dec[s[i]%16];\n\t\t\t}\n\t\t}\n\n\t\tcout << ans << endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\nconst int MAX_M = 1024 * 8;\n\n/* typedef */\n\ntypedef unsigned char uchar;\ntypedef vector<uchar> vuc;\n\nint gcd(int m, int n);\n\nstruct Rhythm {\n  int m;\n  vuc bytes;\n\n  Rhythm() { m = 1; bytes.push_back(0); }\n  Rhythm(string rstr) {\n    m = rstr.length() / 2;\n    bytes.assign(m, 0);\n    for (int i = 0; i < m; i++) {\n      uchar c0 = rstr[i * 2], c1 = rstr[i * 2 + 1];\n      bytes[i] = ((c0 - '0') << 4) | (c1 - '0');\n    }\n    normalize();\n  }\n\n  void normalize() {\n    for (int k = 2; k <= m; k++) {\n      if (m % k) continue;\n\n      bool ok = true;\n      for (int i = 0; ok && i < m; i++)\n\tif ((i % k) && bytes[i]) ok = false;\n      if (ok) {\n\tm /= k;\n\tfor (int i = 0; i < m; i++) bytes[i] = bytes[i * k];\n\tk--;\n      }\n    }\n  }\n\n  void mul(int k) {\n    vuc bytes0(bytes);\n    bytes.assign(m * k, 0);\n\n    for (int i = 0; i < m; i++) bytes[i * k] = bytes0[i];\n    m *= k;\n  }\n\n  void merge(Rhythm& r0) {\n    int g = __gcd(m, r0.m);\n    int lcm = m * r0.m / g;\n\n    mul(lcm / m);\n    r0.mul(lcm / r0.m);\n    for (int i = 0; i < m; i++) bytes[i] |= r0.bytes[i];\n\n    normalize();\n  }\n  \n  void print(bool flag = false) {\n    if (flag) {\n      printf(\"(%d)\", m);\n      for (int i = 0; i < m; i++)\n\tif (bytes[i]) printf(\"%d \", i);\n    }\n    for (int i = 0; i < m; i++) printf(\"%02X\", (int)bytes[i]);\n    putchar('\\n');\n  }\n};\n\n/* global variables */\n\n/* subroutines */\n\nint gcd(int m, int n) {\n  if (m < n) swap(m, n);\n\n  while (n > 0) {\n    int r = m % n;\n    m = n;\n    n = r;\n  }\n\n  return m;\n}\n\n/* main */\n\nint main() {\n  int tn;\n  cin >> tn;\n\n  for (int cnt = 1; cnt <= tn; cnt++) {\n    int n;\n    cin >> n;\n    //if (cnt == 33) cout << n << endl;\n    \n    Rhythm rt;\n    //rt.print();\n\n    for (int i = 0; i < n; i++) {\n      string str;\n      cin >> str;\n\n      Rhythm ri(str);\n      //if (cnt == 33) ri.print();\n      if (false) {\n\tcout << \"rt = \";\n\trt.print(true);\n\tcout << \"ri = \";\n\tri.print(true);\n      }\n\n      if (rt.m < MAX_M) {\n\trt.merge(ri);\n\t//cout << \"merged to => \"; rt.print(true);\n      }\n    }\n\n    if (rt.m == 0 || rt.m > 1024)\n      cout << \"Too complex.\" << endl;\n    else\n      rt.print();\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n#include <queue>\n#include <string>\n#include <map>\n#include <set>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\n#include <bitset>\nconst int PRIME_SIZE = 1000000;\nint psize;\nbitset<PRIME_SIZE + 1> bprime;\nint prime[PRIME_SIZE / 10 + 1000];\nint Eratosthenes(int n) {\n  psize = 0;\n  bprime.set();\n  bprime[0] = bprime[1] = false;\n  for (int i = 2; i <= n; i++) {\n    if (!bprime[i]) { continue; }\n    prime[psize++] = i;\n    if ((long long)i * i > n) { continue; }\n    for (int j = i * i; j <= n; j += i) {\n      bprime[j] = false;\n    }\n  }\n  return psize;\n}\n\nint n;\nchar strs[20][3000];\nint vs[20][3000];\nint lens[20];\nint ans[3000];\n\nint decode(int c1, int c2) {\n  if (isalpha(c1)) { c1 += 10 - 'A'; }\n  else { c1 -= '0'; }\n  if (isalpha(c2)) { c2 += 10 - 'A'; }\n  else { c2 -= '0'; }\n  return c1 * 16 + c2;\n}\n\nchar temp[10];\nchar *encode(int v) {\n  temp[0] = v / 16;\n  temp[1] = v  % 16;\n  temp[2] = 0;\n  if (temp[0] >= 10) { temp[0] += 'A' - 10; }\n  else { temp[0] += '0'; }\n  if (temp[1] >= 10) { temp[1] += 'A' - 10; }\n  else { temp[1] += '0'; }\n  return temp;\n}\n\nvoid Compress(int i) {\n  int temp[3000];\n  REP(k, psize) {\n    while (true) {\n      if (lens[i] < prime[k]) { goto next; }\n      if (lens[i] % prime[k] != 0) { break; }\n      REP(j, lens[i]) {\n        if (j % prime[k] == 0) {\n          temp[j / prime[k]] = vs[i][j];\n          continue;\n        }\n        if (vs[i][j] != 0) { goto next; }\n      }\n      memcpy(vs[i], temp, sizeof(temp));\n      lens[i] /= prime[k];\n    }\nnext:;\n  }\n}\n\nint main() {\n  Eratosthenes(1024);\n  int test;\n  scanf(\"%d\", &test);\n  while (test--) {\n    scanf(\"%d\", &n);\n    REP(i, n) {\n      scanf(\"%s\", strs[i]);\n      lens[i] = strlen(strs[i]);\n      for (int j = 0; j < lens[i]; j += 2) {\n        vs[i][j / 2] = decode(strs[i][j], strs[i][j + 1]);\n      }\n      lens[i] /= 2;\n      Compress(i);\n    }\n    int v = 1;\n    REP(i, n) {\n      v *= lens[i] / __gcd(v, lens[i]);\n      if (v > 2048) {\n        puts(\"Too complex.\");\n        goto end;\n      }\n    }\n    MEMSET(ans, 0);\n    REP(i, n) {\n      REP(j, lens[i]) {\n        int index = j * v / lens[i];\n        ans[index] |= vs[i][j];\n      }\n    }\n    REP(i, v) {\n      printf(\"%s\", encode(ans[i]));\n    }\n    puts(\"\");\nend:;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstdio>\n#include <iomanip>\n#include <vector>\n#include <map>\n#include <set>\n#include <queue>\n#include <bitset>\n#include <stack>\n#include <utility>\n#include <numeric>\n#include <algorithm>\n#include <functional>\n#include <cctype>\n#include <complex>\n#include <string>\n#include <sstream>\n\nusing namespace std;\n\n#define all(c) c.begin(),c.end()\n#define rall(c) c.rbegin(),c.rend()\n#define mp(a,b) make_pair((a),(b))\n#define eq ==\n\ntypedef long long ll;\ntypedef complex<double> point;\ntypedef pair<int,int> pii;\n\n// →↑←↓\nconst int dx[] = {1,0,-1,0};\nconst int dy[] = {0,-1,0,1};\n\n\nconst double EPS = 1e-9;\n\nll gcd(ll a,ll b){\n    return b==0 ? a : gcd(b,a%b);\n}\nll lcm(ll a,ll b){\n    return a*b / gcd(a,b);\n}\n\n\ntypedef unsigned char uchar;\nint main(){\n    int T;\n    cin >> T;\n    for(int test_case=0;test_case<T;test_case++){\n        int N;\n        cin >> N;\n        vector<vector<short> > RI(N);\n        for(int i=0;i<N;i++){\n            string s;\n            cin >> s;\n            for(int j=0;j<(int)s.length();j+=2){\n                string here = s.substr(j,2);\n                stringstream ss;\n                ss << hex << uppercase << here;\n                short x;\n                ss >> x;\n                RI[i].push_back(x);\n            }\n        }\n\n        ll len = 1;\n        for(int i=0;i<N;i++){\n            ll least = RI[i].size();\n            for(int j=0;j<(int)RI[i].size();j++){\n                if(RI[i][j] != 0){\n                    least = gcd(least,j);\n                }\n            }\n            len = lcm(len,RI[i].size()/least);\n        }\n        if(len > 1024){\n            cout << dec << \"Too complex.\" << endl;\n        }else{\n            vector<short> ret(len);\n            for(int i=0;i<N;i++){\n                for(int j=0;j<(int)RI[i].size();j++){\n                    if((j*len) % (int)RI[i].size() == 0){\n                        int here = j*len /RI[i].size();\n                        ret[here] |= RI[i][j];\n                    }\n                }\n            }\n            stringstream ss;\n            for(int i=0;i<len;i++){\n                ss << hex << uppercase << setfill('0') << setw(2)  << ret[i];\n            }\n            string out;\n            ss >> out;\n            cout << hex << uppercase << out << endl;\n        }\n    }\n    return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=r,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=gcd(n,i);\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][150000],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[150000]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      if(l>10000)continue;\n      for(j=r[i]=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      l=lcm(l,r[i]=f(d[i],r[i]));//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    for(i=0;i<n;i++){\n      for(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n    }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n    l=f(ans,l);//printf(\"c\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else {\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=r,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=gcd(n,i);\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][1500],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  int ans[1500]={0};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[1500]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      r[i]=0;\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      for(j=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      r[i]=f(d[i],r[i]);\n      l=lcm(l,r[i]);//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else{//printf(\"a\\n\");\n      for(i=0;i<n;i++){\n\tfor(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n      }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n      l=f(ans,l);//printf(\"c\\n\");\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=r,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=gcd(n,i);\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][1500],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[1500]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      if(l>1024)continue;\n      for(j=r[i]=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      l=lcm(l,r[i]=f(d[i],r[i]));//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else{//printf(\"a\\n\");\n      for(i=0;i<n;i++){\n\tfor(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n      }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n      l=f(ans,l);//printf(\"c\\n\");\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint gcd(int a,int b){\n\treturn b==0 ? a : gcd(b,a%b);\n}\n\nint lcm(int a,int b){\n\treturn a / gcd(a,b) * b;\n}\n\nvoid formalize(char s[2052]){\n\tint i,j,k;\n\tint flg = 0, diff;\n\tint len = strlen(s);\n\tchar tmp[2052];\n\n\tfor(i=len;!flg && i>=4;i-=2){\n\t\tif(len % i == 0){\n\t\t\tfor(j=0;!flg && j<len;j+=i){\n\t\t\t\tfor(k=j+2;k<j+i;k+=2){\n\t\t\t\t\tif(s[k] != '0' || s[k+1] != '0') break;\n\t\t\t\t}\n\t\t\t\tif(k != j+i) break;\n\t\t\t}\n\t\t\tif(j == len){\n\t\t\t\tflg = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(!flg){return;}\n\n\tdiff = i;\n\tstrcpy(tmp,s);\n\tfor(i=0;i<2052;i++) s[i] = '0';\n\tfor(i=0;i<len;i+=diff){\n\t\ts[2*i/diff] = tmp[i];\n\t\ts[2*i/diff+1] = tmp[i+1];\n\t}\n\ts[2*i/diff] = 0;\n}\n\nvoid wideForm(char s[2052],int mult){\n\tint i;\n\tint len = strlen(s);\n\tchar tmp[2052];\n\n\tstrcpy(tmp,s);\n\tfor(i=0;i<2052;i++) s[i] = '0';\n\tfor(i=0;i<len;i+=2){\n\t\ts[i*mult] = tmp[i];\n\t\ts[i*mult+1] = tmp[i+1];\n\t}\n\ts[len*mult] = 0;\n}\n\nint main(void){\n\tint i,j;\n\tint n,m;\n\tint l;\n\tint ans[2052];\n\tchar s[8][2052];\n\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&m);\n\t\tl = 1;\n\t\tfor(i=0;i<m;i++){\n\t\t\tscanf(\"%s\",s[i]);\n\t\t\tformalize(s[i]);\n\t\t\tif(l <= 2048) l = lcm(l,strlen(s[i]));\n\t\t}\n\n\t\tif(l > 2048){\n\t\t\tprintf(\"Too complex.\\n\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(i=0;i<2052;i++) ans[i] = 0;\n\t\tfor(i=0;i<m;i++){\n\t\t\twideForm(s[i],l/strlen(s[i]));\n\t\t\tfor(j=0;j<l;j++) ans[j] += s[i][j] - '0';\n\t\t}\n\n\t\tfor(i=0;i<l;i++){\n\t\t\tif(ans[i] >= 10) putchar(ans[i]-10+'A');\n\t\t\telse printf(\"%d\",ans[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\ntypedef struct {\n\tint bunsi,bunbo;\n\tint oto;\n} note_t;\n\nvoid yakubun(note_t *note) {\n\tint a=note->bunsi,b=note->bunbo,r;\n\tif(a>0) {\n\t\twhile(b>0) {\n\t\t\tr=a%b;\n\t\t\ta=b;\n\t\t\tb=r;\n\t\t}\n\t\tnote->bunsi/=a;\n\t\tnote->bunbo/=a;\n\t} else {\n\t\tnote->bunsi=0;\n\t\tnote->bunbo=1;\n\t}\n}\n\nint main(void) {\n\tint case_num,case_count;\n\tif(scanf(\"%d\",&case_num)!=1)return 1;\n\tfor(case_count=0;case_count<case_num;case_count++) {\n\t\tstatic note_t notes[1024*8];\n\t\tint notes_count=0;\n\t\tchar input[4096];\n\t\tint N,i,j;\n\t\tint anslen;\n\t\tstatic int answer[1024];\n\t\tif(scanf(\"%d\",&N)!=1)return 1;\n\t\tfor(i=0;i<N;i++) {\n\t\t\tint len;\n\t\t\tif(scanf(\"%s\",input)!=1)return 1;\n\t\t\tlen=strlen(input)/2;\n\t\t\tfor(j=0;input[j*2];j++) {\n\t\t\t\tchar buf[4];\n\t\t\t\tint oto;\n\t\t\t\tbuf[0]=input[j*2];\n\t\t\t\tbuf[1]=input[j*2+1];\n\t\t\t\tbuf[2]='\\0';\n\t\t\t\tif(sscanf(buf,\"%x\",&oto)!=1)return 1;\n\t\t\t\tif(oto!=0) {\n\t\t\t\t\tnotes[notes_count].bunsi=j;\n\t\t\t\t\tnotes[notes_count].bunbo=len;\n\t\t\t\t\tnotes[notes_count].oto=oto;\n\t\t\t\t\tyakubun(&notes[notes_count]);\n\t\t\t\t\tnotes_count++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tanslen=1;\n\t\tfor(i=0;i<notes_count;i++) {\n\t\t\tint a=anslen,b=notes[i].bunbo,r;\n\t\t\twhile(b>0) {\n\t\t\t\tr=a%b;\n\t\t\t\ta=b;\n\t\t\t\tb=r;\n\t\t\t}\n\t\t\tanslen=anslen/a*notes[i].bunbo;\n\t\t\tif(anslen>1024) {\n\t\t\t\tanslen=-1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(anslen>0) {\n\t\t\tfor(i=0;i<anslen;i++)answer[i]=0;\n\t\t\tfor(i=0;i<notes_count;i++) {\n\t\t\t\tint s=notes[i].bunsi;\n\t\t\t\tint b=notes[i].bunbo;\n\t\t\t\tint o=notes[i].oto;\n\t\t\t\tanswer[s*(anslen/b)]|=o;\n\t\t\t}\n\t\t\tfor(i=0;i<anslen;i++)printf(\"%02X\",answer[i]);\n\t\t\tputchar('\\n');\n\t\t} else {\n\t\t\tputs(\"Too complex.\");\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n2013/01/06 WA\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[8][MAXLEN];\nint  rythm_len[8];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\n\nunsigned char buf[MAXLEN];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n  \n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\n\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  \n  for(i=n;i>=1;i--)\n    { \n      \n      if(n % i == 0)\n\t{\n\t\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\t//printf(\"%d %d\\n\",i,j);\t\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat;\n  int  n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  //printf(\"rl:%d\\n\",n);\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n  \n\t\n  LOOPY:\n     scanf(\"%d \",&N);\n\n     //printf(\"==%d\\n\",N);\n    for(i=0;i<N;i++)\n      {\n\t\n\tscanf(\"%s\",input_data);\n\t// printf(\"--INF 01*:%s\\n\",input_data);\n\trythm_len[i]=len=strlen(input_data)/2;\n\t    \n\tfor(j=0;j<len;j++)\n\t  {\n\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t    \n\t  }\n\n      }\n    lcm_all=1;\n\n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    printf(\"--INF 00*:%d\\n,rythm_pattern[i][7]\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n\n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    \n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    //printf(\"**%d\\n\",lcm_all);\n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n2013/01/06 WA\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[8][MAXLEN];\nint  rythm_len[8];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\nunsigned char pat2[MAXLEN];\nunsigned char buf[MAXLEN];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n  \n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\n\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  \n  for(i=n;i>=1;i--)\n    { \n      \n      if(n % i == 0)\n\t{\n\t\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\t//printf(\"%d %d\\n\",i,j);\t\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat;\n  int  n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  //printf(\"rl:%d\\n\",n);\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n  \n\t\n  LOOPY:\n     scanf(\"%d \",&N);\n\n     //   printf(\"==%d\\n\",N);\n    for(i=0;i<N;i++)\n      {\n\t\n\tscanf(\"%s\",input_data);\n\t// printf(\"--INF 01*:%s\\n\",input_data);\n\trythm_len[i]=len=strlen(input_data)/2;\n\t    \n\tfor(j=0;j<len;j++)\n\t  {\n\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t    \n\t  }\n\n      }\n    lcm_all=1;\n\n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    printf(\"--INF 00*:%d\\n,rythm_pattern[i][7]\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n\n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    \n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    \n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 2105: Rhythm Machine\n// 2018.1.2 bal4u@uu\n\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\ntypedef struct { int a, b, s; } T;\nT tbl[1024*8]; int sz;\nint ans[1025];\nchar buf[2050], *p;\n\nint gcd(int a, int b)\n{\n\tint r;\n\twhile (b != 0) r = a % b, a = b, b = r;\n\treturn a;\n}\n\nint lcm(int a, int b)\n{\n\treturn a/gcd(a, b)*b;\n}\n\nint main()\n{\n\tint cno, n, i, j, s, g, len;\n\n\tfgets(buf, 10, stdin), cno = atoi(buf);\n\twhile (cno--) {\n\t\tfgets(buf, 10, stdin), n = atoi(buf);\n\t\tsz = 0;\n\t\tfor (i = 0; i < n; i++) {\n\t\t\tfgets(p=buf, 2050, stdin);\n\t\t\tlen = strlen(p) >> 1;\n\t\t\tfor (j = 0; *p >= ' '; j++) {\n\t\t\t\ts = *p++ & 0xf;\n\t\t\t\ts = (s<<4) + (*p++ & 0xf);\n\t\t\t\tif (s) {\n\t\t\t\t\tif (j == 0) tbl[sz].a = 0, tbl[sz].b = 1;\n\t\t\t\t\telse {\n\t\t\t\t\t\tg = gcd(j, len);\n\t\t\t\t\t\ttbl[sz].a = j/g, tbl[sz].b = len/g;\n\t\t\t\t\t}\n\t\t\t\t\ttbl[sz++].s = s;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (sz == 0) { puts(\"00\"); goto done; }\n\t\tg = 1;\n\t\tfor (i = 0; i < sz; i++) {\n\t\t\tg = lcm(g, tbl[i].b);\n\t\t\tif (g > 1024) { puts(\"Too complex.\"); goto done; }\n\t\t}\n\n\t\tmemset(ans, 0, sizeof(ans));\n\t\tfor (i = 0; i < sz; i++) {\n\t\t\tj = tbl[i].a * g / tbl[i].b;\n\t\t\tans[j] |= tbl[i].s;\n\t\t}\n\t\tfor (i = 0; i < g; i++) printf(\"%02X\", ans[i]);\n\t\tputchar('\\n');\ndone:;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint twochar2int(const char* input) {\n\tchar buffer[4];\n\tint result;\n\tbuffer[0]=input[0];\n\tbuffer[1]=input[1];\n\tbuffer[2]=0;\n\tsscanf(buffer,\"%X\",&result);\n\treturn result;\n}\n\nint gcd(int a,int b) {\n\treturn b==0?a:gcd(b,a%b);\n}\n\nint lcm(int a,int b) {\n\treturn a/gcd(a,b)*b;\n}\n\nint main(void) {\n\tint puttern_length[8];\n\tunsigned char putterns[8][1024];\n\tchar puttern_buffer[2052];\n\tint N,i,j;\n\tint caseNum,caseCount;\n\tscanf(\"%d\",&caseNum);\n\tfor(caseCount=0;caseCount<caseNum;caseCount++) {\n\t\tint max_kouyakusuu;\n\t\tint final_length,final_length2;\n\t\tscanf(\"%d\",&N);\n\t\tfor(i=0;i<N;i++) {\n\t\t\tint nonzero_flag=0;\n\t\t\tscanf(\"%s\",puttern_buffer);\n\t\t\tputtern_length[i]=0;\n\t\t\tfor(j=0;puttern_buffer[j];j+=2) {\n\t\t\t\tputterns[i][j/2]=twochar2int(&puttern_buffer[j]);\n\t\t\t\tif(putterns[i][j/2]!=0)nonzero_flag=1;\n\t\t\t\tputtern_length[i]++;\n\t\t\t}\n\t\t\tif(!nonzero_flag)puttern_length[i]=1;\n\t\t}\n\t\tfor(i=0;i<N;i++) {\n\t\t\tmax_kouyakusuu=-1;\n\t\t\tfor(j=1;j<puttern_length[i];j++) {\n\t\t\t\tif(putterns[i][j]!=0) {\n\t\t\t\t\tint now_kouyakusuu=gcd(j,puttern_length[i]);\n\t\t\t\t\tif(max_kouyakusuu<0)max_kouyakusuu=now_kouyakusuu;\n\t\t\t\t\telse max_kouyakusuu=gcd(max_kouyakusuu,now_kouyakusuu);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(max_kouyakusuu>1) {\n\t\t\t\tfor(j=0;j<puttern_length[i];j+=max_kouyakusuu) {\n\t\t\t\t\tputterns[i][j/max_kouyakusuu]=putterns[i][j];\n\t\t\t\t}\n\t\t\t\tputtern_length[i]/=max_kouyakusuu;\n\t\t\t}\n\t\t}\n\t\tfinal_length=puttern_length[0];\n\t\tfor(i=1;i<N && final_length<=1024;i++) {\n\t\t\tfinal_length=lcm(final_length,puttern_length[i]);\n\t\t}\n\t\tfinal_length2=final_length;\n\t\tmax_kouyakusuu=-1;\n\t\tfor(i=1;i<final_length;i++) {\n\t\t\tint now=0;\n\t\t\tfor(j=0;j<N;j++) {\n\t\t\t\tif((i*puttern_length[j])%final_length==0) {\n\t\t\t\t\tnow|=putterns[j][i*puttern_length[j]/final_length];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(now!=0) {\n\t\t\t\tint now_kouyakusuu=gcd(i,final_length);\n\t\t\t\tif(max_kouyakusuu<0)max_kouyakusuu=now_kouyakusuu;\n\t\t\t\telse max_kouyakusuu=gcd(max_kouyakusuu,now_kouyakusuu);\n\t\t\t}\n\t\t}\n\t\tif(max_kouyakusuu>1) {\n\t\t\tfinal_length2=final_length/max_kouyakusuu;\n\t\t} else max_kouyakusuu=1;\n\t\tif(final_length2>1024) {\n\t\t\tputs(\"Too complex.\");\n\t\t} else {\n\t\t\tfor(i=0;i<final_length;i+=max_kouyakusuu) {\n\t\t\t\tint now=0;\n\t\t\t\tfor(j=0;j<N;j++) {\n\t\t\t\t\tif((i*puttern_length[j])%final_length==0) {\n\t\t\t\t\t\tnow|=putterns[j][i*puttern_length[j]/final_length];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprintf(\"%02X\",now);\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 2105\n  Title:Rythm Machine\n  @kankichi573\n*/\n#include <stdio.h>\n#include <string.h>\n#include <limits.h>\nint D,N;\nunsigned char pattern[8][1024];\nint length[8];\nunsigned char result[1024];\n\nint gcd(int a, int b)\n{\n        int c;\n        while (b > 0) {\n                c = a % b;\n                a = b;\n                b = c;\n        }\n        return a;\n}\nint lcm(int a, int b)\n{\n  return a/gcd(a,b)*b;\n}\n\nvoid print_pat(char pat[],int len)\n{\n  int i;\n  for(i=0;i<len;i++)\n    printf(\"%02X\",(unsigned char)pat[i]);\n  printf(\"\\n\");\n}\n\ncheck_zero(char pat[],int len,int period)\n{\n  int i;\n  for(i=0;i<len;i++)\n    if((i % period) && pat[i])\n      return(0);\n  return(1);\n}\nvoid expand(char pat[],int *len,int ratio)\n{\n  char buf[1025];\n  int i;\n\n  memset(buf,0,sizeof(buf));\n  for(i=0;i < *len;i++)\n      buf[i*ratio]=pat[i];\n\n  memcpy(pat,buf,*len * ratio);\n  *len *= ratio;\n}\nvoid shrink(char pat[],int *length)\n{\n  int i,j;\n  char buf[1025];\n  int len=*length;\n\n  for(i=len;i>1;i--)\n    {\n      if(len % i)\n\tcontinue;\n      if(check_zero(pat,len,i))\n\t{\n\t  memset(buf,0,sizeof(buf));\n\t  for(j=0;j<len/i;j++)\n\t    buf[j]=pat[j*i];\n\t  *length /= i;\n\t  memcpy(pat,buf,*length);\n\t  break;\n\t}\n    }\n}\n\nint all_lcm(int a[],int len)\n{\n  int i,ret;\n\n  ret=a[0];\n  for(i=1;i<len;i++)\n    {\n      ret = lcm(ret,a[i]);\n      if(ret>1024)\n\treturn(INT_MAX);\n    }\n  return(ret);\n}\nmain()\n{\n  int i,j,k,len,buflen,alllen;\n  unsigned int x;\n  char buf[2049];\n\n  scanf(\"%d\",&D);\n  for(;D>0;D--)  \n  {\n    memset(pattern,0,sizeof(pattern));\n    memset(buf    ,0,sizeof(buf));\n    memset(length ,0,sizeof(length));\n    scanf(\"%d\",&N);\n    for(j=0;j<N;j++)\n      {\n\tscanf(\"%s\",buf);\n\tbuflen=strlen(buf);\n\n\tfor(k=0;k*2<buflen;k++)\n\t{\n\t  sscanf(buf+k*2,\"%2x\",&x);\n\t  pattern[j][k]=x;\n\t}\n\tlength[j]=buflen/2;\n\tshrink(&pattern[j][0],&length[j]);\n      }\n    alllen=all_lcm(length,N);\n \n    if(alllen>1024)\n    {\n      printf(\"Too complex.\\n\");\n      continue;\n    }\n    \n    for(i=0;i<N;i++)\n      expand(&pattern[i][0],&length[i],alllen/length[i]);\n\n    \n#ifdef DEBUG\n    for(i=0;i<N;i++)\n      {\n\tprintf(\"[%d]\",length[i]);\n\tprint_pat(&pattern[i][0],length[i]);\n      }\n#endif        \n    \n    memset(result,0,sizeof(result));\n    for(i=0;i<N;i++)\n      for(j=0;j<alllen;j++)\n\tresult[j] |= pattern[i][j];\n    print_pat(result,alllen);\n    \n  }\n  return(0);\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[5][MAXLEN];\nint  rythm_len[5];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\nunsigned char pat2[1024];\nint prime[10]={2,3,5,7,11,13,17,19,23,29};\nunsigned char buf[1024];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n\n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\nint no_zero_pos[MAXLEN];\nint gcd_all(int * pos,int len)\n{\n  int ret;\n  int i;\n  int g0,g1;\n  g0=pos[0];g1=pos[1]-g0;\n  for(i=1;i<len;i++)\n    g1 = gcd(g1,pos[i]-g0);\n  return(g1);\n}\nvoid p_n_z_p()\n{\n  int i;\n\n  for(i=0;i<5;i++)\n    printf(\"%d \",no_zero_pos[i]);\n\n}\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  //printf(\"N:%d\\n\",n);\n  for(i=n;i>=1;i--)\n    { \n      if(n % i == 0)\n\t{\n\t  //printf(\"SH:%d\\n\",i);\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat,n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n\n\t//exit(0);\n  LOOPY:\n     scanf(\"%d \",&N);\n\n    for(i=0;i<N;i++)\n      {\n\t// printf(\"I:%d\\n\",i);\n\tscanf(\"%s\",input_data);\n      \n\trythm_len[i]=len=strlen(input_data)/2;\n\tfor(j=0;j<len;j++)\n\t  {\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t  }\n      }\n    lcm_all=1;\n    \n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n  \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    \n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=r,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=gcd(n,i);\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\n  int ans[150000]={0};\n  int a,b,i,j,n,m,l,d[10][1500000],r[10]={0};\nint main(){\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  scanf(\"%d\",&m);\n  while(m--){\n    for(i=0;i<100000;i++)ans[i]=0;\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      if(l>10000)continue;\n      for(j=r[i]=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      l=lcm(l,r[i]=f(d[i],r[i]));//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    for(i=0;i<n;i++){\n      for(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n    }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n    l=f(ans,l);//printf(\"c\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else {\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n2013/01/06 WA\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[8][MAXLEN];\nint  rythm_len[8];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\n\nunsigned char buf[MAXLEN];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n  \n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\n\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  \n  for(i=n;i>=1;i--)\n    { \n      \n      if(n % i == 0)\n\t{\n\t\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\t//printf(\"%d %d\\n\",i,j);\t\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat;\n  int  n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  //printf(\"rl:%d\\n\",n);\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n  \n\t\n  LOOPY:\n     scanf(\"%d \",&N);\n\n     //printf(\"==%d\\n\",N);\n    for(i=0;i<N;i++)\n      {\n\t\n\tscanf(\"%s\",input_data);\n\t// printf(\"--INF 01*:%s\\n\",input_data);\n\trythm_len[i]=len=strlen(input_data)/2;\n\t    \n\tfor(j=0;j<len;j++)\n\t  {\n\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t    \n\t  }\n\n      }\n    lcm_all=1;\n\n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    printf(\"--INF 00*:%d\\n,rythm_pattern[i][7]\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n\n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    \n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    //printf(\"**%d\\n\",lcm_all);\n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=0,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0||r==1)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=n?gcd(n,i):i;\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][1500],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  int ans[1500]={0};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[1500]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      r[i]=0;\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      for(j=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      r[i]=f(d[i],r[i]);\n      l=lcm(l,r[i]);//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else{//printf(\"a\\n\");\n      for(i=0;i<n;i++){\n\tfor(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n      }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n      l=f(ans,l);//printf(\"c\\n\");\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=1,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=n?gcd(n,i):i;\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][1500],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  int ans[1500]={0};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[1500]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      r[i]=0;\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      for(j=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      r[i]=f(d[i],r[i]);\n      l=lcm(l,r[i]);//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else{//printf(\"a\\n\");\n      for(i=0;i<n;i++){\n\tfor(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n      }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n      l=f(ans,l);//printf(\"c\\n\");\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n2013/01/06 WA\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[8][MAXLEN];\nint  rythm_len[8];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\n\nunsigned char buf[MAXLEN];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n  \n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\n\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  \n  for(i=n;i>=1;i--)\n    { \n      \n      if(n % i == 0)\n\t{\n\t\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\t//printf(\"%d %d\\n\",i,j);\t\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat;\n  int  n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  //printf(\"rl:%d\\n\",n);\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n  \n\t\n  LOOPY:\n     scanf(\"%d \",&N);\n\n     //printf(\"==%d\\n\",N);\n    for(i=0;i<N;i++)\n      {\n\t\n\tscanf(\"%s\",input_data);\n\t// printf(\"--INF 01*:%s\\n\",input_data);\n\trythm_len[i]=len=strlen(input_data)/2;\n\t    \n\tfor(j=0;j<len;j++)\n\t  {\n\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t    \n\t  }\n\n      }\n    lcm_all=1;\n\n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    printf(\"--INF 00*:%d\\n,rythm_pattern[i][7]\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n\n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    \n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    //printf(\"**%d\\n\",lcm_all);\n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint twochar2int(const char* input) {\n\tchar buffer[4];\n\tint result;\n\tbuffer[0]=input[0];\n\tbuffer[1]=input[1];\n\tbuffer[2]=0;\n\tsscanf(buffer,\"%X\",&result);\n\treturn result;\n}\n\nint gcd(int a,int b) {\n\treturn b==0?a:gcd(b,a%b);\n}\n\nint lcm(int a,int b) {\n\treturn a/gcd(a,b)*b;\n}\n\nint main(void) {\n\tint puttern_length[8];\n\tunsigned char putterns[8][1024];\n\tchar puttern_buffer[2052];\n\tint N,i,j;\n\tint caseNum,caseCount;\n\tscanf(\"%d\",&caseNum);\n\tfor(caseCount=0;caseCount<caseNum;caseCount++) {\n\t\tint max_kouyakusuu;\n\t\tint final_length;\n\t\tscanf(\"%d\",&N);\n\t\tfor(i=0;i<N;i++) {\n\t\t\tint nonzero_flag=0;\n\t\t\tscanf(\"%s\",puttern_buffer);\n\t\t\tputtern_length[i]=0;\n\t\t\tfor(j=0;puttern_buffer[j];j+=2) {\n\t\t\t\tputterns[i][j/2]=twochar2int(&puttern_buffer[j]);\n\t\t\t\tif(putterns[i][j/2]!=0)nonzero_flag=1;\n\t\t\t\tputtern_length[i]++;\n\t\t\t}\n\t\t\tif(!nonzero_flag)puttern_length[i]=1;\n\t\t}\n\t\tfor(i=0;i<N;i++) {\n\t\t\tmax_kouyakusuu=-1;\n\t\t\tfor(j=1;j<puttern_length[i];j++) {\n\t\t\t\tif(putterns[i][j]!=0) {\n\t\t\t\t\tint now_kouyakusuu=gcd(j,puttern_length[i]);\n\t\t\t\t\tif(max_kouyakusuu<0)max_kouyakusuu=now_kouyakusuu;\n\t\t\t\t\telse max_kouyakusuu=gcd(max_kouyakusuu,now_kouyakusuu);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(max_kouyakusuu>1) {\n\t\t\t\tfor(j=0;j<puttern_length[i];j+=max_kouyakusuu) {\n\t\t\t\t\tputterns[i][j/max_kouyakusuu]=putterns[i][j];\n\t\t\t\t}\n\t\t\t\tputtern_length[i]/=max_kouyakusuu;\n\t\t\t}\n\t\t}\n\t\tfinal_length=puttern_length[0];\n\t\tfor(i=1;i<N && final_length<=1024;i++) {\n\t\t\tfinal_length=lcm(final_length,puttern_length[i]);\n\t\t}\n\t\tif(final_length>1024) {\n\t\t\tputs(\"Too complex.\");\n\t\t} else {\n\t\t\tfor(i=0;i<final_length;i++) {\n\t\t\t\tint now=0;\n\t\t\t\tfor(j=0;j<N;j++) {\n\t\t\t\t\tif((i*puttern_length[j])%final_length==0) {\n\t\t\t\t\t\tnow|=putterns[j][i*puttern_length[j]/final_length];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprintf(\"%02X\",now);\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n2013/01/06 WA\n*/\n#define DEBUGx 0\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[5][MAXLEN];\nint  rythm_len[5];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\nunsigned char pat2[1024];\nunsigned char buf[1024];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n  \n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\n\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  \n  for(i=n;i>=1;i--)\n    { \n      \n      if(n % i == 0)\n\t{\n\t\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\t\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat;\n  int  n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  //printf(\"rl:%d\\n\",n);\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n  \n\t\n  LOOPY:\n     scanf(\"%d \",&N);\n\n    for(i=0;i<N;i++)\n      {\n\t\n\tscanf(\"%s\",input_data);\n      \n\trythm_len[i]=len=strlen(input_data)/2;\n\t    \n\tfor(j=0;j<len;j++)\n\t  {\n\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\n\t  }\n      }\n    lcm_all=1;\n\n#ifdef DEBUG\n    printf(\"--INF 00 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n\n#ifdef DEBUG\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    \n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUG\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUG\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    \n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=r,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=gcd(n,i);\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][1500000],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[1500000]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      if(l>10000)continue;\n      for(j=r[i]=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      l=lcm(l,r[i]=f(d[i],r[i]));//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    for(i=0;i<n;i++){\n      for(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n    }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n    l=f(ans,l);//printf(\"c\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else {\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=r,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=gcd(n,i);\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][150000],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[150000]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      scanf(\"%s\",s);//printf(\"%d\\n\",s[2]);\n      if(l>10000)continue;\n      for(j=r[i]=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);//printf(\"a%d\\n\",a);\n\tfor(b=0;s[j+1]-c[b];b++);//printf(\"b%d\\n\",b);\n\td[i][r[i]++]=a*16+b;//printf(\"%d\\n\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      l=lcm(l,r[i]=f(d[i],r[i]));//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    for(i=0;i<n;i++){\n      for(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n    }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n    l=f(ans,l);//printf(\"c\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n    printf(\"\\n\");\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint gcd(int a,int b){\n\treturn b==0 ? a : gcd(b,a%b);\n}\n\nint lcm(int a,int b){\n\treturn a / gcd(a,b) * b;\n}\n\nvoid formalize(char s[]){\n\tint i,j,k;\n\tint flg = 0, diff;\n\tint len = strlen(s);\n\tchar tmp[2052];\n\n\tfor(i=len;!flg && i>=4;i-=2){\n\t\tif(len % i == 0){\n\t\t\tfor(j=0;!flg && j<len;j+=i){\n\t\t\t\tfor(k=j+2;k<j+i;k+=2){\n\t\t\t\t\tif(s[k] != '0' || s[k+1] != '0') break;\n\t\t\t\t}\n\t\t\t\tif(k != j+i) break;\n\t\t\t}\n\t\t\tif(j == len){\n\t\t\t\tflg = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(!flg){return;}\n\n\tdiff = i;\n\tstrcpy(tmp,s);\n\tfor(i=0;i<2052;i++) s[i] = '0';\n\tfor(i=0;i<len;i+=diff){\n\t\ts[2*i/diff] = tmp[i];\n\t\ts[2*i/diff+1] = tmp[i+1];\n\t}\n\ts[2*i/diff] = 0;\n\n}\n\nvoid wideForm(char s[2052],int mult){\n\tint i;\n\tint len = strlen(s);\n\tchar tmp[2052];\n\n\tstrcpy(tmp,s);\n\tfor(i=0;i<2052;i++) s[i] = '0';\n\tfor(i=0;i<len;i+=2){\n\t\ts[i*mult] = tmp[i];\n\t\ts[i*mult+1] = tmp[i+1];\n\t}\n\ts[len*mult] = 0;\n}\n\nint main(void){\n\tint i,j;\n\tint n,m;\n\tint l;\n\tint ans[2052];\n\tchar s[8][2052];\n\n\tscanf(\"%d\",&n);\n\twhile(n--){\n\t\tscanf(\"%d\",&m);\n\t\tl = 1;\n\t\tfor(i=0;i<m;i++){\n\t\t\tscanf(\"%s\",s[i]);\n\t\t\tformalize(s[i]);\n\t\t\tl = lcm(l,strlen(s[i]));\n\t\t}\n\n\t\tif(l > 2048){\n\t\t\tprintf(\"Too complex.\\n\");\n\t\t\tcontinue;\n\t\t}\n\n\t\tfor(i=0;i<2052;i++) ans[i] = 0;\n\t\tfor(i=0;i<m;i++){\n\t\t\twideForm(s[i],l/strlen(s[i]));\n\t\t\tfor(j=0;j<l;j++) ans[j] += s[i][j] - '0';\n\t\t}\n\n\t\tfor(i=0;i<l;i++){\n\t\t\tif(ans[i] >= 10) putchar(ans[i]-10+'A');\n\t\t\telse printf(\"%d\",ans[i]);\n\t\t}\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN];\nunsigned char rythm_pattern[5][MAXLEN];\nint  rythm_len[5];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\nunsigned char pat2[1024];\nint prime[10]={2,3,5,7,11,13,17,19,23,29};\nunsigned char buf[1024];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n\n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\nint no_zero_pos[MAXLEN];\nint gcd_all(int * pos,int len)\n{\n  int ret;\n  int i;\n  int g0,g1;\n  g0=pos[0];g1=pos[1]-g0;\n  for(i=1;i<len;i++)\n    g1 = gcd(g1,pos[i]-g0);\n  return(g1);\n}\nvoid p_n_z_p()\n{\n  int i;\n\n  for(i=0;i<5;i++)\n    printf(\"%d \",no_zero_pos[i]);\n\n}\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  //printf(\"N:%d\\n\",n);\n  for(i=n;i>=1;i--)\n    { \n      if(n % i == 0)\n\t{\n\t  //printf(\"SH:%d\\n\",i);\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat,n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n\n\t//exit(0);\n  LOOPY:\n     scanf(\"%d \",&N);\n\n    for(i=0;i<N;i++)\n      {\n\t// printf(\"I:%d\\n\",i);\n\tscanf(\"%s\",input_data);\n      \n\trythm_len[i]=len=strlen(input_data)/2;\n\tfor(j=0;j<len;j++)\n\t  {\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t  }\n      }\n    lcm_all=1;\n    \n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n  \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    \n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include <stdio.h>\n\nint twochar2int(const char* input) {\n\tchar buffer[4];\n\tint result;\n\tbuffer[0]=input[0];\n\tbuffer[1]=input[1];\n\tbuffer[2]=0;\n\tsscanf(buffer,\"%X\",&result);\n\treturn result;\n}\n\nint gcd(int a,int b) {\n\treturn b==0?a:gcd(b,a%b);\n}\n\nint lcm(int a,int b) {\n\treturn a/gcd(a,b)*b;\n}\n\nint main(void) {\n\tint puttern_length[8];\n\tunsigned char putterns[8][1024];\n\tchar puttern_buffer[2052];\n\tint N,i,j;\n\tint caseNum,caseCount;\n\tscanf(\"%d\",&caseNum);\n\tfor(caseCount=0;caseCount<caseNum;caseCount++) {\n\t\tint max_kouyakusuu;\n\t\tint final_length;\n\t\tscanf(\"%d\",&N);\n\t\tfor(i=0;i<N;i++) {\n\t\t\tint nonzero_flag=0;\n\t\t\tscanf(\"%s\",puttern_buffer);\n\t\t\tputtern_length[i]=0;\n\t\t\tfor(j=0;puttern_buffer[j];j+=2) {\n\t\t\t\tputterns[i][j/2]=twochar2int(&puttern_buffer[j]);\n\t\t\t\tif(putterns[i][j/2]!=0)nonzero_flag=1;\n\t\t\t\tputtern_length[i]++;\n\t\t\t}\n\t\t\tif(!nonzero_flag)puttern_length[i]=1;\n\t\t}\n\t\tfor(i=0;i<N;i++) {\n\t\t\tmax_kouyakusuu=-1;\n\t\t\tfor(j=1;j<puttern_length[i];j++) {\n\t\t\t\tif(putterns[i][j]!=0) {\n\t\t\t\t\tint now_kouyakusuu=gcd(j,puttern_length[i]);\n\t\t\t\t\tif(max_kouyakusuu<0)max_kouyakusuu=now_kouyakusuu;\n\t\t\t\t\telse max_kouyakusuu=gcd(max_kouyakusuu,now_kouyakusuu);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(max_kouyakusuu>1) {\n\t\t\t\tfor(j=0;j<puttern_length[i];j+=max_kouyakusuu) {\n\t\t\t\t\tputterns[i][j/max_kouyakusuu]=putterns[i][j];\n\t\t\t\t}\n\t\t\t\tputtern_length[i]/=max_kouyakusuu;\n\t\t\t}\n\t\t}\n\t\tfinal_length=puttern_length[0];\n\t\tfor(i=1;i<N && final_length<=1024;i++) {\n\t\t\tfinal_length=lcm(final_length,puttern_length[i]);\n\t\t}\n\t\tif(final_length>1024) {\n\t\t\tputs(\"Too complex.\");\n\t\t} else {\n\t\t\tmax_kouyakusuu=-1;\n\t\t\tfor(i=0;i<final_length;i++) {\n\t\t\t\tint now=0;\n\t\t\t\tfor(j=0;j<N;j++) {\n\t\t\t\t\tif((i*puttern_length[j])%final_length==0) {\n\t\t\t\t\t\tnow|=putterns[j][i*puttern_length[j]/final_length];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tprintf(\"%02X\",now);\n\t\t\t\tif(now!=0 && i>0) {\n\t\t\t\t\tint now_kouyakusuu=gcd(i,final_length);\n\t\t\t\t\tif(max_kouyakusuu<0)max_kouyakusuu=now_kouyakusuu;\n\t\t\t\t\telse max_kouyakusuu=gcd(max_kouyakusuu,now_kouyakusuu);\n\t\t\t\t}\n\t\t\t}\n\t\t\tputchar('\\n');\n\t\t\tif(max_kouyakusuu>1)return 1;\n\t\t}\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[5][MAXLEN];\nint  rythm_len[5];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\nunsigned char pat2[1024];\nunsigned char buf[1024];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n  \n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\n\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  \n  for(i=n;i>=1;i--)\n    { \n      \n      if(n % i == 0)\n\t{\n\t\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\t\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat;\n  int  n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[0];\n  //printf(\"rl:%d\\n\",n);\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n  \n\t\n  LOOPY:\n     scanf(\"%d \",&N);\n\n    for(i=0;i<N;i++)\n      {\n\t\n\tscanf(\"%s\",input_data);\n      \n\trythm_len[i]=len=strlen(input_data)/2;\n\t    \n\tfor(j=0;j<len;j++)\n\t  {\n\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\n\t  }\n      }\n    lcm_all=1;\n\n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n\n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    \n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    \n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "#include<stdio.h>\nint gcd(int a,int b){return b?gcd(b,a%b):a;}\nint lcm(int a,int b){return a*(b/gcd(a,b));}\nint f(int *d,int r){\n  int n=0,i;\n  for(i=0;i<r;i++){\n    if(d[i])break;\n  }\n  if(i==r)return 1;\n  if(d[0]==0)return r;\n  for(i=1;i<r;i++){\n    if(d[i])n=n?gcd(n,i):i;\n  }\n  for(i=0;i<r;i++){\n    if(i%n==0)d[i/n]=d[i];\n  }\n  return r/n;\n}\nint main(){\n  int a,b,i,j,n,m,l,d[10][1500],r[10]={0};\n  char s[2500],c[]={\"0123456789ABCDEF\"};\n  int ans[1500]={0};\n  scanf(\"%d\",&m);\n  while(m--){\n    int ans[1500]={0};\n    l=1;\n    scanf(\"%d\",&n);\n    for(i=0;i<n;i++){\n      r[i]=0;\n      scanf(\"%s\",s);\n      for(j=0;s[j];j+=2){\n\tfor(a=0;s[j  ]-c[a];a++);\n\tfor(b=0;s[j+1]-c[b];b++);\n\td[i][r[i]++]=a*16+b;//printf(\"%x\",d[i][r[i]-1]);\n      }//printf(\"\\n\");\n      r[i]=f(d[i],r[i]);\n      l=lcm(l,r[i]);//printf(\"%d \",l);\n    }//printf(\"\\n\");\n    if(l>1024)printf(\"Too complex.\\n\");\n    else{//printf(\"a\\n\");\n      for(i=0;i<n;i++){\n\tfor(j=0;j<r[i];j++)ans[l/r[i]*j]|=d[i][j];\n      }//for(i=0;i<l;i++)printf(\"%x\",ans[i]);printf(\"\\n\");\n      l=f(ans,l);//printf(\"c\\n\");\n      for(i=0;i<l;i++)printf(\"%02X\",ans[i]);\n      printf(\"\\n\");\n    }\n  }\n  return 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 1024\nunsigned char input_data[2*MAXLEN];\nunsigned char rythm_pattern[5][MAXLEN];\nint  rythm_len[5];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\nunsigned char pat2[1024];\nint prime[10]={2,3,5,7,11,13,17,19,23,29};\nunsigned char buf[1024];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n\n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\nint no_zero_pos[MAXLEN];\nint gcd_all(int * pos,int len)\n{\n  int ret;\n  int i;\n  int g0,g1;\n  g0=pos[0];g1=pos[1]-g0;\n  for(i=1;i<len;i++)\n    g1 = gcd(g1,pos[i]-g0);\n  return(g1);\n}\nvoid p_n_z_p()\n{\n  int i;\n\n  for(i=0;i<5;i++)\n    printf(\"%d \",no_zero_pos[i]);\n\n}\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  //printf(\"N:%d\\n\",n);\n  for(i=n;i>=1;i--)\n    { \n      if(n % i == 0)\n\t{\n\t  //printf(\"SH:%d\\n\",i);\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat,n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n\n\t//exit(0);\n  LOOPY:\n     scanf(\"%d \",&N);\n\n    for(i=0;i<N;i++)\n      {\n\t// printf(\"I:%d\\n\",i);\n\tscanf(\"%s\",input_data);\n      \n\trythm_len[i]=len=strlen(input_data)/2;\n\tfor(j=0;j<len;j++)\n\t  {\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t  }\n      }\n    lcm_all=1;\n    \n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n  \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[0]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    \n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "C",
    "code": "/*\nAizuOnline A2105\nRhythm Machine\n2013/01/04 RE\n2013/01/06 WA\n*/\n#define DEBUG 1\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#define MAXLEN 2048\nunsigned char input_data[2*MAXLEN+1];\nunsigned char rythm_pattern[8][MAXLEN];\nint  rythm_len[8];\nunsigned char result_pattern[MAXLEN];\nint N;  /*lines*/\nint NN; /*#of dataset*/\n\nunsigned char buf[MAXLEN];\n\nlong long gcd(long long x, long long y){\n\treturn y == 0 ? x: gcd(y, x%y);\n}\n\nlong int lcm(long int x,long int y)\n{\n  return(x/gcd(x,y)*y);\n}\n\nvoid expand_rythm_times(char *r_p,int len,int times)\n{\n  int i;\n  char buf[MAXLEN];\n  \n  for(i=0;i<MAXLEN;i++)\n    buf[i]=0;\n\n  for(i=0;i<len;i++)\n    {\n      buf[i*times]=r_p[i];\n    }\n  for(i=0;i<MAXLEN;i++)\n    r_p[i]=0;\n\n  for(i=0;i<len*times;i++)\n    r_p[i]=buf[i];\n}\n\nvoid logical_or_rythm_patterns(int N)\n{ \n  int i,j;  \n\n  //printf(\"LOR:N %d\\n\",N);\n\n  for(i=0;i<MAXLEN;i++)\n    result_pattern[i]=0;\n  for(i=0;i<N;i++)\n    for(j=0;j<MAXLEN;j++)\n      result_pattern[j] |= rythm_pattern[i][j];\n}\nvoid display_rythm_pattern(char * pat,int len)\n{\n  int i;\n  \n  for(i=0;i<len;i++)\n    printf(\"%02hhX\",pat[i]);\n  printf(\"\\n\");\n}\n\nint shrink_a(char * pat,int n)\n{\n  int i,j;\n  \n  for(i=n;i>=1;i--)\n    { \n      \n      if(n % i == 0)\n\t{\n\t\n\tfor(j=1;j<n;j++)\n\t  if((j % i) && pat[j])\n\t    goto CONT;\n\t//printf(\"%d %d\\n\",i,j);\t\n\tif(i<n)\n\t  for(j=i;j<n;j+=i)\n\t    {\n\t      //printf(\"*\");\n\t      pat[j/i]=pat[j];\n\t    }\n\t      //pat[j]=0;\n\t  goto END;\n\t    \nCONT:\n\t;\n\t}\n    }\n      return(0);\nEND:\n      return(n/i);\n}\nvoid shrink(int bufnum)\n{\n  char *pat;\n  int  n,n2;\n  pat = (char *)&(rythm_pattern[bufnum]);\n  n = rythm_len[bufnum];\n  //printf(\"rl:%d\\n\",n);\n  n2=shrink_a(pat,n);\n  rythm_len[bufnum]=n2;\n}\n\nmain()\n{\n  int ii,i,j,len,lcm_all;\n  unsigned int byt;\n\n  int N,NN;\n  \n  scanf(\"%d \",&NN);\n  \n  ii=0; \n  \n\t\n  LOOPY:\n     scanf(\"%d \",&N);\n\n     //printf(\"==%d\\n\",N);\n    for(i=0;i<N;i++)\n      {\n\t\n\tscanf(\"%s\",input_data);\n\t// printf(\"--INF 01*:%s\\n\",input_data);\n\trythm_len[i]=len=strlen(input_data)/2;\n\t//printf(\"--INF 01 LEN:%d\\n\",rythm_len[i]);\n\tfor(j=0;j<len;j++)\n\t  {\n\n\t    strncpy(buf,&input_data[j*2],2);\n\t    sscanf(buf,\"%x \",&byt);\n\t    rythm_pattern[i][j]=(char)(byt & 0xff) ;\n\t    \n\t  }\n\n      }\n    lcm_all=1;\n\n#ifdef DEBUGx\n    printf(\"--INF 00 \\n\");\n    printf(\"--INF 00*:%d\\n,rythm_pattern[i][7]\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    \n    for(i=0;i<N;i++)\n      {\n\tshrink(i); \n      }\n\n#ifdef DEBUGx\n    printf(\"--INF 01 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    for(i=0;i<N;i++)\n      lcm_all = lcm(lcm_all,rythm_len[i]);\n    \n    if(lcm_all > 1024)\n      {\n\tprintf(\"Too complex.\\n\");\n\tgoto NEXTLOOP;\n      }\n    \n#ifdef DEBUGx\n    printf(\"--INF 02 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n    for(i=0;i<N;i++)\n      {\n\texpand_rythm_times(&rythm_pattern[i][0],\n\t\t\t   rythm_len[i],lcm_all/rythm_len[i]);\n\trythm_len[i] *= (lcm_all/rythm_len[i]);\n      }\n#ifdef DEBUGx\n    printf(\"--INF 03 \\n\");\n    for(i=0;i<N;i++)\n      display_rythm_pattern(&rythm_pattern[i][0],rythm_len[i]);\n#endif\n\n    logical_or_rythm_patterns(N);\n\n    display_rythm_pattern(result_pattern,lcm_all);\n    //printf(\"**%d\\n\",lcm_all);\n NEXTLOOP:\n    ii++;\n    //printf(\"**%d %d\\n\",ii,NN);\n    if(ii>=NN)goto END;\n\n    goto LOOPY;\n    //}\n END:\nreturn(0);\n}"
  },
  {
    "language": "Kotlin",
    "code": "import java.util.*\n\nfun lcm(a:Int, b:Int):Int {\n    return a * b / gcd(a, b)\n}\nfun gcd(a:Int, b:Int):Int {\n    return when(b){\n        0 -> a\n        else -> gcd(b, a % b)\n    }\n}\nclass Harmony(private val pattern:Int = 0){\n    constructor(pattern:String):this(pattern.toInt(16))\n    fun merged(other:Harmony):Harmony {\n        return Harmony(pattern or other.pattern)\n    }\n    override fun toString(): String {\n        return (pattern / 16).toString(16).capitalize() + (pattern % 16).toString(16).capitalize()\n    }\n}\nclass Rythm(private val mHarmonies:Array<Harmony> = Array(1){Harmony()}){\n    companion object {\n        operator fun invoke(string:String):Rythm{\n            val length = string.length / 2\n            val array = string.chunked(2)\n            val g = array.withIndex().filter{it.value != \"00\"}.fold(length){l, r -> gcd(l, r.index)}\n            return Rythm((0 until length step g).map{Harmony(array[it])}.toTypedArray())\n        }\n    }\n    val length:Int\n        get() = mHarmonies.size\n    fun mergedSize(rythm: Rythm):Int = lcm(this.length, rythm.length)\n    fun merge(rythm: Rythm):Rythm? {\n        if (mergedSize(rythm) > 1024) return null\n        val res = Array(mergedSize(rythm)){Harmony()}\n        val h = res.size / length\n        for (i in 0 until length){\n            res[i * h] = res[i * h].merged(mHarmonies[i])\n        }\n        val v = res.size / rythm.length\n        for (i in 0 until rythm.length){\n            res[i * v] = res[i * v].merged(rythm.mHarmonies[i])\n        }\n        return Rythm(res)\n    }\n    override fun toString(): String {\n        return mHarmonies.joinToString(\"\") { it.toString()}\n    }\n}\n\nfun main(args:Array<String>):Unit {\n    repeat(readLine()!!.toInt()){\n        println(Array(readLine()!!.toInt()){\n            readLine()!!.trim()\n        }.fold(Rythm() as Rythm?){l, r -> l?.merge(Rythm(r))} ?: \"Too complex.\")\n    }\n}\n"
  },
  {
    "language": "Kotlin",
    "code": "import java.util.*\n\nfun lcm(a:Int, b:Int):Int {\n    return a * b / gcd(a, b)\n}\nfun gcd(a:Int, b:Int):Int {\n    return when(b){\n        0 -> a\n        else -> gcd(b, a % b)\n    }\n}\nclass Harmony(private val pattern:Int = 0){\n    constructor(pattern:String):this(pattern.toInt(16))\n    fun merged(other:Harmony):Harmony {\n        return Harmony(pattern or other.pattern)\n    }\n    override fun toString(): String {\n        return (pattern / 16).toString(16).capitalize() + (pattern % 16).toString(16).capitalize()\n    }\n}\nclass Rythm(private val mHarmonies:Array<Harmony> = Array(1){Harmony()}){\n    companion object {\n        operator fun invoke(string:String):Rythm{\n            val length = string.length / 2\n            val array = (0 until string.length step 2).map{string.substring(it, it + 2)}\n            val g = array.withIndex().filter{i -> i.value != \"00\"}.fold(length){l, r -> gcd(l, r.index)}\n            return Rythm((0 until length step g).map{Harmony(array[it])}.toTypedArray())\n        }\n    }\n    val length:Int\n        get() = mHarmonies.size\n    fun mergedSize(rythm: Rythm):Int = lcm(this.length, rythm.length)\n    fun merge(rythm: Rythm):Rythm? {\n        if (mergedSize(rythm) > 1024) return null\n        val res = Array(mergedSize(rythm)){Harmony()}\n        val h = res.size / length\n        for (i in 0 until length){\n            res[i * h] = res[i * h].merged(mHarmonies[i])\n        }\n        val v = res.size / rythm.length\n        for (i in 0 until rythm.length){\n            res[i * v] = res[i * v].merged(rythm.mHarmonies[i])\n        }\n        return Rythm(res)\n    }\n    override fun toString(): String {\n        return mHarmonies.joinToString(\"\") { it.toString()}\n    }\n}\n\nfun main(args:Array<String>):Unit {\n    repeat(readLine()!!.toInt()){\n        println(Array(readLine()!!.toInt()){\n            readLine()!!.trim()\n        }.fold(Rythm() as Rythm?){l, r -> l?.merge(Rythm(r))} ?: \"Too complex.\")\n    }\n}\n"
  },
  {
    "language": "Java",
    "code": "import static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tvoid tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tSystem.setIn(new FileInputStream(\"src/aoj2105/input.txt\"));\n\t\t\t// System.setOut(new PrintStream(new FileOutputStream(\"src/aoj1172/result.txt\")));\n\t\t} catch (FileNotFoundException e) {\n\t\t}\n\t\tnew Main().run();\n\t}\n\n\tlong gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\n\tScanner sc;\n\tvoid run() {\n\t\tsc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tfor (;t-->0;) {\n\t\t\tsolve();\n\t\t}\n\t}\n\n\n\tint[] minimize(char[] p) {\n\t\tint n = p.length / 2;\n\t\tint[] xs = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\txs[i] = (p[i*2] - '0') * 16 + (p[i*2+1]-'0');\n\t\t}\n\n\t\tint i, j;\n\t\tfor (int d = n; d > 0; d--) if (n % d == 0) {\n\t\t\tint[] res = new int[n / d];\n\t\t\tfor (i = 0; i < res.length; i++) {\n\t\t\t\tres[i] = xs[i * d];\n\t\t\t\tfor (j = 1; j < d; j++) {\n\t\t\t\t\tif (0 != xs[i * d + j])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (j != d)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i == res.length) return res;\n\t\t}\n\n\t\t// don't reach here.\n\t\tif (true) throw new RuntimeException();\n\t\treturn new int[0];\n\t}\n\n\tvoid solve()\n\t{\n\t\tint n = sc.nextInt();\n\n\t\tint[][] ps = new int[n][];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tchar[] p = sc.next().toCharArray();\n\t\t\tps[i] = minimize(p);\n\t\t}\n\n\t\tlong lcm = ps[0].length;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tlcm = lcm * ps[i].length / gcd(lcm, ps[i].length);\n\t\t}\n\t\tif (lcm > 1024) {\n\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\treturn;\n\t\t}\n\t\tfor (int t = 0; t < lcm; t++) {\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tif (t % (lcm / ps[i].length) == 0)\n\t\t\t\t\tcur |= ps[i][(int)(t * ps[i].length / lcm)];\n\t\t\tSystem.out.printf(\"%02X\", cur);\n\t\t}\n\t\tSystem.out.println();\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * Rhythm Machine\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\tString words;\n\n\t\tint D = parseInt(br.readLine());\n\n\t\tfor (int i = 0; i < D; i++) {\n\n\t\t\tList<int[]> rhythms = new ArrayList<>();\n\n\t\t\tint N = parseInt(br.readLine());\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\trhythms.add(reduce(decode(br.readLine())));\n\t\t\t}\n\n\t\t\tlong lcm = 1;\n\t\t\tfor (int[] r : rhythms) {\n\t\t\t\tlcm = lcm(lcm, r.length);\n\t\t\t}\n\n\t\t\tif (lcm < 0 || 1024 < lcm) {\n\t\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tint[] chord = new int[(int) lcm];\n\t\t\tfor (int[] r : rhythms) {\n\t\t\t\tint div = (int) lcm / r.length;\n\t\t\t\tfor (int j = 0, k = 0; j < r.length; j++, k += div) {\n\t\t\t\t\tchord[k] |= r[j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchord = reduce(chord);\n\n\t\t\tif (chord.length <= 1024) {\n\t\t\t\tSystem.out.println(encode(chord));\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate static int[] decode(String rhythm) {\n\t\tint[] ret = new int[rhythm.length() / 2];\n\t\tfor (int i = 0; i < rhythm.length(); i += 2) {\n\t\t\tString _r = rhythm.substring(i, i + 2);\n\t\t\tret[i / 2] = Integer.valueOf(_r, 16);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate static String encode(int[] chord) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i : chord) {\n\t\t\tsb.append(String.format(\"%02X\", i));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate static int[] reduce(int[] chord) {\n\n\t\tList<Integer> divs = divisors(chord.length);\n\t\tCollections.sort(divs, Comparator.reverseOrder());\n\n\t\tint[] ret = null;\n\n\t\touter:\n\t\tfor (int div : divs) {\n\t\t\tret = new int[chord.length / div];\n\t\t\tint zero = 0;\n\t\t\tint same = 0;\n\t\t\tfor (int i = 0; i < chord.length; i++) {\n\t\t\t\tif (i % div == 0) {\n\t\t\t\t\tret[i / div] = chord[i];\n\t\t\t\t\tsame = chord[i];\n\t\t\t\t} else {\n\t\t\t\t\tzero += chord[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (zero == 0) {\n\t\t\t\tbreak outer;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tprivate static long gcd(long a, long b) {\n\t\tif (b == 0) return a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tprivate static long lcm(long a, long b) {\n\t\treturn a * (b / gcd(a, b));\n\t}\n\n\tprivate static List<Integer> divisors(int n) {\n\t\tList<Integer> ret = new ArrayList<>();\n\t\tif (n == 0) {\n\t\t\tret.add(1);\n\t\t\treturn ret;\n\t\t}\n\t\tfor (int i = 1; i * i <= n; i++) {\n\t\t\tif (n % i == 0) {\n\t\t\t\tif (i * i != n) ret.add(n / i);\n\t\t\t\tret.add(i);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(ret);\n\t\treturn ret;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n\n// 2011/10/20\n\n//@2105 Y}V[\npublic class Main {\n\n\n\tlong gcm(long a, long b) {\n\t\t\n\t\twhile(b != 0) {\n\t\t\tlong t = a % b;\n\t\t\ta = b;\n\t\t\tb = t;\n\t\t}\n\t\treturn a;\n\t}\n\t\n\tlong lcm(long a, long b) {\n\t\treturn a * b / gcm(a, b);\n\t}\n\t\n\t// föÌ¸ÌzñðÔ·\n\t//@36Èç2,3ÌzñðÔ·B\n\t//  fÈç»Ì©ÌÌêvfzñðÔ·B\n\t//  0 ÆÍnullðÔ·\n\t//  1 ÌÆ«ÍózñðÔ·\n\tlong[] soinsu(long a) {\n\t\tif (a <= 0)\n\t\t\treturn null;\n\t\tList<Long> list = new ArrayList<Long>();\n\t\tif (a % 2 == 0) {\n\t\t\tlist.add(2L);\n\t\t\ta /= 2;\n\t\t\twhile(a % 2 == 0)\n\t\t\t\ta /= 2;\n\t\t}\n\t\tfor(long k = 3;; k += 2) {\n\t\t\tif (k * k > a)\n\t\t\t\tbreak;\n\t\t\tif (a % k == 0) {\n\t\t\t\tlist.add(k);\n\t\t\t\ta /= k;\n\t\t\t\twhile(a % k == 0)\n\t\t\t\t\ta /= k;\n\t\t\t}\n\t\t}\n\t\tif (a != 1) {\n\t\t\tlist.add(a);\n\t\t}\n\t\t\n\t\tlong[] ret = new long[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++) {\n\t\t\tret[i] = list.get(i);\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t// YðÅK»·é\n\tint[] saitekika(int[] data) {\n\t\t// 0YÅK»\n\t\t// n=2 01000200 -> 0102\n\t\tlong[] so = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tfor(int t = 0; t < data.length; t++) {\n\t\t\t\t\tif (t % n != 0 && data[t] != 0) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t * n];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// JèÔµÅK»\n\t\tso = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tint w = data.length / n;// Ôu\n\t\t\t\tfor(int t = 0; t < data.length - w; t++) {\n\t\t\t\t\tif (data[t] != data[t + w]) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn data;\n\t}\n\t\n\n\t// C return falseÅ¨µÜ¢\n\tboolean main() throws IOException {\n\n\t\tint[] ir = readIntArray();\n\t\tint N = ir[0];\n\t\t\n\t\tint[][] orgData = new int[N][];\n\t\t\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\t// Pf[^ÇÞ\n\t\t\tString s = reader.readLine();\n\t\t\tint len = s.length() / 2;\n\t\t\tint[] data = new int[len];\n\t\t\tfor(int j = 0; j < len; j++) {\n\t\t\t\tdata[j] = Integer.parseInt(s.substring(j * 2, j * 2 + 2), 16);\n\t\t\t}\n\t\t\t\n\t\t\tdata = saitekika(data);\n\t\t\torgData[i] = data;\n\t\t}\n\n\t\t// Å¬ö{ðßé\n\t\tlong lcm = 1;\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tlcm = lcm(lcm, orgData[i].length);\n\t\t}\n\t\t\n\t\tint[] newData = null;\n\t\tif (lcm > 1000 * 1) {\n\t\t\tnewData = null;\n\t\t}\n\t\telse {\t\n\t\t\n\t\t\t//Y¬\n\t\t\tnewData = new int[(int)lcm];\n\t\t\tfor(int t = 0; t < lcm; t++) {\n\t\t\t\tint rsum = 0;\n\t\t\t\tfor(int j = 0; j < orgData.length; j++) {\n\t\t\t\t\tif (t % (lcm / orgData[j].length) == 0)\n\t\t\t\t\trsum |= orgData[j][(int)(t / (lcm / orgData[j].length))];\n\t\t\t\t}\n\t\t\t\tnewData[t] = rsum;\n\t\t\t}\n\t\t\n\t\t\tnewData = saitekika(newData);\n\t\t}\n\n\t\t// ¶ñ»\n\t\tString s = \"\";\n\t\tif (newData == null || newData.length > 1024) {\n\t\t\ts = \"Too complex.\";\n\t\t}\n\t\telse {\n\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\ts += String.format(\"%02X\", newData[t]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// ðÌ\\¦\n\t\tSystem.out.printf(\"%s\\n\", s);\n\t\t\n\t\treturn true; // ³íI¹ Ö\n\t}\n\t\n\n//\tprivate final static boolean DEBUG = true;  // debug\n\tprivate final static boolean DEBUG = false; // release\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tif (DEBUG) {\n\t\t\tlog = System.out;\n\t\t\t\n\t\t\t//String inputStr = \"1\\n2\\n0102\\n00000810\\n\";\n//\t\t\tString inputStr = \"1\\n1\\n0200020008000200\\n\";\n//\t\t\tString inputStr = \"1,1,0200020008000200,\"; // 02020802\n//\t\t\tString inputStr = \"1,1,0000,\";\n\t\t\tString inputStr = \"1,1,010200010200010200,\"; // ­è©¦µ3 010200\n\t\t\tinputStr = inputStr.replace(\",\", \"\\n\");\n\t\t\t\n\t\t\treader = new BufferedReader(new StringReader(inputStr)); \n\n\t\t}\n\t\telse {\n\t\t\tlog = new PrintStream(new OutputStream() { public void write(int b) {} } ); // «ÌÄ\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in)); // R\\[©ç\n\t\t}\n\t\t\n\t\tint N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = new Main().main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t\n\t\treader.close();\n\t}\n\n\t\n\tstatic PrintStream log;\n\tstatic BufferedReader reader;\n\t\n\n\t// WüÍæè1sªÌXy[XæØèÌ®lðÇÞ\n\t// EOFÌêÍnullðÔ·\n\tprivate static int[] readIntArray() throws IOException {\n\t\t\n\t\tString s = reader.readLine();\n\t\tif (s == null)\n\t\t\treturn null;\n\t\tString[] sp = s.split(\" \");\n\t\tint[] a = new int[sp.length];\n\t\tfor(int i = 0; i < sp.length; i++) {\n\t\t\ta[i] = Integer.parseInt(sp[i]);\n\t\t}\n\t\treturn a;\n\t}\n\t\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tint n;\n\tchar[][] c;\n\tint[] power;\n\tint[][] encode;\n\tchar[] decode;\n\n\tvoid init() {\n\t\tpower = new int[20];\n\t\tpower[0] = 1;\n\t\tfor (int i = 1; i < 20; i++) {\n\t\t\tpower[i] = power[i - 1] * 2;\n\t\t}\n\t\tencode = new int['9']['9'];\n\t\tencode['0']['1'] = 1;\n\t\tencode['0']['2'] = 2;\n\t\tencode['0']['4'] = 3;\n\t\tencode['0']['8'] = 4;\n\t\tencode['1']['0'] = 5;\n\t\tencode['2']['0'] = 6;\n\t\tencode['4']['0'] = 7;\n\t\tencode['8']['0'] = 8;\n\t\tdecode = new char['Z'];\n\t\tfor (int i = 0; i < 10; i++) {\n\t\t\tdecode[i] = (char) ('0' + i);\n\t\t}\n\t\tfor (int i = 'A'; i <= 'F'; i++) {\n\t\t\tdecode[i - 'A' + 10] = (char) i;\n\t\t}\n\t}\n\n\tint gcd(int x, int y) {\n\t\twhile (x != 0 && y != 0) {\n\t\t\tif (x > y) {\n\t\t\t\tx %= y;\n\t\t\t} else {\n\t\t\t\ty %= x;\n\t\t\t}\n\t\t}\n\t\tif (x == 0) {\n\t\t\treturn y;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t}\n\n\tint lcm(int x, int y) {\n\t\treturn x * y / gcd(x, y);\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\t\tinit();\n\n\t\tfor (int T = sc.nextInt() - 1; 0 <= T; T--) {\n\t\t\tn = sc.nextInt();\n\t\t\tc = new char[n][];\n\t\t\tint lcm = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tc[i] = sc.next().toCharArray();\n\t\t\t\tint k = c[i].length / 2;\n\t\t\t\tlcm = lcm(lcm, k);\n\t\t\t}\n\t\t\tchar[] ans = new char[lcm];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint m = c[i].length / 2;\n\t\t\t\tint d = lcm / m;\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tint k1 = 2 * j;\n\t\t\t\t\tint k2 = 2 * j + 1;\n\t\t\t\t\tint tmp = encode[c[i][k1]][c[i][k2]];\n\t\t\t\t\ttmp--;\n\t\t\t\t\tans[j * d] |= (1 << tmp);\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (true) {\n\t\t\t\tif (ans.length == 1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tboolean f = true;\n\t\t\t\tint length = ans.length;\n\t\t\t\tchar[] tmp = new char[length / 2];\n\t\t\t\tfor (int i = 0; i + 1 < length; i += 2) {\n\t\t\t\t\tif (ans[i + 1] != 0) {\n\t\t\t\t\t\tf = false;\n\t\t\t\t\t}\n\t\t\t\t\ttmp[i / 2] = ans[i];\n\t\t\t\t}\n\t\t\t\tif (!f) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tans = tmp;\n\t\t\t}\n\n\t\t\tif (ans.length <= 2048) {\n\t\t\t\tfor (int i = 0; i < ans.length; i++) {\n\t\t\t\t\tSystem.out.print(decode[ans[i] / 16]);\n\t\t\t\t\tSystem.out.print(decode[ans[i] % 16]);\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tint t = sc.nextInt();\n\t\tfor(int i=0;i<t;i++) {\n\t\t\tsolve();\n\t\t}\n\t}\n\tstatic void solve() {\n\t\tint n = sc.nextInt();\n\t\tArrayList<Frac> al = new ArrayList<Frac>();\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tString r = sc.next();\n\t\t\tint m = r.length() / 2;\n\t\t\tfor(int j=0;j<m;j++) {\n\t\t\t\tint p = Integer.parseInt(r.substring(j*2, j*2+2), 16);\n\t\t\t\tfor(int k=0;k<8;k++) {\n\t\t\t\t\tif ((p>>k&1) == 1) {\n\t\t\t\t\t\tal.add(new Frac(j,m,k));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint lcm = 1;\n\t\tfor(Frac f:al) {\n\t\t\tlcm = (int) Frac.lcm(lcm, f.b);\n\t\t\tif (lcm > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (lcm > 1024) {\n\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\treturn;\n\t\t}\n//\t\tSystem.out.println(lcm);\n\t\tint[] pattern = new int[lcm];\n\t\tfor(Frac f:al) {\n\t\t\tpattern[(int) (f.a * lcm / f.b)] |= 1 << f.type;\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int p:pattern) {\n\t\t\tString s = Integer.toHexString(p).toUpperCase();\n\t\t\tif (s.length() == 1) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t\tsb.append(s);\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\nclass Frac {\n\tlong a,b;\n\tint type;\n\tpublic Frac(long a,long b,int type) {\n\t\tlong g = gcd(a,b);\n\t\tthis.a = a / g;\n\t\tthis.b = b / g;\n\t\tthis.type = type;\n\t}\n\tpublic static long gcd(long a,long b) {\n\t\twhile(b!=0) {\n\t\t\tlong r = a%b;\n\t\t\ta = b;\n\t\t\tb = r;\n\t\t}\n\t\treturn a;\n\t}\n\tpublic static long lcm(long a,long b) {\n\t\treturn a / gcd(a,b) * b;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\nimport static java.lang.Integer.parseInt;\n\n/**\n * Rhythm Machine\n */\npublic class Main {\n\n\tpublic static void main(String[] args) throws IOException {\n\t\tBufferedReader br = new BufferedReader(new InputStreamReader(System.in));\n\t\tString line;\n\t\tString words;\n\n\t\tint D = parseInt(br.readLine());\n\n\t\tfor (int i = 0; i < D; i++) {\n\n\t\t\tList<int[]> rhythms = new ArrayList<>();\n\n\t\t\tint N = parseInt(br.readLine());\n\t\t\tfor (int j = 0; j < N; j++) {\n\t\t\t\trhythms.add(decode(br.readLine()));\n\t\t\t}\n\n\t\t\tint lcm = 1;\n\t\t\tfor (int[] r : rhythms) {\n\t\t\t\tlcm = lcm(lcm, r.length);\n\t\t\t}\n\n\t\t\tint[] chord = new int[lcm];\n\t\t\tfor (int[] r : rhythms) {\n\t\t\t\tint div = lcm / r.length;\n\t\t\t\tfor (int j = 0, k = 0; j < r.length; j++, k += div) {\n\t\t\t\t\tchord[k] |= r[j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchord = reduce(chord);\n\n\t\t\tif (chord.length <= 1024) {\n\t\t\t\tSystem.out.println(encode(chord));\n\t\t\t} else {\n\t\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\t}\n\n\t\t}\n\t}\n\n\tprivate static int[] decode(String rhythm) {\n\t\tint[] ret = new int[rhythm.length() / 2];\n\t\tfor (int i = 0; i < rhythm.length(); i += 2) {\n\t\t\tString _r = rhythm.substring(i, i + 2);\n\t\t\tret[i / 2] = Integer.valueOf(_r, 16);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tprivate static String encode(int[] chord) {\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor (int i : chord) {\n\t\t\tsb.append(String.format(\"%02X\", i));\n\t\t}\n\t\treturn sb.toString();\n\t}\n\n\tprivate static int[] reduce(int[] chord) {\n\n\t\tList<Integer> divs = divisors(chord.length);\n\t\tCollections.sort(divs, Comparator.reverseOrder());\n\n\t\tint[] ret = null;\n\n\t\touter:\n\t\tfor (int div : divs) {\n\t\t\tret = new int[chord.length / div];\n\t\t\tint zero = 0;\n\t\t\tint same = 0;\n\t\t\tfor (int i = 0; i < chord.length; i++) {\n\t\t\t\tif (i % div == 0) {\n\t\t\t\t\tret[i / div] = chord[i];\n\t\t\t\t\tsame = chord[i];\n\t\t\t\t} else {\n\t\t\t\t\tzero += chord[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (zero == 0) {\n\t\t\t\tbreak outer;\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\tprivate static int gcd(int a, int b) {\n\t\tif (b == 0) return a;\n\t\treturn gcd(b, a % b);\n\t}\n\n\tprivate static int lcm(int a, int b) {\n\t\treturn a * (b / gcd(a, b));\n\t}\n\n\tprivate static List<Integer> divisors(int n) {\n\t\tList<Integer> ret = new ArrayList<>();\n\t\tif (n == 0) {\n\t\t\tret.add(1);\n\t\t\treturn ret;\n\t\t}\n\t\tfor (int i = 1; i * i <= n; i++) {\n\t\t\tif (n % i == 0) {\n\t\t\t\tif (i * i != n) ret.add(n / i);\n\t\t\t\tret.add(i);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(ret);\n\t\treturn ret;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n\n// 2011/10/20\n\n//@2105 Y}V[\npublic class Main {\n\n\n\tlong gcm(long a, long b) {\n\t\t\n\t\twhile(b != 0) {\n\t\t\tlong t = a % b;\n\t\t\ta = b;\n\t\t\tb = t;\n\t\t}\n\t\treturn a;\n\t}\n\t\n\tlong lcm(long a, long b) {\n\t\treturn a * b / gcm(a, b);\n\t}\n\t\n\t// föÌ¸ÌzñðÔ·\n\t//@36Èç2,3ÌzñðÔ·B\n\t//  fÈç»Ì©ÌÌêvfzñðÔ·B\n\t//  0 ÆÍnullðÔ·\n\t//  1 ÌÆ«ÍózñðÔ·\n\tlong[] soinsu(long a) {\n\t\tif (a <= 0)\n\t\t\treturn null;\n\t\tList<Long> list = new ArrayList<Long>();\n\t\tif (a % 2 == 0) {\n\t\t\tlist.add(2L);\n\t\t\ta /= 2;\n\t\t\twhile(a % 2 == 0)\n\t\t\t\ta /= 2;\n\t\t}\n\t\tfor(long k = 3;; k += 2) {\n\t\t\tif (k * k > a)\n\t\t\t\tbreak;\n\t\t\tif (a % k == 0) {\n\t\t\t\tlist.add(k);\n\t\t\t\ta /= k;\n\t\t\t\twhile(a % k == 0)\n\t\t\t\t\ta /= k;\n\t\t\t}\n\t\t}\n\t\tif (a != 1) {\n\t\t\tlist.add(a);\n\t\t}\n\t\t\n\t\tlong[] ret = new long[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++) {\n\t\t\tret[i] = list.get(i);\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t// YðÅK»·é\n\tint[] saitekika(int[] data) {\n\t\t// 0YÅK»\n\t\t// n=2 01000200 -> 0102\n\t\tlong[] so = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tfor(int t = 0; t < data.length; t++) {\n\t\t\t\t\tif (t % n != 0 && data[t] != 0) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t * n];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// JèÔµÅK»\n\t\tso = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tint w = data.length / n;// Ôu\n\t\t\t\tfor(int t = 0; t < data.length - w; t++) {\n\t\t\t\t\tif (data[t] != data[t + w]) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn data;\n\t}\n\t\n\n\t// C return falseÅ¨µÜ¢\n\tboolean main() throws IOException {\n\n\t\tint[] ir = readIntArray();\n\t\tint N = ir[0];\n\t\t\n\t\tint[][] orgData = new int[N][];\n\t\t\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\t// Pf[^ÇÞ\n\t\t\tString s = reader.readLine();\n\t\t\tint len = s.length() / 2;\n\t\t\tint[] data = new int[len];\n\t\t\tfor(int j = 0; j < len; j++) {\n\t\t\t\tdata[j] = Integer.parseInt(s.substring(j * 2, j * 2 + 2), 16);\n\t\t\t}\n\t\t\t\n\t\t\tdata = saitekika(data);\n\t\t\torgData[i] = data;\n\t\t}\n\n\t\t// Å¬ö{ðßé\n\t\tlong lcm = 1;\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tlcm = lcm(lcm, orgData[i].length);\n\t\t}\n\t\t\n\t\t//Y¬\n\t\tint[] newData = new int[(int)lcm];\n\t\tfor(int t = 0; t < lcm; t++) {\n\t\t\tint rsum = 0;\n\t\t\tfor(int j = 0; j < orgData.length; j++) {\n\t\t\t\tif (t % (lcm / orgData[j].length) == 0)\n\t\t\t\trsum |= orgData[j][(int)(t / (lcm / orgData[j].length))];\n\t\t\t}\n\t\t\tnewData[t] = rsum;\n\t\t}\n\t\t\n\t\t\n\t\tnewData = saitekika(newData);\n\t\t\n\n\t\t// ¶ñ»\n\t\tString s = \"\";\n\t\tif (newData.length > 1024) {\n\t\t\ts = \"Too complex.\";\n\t\t}\n\t\telse {\n\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\ts += String.format(\"%02X\", newData[t]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// ðÌ\\¦\n\t\tSystem.out.printf(\"%s\\n\", s);\n\t\t\n\t\treturn true; // ³íI¹ Ö\n\t}\n\t\n\n//\tprivate final static boolean DEBUG = true;  // debug\n\tprivate final static boolean DEBUG = false; // release\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tif (DEBUG) {\n\t\t\tlog = System.out;\n\t\t\t\n\t\t\t//String inputStr = \"1\\n2\\n0102\\n00000810\\n\";\n//\t\t\tString inputStr = \"1\\n1\\n0200020008000200\\n\";\n//\t\t\tString inputStr = \"1,1,0200020008000200,\"; // 02020802\n//\t\t\tString inputStr = \"1,1,0000,\";\n\t\t\tString inputStr = \"1,1,010200010200010200,\"; // ­è©¦µ3 010200\n\t\t\tinputStr = inputStr.replace(\",\", \"\\n\");\n\t\t\t\n\t\t\treader = new BufferedReader(new StringReader(inputStr)); \n\n\t\t}\n\t\telse {\n\t\t\tlog = new PrintStream(new OutputStream() { public void write(int b) {} } ); // «ÌÄ\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in)); // R\\[©ç\n\t\t}\n\t\t\n\t\tint N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = new Main().main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t\n\t\treader.close();\n\t}\n\n\t\n\tstatic PrintStream log;\n\tstatic BufferedReader reader;\n\t\n\n\t// WüÍæè1sªÌXy[XæØèÌ®lðÇÞ\n\t// EOFÌêÍnullðÔ·\n\tprivate static int[] readIntArray() throws IOException {\n\t\t\n\t\tString s = reader.readLine();\n\t\tif (s == null)\n\t\t\treturn null;\n\t\tString[] sp = s.split(\" \");\n\t\tint[] a = new int[sp.length];\n\t\tfor(int i = 0; i < sp.length; i++) {\n\t\t\ta[i] = Integer.parseInt(sp[i]);\n\t\t}\n\t\treturn a;\n\t}\n\t\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tint[][] encode;\n\tchar[] decode;\n\n\tvoid init() {\n\t\tencode = new int['9']['9'];\n\t\tencode['0']['1'] = 1;\n\t\tencode['0']['2'] = 2;\n\t\tencode['0']['4'] = 3;\n\t\tencode['0']['8'] = 4;\n\t\tencode['1']['0'] = 5;\n\t\tencode['2']['0'] = 6;\n\t\tencode['4']['0'] = 7;\n\t\tencode['8']['0'] = 8;\n\t\tdecode = new char[20];\n\t\tfor (int i = '0'; i <= '9'; i++) {\n\t\t\tdecode[i - '0'] = (char) i;\n\t\t}\n\t\tfor (int i = 'A'; i <= 'F'; i++) {\n\t\t\tdecode[i - 'A' + 10] = (char) i;\n\t\t}\n\t}\n\n\tint gcd(int x, int y) {\n\t\twhile (x != 0 && y != 0) {\n\t\t\tif (x > y) {\n\t\t\t\tx %= y;\n\t\t\t} else {\n\t\t\t\ty %= x;\n\t\t\t}\n\t\t}\n\t\tif (x == 0) {\n\t\t\treturn y;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t}\n\n\tint lcm(int x, int y) {\n\t\treturn x * y / gcd(x, y);\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\t\tinit();\n\n\t\tfor (int T = sc.nextInt() - 1; 0 <= T; T--) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[][] rithm = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tchar[] c = sc.next().toCharArray();\n\t\t\t\tint m = c.length / 2;\n\t\t\t\tint gcd = 0;\n\t\t\t\tint max = 0;\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (encode[c[2 * j]][c[2 * j + 1]] == 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tgcd++;\n\t\t\t\t}\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (encode[c[2 * j]][c[2 * j + 1]] == 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tgcd = gcd(gcd, j);\n\t\t\t\t\tmax = Math.max(max, j);\n\t\t\t\t}\n\t\t\t\tif (gcd != 0) {\n\t\t\t\t\tmax /= gcd;\n\t\t\t\t}\n\t\t\t\trithm[i] = new int[max + 1];\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (encode[c[2 * j]][c[2 * j + 1]] == 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\trithm[i][j / gcd] = encode[c[2 * j]][c[2 * j + 1]];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint lcm = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tlcm = lcm(lcm, rithm[i].length);\n\t\t\t}\n\n\t\t\tif (2048 < lcm) {\n\t\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\t} else {\n\t\t\t\tint[] ans = new int[lcm];\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tint m = rithm[i].length;\n\t\t\t\t\tint d = lcm / m;\n\t\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\t\tif (rithm[i][j] == 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tans[j * d] |= 1 << --rithm[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor (int i = 0; i < lcm; i++) {\n\t\t\t\t\tSystem.out.print(decode[ans[i] / 16]);\n\t\t\t\t\tSystem.out.print(decode[ans[i] % 16]);\n\t\t\t\t}\n\t\t\t\tSystem.out.println();\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import static java.lang.Math.*;\nimport static java.util.Arrays.*;\nimport java.util.*;\nimport java.io.*;\n\npublic class Main {\n\n\tvoid tr(Object... os) {\n\t\tSystem.err.println(deepToString(os));\n\t}\n\tpublic static void main(String[] args) {\n\t\ttry {\n\t\t\tSystem.setIn(new FileInputStream(\"src/aoj2105/input.txt\"));\n\t\t\tSystem.setOut(new PrintStream(new FileOutputStream(\"src/aoj2105/result.txt\")));\n\t\t} catch (FileNotFoundException e) {\n\t\t}\n\t\tnew Main().run();\n\t}\n\n\tlong gcd(long a, long b) {\n\t\treturn b == 0 ? a : gcd(b, a % b);\n\t}\n\n\tScanner sc;\n\tvoid run() {\n\t\tsc = new Scanner(System.in);\n\t\tint t = sc.nextInt();\n\t\tfor (;t-->0;) {\n\t\t\tsolve();\n\t\t}\n\t}\n\n\n\tint[] minimize(char[] p) {\n\t\tint n = p.length / 2;\n\t\tint[] xs = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\txs[i] = (p[i*2] - '0') * 16 + (p[i*2+1]-'0');\n\t\t}\n\n\t\tint i, j;\n\t\tfor (int d = n; d > 0; d--) if (n % d == 0) {\n\t\t\tint[] res = new int[n / d];\n\t\t\tfor (i = 0; i < res.length; i++) {\n\t\t\t\tres[i] = xs[i * d];\n\t\t\t\tfor (j = 1; j < d; j++) {\n\t\t\t\t\tif (0 != xs[i * d + j])\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (j != d)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (i == res.length) return res;\n\t\t}\n\n\t\t// don't reach here.\n\t\tif (true) throw new RuntimeException();\n\t\treturn new int[0];\n\t}\n\n\tvoid solve()\n\t{\n\t\tint n = sc.nextInt();\n\n\t\tint[][] ps = new int[n][];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tchar[] p = sc.next().toCharArray();\n\t\t\tps[i] = minimize(p);\n\t\t}\n\n\t\tlong lcm = ps[0].length;\n\t\tfor (int i = 1; i < n; i++) {\n\t\t\tlcm = lcm * ps[i].length / gcd(lcm, ps[i].length);\n\t\t\tif (lcm > 1024) break;\n\t\t}\n\t\tif (lcm > 1024) {\n\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\treturn;\n\t\t}\n\t\tfor (int t = 0; t < lcm; t++) {\n\t\t\tint cur = 0;\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tif (t % (lcm / ps[i].length) == 0)\n\t\t\t\t\tcur |= ps[i][(int)(t * ps[i].length / lcm)];\n\t\t\tSystem.out.printf(\"%02X\", cur);\n\t\t}\n\t\tSystem.out.println();\n\n\t}\n\n\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n\n// 2011/10/20\n\n//@2105 Y}V[\npublic class Main {\n\n\n\tlong gcm(long a, long b) {\n\t\t\n\t\twhile(b != 0) {\n\t\t\tlong t = a % b;\n\t\t\ta = b;\n\t\t\tb = t;\n\t\t}\n\t\treturn a;\n\t}\n\t\n\tlong lcm(long a, long b) {\n\t\treturn a * b / gcm(a, b);\n\t}\n\t\n\t// föÌ¸ÌzñðÔ·\n\t//@36Èç2,3ÌzñðÔ·B\n\t//  fÈç»Ì©ÌÌêvfzñðÔ·B\n\t//  0 ÆÍnullðÔ·\n\t//  1 ÌÆ«ÍózñðÔ·\n\tlong[] soinsu(long a) {\n\t\tif (a <= 0)\n\t\t\treturn null;\n\t\tList<Long> list = new ArrayList<Long>();\n\t\tif (a % 2 == 0) {\n\t\t\tlist.add(2L);\n\t\t\ta /= 2;\n\t\t\twhile(a % 2 == 0)\n\t\t\t\ta /= 2;\n\t\t}\n\t\tfor(long k = 3;; k += 2) {\n\t\t\tif (k * k > a)\n\t\t\t\tbreak;\n\t\t\tif (a % k == 0) {\n\t\t\t\tlist.add(k);\n\t\t\t\ta /= k;\n\t\t\t\twhile(a % k == 0)\n\t\t\t\t\ta /= k;\n\t\t\t}\n\t\t}\n\t\tif (a != 1) {\n\t\t\tlist.add(a);\n\t\t}\n\t\t\n\t\tlong[] ret = new long[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++) {\n\t\t\tret[i] = list.get(i);\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t// YðÅK»·é\n\tint[] saitekika(int[] data) {\n\t\t// 0YÅK»\n\t\t// n=2 01000200 -> 0102\n\t\tlong[] so = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tfor(int t = 0; t < data.length; t++) {\n\t\t\t\t\tif (t % n != 0 && data[t] != 0) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t * n];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// JèÔµÅK»\n\t\tso = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tint w = data.length / n;// Ôu\n\t\t\t\tfor(int t = 0; t < data.length - w; t++) {\n\t\t\t\t\tif (data[t] != data[t + w]) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn data;\n\t}\n\t\n\n\t// C return falseÅ¨µÜ¢\n\tboolean main() throws IOException {\n\n\t\tint[] ir = readIntArray();\n\t\tint N = ir[0];\n\t\t\n\t\tint[][] orgData = new int[N][];\n\t\t\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\t// Pf[^ÇÞ\n\t\t\tString s = reader.readLine();\n\t\t\tint len = s.length() / 2;\n\t\t\tint[] data = new int[len];\n\t\t\tfor(int j = 0; j < len; j++) {\n\t\t\t\tdata[j] = Integer.parseInt(s.substring(j * 2, j * 2 + 2), 16);\n\t\t\t}\n\t\t\t\n\t\t\tdata = saitekika(data);\n\t\t\torgData[i] = data;\n\t\t}\n\n\t\t// Å¬ö{ðßé\n\t\tlong lcm = 1;\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tlcm = lcm(lcm, orgData[i].length);\n\t\t}\n\t\t\n\t\tint[] newData = null;\n\t\tif (lcm > 1000 * 1000) {\n\t\t\tnewData = null;\n\t\t}\n\t\telse {\t\n\t\t\n\t\t\t//Y¬\n\t\t\tnewData = new int[(int)lcm];\n\t\t\tfor(int t = 0; t < lcm; t++) {\n\t\t\t\tint rsum = 0;\n\t\t\t\tfor(int j = 0; j < orgData.length; j++) {\n\t\t\t\t\tif (t % (lcm / orgData[j].length) == 0)\n\t\t\t\t\trsum |= orgData[j][(int)(t / (lcm / orgData[j].length))];\n\t\t\t\t}\n\t\t\t\tnewData[t] = rsum;\n\t\t\t}\n\t\t\n\t\t\tnewData = saitekika(newData);\n\t\t}\n\n\t\t// ¶ñ»\n\t\tString s = \"\";\n\t\tif (newData == null || newData.length > 1024) {\n\t\t\ts = \"Too complex.\";\n\t\t}\n\t\telse {\n\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\ts += String.format(\"%02X\", newData[t]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// ðÌ\\¦\n\t\tSystem.out.printf(\"%s\\n\", s);\n\t\t\n\t\treturn true; // ³íI¹ Ö\n\t}\n\t\n\n//\tprivate final static boolean DEBUG = true;  // debug\n\tprivate final static boolean DEBUG = false; // release\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tif (DEBUG) {\n\t\t\tlog = System.out;\n\t\t\t\n\t\t\t//String inputStr = \"1\\n2\\n0102\\n00000810\\n\";\n//\t\t\tString inputStr = \"1\\n1\\n0200020008000200\\n\";\n//\t\t\tString inputStr = \"1,1,0200020008000200,\"; // 02020802\n//\t\t\tString inputStr = \"1,1,0000,\";\n\t\t\tString inputStr = \"1,1,010200010200010200,\"; // ­è©¦µ3 010200\n\t\t\tinputStr = inputStr.replace(\",\", \"\\n\");\n\t\t\t\n\t\t\treader = new BufferedReader(new StringReader(inputStr)); \n\n\t\t}\n\t\telse {\n\t\t\tlog = new PrintStream(new OutputStream() { public void write(int b) {} } ); // «ÌÄ\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in)); // R\\[©ç\n\t\t}\n\t\t\n\t\tint N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = new Main().main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t\n\t\treader.close();\n\t}\n\n\t\n\tstatic PrintStream log;\n\tstatic BufferedReader reader;\n\t\n\n\t// WüÍæè1sªÌXy[XæØèÌ®lðÇÞ\n\t// EOFÌêÍnullðÔ·\n\tprivate static int[] readIntArray() throws IOException {\n\t\t\n\t\tString s = reader.readLine();\n\t\tif (s == null)\n\t\t\treturn null;\n\t\tString[] sp = s.split(\" \");\n\t\tint[] a = new int[sp.length];\n\t\tfor(int i = 0; i < sp.length; i++) {\n\t\t\ta[i] = Integer.parseInt(sp[i]);\n\t\t}\n\t\treturn a;\n\t}\n\t\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\n//Rhythm Machine\npublic class Main{\n\n\tclass R implements Comparable<R>{\n\t\tint k, c;\n\t\tpublic R(int k, int c) {\n\t\t\tthis.k = k;\n\t\t\tthis.c = c;\n\t\t}\n\t\tpublic int compareTo(R o) {\n\t\t\treturn k-o.k;\n\t\t}\n\t}\n\t\n\tint gcd(int a, int b){\n\t\treturn b==0?a:gcd(b, a%b);\n\t}\n\tint lcm(int a, int b){\n\t\tint g = gcd(a, b);\n\t\treturn a/g*b;\n\t}\n\t\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tint T = sc.nextInt();\n\t\twhile(T--!=0){\n\t\t\tint n = sc.nextInt();\n\t\t\tint[] N = new int[n];\n\t\t\tList<R>[] l = new List[n];\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tl[i] = new ArrayList<R>();\n\t\t\t\tchar[] s = sc.next().toCharArray();\n\t\t\t\tN[i] = s.length/2;\n\t\t\t\tint g = N[i];\n\t\t\t\tfor(int k=0;k<N[i];k++){\n\t\t\t\t\tint c = (s[k*2]-'0')*16+s[k*2+1]-'0';\n\t\t\t\t\tif(c==0)continue;\n\t\t\t\t\tl[i].add(new R(k, c));\n\t\t\t\t\tif(k!=0)g = gcd(g, k);\n\t\t\t\t}\n\t\t\t\tif(l[i].isEmpty())continue;\n\t\t\t\tN[i]/=g;\n\t\t\t\tfor(R r:l[i])r.k/=g;\n\t\t\t}\n\t\t\tint lcm = 1;\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tif(1024<lcm||l[i].isEmpty())continue;\n\t\t\t\tlcm = lcm(lcm, N[i]);\n\t\t\t}\n\t\t\tif(1024<lcm){\n\t\t\t\tSystem.out.println(\"Too complex.\"); continue;\n\t\t\t}\n\t\t\tList<R> res = new ArrayList<R>();\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tint mul = lcm/N[i];\n\t\t\t\tfor(R r:l[i])res.add(new R(r.k*mul, r.c));\n\t\t\t}\n\t\t\tif(res.isEmpty())System.out.println(\"00\");\n\t\t\telse{\n\t\t\t\tCollections.sort(res);\n\t\t\t\tint[] a = new int[lcm];\n\t\t\t\tfor(R r:res)a[r.k]+=r.c;\n\t\t\t\tStringBuilder sb = new StringBuilder();\n\t\t\t\tfor(int i=0;i<lcm;i++)sb.append(String.format(\"%02X\", a[i]));\n\t\t\t\tSystem.out.println(sb);\n\t\t\t}\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n\n// 2011/10/20\n\n//@2105 Y}V[\npublic class Main {\n\n\n\tlong gcm(long a, long b) {\n\t\t\n\t\twhile(b != 0) {\n\t\t\tlong t = a % b;\n\t\t\ta = b;\n\t\t\tb = t;\n\t\t}\n\t\treturn a;\n\t}\n\t\n\tlong lcm(long a, long b) {\n\t\treturn a * b / gcm(a, b);\n\t}\n\t\n\t// föÌ¸ÌzñðÔ·\n\t//@36Èç2,3ÌzñðÔ·B\n\t//  fÈç»Ì©ÌÌêvfzñðÔ·B\n\t//  0 ÆÍnullðÔ·\n\t//  1 ÌÆ«ÍózñðÔ·\n\tlong[] soinsu(long a) {\n\t\tif (a <= 0)\n\t\t\treturn null;\n\t\tList<Long> list = new ArrayList<Long>();\n\t\tif (a % 2 == 0) {\n\t\t\tlist.add(2L);\n\t\t\ta /= 2;\n\t\t\twhile(a % 2 == 0)\n\t\t\t\ta /= 2;\n\t\t}\n\t\tfor(long k = 3;; k += 2) {\n\t\t\tif (k * k > a)\n\t\t\t\tbreak;\n\t\t\tif (a % k == 0) {\n\t\t\t\tlist.add(k);\n\t\t\t\ta /= k;\n\t\t\t\twhile(a % k == 0)\n\t\t\t\t\ta /= k;\n\t\t\t}\n\t\t}\n\t\tif (a != 1) {\n\t\t\tlist.add(a);\n\t\t}\n\t\t\n\t\tlong[] ret = new long[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++) {\n\t\t\tret[i] = list.get(i);\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t// YðÅK»·é\n\tint[] saitekika(int[] data) {\n\t\t// 0YÅK»\n\t\t// n=2 01000200 -> 0102\n\t\tlong[] so = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tfor(int t = 0; t < data.length; t++) {\n\t\t\t\t\tif (t % n != 0 && data[t] != 0) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t * n];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// JèÔµÅK»\n\t\tso = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (data.length == 1)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tint w = data.length / n;// Ôu\n\t\t\t\tfor(int t = 0; t < data.length - w; t++) {\n\t\t\t\t\tif (data[t] != data[t + w]) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn data;\n\t}\n\t\n\n\t// C return falseÅ¨µÜ¢\n\tboolean main() throws IOException {\n\n\t\tint[] ir = readIntArray();\n\t\tint N = ir[0];\n\t\t\n\t\tint[][] orgData = new int[N][];\n\t\t\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\t// Pf[^ÇÞ\n\t\t\tString s = reader.readLine();\n\t\t\tint len = s.length() / 2;\n\t\t\tint[] data = new int[len];\n\t\t\tfor(int j = 0; j < len; j++) {\n\t\t\t\tdata[j] = Integer.parseInt(s.substring(j * 2, j * 2 + 2), 16);\n\t\t\t}\n\t\t\t\n\t\t\tdata = saitekika(data);\n\t\t\torgData[i] = data;\n\t\t}\n\n\t\t// Å¬ö{ðßé\n\t\tlong lcm = 1;\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tlcm = lcm(lcm, orgData[i].length);\n\t\t}\n\t\t\n\t\tint[] newData = null;\n\t\tif (lcm > 1000 * 10) {\n\t\t\tnewData = null;\n\t\t}\n\t\telse {\t\n\t\t\n\t\t\t//Y¬\n\t\t\tnewData = new int[(int)lcm];\n\t\t\tfor(int t = 0; t < lcm; t++) {\n\t\t\t\tint rsum = 0;\n\t\t\t\tfor(int j = 0; j < orgData.length; j++) {\n\t\t\t\t\tif (t % (lcm / orgData[j].length) == 0)\n\t\t\t\t\trsum |= orgData[j][(int)(t / (lcm / orgData[j].length))];\n\t\t\t\t}\n\t\t\t\tnewData[t] = rsum;\n\t\t\t}\n\t\t\n\t\t\tnewData = saitekika(newData);\n\t\t}\n\n\t\t// ¶ñ»\n\t\tString s = \"\";\n\t\tif (newData == null || newData.length > 1024) {\n\t\t\ts = \"Too complex.\";\n\t\t}\n\t\telse {\n\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\ts += String.format(\"%02X\", newData[t]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// ðÌ\\¦\n\t\tSystem.out.printf(\"%s\\n\", s);\n\t\t\n\t\treturn true; // ³íI¹ Ö\n\t}\n\t\n\n//\tprivate final static boolean DEBUG = true;  // debug\n\tprivate final static boolean DEBUG = false; // release\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tif (DEBUG) {\n\t\t\tlog = System.out;\n\t\t\t\n\t\t\t//String inputStr = \"1\\n2\\n0102\\n00000810\\n\";\n//\t\t\tString inputStr = \"1\\n1\\n0200020008000200\\n\";\n//\t\t\tString inputStr = \"1,1,0200020008000200,\"; // 02020802\n//\t\t\tString inputStr = \"1,1,0000,\";\n\t\t\tString inputStr = \"1,1,010200010200010200,\"; // ­è©¦µ3 010200\n\t\t\tinputStr = inputStr.replace(\",\", \"\\n\");\n\t\t\t\n\t\t\treader = new BufferedReader(new StringReader(inputStr)); \n\n\t\t}\n\t\telse {\n\t\t\tlog = new PrintStream(new OutputStream() { public void write(int b) {} } ); // «ÌÄ\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in)); // R\\[©ç\n\t\t}\n\t\t\n\t\tint N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = new Main().main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t\n\t\treader.close();\n\t}\n\n\t\n\tstatic PrintStream log;\n\tstatic BufferedReader reader;\n\t\n\n\t// WüÍæè1sªÌXy[XæØèÌ®lðÇÞ\n\t// EOFÌêÍnullðÔ·\n\tprivate static int[] readIntArray() throws IOException {\n\t\t\n\t\tString s = reader.readLine();\n\t\tif (s == null)\n\t\t\treturn null;\n\t\tString[] sp = s.split(\" \");\n\t\tint[] a = new int[sp.length];\n\t\tfor(int i = 0; i < sp.length; i++) {\n\t\t\ta[i] = Integer.parseInt(sp[i]);\n\t\t}\n\t\treturn a;\n\t}\n\t\t\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tint t = sc.nextInt();\n\t\tfor(int i=0;i<t;i++) {\n\t\t\tsolve();\n\t\t}\n\t}\n\tstatic void solve() {\n\t\tint n = sc.nextInt();\n\t\tArrayList<Frac> al = new ArrayList<Frac>();\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tString r = sc.next();\n\t\t\tint m = r.length() / 2;\n\t\t\tfor(int j=0;j<m;j++) {\n\t\t\t\tint p = Integer.parseInt(r.substring(j*2, j*2+2), 16);\n\t\t\t\tfor(int k=0;k<8;k++) {\n\t\t\t\t\tif ((p>>k&1) == 1) {\n\t\t\t\t\t\tal.add(new Frac(j,m,k));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint lcm = 1;\n\t\tfor(Frac f:al) {\n\t\t\tlcm = (int) Frac.lcm(lcm, f.b);\n\t\t\tif (lcm > 2048) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (lcm > 2048) {\n\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\treturn;\n\t\t}\n\t\tint[] pattern = new int[lcm];\n\t\tfor(Frac f:al) {\n\t\t\tpattern[(int) (f.a * lcm / f.b)] |= 1 << f.type;\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int p:pattern) {\n\t\t\tString s = Integer.toHexString(p).toUpperCase();\n\t\t\tif (s.length() == 1) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t\tsb.append(s);\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\nclass Frac {\n\tlong a,b;\n\tint type;\n\tpublic Frac(long a,long b,int type) {\n\t\tlong g = gcd(a,b);\n\t\tthis.a = a / g;\n\t\tthis.b = b / g;\n\t\tthis.type = type;\n\t}\n\tpublic static long gcd(long a,long b) {\n\t\twhile(b!=0) {\n\t\t\tlong r = a%b;\n\t\t\ta = b;\n\t\t\tb = r;\n\t\t}\n\t\treturn a;\n\t}\n\tpublic static long lcm(long a,long b) {\n\t\treturn a / gcd(a,b) * b;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Scanner;\n\npublic class Main {\n\tstatic Scanner sc = new Scanner(System.in);\n\tpublic static void main(String[] args) {\n\t\tint t = sc.nextInt();\n\t\tfor(int i=0;i<t;i++) {\n\t\t\tsolve();\n\t\t}\n\t}\n\tstatic void solve() {\n\t\tint n = sc.nextInt();\n\t\tArrayList<Frac> al = new ArrayList<Frac>();\n\t\tfor(int i=0;i<n;i++) {\n\t\t\tString r = sc.next();\n\t\t\tint m = r.length() / 2;\n\t\t\tfor(int j=0;j<m;j++) {\n\t\t\t\tint p = Integer.parseInt(r.substring(j*2, j*2+2), 16);\n\t\t\t\tfor(int k=0;k<8;k++) {\n\t\t\t\t\tif ((p>>k&1) == 1) {\n\t\t\t\t\t\tal.add(new Frac(j,m,k));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tint lcm = 1;\n\t\tfor(Frac f:al) {\n\t\t\tlcm = (int) Frac.lcm(lcm, f.b);\n\t\t\tif (lcm > 1024) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (lcm > 1024) {\n\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\treturn;\n\t\t}\n\t\tSystem.out.println(lcm);\n\t\tint[] pattern = new int[lcm];\n\t\tfor(Frac f:al) {\n\t\t\tpattern[(int) (f.a * lcm / f.b)] |= 1 << f.type;\n\t\t}\n\t\tStringBuilder sb = new StringBuilder();\n\t\tfor(int p:pattern) {\n\t\t\tString s = Integer.toHexString(p).toUpperCase();\n\t\t\tif (s.length() == 1) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t\tsb.append(s);\n\t\t}\n\t\tSystem.out.println(sb.toString());\n\t}\n}\nclass Frac {\n\tlong a,b;\n\tint type;\n\tpublic Frac(long a,long b,int type) {\n\t\tlong g = gcd(a,b);\n\t\tthis.a = a / g;\n\t\tthis.b = b / g;\n\t\tthis.type = type;\n\t}\n\tpublic static long gcd(long a,long b) {\n\t\twhile(b!=0) {\n\t\t\tlong r = a%b;\n\t\t\ta = b;\n\t\t\tb = r;\n\t\t}\n\t\treturn a;\n\t}\n\tpublic static long lcm(long a,long b) {\n\t\treturn a / gcd(a,b) * b;\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tint[][] encode;\n\tchar[] decode;\n\n\tvoid init() {\n\t\tencode = new int['9']['9'];\n\t\tencode['0']['1'] = 1;\n\t\tencode['0']['2'] = 2;\n\t\tencode['0']['4'] = 3;\n\t\tencode['0']['8'] = 4;\n\t\tencode['1']['0'] = 5;\n\t\tencode['2']['0'] = 6;\n\t\tencode['4']['0'] = 7;\n\t\tencode['8']['0'] = 8;\n\t\tdecode = new char[20];\n\t\tfor (int i = '0'; i <= '9'; i++) {\n\t\t\tdecode[i - '0'] = (char) i;\n\t\t}\n\t\tfor (int i = 'A'; i <= 'F'; i++) {\n\t\t\tdecode[i - 'A' + 10] = (char) i;\n\t\t}\n\t}\n\n\tint gcd(int x, int y) {\n\t\twhile (x != 0 && y != 0) {\n\t\t\tif (x > y) {\n\t\t\t\tx %= y;\n\t\t\t} else {\n\t\t\t\ty %= x;\n\t\t\t}\n\t\t}\n\t\tif (x == 0) {\n\t\t\treturn y;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t}\n\n\tint lcm(int x, int y) {\n\t\treturn x * y / gcd(x, y);\n\t}\n\n\tint[] make(char[] c) {\n\t\tint n = c.length;\n\t\tint gcd = 0;\n\t\tint len = 0;\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgcd++;\n\t\t}\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgcd = gcd(gcd, i / 2);\n\t\t}\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlen = Math.max(len, i / 2 / gcd);\n\t\t}\n\t\tint[] res = new int[len + 1];\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint k = i / 2 / gcd;\n\t\t\tres[k] = encode[c[i]][c[i + 1]];\n\t\t}\n\t\treturn res;\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\t\tinit();\n\n\t\tStringBuilder s = new StringBuilder();\n\t\tfor (int T = sc.nextInt() - 1; 0 <= T; T--) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[][] rithm = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\trithm[i] = make(sc.next().toCharArray());\n\t\t\t}\n\n\t\t\tint lcm = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tlcm = lcm(lcm, rithm[i].length);\n\t\t\t}\n\n\t\t\tif (1024 < lcm) {\n\t\t\t\ts.append(\"Too complex.\\r\\n\");\n\t\t\t} else {\n\t\t\t\tint[] ans = new int[lcm];\n\t\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\t\tint m = rithm[i].length;\n\t\t\t\t\tint d = lcm / m;\n\t\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\t\tif (rithm[i][j] == 0) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tans[j * d] |= 1 << --rithm[i][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (int i = 0; i < lcm; i++) {\n\t\t\t\t\ts.append(decode[ans[i] / 16]);\n\t\t\t\t\ts.append(decode[ans[i] % 16]);\n\t\t\t\t}\n\t\t\t\ts.append(\"\\r\\n\");\n\t\t\t}\n\t\t}\n\t\tSystem.out.print(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.IOException;\nimport java.util.InputMismatchException;\n\npublic class Main {\n\tint[][] encode;\n\tchar[] decode;\n\n\tvoid init() {\n\t\tencode = new int['9']['9'];\n\t\tencode['0']['1'] = 1;\n\t\tencode['0']['2'] = 2;\n\t\tencode['0']['4'] = 3;\n\t\tencode['0']['8'] = 4;\n\t\tencode['1']['0'] = 5;\n\t\tencode['2']['0'] = 6;\n\t\tencode['4']['0'] = 7;\n\t\tencode['8']['0'] = 8;\n\t\tdecode = new char[20];\n\t\tfor (int i = '0'; i <= '9'; i++) {\n\t\t\tdecode[i - '0'] = (char) i;\n\t\t}\n\t\tfor (int i = 'A'; i <= 'F'; i++) {\n\t\t\tdecode[i - 'A' + 10] = (char) i;\n\t\t}\n\t}\n\n\tint gcd(int x, int y) {\n\t\twhile (x != 0 && y != 0) {\n\t\t\tif (x > y) {\n\t\t\t\tx %= y;\n\t\t\t} else {\n\t\t\t\ty %= x;\n\t\t\t}\n\t\t}\n\t\tif (x == 0) {\n\t\t\treturn y;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t}\n\n\tint lcm(int x, int y) {\n\t\treturn x * y / gcd(x, y);\n\t}\n\n\tint[] make(char[] c) {\n\t\tint n = c.length;\n\t\tint gcd = 0;\n\t\tint len = 0;\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgcd++;\n\t\t}\n\t\tif (gcd == 0) {\n\t\t\treturn new int[] { 0 };\n\t\t}\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgcd = gcd(gcd, i / 2);\n\t\t}\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tlen = Math.max(len, i / 2 / gcd);\n\t\t}\n\t\t// int[] res = new int[len + 1];\n\t\tint[] res = new int[n / 2 / gcd];\n\t\tfor (int i = 0; i < n; i += 2) {\n\t\t\tif (encode[c[i]][c[i + 1]] == 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tint k = i / 2 / gcd;\n\t\t\tres[k] = encode[c[i]][c[i + 1]];\n\t\t}\n\t\treturn res;\n\t}\n\n\tvoid run() {\n\t\tMyScanner sc = new MyScanner();\n\t\tinit();\n\n\t\t// StringBuilder s = new StringBuilder();\n\t\tL: for (int T = sc.nextInt() - 1; 0 <= T; T--) {\n\t\t\tint n = sc.nextInt();\n\t\t\tint[][] rithm = new int[n][];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\trithm[i] = make(sc.next().toCharArray());\n\t\t\t\t// System.out.println(rithm[i].length + \" \" +\n\t\t\t\t// Arrays.toString(rithm[i]));\n\t\t\t}\n\n\t\t\tint lcm = 1;\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tlcm = lcm(lcm, rithm[i].length);\n\t\t\t\tif (1024 < lcm) {\n\t\t\t\t\t// s.append(\"Too complex.\\r\\n\");\n\t\t\t\t\tSystem.out.println(\"Too complex.\");\n\t\t\t\t\tcontinue L;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tint[] ans = new int[lcm];\n\t\t\tfor (int i = 0; i < n; i++) {\n\t\t\t\tint m = rithm[i].length;\n\t\t\t\tint d = lcm / m;\n\t\t\t\tfor (int j = 0; j < m; j++) {\n\t\t\t\t\tif (rithm[i][j] == 0) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tans[j * d] |= 1 << --rithm[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (int i = 0; i < lcm; i++) {\n\t\t\t\t// s.append(decode[ans[i] / 16]);\n\t\t\t\t// s.append(decode[ans[i] % 16]);\n\t\t\t\tSystem.out.print(decode[ans[i] / 16]);\n\t\t\t\tSystem.out.print(decode[ans[i] % 16]);\n\t\t\t}\n\t\t\t// s.append(\"\\r\\n\");\n\t\t\tSystem.out.println();\n\t\t}\n\t\t// System.out.print(s);\n\t}\n\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n\n\tpublic void mapDebug(int[][] a) {\n\t\tSystem.out.println(\"--------map display---------\");\n\t\tfor (int i = 0; i < a.length; i++) {\n\t\t\tfor (int j = 0; j < a[i].length; j++) {\n\t\t\t\tSystem.out.printf(\"%3d \", a[i][j]);\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t\tSystem.out.println(\"----------------------------\" + '\\n');\n\t}\n\n\tclass MyScanner {\n\t\tint read() {\n\t\t\ttry {\n\t\t\t\treturn System.in.read();\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new InputMismatchException();\n\t\t\t}\n\t\t}\n\n\t\tboolean isSpaceChar(int c) {\n\t\t\treturn c == ' ' || c == '\\n' || c == '\\r' || c == '\\t' || c == -1;\n\t\t}\n\n\t\tboolean isEndline(int c) {\n\t\t\treturn c == '\\n' || c == '\\r' || c == -1;\n\t\t}\n\n\t\tint nextInt() {\n\t\t\treturn Integer.parseInt(next());\n\t\t}\n\n\t\tint[] nextIntArray(int n) {\n\t\t\tint[] array = new int[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextInt();\n\t\t\treturn array;\n\t\t}\n\n\t\tlong nextLong() {\n\t\t\treturn Long.parseLong(next());\n\t\t}\n\n\t\tlong[] nextLongArray(int n) {\n\t\t\tlong[] array = new long[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextLong();\n\t\t\treturn array;\n\t\t}\n\n\t\tdouble nextDouble() {\n\t\t\treturn Double.parseDouble(next());\n\t\t}\n\n\t\tdouble[] nextDoubleArray(int n) {\n\t\t\tdouble[] array = new double[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = nextDouble();\n\t\t\treturn array;\n\t\t}\n\n\t\tString next() {\n\t\t\tint c = read();\n\t\t\twhile (isSpaceChar(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isSpaceChar(c));\n\t\t\treturn res.toString();\n\t\t}\n\n\t\tString[] nextStringArray(int n) {\n\t\t\tString[] array = new String[n];\n\t\t\tfor (int i = 0; i < n; i++)\n\t\t\t\tarray[i] = next();\n\n\t\t\treturn array;\n\t\t}\n\n\t\tString nextLine() {\n\t\t\tint c = read();\n\t\t\twhile (isEndline(c))\n\t\t\t\tc = read();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tdo {\n\t\t\t\tres.appendCodePoint(c);\n\t\t\t\tc = read();\n\t\t\t} while (!isEndline(c));\n\t\t\treturn res.toString();\n\t\t}\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "\nimport java.io.*;\nimport java.util.*;\n\n\n// 2011/10/20\n\n//@2105 Y}V[\npublic class Main {\n\n\n\tlong gcm(long a, long b) {\n\t\t\n\t\twhile(b != 0) {\n\t\t\tlong t = a % b;\n\t\t\ta = b;\n\t\t\tb = t;\n\t\t}\n\t\treturn a;\n\t}\n\t\n\tlong lcm(long a, long b) {\n\t\treturn a * b / gcm(a, b);\n\t}\n\t\n\t// föÌ¸ÌzñðÔ·\n\t//@36Èç2,3ÌzñðÔ·B\n\t//  fÈç»Ì©ÌÌêvfzñðÔ·B\n\t//  0 ÆÍnullðÔ·\n\t//  1 ÌÆ«ÍózñðÔ·\n\tlong[] soinsu(long a) {\n\t\tif (a <= 0)\n\t\t\treturn null;\n\t\tList<Long> list = new ArrayList<Long>();\n\t\tif (a % 2 == 0) {\n\t\t\tlist.add(2L);\n\t\t\ta /= 2;\n\t\t\twhile(a % 2 == 0)\n\t\t\t\ta /= 2;\n\t\t}\n\t\tfor(long k = 3;; k += 2) {\n\t\t\tif (k * k > a)\n\t\t\t\tbreak;\n\t\t\tif (a % k == 0) {\n\t\t\t\tlist.add(k);\n\t\t\t\ta /= k;\n\t\t\t\twhile(a % k == 0)\n\t\t\t\t\ta /= k;\n\t\t\t}\n\t\t}\n\t\tif (a != 1) {\n\t\t\tlist.add(a);\n\t\t}\n\t\t\n\t\tlong[] ret = new long[list.size()];\n\t\tfor(int i = 0; i < list.size(); i++) {\n\t\t\tret[i] = list.get(i);\n\t\t}\n\t\treturn ret;\n\t}\n\t\n\t// YðÅK»·é\n\tint[] saitekika(int[] data) {\n\t\t// 0YÅK»\n\t\t// n=2 01000200 -> 0102\n\t\tlong[] so = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (/*data.length == 1 &&*/ data.length % n != 0)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tfor(int t = 0; t < data.length; t++) {\n\t\t\t\t\tif (t % n != 0 && data[t] != 0) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t * n];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// JèÔµÅK»\n\t\tso = soinsu(data.length);\n\t\tfor(long nn: so) {\n\t\t\tint n = (int)nn;\n\t\t\tfor(;;) {\n\t\t\t\tif (/*data.length == 1 &&*/ data.length % n != 0)\n\t\t\t\t\tbreak;\n\t\t\t\tboolean dame = false;\n\t\t\t\tint w = data.length / n;// Ôu\n\t\t\t\tfor(int t = 0; t < data.length - w; t++) {\n\t\t\t\t\tif (data[t] != data[t + w]) {\n\t\t\t\t\t\tdame = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (dame)\n\t\t\t\t\tbreak;\n\t\t\t\tint[] newData = new int[data.length / n];\n\t\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\t\tnewData[t] = data[t];\n\t\t\t\t}\n\t\t\t\tdata = newData;\n\t\t\t}\n\t\t}\n\t\t\n\t\t\n\t\treturn data;\n\t}\n\t\n\n\t// C return falseÅ¨µÜ¢\n\tboolean main() throws IOException {\n\n\t\tint[] ir = readIntArray();\n\t\tint N = ir[0];\n\t\t\n\t\tint[][] orgData = new int[N][];\n\t\t\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\t// Pf[^ÇÞ\n\t\t\tString s = reader.readLine();\n\t\t\tint len = s.length() / 2;\n\t\t\tint[] data = new int[len];\n\t\t\tfor(int j = 0; j < len; j++) {\n\t\t\t\tdata[j] = Integer.parseInt(s.substring(j * 2, j * 2 + 2), 16);\n\t\t\t}\n\t\t\t\n\t\t\tdata = saitekika(data);\n\t\t\torgData[i] = data;\n\t\t}\n\n\t\t// Å¬ö{ðßé\n\t\tlong lcm = 1;\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tlcm = lcm(lcm, orgData[i].length);\n\t\t}\n\t\t\n\t\tint[] newData = null;\n\t\tif (lcm > 1000 * 1) {  // 1000ÉµÄàTime out·é\n\t\t\tnewData = null;\n\t\t}\n\t\telse {\t\n\t\t\n\t\t\t//Y¬\n\t\t\tnewData = new int[(int)lcm];\n\t\t\tfor(int t = 0; t < lcm; t++) {\n\t\t\t\tint rsum = 0;\n\t\t\t\tfor(int j = 0; j < orgData.length; j++) {\n\t\t\t\t\tif (t % (lcm / orgData[j].length) == 0)\n\t\t\t\t\trsum |= orgData[j][(int)(t / (lcm / orgData[j].length))];\n\t\t\t\t}\n\t\t\t\tnewData[t] = rsum;\n\t\t\t}\n\t\t\n\t\t\tnewData = saitekika(newData);\n\t\t}\n\n\t\t// ¶ñ»\n\t\tString s = \"\";\n\t\tif (newData == null || newData.length > 1024) {\n\t\t\ts = \"Too complex.\";\n\t\t}\n\t\telse {\n\t\t\tfor(int t = 0; t < newData.length; t++) {\n\t\t\t\ts += String.format(\"%02X\", newData[t]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// ðÌ\\¦\n\t\tSystem.out.printf(\"%s\\n\", s);\n\t\t\n\t\treturn true; // ³íI¹ Ö\n\t}\n\t\n\n//\tprivate final static boolean DEBUG = true;  // debug\n\tprivate final static boolean DEBUG = false; // release\n\n\tpublic static void main(String[] args) throws IOException {\n\n\t\tif (DEBUG) {\n\t\t\tlog = System.out;\n\t\t\t\n\t\t\t//String inputStr = \"1\\n2\\n0102\\n00000810\\n\";\n//\t\t\tString inputStr = \"1\\n1\\n0200020008000200\\n\";\n//\t\t\tString inputStr = \"1,1,0200020008000200,\"; // 02020802\n//\t\t\tString inputStr = \"1,1,0000,\";\n\t\t\tString inputStr = \"1,1,010200010200010200,\"; // ­è©¦µ3 010200\n\t\t\tinputStr = inputStr.replace(\",\", \"\\n\");\n\t\t\t\n\t\t\treader = new BufferedReader(new StringReader(inputStr)); \n\n\t\t}\n\t\telse {\n\t\t\tlog = new PrintStream(new OutputStream() { public void write(int b) {} } ); // «ÌÄ\n\t\t\treader = new BufferedReader(new InputStreamReader(System.in)); // R\\[©ç\n\t\t}\n\t\t\n\t\tint N = readIntArray()[0];\n\n\t\tfor(int i = 0; i < N; i++) {\n\t\t\tboolean b = new Main().main();\n\t\t\tif (!b)\n\t\t\t\tbreak;\n\t\t}\t\t\n\t\t\n\t\treader.close();\n\t}\n\n\t\n\tstatic PrintStream log;\n\tstatic BufferedReader reader;\n\t\n\n\t// WüÍæè1sªÌXy[XæØèÌ®lðÇÞ\n\t// EOFÌêÍnullðÔ·\n\tprivate static int[] readIntArray() throws IOException {\n\t\t\n\t\tString s = reader.readLine();\n\t\tif (s == null)\n\t\t\treturn null;\n\t\tString[] sp = s.split(\" \");\n\t\tint[] a = new int[sp.length];\n\t\tfor(int i = 0; i < sp.length; i++) {\n\t\t\ta[i] = Integer.parseInt(sp[i]);\n\t\t}\n\t\treturn a;\n\t}\n\t\t\n}"
  },
  {
    "language": "Ruby",
    "code": "class F\nattr_reader:n,:d\ndef initialize(n,d)@n,@d=n/(g=n.gcd d),d/g\nend\ndef eql?(f)@n==f.n&&@d==f.d\nend\ndef hash\n[@n,@d].hash\nend\nend\ngets.to_i.times{h=Hash.new{0}\ngets.to_i.times.map{gets}.map{|p|p.scan(/../).each_with_index{|s,i|h[F.new(i,p.size/2)]+=s.hex if\"00\"!=s}}\nd=h.keys.map(&:d).inject(1){|r,l|r.lcm(l)}\nputs d>1024?\"Too complex.\":d.times.map{|i|(f=h[F.new(i,d)])?format(\"%02X\",f):\"00\"}*\"\"}"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times{h=Hash.new{0}\ngets.to_i.times.map{gets}.map{|p|p.scan(/../).each_with_index{|s,i|h[Rational(i,p.size/2)]+=s.hex if\"00\"!=s}}\nd=h.keys.map(&:denominator).inject(1){|r,l|r.lcm l}\nputs d>1024?\"Too complex.\":d.times.map{|i|(f=h[Rational(i,d)])?format(\"%02X\",f):\"00\"}*\"\"}"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times{h=Hash.new{0}\ngets.to_i.times.map{gets}.map{|p|p.scan(/../).each_with_index{|s,i|h[Rational(i,p.size/2)]+=s.hex if\"00\"!=s}}\nd=h.keys.map(&:denominator).inject(1){|r,l|r.lcm(l)}\nputs d>1024?\"Too complex.\":d.times.map{|i|(f=h[Rational(i,d)])?format(\"%02X\",f):\"00\"}*\"\"}"
  },
  {
    "language": "Ruby",
    "code": "gets.to_i.times{h=Hash.new{0}\ngets.to_i.times.map{gets}.map{|p|p.scan(/../).each_with_index{|s,i|h[Rational(i,p.size/2)]+=s.hex if\"00\"!=s}}\nputs (d=h.keys.map(&:denominator).inject(1){|r,l|r.lcm l})>1024?\"Too complex.\":d.times.map{|i|(f=h[Rational(i,d)])?\"%02X\"%f :\"00\"}*\"\"}"
  },
  {
    "language": "Python",
    "code": "import sys\n\nAlphabet=[chr(i) for i in range(65,65+15)]\n\ndef gcd(a,b):\n    if a>b:\n        p=a\n        q=b\n    else:\n        p=b\n        q=a\n\n    if q==0:\n        return p\n    else:\n        return gcd(q,p%q)\n\ndef lcm(a,b):\n    return int(a*b/gcd(a,b))\n\ndef lcm_list(x):\n    if len(x)==1:\n        return x[0]\n    else:\n        result=lcm(x[0],x[1])\n        for i in range(2,len(x)):\n            result=lcm(result,x[i])\n        return result\n\n\n\ndef to_letter(a):\n    x=int(a/16)\n    y=a-x*16\n    if x>9:\n        x=Alphabet[x-10]\n    if y>9:\n        y=Alphabet[y-10]\n    return str(x)+str(y)\n        \n\n\ndef split_str(s,n):\n    length = len(s)\n    return [s[i:i+n] for i in range(0, length, n)]\n\ndef shorten(a):\n    flag=0\n    x=0\n    for i in range(2,len(a)+1):\n        if len(a)%i==0:\n            for j in range(len(a)):\n                if j%i!=0 and a[j]!=0:\n                    flag+=1\n            if flag==0:\n                x=i\n                break\n        flag=0\n    \n    if x!=0:\n        return(shorten(a[::x]))\n    else:\n        return(a)\n\n\n\nt=int(input())\nfor rotate in range(t):\n    N=int(input())\n    R=[]\n    R_length=[]\n    for i in range(N):\n        R_input=input()\n        R.append([int(j,16) for j in split_str(R_input,2)])\n        R_length.append(int(len(R_input)/2))\n    answer_length=lcm_list(R_length)\n    answer=[0 for i in range(answer_length)]\n    for i in range(N):\n        marker=int(answer_length/R_length[i])\n        for j in range(R_length[i]):\n            answer[j*marker]+=R[i][j]\n\n    answer=shorten(answer)\n\n    if len(answer)>1024:\n        print(\"Too complex.\")\n    else:\n        for i in answer:\n            sys.stdout.write(to_letter(i))\n        print(\"\")\n        "
  },
  {
    "language": "Python",
    "code": "import sys\n\nAlphabet=[chr(i) for i in range(65,65+15)]\n\ndef gcd(a,b):\n    if a>b:\n        p=a\n        q=b\n    else:\n        p=b\n        q=a\n\n    if q==0:\n        return p\n    else:\n        return gcd(q,p%q)\n\ndef lcm(a,b):\n    return int(a*b/gcd(a,b))\n\ndef lcm_list(x):\n    if len(x)==1:\n        return x[0]\n    else:\n        result=lcm(x[0],x[1])\n        for i in range(2,len(x)):\n            result=lcm(result,x[i])\n        return result\n\n\n\ndef to_letter(a):\n    x=int(a/16)\n    y=a-x*16\n    if x>9:\n        x=Alphabet[x-10]\n    if y>9:\n        y=Alphabet[y-10]\n    return str(x)+str(y)\n        \n\n\ndef split_str(s,n):\n    length = len(s)\n    return [s[i:i+n] for i in range(0, length, n)]\n\ndef shorten(a):\n    flag=0\n    x=0\n    for i in range(2,len(a)+1):\n        if len(a)%i==0:\n            for j in range(len(a)):\n                if j%i!=0 and a[j]!=0:\n                    flag+=1\n            if flag==0:\n                x=i\n                break\n        flag=0\n    \n    if x!=0:\n        return(shorten(a[::x]))\n    else:\n        return(a)\n\n\n\nt=int(input())\nfor rotate in range(t):\n    N=int(input())\n    R=[]\n    R_length=[]\n    for i in range(N):\n        R_input=input()\n        R.append([int(j,16) for j in split_str(R_input,2)])\n        R=shorten(R)\n        R_length.append(int(len(R_input)/2))\n    answer_length=lcm_list(R_length)\n    answer=[0 for i in range(answer_length)]\n    for i in range(N):\n        marker=int(answer_length/R_length[i])\n        for j in range(R_length[i]):\n            answer[j*marker]+=R[i][j]\n\n    answer=shorten(answer)\n\n    if len(answer)>1024:\n        print(\"Too complex.\")\n    else:\n        print(\"\".join([to_letter(i) for i in answer]))"
  },
  {
    "language": "Python",
    "code": "def shorten(s):\n    f = 1\n    while f:\n        l = len(s) // 2\n        while f:\n            f = 0\n            if l % 2 == 0:\n                for i in range(l):\n                    if s[2 * i:2 * i + 2] != \"00\" and i % 2:break\n                else:\n                    f = 1\n                    t = \"\"\n                    for i in range(0, l, 2):t += s[2 * i:2 * i + 2]\n                    s = t\n                    l = len(s) // 2\n        for k in range(3, l + 1, 2):\n            f = 1\n            while f:\n                f = 0\n                if l % k == 0:\n                    for i in range(l):\n                        if s[2 * i:2 * i + 2] != \"00\" and i % k:break\n                    else:\n                        f = 1\n                        t = \"\"\n                        for i in range(0, l, k):t += s[2 * i:2 * i + 2]\n                        s = t\n                        l = len(s) // 2\n    return s\n\ndef lcm(a, b):\n    p, q = max(a, b), min(a, b)\n    while 1:\n        if p % q:p, q = q, p % q\n        else: return a * b // q\n\nfor _ in range(int(input())):\n    n = int(input())\n    r = [shorten(input()) for _ in range(n)]\n    ls = [len(i) // 2 for i in r]\n    l = ls[0]\n    for i in range(1, n):l = lcm(l, ls[i])\n    if l > 1024:print(\"Too complex.\");continue\n    a = [0] * l\n    for i in range(n):\n        d = l // ls[i]\n        for j in range(ls[i]):a[d * j] += int(r[i][2 * j: 2 * j + 2], 16)\n    s = \"\"\n    for i in a:s += format(i,\"02X\")\n    print(s)\n"
  },
  {
    "language": "Python",
    "code": "Alphabet=[chr(i) for i in range(65,65+15)]\n\ndef gcd(a,b):\n    if a>b:\n        p=a\n        q=b\n    else:\n        p=b\n        q=a\n\n    if q==0:\n        return p\n    else:\n        return gcd(q,p%q)\n\ndef lcm(a,b):\n    return int(a*b/gcd(a,b))\n\ndef lcm_list(x):\n    if len(x)==1:\n        return x[0]\n    else:\n        result=lcm(x[0],x[1])\n        for i in range(2,len(x)):\n            result=lcm(result,x[i])\n        return result\n\n\n\ndef to_letter(a):\n    x=int(a/16)\n    y=a-x*16\n    if x>9:\n        x=Alphabet[x-10]\n    if y>9:\n        y=Alphabet[y-10]\n    return str(x)+str(y)\n        \n\n\ndef split_str(s,n):\n    length = len(s)\n    return [s[i:i+n] for i in range(0, length, n)]\n\ndef shorten(a):\n    flag=0\n    x=0\n    for i in range(2,len(a)+1):\n        if len(a)%i==0:\n            for j in range(len(a)):\n                if j%i!=0 and a[j]!=0:\n                    flag+=1\n            if flag==0:\n                x=i\n                break\n        flag=0\n    \n    if x!=0:\n        return(shorten(a[::x]))\n    else:\n        return(a)\n\n\n\nt=int(input())\nfor rotate in range(t):\n    N=int(input())\n    R=[]\n    R_length=[]\n    for i in range(N):\n        R_input=input()\n        R.append([int(j,16) for j in split_str(R_input,2)])\n        R_length.append(int(len(R_input)/2))\n    answer_length=lcm_list(R_length)\n    answer=[0 for i in range(answer_length)]\n    for i in range(N):\n        marker=int(answer_length/R_length[i])\n        for j in range(R_length[i]):\n            answer[j*marker]+=R[i][j]\n\n    answer=shorten(answer)\n\n    if len(answer)>1024:\n        print(\"Too complex.\")\n    else:\n        print(\"\".join([to_letter(i) for i in answer]))\n        "
  },
  {
    "language": "Python",
    "code": "def shorten(s):\n    f = 1\n    while f:\n        l = len(s) // 2\n        while f:\n            f = 0\n            if l % 2 == 0:\n                for i in range(l):\n                    if s[2 * i:2 * i + 2] != \"00\" and i % 2:break\n                else:\n                    f = 1\n                    t = \"\"\n                    for i in range(0, l, 2):t += s[2 * i:2 * i + 2]\n                    s = t\n                    l = len(s) // 2\n        for k in range(3, l + 1, 2):\n            f = 1\n            while f:\n                f = 0\n                if l % k == 0:\n                    for i in range(l):\n                        if s[2 * i:2 * i + 2] != \"00\" and i % k:break\n                    else:\n                        f = 1\n                        t = \"\"\n                        for i in range(0, l, k):t += s[k * i:k * i + 2]\n                        s = t\n                        l = len(s) // 2\n    return s\n\ndef lcm(a, b):\n    p, q = max(a, b), min(a, b)\n    while 1:\n        if p % q:p, q = q, p % q\n        else: return a * b // q\n\nfor _ in range(int(input())):\n    n = int(input())\n    r = [shorten(input()) for _ in range(n)]\n    ls = [len(i) // 2 for i in r]\n    l = ls[0]\n    for i in range(1, len(r)):l = lcm(l, ls[i])\n    if l > 1024:print(\"Too complex.\");continue\n    a = [0] * l\n    for i in range(n):\n        d = l // ls[i]\n        for j in range(ls[i]):a[d * j] += int(r[i][2 * j: 2 * j + 2], 16)\n    s = \"\"\n    for i in a:s += format(i,\"02X\")\n    print(s)\n"
  }
]