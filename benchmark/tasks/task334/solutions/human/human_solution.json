[
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define N 2005\nusing namespace std;\nstring s,t,ans;\nint dp[N][N];\n\nvoid dfs(int y,int x){\n  if(!y||!x)return;\n  if(dp[y][x]-dp[y-1][x-1]==1){\n    ans+=s[y-1];\n    dfs(y-1,x-1);\n    return;\n  }\n  if(dp[y-1][x]==dp[y][x])dfs(y-1,x);\n  else dfs(y,x-1);\n}\n\nint main(){\n  while(cin>>s){\n    t=s;\n    reverse(t.begin(),t.end());\n    memset(dp,0,sizeof(dp));\n    int n=s.size(),m=t.size();\n    for(int i=0;i<n;i++){\n      for(int j=0;j<m;j++){\n\tif(s[i]==t[j])dp[i+1][j+1]=dp[i][j]+1;\n\telse dp[i+1][j+1]=max(dp[i][j+1],dp[i+1][j]);\n      }\n    }\n    ans=\"\";\n    dfs(n,m);\n    reverse(ans.begin(),ans.end());\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nstring ss[2][N+1];\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  ss[0][0] = \"\";\n  memset(c,0,sizeof(c));\n  for(int i=0;i<N+1;i++) ss[0][i]=ss[1][i]=\"\";\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1, ss[i%2][j] = ss[(i-1)%2][j-1] + X[i];\n      else {\n\tif(c[i-1][j] >= c[i][j-1]) c[i][j]=c[i-1][j], ss[i%2][j] = ss[(i-1)%2][j];\n\telse c[i][j] = c[i][j-1], ss[i%2][j] = ss[i%2][j-1];\n      }\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret=ss[m%2][n],ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  //assert(ret==ret2);\n  assert((int)ret.size()==maxl);\n  return ss[m%2][n];\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-8;\nconst int inf=1e8;\nconst int LMAX=2010;\nint dp[LMAX+1][LMAX+1],from[LMAX+1][LMAX+1];\nstring LCS(string &a,string &b){\n\tint m=a.size(),n=b.size();\n\trep(i,m+1)dp[i][0]=0,from[i][0]=-1;\n\trep(i,n+1)dp[0][i]=0,from[0][i]=-1;\n\trep(i,m)rep(j,n){\n\t\tif(a[i]==b[j]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}else{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}else{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\tint idx=dp[m][n];\n\tstring out(idx,'!');\n\tfor(int i=m,j=n;~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0:i--;break;\n\t\t\tcase 1:j--;break;\n\t\t\tcase 2:i--;j--;idx--;out[idx]=a[i];break;\n\t\t}\n\t}\n\treturn out;\n}\nint main(){\n\tstring s;\n\twhile(cin>>s){\n\t\tstring t=s;\n\t\treverse(all(t));\n\t\tcout<<LCS(s,t)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n#include <complex>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n \nstatic const int tx[] = {0,1,0,-1};\nstatic const int ty[] = {-1,0,1,0};\n \nstatic const double EPS = 1e-10;\n\nint dp[2001][2001];\nP prev[2001][2001];\n\nint main(){\n  string str;\n  memset(dp,0,sizeof(dp));\n  while(cin >> str){\n    string r_str = str;\n    reverse(r_str.begin(),r_str.end());\n    for(int i = 0; i < str.size(); i++){\n      for(int j = 0; j< r_str.size(); j++){\n        if(str[i] == r_str[j]){\n          dp[i+1][j+1] = dp[i][j] + 1;\n          prev[i+1][j+1] = P(i,j);\n        }\n        else if(dp[i][j+1] < dp[i+1][j]){\n          dp[i+1][j+1] = dp[i+1][j];\n          prev[i+1][j+1] = P(i+1,j);\n        }\n        else {\n          dp[i+1][j+1] = dp[i][j+1];\n          prev[i+1][j+1] = P(i,j+1);\n        }\n      }\n    }\n\n    string res = \"\";\n    queue<P> que;\n    que.push(P(str.size(),r_str.size()));\n    while(!que.empty()){\n      P p = que.front();\n      que.pop();\n      int i = p.first;\n      int j = p.second;\n      P next = prev[i][j];\n      if(str[i] == r_str[j]){\n        res.push_back(str[i]);\n      }\n      if(i == 0 || j == 0) break;\n      que.push(next);\n    }\n    cout << res << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nstring s,t;\nint dp[1011][1011];\nint used[1011][1011];\nstring solve(){\n  string ans=\"\";\n  int i=s.size()-1;\n  int j=t.size()-1;\n  while(i>0&&j>0){\n    if(used[i][j]==1)ans+=t[j],i--,j--;\n    else if(used[i][j]==2)i--;\n    else j--;\n  }\n  return ans;\n}\nint main(){\n  while(cin>>s){\n    memset(dp,0,sizeof(dp));\n    memset(used,0,sizeof(used));\n    t=s;\n    reverse(s.begin(),s.end());\n    t=\"@\"+t;\n    s=\"@\"+s;\n    for(int i=1;i<s.size();i++)\n      for(int j=1;j<t.size();j++)\n    if(s[i]==t[j]){\n      if(dp[i-1][j]>=dp[i-1][j-1]+1) dp[i][j]=max(dp[i][j],dp[i-1][j]),used[i][j]=2;\n       \n      else dp[i][j]=max(dp[i][j],dp[i-1][j-1]+1),used[i][j]=1;\n    }\n        else{\n      if(dp[i-1][j]>=dp[i][j-1])dp[i][j]=max(dp[i][j],dp[i-1][j]),used[i][j]=2;\n      else dp[i][j]=max(dp[i][j],dp[i][j-1]),used[i][j]=3;\n    }\n    cout<<solve()<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nint n;\nstring s;\nint dp[2002][2002];\nint preX[2002][2002], preY[2002][2002];\n\nint main(){\n  while(cin >> s){\n    n = s.length();\n    memset(dp, 0, sizeof(dp));\n\n    for(int i = 0; i < n; i++){\n      dp[i][i] = 1;\n    }\n\n    for(int i = 1; i < n; i++){\n      for(int j = 0; j + i < n; j++){\n        int k = i + j;\n\n        if(s[j] == s[k] && dp[j][k] < dp[j + 1][k - 1] + 2){\n          dp[j][k] = dp[j + 1][k - 1] + 2;\n          preX[j][k] = k - 1;\n          preY[j][k] = j + 1;\n        }\n\n        if(dp[j][k] < dp[j + 1][k]){\n          dp[j][k] = dp[j + 1][k];\n          preX[j][k] = k;\n          preY[j][k] = j + 1;\n        }\n        if(dp[j][k] < dp[j][k - 1]){\n          dp[j][k] = dp[j][k - 1];\n          preX[j][k] = k - 1;\n          preY[j][k] = j;\n        }\n      }\n    }\n\n    string ans = \"\";\n    int x = n - 1;\n    int y = 0;\n\n    while(y < x){\n      int nx = preX[y][x];\n      int ny = preY[y][x];\n\n      if(x - 1 == nx && y + 1 == ny){\n        ans += s[y];\n      }\n\n      x = nx;\n      y = ny;\n    }\n\n    string rev = ans;\n    reverse(rev.begin(), rev.end());\n\n    if(dp[0][n - 1] % 2 == 0){\n      ans += rev;\n    }\n    else{\n      ans += s[x];\n      ans += rev;\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\n\nint dp[2010][2010];\n\nint main(void){\n\tstring pa,ra;\n\twhile(cin >> pa){\n\t\tif(cin.eof())\n\t\t\tbreak;\n\n\t\trep(i,2010)rep(j,2010) dp[i][j]=0;\n\t\tra=pa;\n\t\treverse(ra.begin(),ra.end());\n\t\tint n=pa.size();\n\t\trep(i,n)rep(j,n){\n\t\t\tdp[i+1][j]=max(dp[i+1][j],dp[i][j]);\n\t\t\tdp[i][j+1]=max(dp[i][j+1],dp[i][j]);\n\t\t\tdp[i+1][j+1]=max(dp[i+1][j+1],dp[i][j]+(pa[i]==ra[j]));\n\t\t}\n\t\tstring ans=\"\";\n\t\tint cur=dp[n][n];\n\t\t//dump(cur)\n\t\tfor(int i=n;i>0;){\n\t\t\tfor(int j=n;j>0;){\n\t\t\t\tif(dp[i][j]==dp[i-1][j])\n\t\t\t\t\ti--;\n\t\t\t\telse if(dp[i][j]==dp[i][j-1])\n\t\t\t\t\tj--;\n\t\t\t\telse if(dp[i][j]==dp[i-1][j-1]+1){\n\t\t\t\t\tans+=pa[i-1];\n\t\t\t\t\ti--;j--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\ntypedef pair<int,int> pii;\n\nint main(){\n\tfor(char s[2001];~scanf(\"%s\",s);){\n\t\tint len=strlen(s);\n\t\tpii dp[2001]; dp[0]=make_pair(0,len);\n\t\tint prev[2000]; prev[0]=-1;\n\t\trep(i,len){\n\t\t\tchar c=s[i];\n\t\t\tdp[i+1]=dp[0];\n\t\t\trep(j,i+1){\n\t\t\t\tint last=dp[j].second,k;\n\t\t\t\tfor(k=last-1;k>i;k--) if(s[k]==c) break;\n\t\t\t\tif(k>i && s[k]==c){\n\t\t\t\t\tpii tmp=make_pair(dp[j].first+1,k);\n\t\t\t\t\tif(dp[i+1]<tmp){\n\t\t\t\t\t\tdp[i+1]=tmp;\n\t\t\t\t\t\tprev[i]=j-1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tpii ans(0,0);\n\t\trep(i,len){\n\t\t\tans=max(ans,make_pair(2*dp[i+1].first+(i+1<dp[i+1].second?1:0),i));\n\t\t}\n\n\t\tint k=0;\n\t\tchar s_ans[2001]={};\n\t\tfor(int i=ans.second;~i;i=prev[i]) s_ans[k++]=s[i];\n\n\t\trep(i,k) putchar(s_ans[k-i-1]);\n\t\tif(ans.first%2==1) putchar(s[ans.second+1]);\n\t\trep(i,k) putchar(s_ans[i]);\n\t\tputchar('\\n');\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nstring solve(const string &s){\n\tint n=s.length();\n\tstatic int dp[2001][2001],from[2001][2001];\n\n\trep(i,n+1) dp[i][0]=dp[0][i]=0, from[i][0]=from[0][i]=-1;\n\n\trep(i,n) rep(j,n-i+1) {\n\t\tif(s[i]==s[n-j-1]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}\n\t\telse{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint len=0,i_len[2];\n\tfor(int i=1;i<n;i++){\n\t\tint tmp=2*dp[i][n-i];\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i;\n\t\t}\n\n\t\ttmp=2*dp[i][n-i-1]+1;\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i-1;\n\t\t}\n\t}\n\n\tint idx=dp[i_len[0]][i_len[1]];\n\tstring ans(idx,'@');\n\tfor(int i=i_len[0],j=i_len[1];~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0: i--; break;\n\t\t\tcase 1: j--; break;\n\t\t\tcase 2: i--; j--; idx--; ans[idx]=s[i]; break;\n\t\t}\n\t}\n\tif(len%2==1) ans+=s[i_len[0]];\n\trep(i,len/2) ans+=ans[len/2-i-1];\n\n\treturn ans;\n}\n\nint main(){\n\tfor(char s[2001];~scanf(\"%s\",s);) puts(solve(s).c_str());\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nstring ss[2][N+1];\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  ss[0][0] = \"\";\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1, ss[i%2][j] = ss[(i-1)%2][j-1] + X[i];\n      else {\n\tif(c[i-1][j] >= c[i][j-1]) c[i][j]=c[i-1][j], ss[i%2][j] = ss[(i-1)%2][j];\n\telse c[i][j] = c[i][j-1], ss[i%2][j] = ss[i%2][j-1];\n      }\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  return ss[m%2][n];\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<stdio.h>\n#include<algorithm>\n#include<string.h>\nusing namespace std;\nchar A[2100];\nchar B[2100];\nint dp[2100][2100];\nint rev[2100][2100];\nchar ret[2100];\nint main(){\n\twhile(~scanf(\"%s\",A)){\n\t\tint n=strlen(A);\n\t\tfor(int i=0;i<n;i++)B[n-1-i]=A[i];\n\t\tfor(int i=0;i<=n;i++)for(int j=0;j<=n;j++){\n\t\t\tdp[i][j]=-999999999;\n\t\t\trev[i][j]=-1;\n\t\t}\n\t\tdp[0][0]=0;\n\t\tfor(int i=0;i<=n;i++)for(int j=0;j<=n;j++){\n\t\t\tif(i<n&&j<n&&A[i]==B[j]&&dp[i+1][j+1]<dp[i][j]+1){\n\t\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\t\trev[i+1][j+1]=2;\n\t\t\t}\n\t\t\tif(i<n&&dp[i+1][j]<dp[i][j]){\n\t\t\t\tdp[i+1][j]=dp[i][j];\n\t\t\t\trev[i+1][j]=0;\n\t\t\t}\n\t\t\tif(j<n&&dp[i][j+1]<dp[i][j]){\n\t\t\t\tdp[i][j+1]=dp[i][j];\n\t\t\t\trev[i][j+1]=1;\n\t\t\t}\n\t\t}\n\t\tret[dp[n][n]]=0;\n\t\tint na=n;\n\t\tint nb=n;\n\t\twhile(na||nb){\n\t\t\tif(rev[na][nb]==2){\n\t\t\t\tna--;nb--;\n\t\t\t\tret[dp[na][nb]]=A[na];\n\t\t\t}else if(rev[na][nb]==1){\n\t\t\t\tnb--;\n\t\t\t}else{\n\t\t\t\tna--;\n\t\t\t}\n\t\t}\n\t\tprintf(\"%s\\n\",ret);\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-8;\nconst int inf=1e8;\nstring LCS(string &a,string &b){\n\tconst int LMAX=300;\n\tint m=a.size(),n=b.size();\n\tint dp[LMAX+1][LMAX+1],from[LMAX+1][LMAX+1];\n\trep(i,m+1)dp[i][0]=0,from[i][0]=-1;\n\trep(i,n+1)dp[0][i]=0,from[0][i]=-1;\n\trep(i,m)rep(j,n){\n\t\tif(a[i]==b[j]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}else{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}else{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\tint idx=dp[m][n];\n\tstring out(idx,'!');\n\tfor(int i=m,j=n;~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0:i--;break;\n\t\t\tcase 1:j--;break;\n\t\t\tcase 2:i--;j--;idx--;out[idx]=a[i];break;\n\t\t}\n\t}\n\treturn out;\n}\nint main(){\n\tstring s;\n\twhile(cin>>s){\n\t\tstring t=s;\n\t\treverse(all(t));\n\t\tcout<<LCS(s,t)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#define _USE_MATH_DEFINES\n#define INF 0x3f3f3f3f\n#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <cmath>\n#include <cstdlib>\n#include <algorithm>\n#include <queue>\n#include <stack>\n#include <limits>\n#include <map>\n#include <string>\n#include <cstring>\n#include <set>\n#include <deque>\n#include <bitset>\n#include <list>\n#include <cctype>\n#include <utility>\n#include <complex>\n \nusing namespace std;\n \ntypedef long long ll;\ntypedef pair <int,int> P;\ntypedef pair <int,P > PP;\n \nstatic const int tx[] = {-1,+0,-1};\nstatic const int ty[] = {-1,-1,+0};\n \nstatic const double EPS = 1e-10;\n\nint dp[2001][2001];\nint prev[2001][2001];\n\nint main(){\n  string str;\n  memset(dp,0,sizeof(dp));\n  memset(prev,-1,sizeof(prev));\n  while(cin >> str){\n    string r_str = str;\n    reverse(r_str.begin(),r_str.end());\n    for(int y = 0; y < str.size(); y++){\n      for(int x = 0; x < r_str.size(); x++){\n        if(str[y] == r_str[x]){\n          dp[y+1][x+1] = dp[y][x] + 1;\n          prev[y+1][x+1] = 0;\n        }\n        else if(dp[y][x+1] < dp[y+1][x]){\n          dp[y+1][x+1] = dp[y+1][x];\n          prev[y+1][x+1] = 2;\n        }\n        else {\n          dp[y+1][x+1] = dp[y][x+1];\n          prev[y+1][x+1] = 1;\n        }\n      }\n    }\n\n    string res = \"\";\n    queue<P> que;\n    que.push(P(str.size(),r_str.size()));\n    while(!que.empty()){\n      P p = que.front();\n      que.pop();\n      int y = p.first;\n      int x = p.second;\n      int dir = prev[y][x];\n      if(dir == 0){\n        res.push_back(str[y-1]);\n      }\n      int dx = x + tx[dir];\n      int dy = y + ty[dir];\n      if(prev[dy][dx] == -1) break;\n      P next(dy,dx);\n      que.push(next);\n    }\n    cout << res << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "int main() {\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nstruct Node {\n\tint value;\n\tNode *next;\n};\n\nNode nodePool[4000000];\n\nstring lcs(const string &a, const string &b){\n\tconst int INF = 99999999;\n\tconst int n = a.size(), m = b.size();\n\tNode *poolPtr = nodePool;\n\tmap< int, vector<int> > M;\n\tfor(int j = m - 1; j >= 0; --j){ M[b[j]].push_back(j); }\n\tvector<int> xs(n + 1, INF); xs[0] = -INF;\n\tvector<Node *> link(n + 1);\n\tfor(int i = 0; i < n; ++i){\n\t\tif(M.count(a[i])){\n\t\t\tvector<int> ys = M[a[i]];\n\t\t\tfor(int j = 0; j < ys.size(); ++j){\n\t\t\t\tint k = distance(xs.begin(), lower_bound(xs.begin(), xs.end(), ys[j]));\n\t\t\t\txs[k] = ys[j];\n\t\t\t\tNode *node = poolPtr++;\n\t\t\t\tnode->value = b[ys[j]];\n\t\t\t\tnode->next = link[k - 1];\n\t\t\t\tlink[k] = node;\n\t\t\t}\n\t\t}\n\t}\n\tint l = distance(xs.begin(), lower_bound(xs.begin(), xs.end(), INF -  1)) - 1;\n\tstring answer;\n\tfor(Node *p = link[l]; p != NULL; p = p->next){\n\t\tanswer += static_cast<char>(p->value);\n\t}\n\treverse(answer.begin(), answer.end());\n\treturn answer;\n}\n\nint main(){\n\tstring s;\n\twhile(cin >> s){\n\t\tint n = s.size();\n\t\tstring answer = \"\";\n\t\tfor(int i = 1; i < n - 1; ++i){\n\t\t\tstring a = s.substr(0, i);\n\t\t\tstring b = s.substr(i);\n\t\t\treverse(b.begin(), b.end());\n\t\t\tstring c = lcs(a, b);\n\t\t\tint length = c.size() * 2;\n\t\t\tif(s[i - 1] != s[i]){ ++length; }\n\t\t\tif(answer.size() < length){\n\t\t\t\tstring d = c;\n\t\t\t\treverse(d.begin(), d.end());\n\t\t\t\tif(length % 2){\n\t\t\t\t\tif(s[i] == d[0]){\n\t\t\t\t\t\tc += s[i - 1];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tc += s[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc += d;\n\t\t\t\tanswer = c;\n\t\t\t}\n\t\t}\n\t\tcout << answer << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tstring s;\n\twhile(cin >> s){\n\t\tint n = s.size();\n\t\tvector<vector<int> > dp(n + 2, vector<int>(n + 2));\n\n\t\tint x = 0, y = 0;\n\t\tfor(int i = 1; i <= n; ++i){\n\t\t\tdp[i][i] = dp[i-1][i+1] + 1;\n\t\t\tif(dp[x][y] < dp[i][i]){\n\t\t\t\tx = y = i;\n\t\t\t}\n\n\t\t\tfor(int j = n; j > i; --j){\n\t\t\t\tif(s[i-1] == s[j-1]){\n\t\t\t\t\tdp[i][j] = dp[i-1][j+1] + 2;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdp[i][j] = max(dp[i-1][j], dp[i][j+1]);\n\t\t\t\t}\n\n\t\t\t\tif(dp[x][y] < dp[i][j]){\n\t\t\t\t\tx = i;\n\t\t\t\t\ty = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstring t, u;\n\t\twhile(x > 0 && y <= n){\n\t\t\tif(x == y && dp[x][y] == dp[x-1][y+1] + 1){\n\t\t\t\t--x;\n\t\t\t\t++y;\n\t\t\t\tt += s[x];\n\t\t\t}\n\t\t\telse if(dp[x][y] == dp[x-1][y+1] + 2){\n\t\t\t\t--x;\n\t\t\t\t++y;\n\t\t\t\tt += s[x];\n\t\t\t\tu += s[x];\n\t\t\t}\n\t\t\telse if(dp[x][y] == dp[x-1][y]){\n\t\t\t\t--x;\n\t\t\t}\n\t\t\telse{\n\t\t\t\t++y;\n\t\t\t}\n\t\t}\n\t\t\n\t\treverse(t.begin(), t.end());\n\t\tcout << t << u << '\\n';\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define N 2005\nusing namespace std;\nstring s,t,ans;\nint dp[N][N];\n\nvoid dfs(int y,int x){\n  if(!y||!x)return;\n  if(dp[y][x]-dp[y-1][x-1]==1){\n    ans+=s[y-1];\n    dfs(y-1,x-1);\n    return;\n  }\n  if(dp[y-1][x]==dp[y][x])dfs(y-1,x);\n  else dfs(y,x-1);\n}\n\nint main(){\n  while(cin>>s){\n    t=s;\n    reverse(t.begin(),t.end());\n    memset(dp,0,sizeof(dp));\n    int n=s.size(),m=t.size();\n    for(int i=0;i<n;i++){\n      for(int j=0;j<m;j++){\n\tif(s[i]==t[j])dp[i+1][j+1]=dp[i][j]+1;\n\telse dp[i+1][j+1]=max(dp[i][j+1],dp[i+1][j]);\n      }\n    }\n    ans=\"\";\n    dfs(n,m);\n    string temp=ans;\n    reverse(temp.begin(),temp.end());\n    assert(ans==temp);\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <sstream>\n#include <cmath>\n#include <queue>\n#include <set>\n\n#define rep(i,n) for(int i=0; i<(n); i++)\n\nusing namespace std;\n\nint dp[2005][2005];\n\nstring solve(string str) {\n    rep(i,2005)rep(j,2005)dp[i][j] = 0;\n    string rev = str;\n    reverse(rev.begin(), rev.end());\n    \n    for (int i = 1; i <= str.size(); i++) {\n        int si = i - 1;\n        for (int j = 1; j <= str.size(); j++) {\n            int sj = j - 1;\n            if (si + sj >= str.size())break;\n            if (si + sj == str.size() - 1) {\n                dp[i][j] = dp[i-1][j-1] + 1;\n            } else {\n                if (str[si] == rev[sj])dp[i][j] = dp[i-1][j-1] + 2;\n            }\n            dp[i][j] = max(dp[i][j], max(dp[i-1][j], dp[i][j-1]));\n        }\n    }\n\n    string ans;\n    int ansMax = 0;\n    int index = 0;\n    \n    rep(i, str.size() + 1) {\n        if (ansMax < dp[i][str.size() + 1 - i]) {\n            index = i;\n            ansMax = dp[i][str.size() + 1 - i];\n        }\n    }\n\n    int pi = index, pj = str.size() + 1 - index;\n    if (ansMax % 2 == 1) {\n        ansMax--;\n        ans = str[pi-1];\n        pi--, pj--;\n    }\n    \n    while(pi > 0 && pj > 0) {\n        while(pi > 0 && dp[pi-1][pj] == dp[pi][pj])pi--;\n        while(pj > 0 && dp[pi][pj-1] == dp[pi][pj])pj--;\n        if (pi == 0 || pj == 0)break;\n        ans = str[pi-1] + ans + str[pi-1];\n        pi--,pj--;\n    }\n\n    return ans;\n}\n\nint main() {\n    string str;\n    while(cin >> str) {\n        cout << solve(str) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <cassert>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define clear(arr, val) memset(arr, val, sizeof(arr))\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double EPS = 1e-8;\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\ntemplate <class T>\nT lcs(const T& a, const T& b)\n{\n\tconst int n = a.size(), m = b.size();\n\tvector<vector<int> > dp(n + 1, vector<int>(m + 1));\n\tvector<vector<int> > prev(n + 1, vector<int>(m + 1));\n\tfor (int i = 0; i < n; ++i)\n\t{\n\t\tfor (int j = 0; j < m; ++j)\n\t\t{\n\t\t\tif (a[i] == b[j])\n\t\t\t{\n\t\t\t\tdp[i + 1][j + 1] = dp[i][j] + 1;\n\t\t\t\tprev[i + 1][j + 1] = 0;\n\t\t\t}\n\t\t\telse if (dp[i][j + 1] > dp[i + 1][j])\n\t\t\t{\n\t\t\t\tdp[i + 1][j + 1] = dp[i][j + 1];\n\t\t\t\tprev[i + 1][j + 1] = 1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdp[i + 1][j + 1] = dp[i + 1][j];\n\t\t\t\tprev[i + 1][j + 1] = 2;\n\t\t\t}\n\t\t}\n\t}\n\tT res;\n\tfor (int i = n, j = m; i > 0 && j > 0; )\n\t{\n\t\tif (prev[i][j] == 0)\n\t\t{\n\t\t\tres.push_back(a[i - 1]);\n\t\t\t--i, --j;\n\t\t}\n\t\telse if (prev[i][j] == 1)\n\t\t\t--i;\n\t\telse\n\t\t\t--j;\n\t}\n\treverse(res.begin(), res.end());\n\treturn res;\n}\n\nint main()\n{\n\tios::sync_with_stdio(false);\n\tstring s;\n\twhile (cin >> s)\n\t{\n\t\tstring t = s;\n\t\treverse(all(t));\n\t\tcout << lcs(s, t) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nstring lcs(string X,string Y){\n  int c[N+1][N+1];\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = m; i >= 1; i--) {\n    if(c[n][i] != c[n][i-1]) ret += X[i-1];\n  }\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nshort X[3001][3001];\nshort Y[3001][3001];\n\nstring lcs( string a, string b ) {\n    int n = a.size();\n    int m = b.size();\n    for ( int i = 0; i < n+1; i++ ) {\n        for ( int j = 0; j < m+1; j++ ) {\n            X[i][j] = 0;\n            Y[i][j] = 0;\n        }\n    }\n\n    for ( int i = 0; i < n; i++ ) {\n        for ( int j = 0; j < m; j++ ) {\n            if ( a[i] == b[j] ) {\n                X[i+1][j+1] = X[i][j] + 1;\n                Y[i+1][j+1] = 0;\n            } else if ( X[i+1][j] < X[i][j+1] ) {\n                X[i+1][j+1] = X[i][j+1];\n                Y[i+1][j+1] = +1;\n            } else {\n                X[i+1][j+1] = X[i+1][j];\n                Y[i+1][j+1] = -1;\n            }\n        }\n    }\n\n    string answer;\n    for ( int i = n, j = m; i > 0 && j > 0; ) {\n        if ( Y[i][j] > 0 ) {\n            i--;\n        } else if ( Y[i][j] < 0 ) {\n            j--;\n        } else {\n            answer += a[i-1];\n            i--;\n            j--;\n        }\n    }\n    reverse( answer.begin(), answer.end() );\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nconst int MAX_N = 2005;\nint dp[MAX_N][MAX_N];\nint next[MAX_N][MAX_N];\nstring input;\n\nint ds[3] = {1,1,0};\nint dt[3] = {-1,0,-1};\n\nint rec(const int s,const int t) {\n    if(s > t) return -1;\n    if(s == t) {\n        next[s][t] = 3;\n        return dp[s][t] = 1;\n    }\n    if(dp[s][t] != -1) return dp[s][t];\n\n    int res = 0;\n    int t3 = (input[s] == input[t]) ? rec(s+1,t-1) + 2 : rec(s+1,t-1);\n    int t1 = rec(s+1, t);\n    int t2 = rec(s,t-1);\n\n    if(t3 >= t1 && t3 >= t2) {\n        res = t3;\n        next[s][t] = 0;\n    }else if(t1 >= t2) {\n        res = t1;\n        next[s][t] = 1;\n    }else{\n        res = t2;\n        next[s][t] = 2;\n    }\n\n    return dp[s][t] = res;\n}\n\nstring traverse(const int s,const int t) {\n    if(next[s][t] == -1) return \"\";\n    if(s == t) return string(1, input[s]);\n    if(next[s][t] == 0) {\n        string res = \"\";\n        if(input[s] == input[t]) res = string(1, input[s]) + traverse(s+1,t-1)\n                                     + string(1, input[t]);\n        else res = traverse(s+1,t-1);\n        return res;\n    }else if(next[s][t] == 1) {\n        return traverse(s+1,t);\n    }else{\n        return traverse(s,t-1);\n    }\n}\n\nint main() {\n    while(cin>>input) {\n        const int n = input.length();        \n        memset(dp, -1, sizeof(dp));\n        memset(next, -1, sizeof(next));\n\n        rec(0,n-1);\n        cout<<traverse(0,n-1)<<endl;\n\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 200;\n\nstring lcs(string a, string b){\n  int dp[N+1][N+1];\n  int p[N+1][N+1];\n  fill(dp[0], dp[N+1], 0);\n  int size = a.size();\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(getline(cin, input) != 0){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] != c[i-1][j-1]) ret += X[i], j--;\n  }\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<cstring>\n#include<algorithm>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nstring solve(const string &s,const string &t){\n\tint n=s.length();\n\tstatic int dp[2001][2001],from[2001][2001];\n\n\trep(i,n+1) dp[i][0]=0, from[i][0]=-1;\n\trep(j,n+1) dp[0][j]=0, from[0][j]=-1;\n\n\trep(i,n) rep(j,n) {\n\t\tif(s[i]==t[j]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}\n\t\telse{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint len=0,i_len[2];\n\tfor(int i=1;i<n;i++){\n\t\tint tmp=2*dp[i][n-i];\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i;\n\t\t}\n\n\t\ttmp=2*dp[i][n-i-1]+1;\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i-1;\n\t\t}\n\t}\n\n\tint idx=dp[i_len[0]][i_len[1]];\n\tstring ans(idx,'@');\n\tfor(int i=i_len[0],j=i_len[1];~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0: i--; break;\n\t\t\tcase 1: j--; break;\n\t\t\tcase 2: i--; j--; idx--; ans[idx]=s[i]; break;\n\t\t}\n\t}\n\tif(len%2==1) ans+=s[i_len[0]];\n\trep(i,len/2) ans+=ans[len/2-i-1];\n\n\treturn ans;\n}\n\nint main(){\n\tfor(char s[2001],t[2001];~scanf(\"%s\",s);){\n\t\tstrcpy(t,s);\n\t\treverse(t,t+strlen(t));\n\t\tputs(solve(s,t).c_str());\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint main(){\n\tstring s;\n\twhile(cin >> s){\n\t\tint n = s.size();\n\t\tvector<vector<int> > dp(n + 2, vector<int>(n + 2));\n\n\t\tint x = 0, y = 0;\n\t\tfor(int i = 1; i <= n; ++i){\n\t\t\tdp[i][i] = dp[i-1][i+1] + 1;\n\t\t\tif(dp[x][y] < dp[i][i]){\n\t\t\t\tx = y = i;\n\t\t\t}\n\n\t\t\tfor(int j = n; j > i; --j){\n\t\t\t\tif(s[i-1] == s[j-1]){\n\t\t\t\t\tdp[i][j] = dp[i-1][j+1] + 2;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdp[i][j] = max(dp[i-1][j], dp[i][j+1]);\n\t\t\t\t}\n\n\t\t\t\tif(dp[x][y] < dp[i][j]){\n\t\t\t\t\tx = i;\n\t\t\t\t\ty = j;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstring t, u;\n\t\twhile(x > 0 && y <= n){\n\t\t\tif(x == y && dp[x][y] == dp[x-1][y+1] + 1){\n\t\t\t\t--x;\n\t\t\t\t++y;\n\t\t\t\tt += s[x];\n\t\t\t}\n\t\t\telse if(x != y && s[x-1] == s[y-1] && dp[x][y] == dp[x-1][y+1] + 2){\n\t\t\t\t--x;\n\t\t\t\t++y;\n\t\t\t\tt += s[x];\n\t\t\t\tu += s[x];\n\t\t\t}\n\t\t\telse if(dp[x][y] == dp[x-1][y]){\n\t\t\t\t--x;\n\t\t\t}\n\t\t\telse{\n\t\t\t\t++y;\n\t\t\t}\n\t\t}\n\t\t\n\t\treverse(t.begin(), t.end());\n\t\tcout << t << u << '\\n';\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<tuple>\n#include<algorithm>\nusing namespace std;\nstring S; tuple<int, int, int>dp[2100][2100];\nint solve(int s, int t) {\n\tif (s > t)return 0;\n\tif (get<0>(dp[s][t]) != -1)return get<0>(dp[s][t]);\n\tif (s == t) { dp[s][t] = make_tuple(1, -1, -1); return 1; }\n\tif (t - s == 1) {\n\t\tif (S[s] == S[t]) { dp[s][t] = make_tuple(2, -1, -1); return 2; }\n\t}\n\tint c1 = solve(s, t - 1);\n\tint c2 = solve(s + 1, t);\n\tint c3 = solve(s + 1, t - 1); if (S[s] == S[t])c3 += 2;\n\tif (c1 >= c2 && c1 >= c3) { dp[s][t] = make_tuple(c1, s, t - 1); return c1; }\n\tif (c2 >= c1 && c2 >= c3) { dp[s][t] = make_tuple(c2, s + 1, t); return c2; }\n\tif (c3 >= c1 && c3 >= c2) { dp[s][t] = make_tuple(c3, s + 1, t - 1); return c3; }\n}\nint main() {\n\twhile (cin >> S) {\n\t\tfor (int i = 0; i < S.size(); i++) { for (int j = 0; j < S.size(); j++)dp[i][j] = make_tuple(-1, 0, 0); }\n\t\tsolve(0, S.size() - 1);\n\t\tstring V, W; int F = 0, G = S.size() - 1;\n\t\twhile (F + G >= 0) {\n\t\t\tif (S[F] == S[G]) { V += S[F]; if (F != G)W += S[G]; }\n\t\t\tint H = get<2>(dp[F][G]); F = get<1>(dp[F][G]); G = H;\n\t\t}\n\t\treverse(W.begin(), W.end());\n\t\tcout << V + W << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\nusing namespace std;\n#define REP(i,n) for (int i=0;i<(int)n; ++i)\n\nstring s;\nstring memo[2000][2001];\n\nbool memo2[2000][2001];\nstring rec(int l, int r) {\n  if (l>=r) return \"\"; \n  if (memo[l][r].size()) return memo[l][r];\n  string res;\n  for (int i=l; i<r; ++i) {\n    for (int j=r-1; j>=i; --j) {\n      if (s[i]==s[j]) {\n        string tmp = rec(i+1, j);\n        if (res.size() < tmp.size() + 1) {\n          tmp.push_back(s[i]);\n          res = tmp;\n        }\n          \n        break;\n      }\n    }\n  }\n  return memo[l][r] = res;\n}\n\nint main() {\n  while(cin >> s) {\n\n    REP(i,2000)REP(j,2001)memo[i][j]=\"\";\n    string res = rec(0, s.size());\n\n    string res2 = res;\n    reverse(res.begin(), res.end());\n    \n    int l=0, r=s.size()-1;\n    bool f = 0;\n    for (int cnt =0;cnt<res.size() ;++cnt) {\n      while(s[l]!=res[cnt])l++;\n      while(s[r]!=res[cnt])r--;\n      if (cnt==res.size()-1) {\n        if (l==r)\n          f = 1;\n      }\n      l++;r--;\n    }\n\n    if (f) {\n      res2.erase(res2.begin());\n    }\n    cout << res << res2 << endl;\n  }\n         \n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\n\nint dp[2010][2010];\n\nint main(void){\n\tstring pa,ra;\n\twhile(cin >> pa){\n\t\tif(cin.eof())\n\t\t\tbreak;\n\n\t\tclr(dp,0);\n\t\tra=pa;\n\t\treverse(ra.begin(),ra.end());\n\t\tint n=pa.size();\n\t\trep(i,n)rep(j,n){\n\t\t\tdp[i+1][j]=max(dp[i+1][j],dp[i][j]);\n\t\t\tdp[i][j+1]=max(dp[i][j+1],dp[i][j]);\n\t\t\tdp[i+1][j+1]=max(dp[i+1][j+1],dp[i][j]+(pa[i]==ra[j]));\n\t\t}\n\t\tstring ans=\"\";\n\t\tint cur=dp[n][n];\n\t\t//dump(cur)\n\t\tfor(int i=n;i>0;){\n\t\t\tfor(int j=n;j>0;){\n\t\t\t\tif(dp[i][j]==dp[i-1][j])\n\t\t\t\t\ti--;\n\t\t\t\telse if(dp[i][j]==dp[i][j-1])\n\t\t\t\t\tj--;\n\t\t\t\telse if(dp[i][j]==dp[i-1][j-1]+1){\n\t\t\t\t\tans+=pa[i-1];\n\t\t\t\t\ti--;j--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define repi(i,a,b) for(int i = (int)(a); i < (int)(b); i++)\n#define rep(i,n) repi(i,0,n)\n\nstring S;\nint dp[2222][2222];\nint trans[2222][2222];\n\nconst int rec(const int L, const int R) {\n  int& ret = dp[L][R];\n  if(ret + 1) return ret;\n  if(L > R) return ret = 0;\n  if(S[L] == S[R]) {\n    trans[L][R] = 0;\n    return ret = rec(L + 1, R - 1) + (L == R ? 1 : 2);\n  }\n\n  const int r1 = rec(L + 1, R);\n  const int r2 = rec(L, R - 1);\n\n  if(r1 > r2) {\n    trans[L][R] = 1;\n    return ret = r1;\n  }\n  else {\n    trans[L][R] = 2;\n    return ret = r2;\n  }\n\n}\n\nint main() {\n  while(cin >> S) {\n\n    for(int i=0; i<2222; i++)\n      for(int j=0; j<2222; j++)\n        dp[i][j] = trans[i][j] = -1;\n\n    int N = S.size();\n    rec(0, N);\n    int L = 0, R = N;\n    string res;\n    while(L < R) {\n      if(trans[L][R] == 0) {\n        res += S[L];\n        L ++, R --;\n      }\n      if(trans[L][R] == 1) {\n        L ++;\n      }\n      if(trans[L][R] == 2) {\n        R --;\n      }\n    }\n    cout << res;\n    if(L == R) cout << S[L];\n    reverse(res.begin(), res.end());\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nconst int MAX_N = 2005;\nstring dp[MAX_N][MAX_N];\nstring input;\n\nstring rec(const int s,const int t) {\n    if(s > t) return \"\";\n    if(s == t) return dp[s][t] = string(1, input[s]);\n    if(dp[s][t] != \"\") return dp[s][t];\n\n    string res = \"\";\n    for(int j=t; j>s; --j) {\n        for(int i=s; i<=j; ++i) {\n            if(input[i] == input[j]) {  \n                string t;\n                if(i == j) t = string(1,input[i]);\n                else t = string(1, input[i]) + rec(i+1, j-1)\n                         + string(1, input[j]);\n\n                if(res.length() < t.length()) {\n//                    cout<<s<<\" : \"<<t<<endl;\n                    res = t;\n                }\n            }\n        }\n    }\n\n    return dp[s][t] = res;\n}\n\nint main() {\n    while(cin>>input) {\n        const int n = input.length();        \n        for(int i=0; i<n; ++i) for(int j=0; j<n; ++j) dp[i][j] = \"\";\n        cout<<rec(0,n-1)<<endl;\n\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\nusing namespace std;\n\nint dp[2001][2001];\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  string s;\n  while(cin >> s){\n    int n = s.size();\n\n    memset(dp,0,sizeof(dp));\n    rep(i,n){\n      rep(j,n){\n\tif(s[i] == s[n-1-j])dp[i+1][j+1] = dp[i][j]+1;\n\telse dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);\n      }\n    }\n\n    int m = dp[n][n];\n    string pal;\n    int a = n, b = n;\n    while(a!=0 && b!=0 && (int)pal.size()<(m+1)/2){\n      if(a>0 && b>0 && dp[a][b] == dp[a-1][b-1]+1 && s[a-1]==s[n-b])pal += s[--a], --b;\n      else if(a>0 && dp[a][b] == dp[a-1][b])a--;\n      else if(b>0 && dp[a][b] == dp[a][b-1])b--;\n    }\n    \n    for(int i=m/2-1;i>=0;i--)pal += pal[i];\n    cout << pal << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nint main(){\n  string s;\n  while(cin >> s){\n    int N = s.size();\n    int dp[2001] = {}; // dp[i] = [i, s.size())まで使ったときの最大の文字列\n    static int prev[2001][2001] = {};\n    memset(prev, -1, sizeof(prev));\n    vector<int> indexes[26];\n    REP(i, N) indexes[s[i] - 'A'].push_back(i);\n    REP(i, N){\n      // center\n      if(dp[i] < dp[i + 1] + 1){\n        dp[i] = dp[i + 1] + 1;\n        prev[i + 1][i] = i + 1;\n      }\n      for(int j = i + 1; j < N; j++){\n        //[i + 1, j + 1) = [i + 1, j]\n        int cur = dp[j + 1];\n        vector<int>& v = indexes[s[i] - 'A'];\n        int idx = upper_bound(v.begin(), v.end(), j) - v.begin() - 1;  // j以下で最大\n        if(0 <= idx && idx < v.size() && i + 1 <= v[idx] && dp[v[idx]] < cur + 2){\n          dp[v[idx]] = cur + 2;\n          prev[i + 1][v[idx]] = j + 1;\n        }\n      }\n    }\n    int max_c = 0;\n    REP(i, N + 1) if(dp[max_c] < dp[i]) max_c = i;\n    int curr = max_c;\n    string ans;\n    for(int i = N - 1; i >= 0; i--){\n      if(prev[i + 1][curr] == -1){\n      }else{\n        if(i != curr) ans = s[i] + ans + s[curr];\n        else ans = s[i];\n        curr = prev[i + 1][curr];\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\nstring str;\nset<string>S;\n\nint search(int l,int r,char ch){\n  for(int i=r;i>=l;i--) if(ch==str[i]) return i;\n  return -1;\n}\n\nstring ans;\n\nvoid Max(string &a,string b){\n  if(a.size()==b.size()) a=max(a,b);\n  if(a.size()<b.size()) a=b;\n}\n\nvoid dfs(string sta,int l,int r){\n  string tmp=sta;reverse(tmp.begin(),tmp.end());\n  if(l==r)Max(ans,sta+str[l]+tmp);\n  if(l>=r) return;\n  if(S.count(sta))return;\n  S.insert(sta);\n\n  dfs(sta,l+1,r);\n  for(int i=l;i<r;i++){\n    int nr=search(i+1,r,str[i]);\n    if(nr!=-1) dfs(sta+str[i],i+1,nr-1);\n    else Max(ans,sta+str[i]+tmp);\n  }\n}\n\n\n\nint main(){\n  while(cin>>str){\n    S.clear();\n    ans=\"\";\n    dfs(\"\",0,str.size()-1);\n    set<string>::iterator it=S.begin();\n    while(it!=S.end()){\n      if(ans.size()<it->size()*2){\n\tstring tmp=*it;reverse(tmp.begin(),tmp.end());\n\tans=*it+tmp;\n      }\n      it++;\n    }\n   cout <<ans<<endl;    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<short,short> pii;\n\nshort dp[2001][2001];\npii to[2001][2001];\n\nstring s;\nstring s2;\nint n;\n\n// sツづ2ツづ可づつつ「ツづ、ツ催妥・ツ閉板閉ェツ暗ェツ致ツ閉カツ篠堋療アツ陳キツづーツ仰づ淞づゥ\n// ツつスツつセツつオツ、s_posツづ2_posツづーcrossツつウツつケツづづ債つ「ツつッツづ按つ「\nint dfs(int a,int b){\n\tint b_rev=n-1-b;\n\tif(b_rev<a){\n\t\tto[a][b].first=-1;\n\t\treturn 0;\n\t}\n\telse if(b_rev==a){\n\t\tto[a][b].first=-2;\n\t\treturn 1;\n\t}\n\tif(dp[a][b]!=-1)return dp[a][b];\n\tint res=0;\n\tif(s[a]==s2[b]){\n\t\tint tmp=res;\n\t\tres=max(res,dfs(a+1,b+1)+1);\n\t\tif(tmp!=res){\n\t\t\tto[a][b]=pii(a+1,b+1);\n\t\t}\n\t}\n\tint tmp=res;\n\tres=max(res,dfs(a+1,b));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a+1,b);\n\t}\n\ttmp=res;\n\tres=max(res,dfs(a,b+1));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a,b+1);\n\t}\n\treturn dp[a][b]=res;\n}\n\nint main(){\n\n\twhile(cin>>s){\n\t\tn=s.size();\n\t\tmemset(dp,-1,sizeof(dp));\n\t\ts2=s;\n\t\treverse(s2.begin(),s2.end());\n\t\tint res=dfs(0,0);\n\t\tpii cur=pii(0,0);\n\t\tstring ret;\n\t\twhile(1){\n\t\t\tpii nxt=to[cur.first][cur.second];\n\t\t\tif(nxt.first==-1)break;\n\t\t\tif(nxt.first==-2){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+s[cur.first]+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// diffツつェ1\n\t\t\tif(nxt.first-cur.first==1&&nxt.second-cur.second==1)\n\t\t\t\tret+=s[cur.first];\n\t\t\tcur=nxt;\n\t\t}\n\t\tcout<<ret<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define F first\n#define S second\n#define all(v) (v).begin(), (v).end()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, int> P;\n\nconst int inf = 1LL << 55;\n\nint dp[2010][2010];\nint tr[2010][2010];\n\nsigned main()\n{\n  string s;\n  while(cin >> s) {\n    string t = s; reverse(all(s));    \n    memset(dp, 0, sizeof(dp));\n    memset(tr, 0, sizeof(dp));\n    for(int i = 0; i < s.size(); i++) {\n      for(int j = 0; j < t.size(); j++) {\n\tif(s[i] == t[j]) dp[i+1][j+1] = dp[i][j] + 1, tr[i+1][j+1] = 1;\n\telse {\n\t  if(dp[i+1][j] > dp[i][j+1]) dp[i+1][j+1] = dp[i+1][j], tr[i+1][j+1] = 2;\n\t  else dp[i+1][j+1] = dp[i][j+1], tr[i+1][j+1] = 3;\n\t}\n      }\n    }\n    string x;\n    for(int i = s.size(), j = t.size(); i > 0 && j > 0; ) {\n      switch(tr[i][j]) {\n      case 1: x += s[i-1], i--, j--; break;\n      case 2: j--; break;\n      case 3: i--; break;\n      }\n    }\n    cout << x << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nstring ss[2][N+1];\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  ss[0][0] = \"\";\n  memset(c,0,sizeof(c));\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1, ss[i%2][j] = ss[(i-1)%2][j-1] + X[i];\n      else {\n\tif(c[i-1][j] >= c[i][j-1]) c[i][j]=c[i-1][j], ss[i%2][j] = ss[(i-1)%2][j];\n\telse c[i][j] = c[i][j-1], ss[i%2][j] = ss[i%2][j-1];\n      }\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret=ss[m%2][n],ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  //assert(ret==ret2);\n  assert((int)ret.size()==maxl);\n  return ss[m%2][n];\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\nstring reverseLcs(const string & a, const string & b, const vector<vector<int> > & dp, size_t i, size_t j)\n{\n    if (i == 0 || j == 0) {\n        return \"\";\n    }\n\n    if (a.at(i - 1) == b.at(j - 1)) {\n        return reverseLcs(a, b, dp, i - 1, j - 1) + a.at(i - 1);\n    } else {\n        if (dp[i - 1][j] == dp[i][j]) {\n            return reverseLcs(a, b, dp, i - 1, j);\n        } else {\n            return reverseLcs(a, b, dp, i, j - 1);\n        }\n    }\n}\n\nstring lcs(const string & a, const string & b)\n{\n    vector<vector<int> > dp(a.size() + 1, vector<int>(b.size() + 1));\n\n    for (size_t i = 1; i < dp.size(); ++i) {\n        for (size_t j = 1; j < dp[0].size(); ++j) {\n            if (a.at(i - 1) == b.at(j - 1)) {\n                dp[i][j] = dp[i - 1][j - 1] + 1;\n            } else {\n                dp[i][j] = max(dp[i - 1][j],\n                               dp[i][j - 1]);\n            }\n        }\n    }\n\n    return reverseLcs(a, b, dp, a.length(), b.length());\n}\n\nint main()\n{\n    string str;\n    while (cin >> str) {\n        string rstr(str);\n        reverse(rstr.begin(), rstr.end());\n        cout << lcs(str, rstr) << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\nconst int MAXLEN = 2000;\n\n/* typedef */\n\n/* global variables */\n\nstring memo[MAXLEN][MAXLEN];\n\n/* subroutines */\n\nstring rec(string& str, int i0, int i1) {\n  if (memo[i0][i1] != \"-\") return memo[i0][i1];\n\n  if (i0 + 1 == i1) {\n    if (str[i0] == str[i1])\n      memo[i0][i1] = str.substr(i0, 2);\n    else\n      memo[i0][i1] = \"\";\n    return memo[i0][i1];\n  }\n\n  string maxstr, s;\n  int j0, j1;\n  \n  for (j1 = i1; str[i0] != str[j1]; j1--);\n  if (i0 + 1 < j1)\n    s = str.substr(i0, 1) + rec(str, i0 + 1, j1 - 1) + str.substr(j1 , 1);\n  else if (i0 + 1 == j1)\n    s = str.substr(i0, 2);\n  else\n    s = str.substr(i0, 1);\n\n  if (maxstr.length() < s.length()) maxstr = s;\n\n  for (j0 = i0; str[j0] != str[i1]; j0++);\n  if (j0 + 1 < i1)\n    s = str.substr(j0, 1) + rec(str, j0 + 1, i1 - 1) + str.substr(i1 , 1);\n  else if (j0 + 1 == i1)\n    s = str.substr(j0, 2);\n  else\n    s = str.substr(j0, 1);\n\n  if (maxstr.length() < s.length()) maxstr = s;\n  \n  s = rec(str, i0 + 1, i1 - 1);\n  if (maxstr.length() < s.length()) maxstr = s;\n  \n  return (memo[i0][i1] = maxstr);\n}\n\n/* main */\n\nint main() {\n  for (;;) {\n    string str;\n    cin >> str;\n    if (cin.eof()) break;\n\n    int len = str.length();\n    for (int i = 0; i < len; i++) {\n      for (int j = 0; j < len; j++) memo[i][j] = \"-\";\n      memo[i][i] = str.substr(i, 1);\n    }\n\n    cout << rec(str, 0, len - 1) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n\n// #define int long long\n#define rep(i, n) for (long long i = (long long)(0); i < (long long)(n); ++i)\n#define reps(i, n) for (long long i = (long long)(1); i <= (long long)(n); ++i)\n#define rrep(i, n) for (long long i = ((long long)(n)-1); i >= 0; i--)\n#define rreps(i, n) for (long long i = ((long long)(n)); i > 0; i--)\n#define irep(i, m, n) for (long long i = (long long)(m); i < (long long)(n); ++i)\n#define ireps(i, m, n) for (long long i = (long long)(m); i <= (long long)(n); ++i)\n#define SORT(v, n) sort(v, v + n);\n#define REVERSE(v, n) reverse(v, v+n);\n#define vsort(v) sort(v.begin(), v.end());\n#define all(v) v.begin(), v.end()\n#define mp(n, m) make_pair(n, m);\n#define cout(d) cout<<d<<endl;\n#define coutd(d) cout<<std::setprecision(10)<<d<<endl;\n#define cinline(n) getline(cin,n);\n#define replace_all(s, b, a) replace(s.begin(),s.end(), b, a);\n#define PI (acos(-1))\n#define FILL(v, n, x) fill(v, v + n, x);\n#define sz(x) long long(x.size())\n\nusing ll = long long;\nusing vi = vector<int>;\nusing vvi = vector<vi>;\nusing vll = vector<ll>;\nusing vvll = vector<vll>;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vs = vector<string>;\nusing vpll = vector<pair<ll, ll>>;\nusing vtp = vector<tuple<ll,ll,ll>>;\nusing vb = vector<bool>;\n\ntemplate<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }\ntemplate<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }\n\nconst ll INF = 1e9;\nconst ll MOD = 1e9+7;\nconst ll LINF = 1e18;\n\nll dp[2005][2005]; // [l,r)における回文の最大長\nstring s;\n\nvoid solve(){\n  ll n=s.size();\n  \n  memset(dp,0,sizeof(dp));\n  rep(i,n) dp[i][i+1]=1;\n  \n  for(ll len=2; len<=n; len++){\n    for(ll i=0; i+len<=n; i++){\n      ll j=i+len;\n      if(s[i]==s[j-1]) chmax(dp[i][j],dp[i+1][j-1]+2);\n      else chmax(dp[i][j],max(dp[i+1][j],dp[i][j-1]));\n    }\n  }\n  \n  ll ma=0, l,r;\n  rep(i,n) irep(j,i,n+1){\n    if(chmax(ma,dp[i][j])) l=i, r=j;\n  }\n  \n  // cout<<dp[0][n]<<' '<<ma<<endl;\n  \n  if(ma==1){\n    cout<<s[0]<<endl;\n    return;\n  }\n  \n  string left=\"\", right=\"\";\n  while(ma>0){\n    while(dp[l+1][r]==ma) l++;\n    while(dp[l][r-1]==ma) r--;\n    left+=s[l], right+=s[l];\n    // cout<<l<<' '<<r<<' '<<ma<<endl;\n    ma-=2;\n    if(ma==1){\n      left+=s[l+1];\n      ma--;\n    }\n    l++, r--;\n  }\n\n  reverse(all(right));\n  string ans=left+right;\n  cout<<ans<<endl;\n  \n  return;\n}\n\n\nsigned main()\n{\n  cin.tie( 0 ); ios::sync_with_stdio( false );\n  \n  for(int t = 0; cin >> s; t++) {\n    solve();\n  }\n  \n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cmath>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <set>\nusing namespace std;\n\nclass NODE{\npublic:\n\tstring text;\n\tint sPos;\n\tint rPos;\n};\nbool operator<(const NODE &a,const NODE &b){\n\tpair<string,pair<int,int> >A = make_pair(a.text,make_pair(a.sPos,a.rPos));\n\tpair<string,pair<int,int> >B = make_pair(b.text,make_pair(b.sPos,b.rPos));\n\treturn A > B;\n}\nint sfind(const string &s,int a,char c){\n\tfor(int i=a;i<s.length();i++){\n\t\tif(s[i] == c)return i;\n\t}\n\treturn -1;\n}\nint main(){\n\tstring src,rev,input;\n\t\n\twhile(cin >> input){\n\t\tsrc = input;\n\t\t\n\t\trev = src; reverse(rev.begin(),rev.end());\n\t\tsrc = src.substr(0,src.length()/2);\n\t\trev = rev.substr(0,rev.length()/2);\n\t\t\n\t\tcout << src << \" \" << rev << endl;\n\t\tqueue<NODE> Q;\n\t\tNODE t = {\"\",0,0};\n\t\tQ.push(t);\t\t\n\t\tstring ret = \"\";\n\t\tset<NODE> done; \n\t\twhile(Q.size()){\n\t\t\tNODE q = Q.front();\n\t\t\tQ.pop();\n\t\t\t//cout << q.text << endl;\n\t\t\t//cout << q.sPos << \" \" << q.rPos << endl;\n\t\t\tif(q.text.length() > ret.length()){\n\t\t\t\tret = q.text;\n\t\t\t}\n\t\t\tfor(int i=q.sPos;i<src.length();i++){\n\t\t\t\tif(sfind(rev,q.rPos,src[i]) != -1){\n\t\t\t\t\tNODE next;\n\t\t\t\t\tnext.text = q.text + src[i];\n\t\t\t\t\tnext.sPos = i+1;\n\t\t\t\t\tnext.rPos = sfind(rev,i,src[i])+1;\n\t\t\t\t\tif(done.find(next) == done.end())Q.push(next);\n\t\t\t\t\t\n\t\t\t\t\tdone.insert(next);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tstring revRet = ret; reverse(revRet.begin(),revRet.end());\n\t\tcout << ret;\n\t\tif(input.length()%2)cout << input[input.length()/2];\n\t\tcout << revRet << endl;\n\t\t\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main(void){\n  string str;\n  while(getline(cin,str)){\n    string revstr;\n    for(int i=0;i<str.size();i++)revstr[str.length()-i-1]=str[i];\n  \n    string dp[2001][2001];\n    for(int i=0;i<str.size();i++){\n      for(int j=i+1;j<str.size();j++){\n\tif(str[i]==revstr[j]){\n\t  dp[i+1][j+1]=dp[i][j]+str[i];\n\t}\n\telse {\n\t  if(dp[i][j+1].size()>dp[i+1][j].size())dp[i+1][j+1]=dp[i][j+1];\n\t  else dp[i+1][j+1]=dp[i+1][j];\n\t}\n      }\n    }\n    cout << dp[str.size()-1][str.size()-1] << endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = m, j = n; i >= 1; i--) {\n    if(c[j][i] != c[j][i-1]) ret += X[i], j--;\n  }\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] == c[i-1][j-1]+1) ret += X[i],j--;\n  }\n  assert((int)ret.size()==maxl);\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<tuple>\n#include<algorithm>\nusing namespace std;\nstring S; tuple<int, int, int>dp[2100][2100];\nint solve(int s, int t) {\n\tif (get<0>(dp[s][t]) != -1)return get<0>(dp[s][t]);\n\tif (s == t) { dp[s][t] = make_tuple(1, -1, -1); return 1; }\n\tif (t - s == 1) {\n\t\tif (S[s] == S[t]) { dp[s][t] = make_tuple(2, -1, -1); return 2; }\n\t\telse { dp[s][t] = make_tuple(0, -1, -1); return 0; }\n\t}\n\tint c1 = solve(s, t - 1);\n\tint c2 = solve(s + 1, t);\n\tint c3 = solve(s + 1, t - 1); if (S[s] == S[t])c3 += 2;\n\tif (c1 >= c2 && c1 >= c3) { dp[s][t] = make_tuple(c1, s, t - 1); return c1; }\n\tif (c2 >= c1 && c2 >= c3) { dp[s][t] = make_tuple(c2, s + 1, t); return c2; }\n\tif (c3 >= c1 && c3 >= c2) { dp[s][t] = make_tuple(c3, s + 1, t - 1); return c3; }\n}\nint main() {\n\twhile (cin >> S) {\n\t\tfor (int i = 0; i < S.size(); i++) { for (int j = 0; j < S.size(); j++)dp[i][j] = make_tuple(-1, 0, 0); }\n\t\tsolve(0, S.size() - 1);\n\t\tstring V, W; int F = 0, G = S.size() - 1;\n\t\twhile (F + G >= 0) {\n\t\t\tif (S[F] == S[G]) { V += S[F]; if (F != G)W += S[G]; }\n\t\t\tint H = get<2>(dp[F][G]); F = get<1>(dp[F][G]); G = H;\n\t\t}\n\t\treverse(W.begin(), W.end());\n\t\tcout << V + W << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint mvl[2000][26];\nint mvr[2000][26];\nint dp[2000][2000];\nchar nx[2000][2000];\n\nint L;\nstring str;\n\nvoid calc()\n{\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) {\n\t\tmvl[i][j] = -1;\n\t\tmvr[i][j] = -1;\n\t}\n\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) { \n\t\tfor(int k=i; k<L; k++) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvl[i][j] = k-i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor(int k=i; k>=0; k--) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvr[i][j] = i-k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint dfs(int l, int r)\n{\n\tif(l > r) return 0;\n\tif(dp[l][r] != -1) return dp[l][r];\n\n\tint res = 0;\n\tfor(int i=0; i<26; i++) {\n\t\tif(mvl[l][i] == -1 || mvr[r][i] == -1) continue;\n\n\t\tint nl = l + mvl[l][i];\n\t\tint nr = r - mvr[r][i];\n\n\t\tif(nl >= nr) continue;\n\t\t\n\t\tint tmp = dfs(nl + 1, nr - 1) + 2;\n\t\tif(res < tmp) {\n\t\t\tres = tmp;\n\t\t\tnx[l][r] = i;\n\t\t}\n\t}\n\n\tif(res == 0) {\n\t\tif(l+1 != r) {\n\t\t\tres = 1;\n\t\t}\n\t}\n\n\tdp[l][r] = res;\n\n\treturn dp[l][r];\n}\n\nstring result(int l, int r)\n{\n\tif(str.size() == 1) return str;\n\n\tif(nx[l][r] == '$') {\n\t\tif(l==r || l+1 < r) return string(1,str[l]);\n\t\t\n\t\treturn \"\";\n\t}\n\n\tint nl = l + mvl[l][nx[l][r]];\n\tint nr = r - mvr[r][nx[l][r]];\n\n\treturn str[nl] + result(nl+1, nr-1) + str[nl];\n}\n\nint main()\n{\n\twhile(cin >> str) {\n\t\tL = str.size();\n\n\t\tfor(int i=0; i<L; i++)\n\t\tfor(int j=0; j<L; j++) {\n\t\t\tdp[i][j] = -1;\n\t\t\tnx[i][j] = '$';\n\t\t}\n\n\t\tcalc();\n\t\tdfs(0, L-1);\n\n\t\tstring res=result(0, L-1);\n\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\n\nint dp[2010][2010];\n\nint main(void){\n\tstring pa,ra;\n\twhile(cin >> pa){\n\t\tif(cin.eof())\n\t\t\tbreak;\n\n\t\tclr(dp,0);\n\t\tra=pa;\n\t\treverse(ra.begin(),ra.end());\n\t\tint n=pa.size();\n\t\trep(i,n)rep(j,n){\n\t\t\tdp[i+1][j]=max(dp[i+1][j],dp[i][j]);\n\t\t\tdp[i][j+1]=max(dp[i][j+1],dp[i][j]);\n\t\t\tdp[i+1][j+1]=max(dp[i+1][j+1],dp[i][j]+(pa[i]==ra[j]));\n\t\t}\n\t\tstring ans=\"\";\n\t\tint cur=dp[n][n];\n\t\t//dump(cur)\n\t\tfor(int i=n;i>0;){\n\t\t\tfor(int j=n;j>0;){\n\t\t\t\tif(dp[i][j]==dp[i-1][j])\n\t\t\t\t\ti--;\n\t\t\t\telse if(dp[i][j]==dp[i][j-1])\n\t\t\t\t\tj--;\n\t\t\t\telse if(dp[i][j]==dp[i-1][j-1]+1){\n\t\t\t\t\tans+=pa[i-1];\n\t\t\t\t\ti--;j--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nstring ss[2][N+1];\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  ss[0][0] = \"\";\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1, ss[i%2][j] = ss[(i-1)%2][j-1] + X[i];\n      else {\n\tif(c[i-1][j] >= c[i][j-1]) c[i][j]=c[i-1][j], ss[i%2][j] = ss[(i-1)%2][j];\n\telse c[i][j] = c[i][j-1], ss[i%2][j] = ss[i%2][j-1];\n      }\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret=ss[m%2][n],ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  assert((int)ret.size()==maxl);\n  return ss[m%2][n];\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n#include<numeric>\n#include<cassert>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define rep(i,s,n) for(int i=(s); i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n#define IN(x,s,g) ((x) >= (s) && (x) < (g))\n#define ISIN(x,y,w,h) (IN((x),0,(w)) && IN((y),0,(h)))\n#define print(x) printf(\"%d\\n\",x)\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\nconst int _dx[] = {0,1,0,-1};\nconst int _dy[] = {-1,0,1,0};\n\nint getInt(){\n  int ret = 0,c;\n  c = getchar();\n  while(!isdigit(c)) c = getchar();\n  while(isdigit(c)){\n    ret *= 10;\n    ret += c - '0';\n    c = getchar();\n  }\n  return ret;\n}\n\nint dp[2010][2010];\n\nint main(){\n  char buff[2010];\n  char ansbuff[2010];\n  char *ans;\n\n  while(~scanf(\"%s\", buff)){\n    int len = strlen(buff);\n\n    REP(i,len+1) REP(j,len+1) dp[i][j] = 0;\n\n    REP(i,len) REP(j,len){\n      if(buff[i] == buff[len - 1 - j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n      }\n      dp[i+1][j] = max(dp[i+1][j], dp[i][j]);\n      dp[i][j+1] = max(dp[i][j+1], dp[i][j]);\n    }\n    REP(i,len) dp[i+1][len] = max(dp[i+1][len], dp[i][len]);\n    REP(j,len) dp[len][j+1] = max(dp[len][j+1], dp[len][j]);\n    \n    int p1 = len;\n    int p2 = len;\n    ans = ansbuff + sizeof(ansbuff) - 1;\n\n    while(p1 != 0 || p2 != 0){\n      if(p1 != 0 && dp[p1-1][p2] == dp[p1][p2]){\n\tp1 = p1 - 1;\n      }else if(p2 != 0 && dp[p1][p2-1] == dp[p1][p2]){\n\tp2 = p2 - 1;\n      }else{\n\tassert(p1 != 0 && p2 != 0);\n\t*--ans = buff[p1-1];\n\tp1 = p1 - 1;\n\tp2 = p2 - 1;\n      }\n    }\n\n    puts(ans);\n  }\n  \n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<short,short> pii;\n\nshort dp[2001][2001];\npii to[2001][2001];\n\nstring s;\nstring s2;\nint n;\n\n// sツづ2ツづ可づつつ「ツづ、ツ催妥・ツ閉板閉ェツ暗ェツ致ツ閉カツ篠堋療アツ陳キツづーツ仰づ淞づゥ\n// ツつスツつセツつオツ、s_posツづ2_posツづーcrossツつウツつケツづづ債つ「ツつッツづ按つ「\nint dfs(int a,int b){\n\tint b_rev=n-1-b;\n\tif(b_rev<a){\n\t\tto[a][b].first=-1;\n\t\treturn 0;\n\t}\n\telse if(b_rev==a){\n\t\tto[a][b].first=-2;\n\t\treturn 1;\n\t}\n\tif(dp[a][b]!=-1)return dp[a][b];\n\tint res=0;\n\tif(s[a]==s2[b]){\n\t\tint tmp=res;\n\t\tres=max(res,dfs(a+1,b+1)+2);\n\t\tif(tmp!=res){\n\t\t\tto[a][b]=pii(a+1,b+1);\n\t\t}\n\t}\n\tint tmp=res;\n\tres=max(res,dfs(a+1,b));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a+1,b);\n\t}\n\ttmp=res;\n\tres=max(res,dfs(a,b+1));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a,b+1);\n\t}\n\treturn dp[a][b]=res;\n}\n\nint main(){\n\n\twhile(cin>>s){\n\t\tn=s.size();\n\t\tmemset(dp,-1,sizeof(dp));\n\t\ts2=s;\n\t\treverse(s2.begin(),s2.end());\n\t\tint res=dfs(0,0);\n\t\tpii cur=pii(0,0);\n\t\tstring ret;\n\t\twhile(1){\n\t\t\tpii nxt=to[cur.first][cur.second];\n\t\t\tif(nxt.first==-1){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(nxt.first==-2){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+s[cur.first]+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// diffツつェ1\n\t\t\tif(nxt.first-cur.first==1&&nxt.second-cur.second==1)\n\t\t\t\tret+=s[cur.first];\n\t\t\tcur=nxt;\n\t\t}\n\t\tcout<<ret<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <iostream>\n#include <sstream>\n#include <iomanip>\n#include <algorithm>\n#include <cmath>\n#include <string>\n#include <vector>\n#include <list>\n#include <queue>\n#include <stack>\n#include <set>\n#include <map>\n#include <bitset>\n#include <numeric>\n#include <climits>\n#include <cfloat>\nusing namespace std;\n\nint main()\n{\n    for(;;){\n        string s;\n        if (!(cin >> s))\n            return 0;\n        int n = s.size();\n\n        vector<vector<int> > dp(n, vector<int>(n, 0));\n        vector<vector<int> > next(n, vector<int>(n, -1));\n        for(int i=0; i<n; ++i)\n            dp[i][i] = 1;\n        for(int len=2; len<=n; ++len){\n            for(int a=0; a+len-1<n; ++a){\n                int b = a + len - 1;\n                dp[a][b] = dp[a+1][b];\n                if(dp[a][b-1] > dp[a][b]){\n                    dp[a][b] = dp[a][b-1];\n                    next[a][b] = 1;\n                }\n                if(s[a] == s[b] && dp[a+1][b-1] + 2 > dp[a][b]){\n                    dp[a][b] = dp[a+1][b-1] + 2;\n                    next[a][b] = 0;\n                }\n            }\n        }\n\n        string ret;\n        int a = 0;\n        int b = n-1;\n        while(a < b){\n            if(next[a][b] == -1){\n                ++ a;\n            }else if(next[a][b] == 1){\n                -- b;\n            }else{\n                ret += s[a];\n                ++ a;\n                -- b;\n            }\n        }\n\n        string t = ret;\n        reverse(t.begin(), t.end());\n        if(a == b)\n            ret += s[a];\n        ret += t;\n\n        cout << ret << endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <algorithm>\n#include <iostream>\n#include <cstring>\nusing namespace std;\nint DP[2002][2002],back[2002][2002];\n\ntemplate<typename T>\nvector<T> LCS(const vector<T> &a,const vector<T> &b){\n\tmemset(DP,0,sizeof(DP));\n\tmemset(back,1,sizeof(back));\n\tfor(int i=1;i<=(int)a.size();i++){\n\t\tfor(int j=1;j<=(int)b.size();j++){\n\t\t\tif(a[i-1]==b[j-1]){\n\t\t\t\tif(DP[i][j]<DP[i-1][j-1]+1){\n\t\t\t\t\tDP[i][j]=DP[i-1][j-1]+1;\n\t\t\t\t\tback[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(DP[i][j]<DP[i-1][j]){\n\t\t\t\tDP[i][j]=DP[i-1][j];\n\t\t\t\tback[i][j]=1;\n\t\t\t}\n\t\t\tif(DP[i][j]<DP[i][j-1]){\n\t\t\t\tDP[i][j]=DP[i][j-1];\n\t\t\t\tback[i][j]=-1;\n\t\t\t}\n\t\t}\n\t}\n\tint x=a.size(),y=b.size();\n\tvector<T> res;\n\twhile(x>0&&y>0){\n\t\tif(back[x][y]==0){\n\t\t\tres.push_back(a[x-1]);\n\t\t\tx--;y--;\n\t\t}else if(back[x][y]>0)x--;else y--;\n\t}\n\tstd::reverse(res.begin(),res.end());\n\treturn res;\n}\nstring LCS(const string &a,const string &b){\n\tvector<char> a_,b_,ret;\n\tfor(int i=0;i<(int)a.size();i++)a_.push_back(a[i]);\n\tfor(int i=0;i<(int)b.size();i++)b_.push_back(b[i]);\n\tret=LCS(a_,b_);\n\tstring res;\n\tfor(int i=0;i<(ret.size());i++)\n\t\tres+=ret[i];\n\treturn res;\n}\nint main() {\n\tstring in;\n\twhile(cin>>in){\n\t\tstring a=in;\n\t\treverse(a.begin(),a.end());\n\t\tcout<<LCS(a,in)<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\n\nint dp[2010][2010];\n\nint main(void){\n\tstring pa,ra;\n\twhile(cin >> pa){\n\t\tif(cin.eof())\n\t\t\tbreak;\n\n\t\trep(i,2010)rep(j,2010) dp[i][j]=0;\n\n\t\tra=pa;\n\t\treverse(ra.begin(),ra.end());\n\t\tint n=pa.size();\n\t\trep(i,n)rep(j,n){\n\t\t\tif(pa[i]==ra[j])\n\t\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\telse\n\t\t\t\tdp[i+1][j+1]=max(dp[i+1][j],dp[i][j+1]);\n\t\t\t\n\t\t}\n\t\tstring ans=\"\";\n\t\tint cur=dp[n][n];\n\t\t//dump(cur)\n\n\t\tfor(int i=n,j=n;i>0&&j>0;){\n\t\t\t//dump(i) dump(j)\n\t\t\tif(dp[i][j]==dp[i-1][j])\n\t\t\t\ti--;\n\t\t\telse if(dp[i][j]==dp[i][j-1])\n\t\t\t\tj--;\n\t\t\telse if(dp[i][j]==dp[i-1][j-1]+1){\n\t\t\t\tans+=pa[i-1];\n\t\t\t\ti--;j--;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\nconst int MAXLEN = 2000;\n\n/* typedef */\n\n/* global variables */\n\nstring *memo[MAXLEN][MAXLEN];\n\nint bp = 0;\nstring sbuf[MAXLEN * MAXLEN];\n\nstring empty;\n\n/* subroutines */\n\nstring *rec(string& str, int i0, int i1) {\n  if (memo[i0][i1]) return memo[i0][i1];\n\n  if (i0 + 1 == i1) {\n    if (str[i0] == str[i1])\n      *(memo[i0][i1] = sbuf + bp++) = str.substr(i0, 2);\n    else\n      memo[i0][i1] = &empty;\n    return memo[i0][i1];\n  }\n\n  string maxstr, s;\n  int j0, j1;\n  \n  for (j1 = i1; str[i0] != str[j1]; j1--);\n  if (i0 + 1 < j1) {\n    s = str.substr(i0, 1) + *rec(str, i0 + 1, j1 - 1) + str.substr(j1 , 1);\n  }\n  else if (i0 + 1 == j1)\n    s = str.substr(i0, 2);\n  else\n    s = str.substr(i0, 1);\n\n  if (maxstr.length() < s.length()) maxstr = s;\n\n  for (j0 = i0; str[j0] != str[i1]; j0++);\n  if (j0 + 1 < i1) {\n    s = str.substr(j0, 1) + *rec(str, j0 + 1, i1 - 1) + str.substr(i1 , 1);\n  }\n  else if (j0 + 1 == i1)\n    s = str.substr(j0, 2);\n  else\n    s = str.substr(j0, 1);\n\n  if (maxstr.length() < s.length()) maxstr = s;\n  \n  s = *rec(str, i0 + 1, i1 - 1);\n  if (maxstr.length() < s.length()) maxstr = s;\n  \n  *(memo[i0][i1] = sbuf + bp++) = maxstr;\n  return memo[i0][i1];\n}\n\n/* main */\n\nint main() {\n  for (;;) {\n    string str;\n    cin >> str;\n    if (cin.eof()) break;\n\n    memset(memo, 0, sizeof(memo));\n    bp = 0;\n\n    for (int i = 0; i < str.length(); i++)\n      *(memo[i][i] = sbuf + bp++) = str.substr(i, 1);\n\n    cout << *rec(str, 0, str.length() - 1) << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <cstring>\nusing namespace std;\n#define REP(i,n) for (int i=0;i<(int)n; ++i)\n\nstring s;\nstring memo[2000][2001];\n\nbool memo2[2000][2001];\n\nstring rec(int l, int r) {\n  if (l>=r) return \"\"; \n  if (memo[l][r].size()) return memo[l][r];\n\n  string res;\n  bool seen[26] = {};\n  int pos[26];\n  memset(pos,-1,sizeof(pos));\n  for (int i=r-1; i>=l; --i) {\n    if (pos[s[i]-'A'] < 0) {\n      pos[s[i]-'A'] = i;\n    }\n  }\n  for (int i=l; i<r; ++i) {\n    int c = s[i]-'A';\n    if (seen[c]) continue;\n    seen[c] = 1;\n    if (pos[c]>=0) {\n      if (i>pos[c]) continue;\n      string tmp = rec(i+1, pos[c]);\n      if (res.size() < tmp.size() + 1) {\n        tmp.push_back(s[i]);\n        res = tmp;\n      }\n    }\n  }\n  return memo[l][r] = res;\n}\n\nint main() {\n  while(cin >> s) {\n\n    REP(j,s.size()+1)REP(i,j)memo[i][j]=\"\";\n    string res = rec(0, s.size());\n\n    string res2 = res;\n    reverse(res.begin(), res.end());\n    \n    int l=0, r=s.size()-1;\n    bool f = 0;\n    for (int cnt =0;cnt<res.size() ;++cnt) {\n      while(s[l]!=res[cnt])l++;\n      while(s[r]!=res[cnt])r--;\n      if (cnt==res.size()-1) {\n        if (l==r)\n          f = 1;\n      }\n      l++;r--;\n    }\n\n    if (f) {\n      res2.erase(res2.begin());\n    }\n    cout << res << res2 << endl;\n  }\n         \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\n#define index_of(as, x) distance(as.begin(),lower_bound(as.begin(),as.end(),x))\n\nint main() {\n    vector <int> test(10, 3);\n    index_of( test, 1 );\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nstring solve(const string &s){\n\tint n=s.length();\n\tstatic int dp[2001][2001],from[2001][2001];\n\n\trep(i,n+1) dp[i][0]=dp[0][i]=0, from[i][0]=from[0][i]=-1;\n\n\trep(i,n) rep(j,n-i) {\n\t\tif(s[i]==s[n-j-1]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}\n\t\telse{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint len=0,i_len[2];\n\tfor(int i=1;i<n;i++){\n\t\tint tmp=2*dp[i][n-i];\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i;\n\t\t}\n\n\t\ttmp=2*dp[i][n-i-1]+1;\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i-1;\n\t\t}\n\t}\n\n\tint idx=dp[i_len[0]][i_len[1]];\n\tstring ans(idx,'@');\n\tfor(int i=i_len[0],j=i_len[1];~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0: i--; break;\n\t\t\tcase 1: j--; break;\n\t\t\tcase 2: i--; j--; idx--; ans[idx]=s[i]; break;\n\t\t}\n\t}\n\tif(len%2==1) ans+=s[i_len[0]];\n\trep(i,len/2) ans+=ans[len/2-i-1];\n\n\treturn ans;\n}\n\nint main(){\n\tfor(char s[2001];~scanf(\"%s\",s);) puts(solve(s).c_str());\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <cstring>\nusing namespace std;\n#define REP(i,n) for (int i=0;i<(int)n; ++i)\n\nstring s;\nint memo[2000][2000];\nbool memo2[2000][2000];\nint memo3[2000][2000];\n\nint rec(int l, int r) {\n  if (l>r) return 0; \n  if (memo2[l][r]) return memo[l][r];\n  memo2[l][r] = 1;\n  if (s[l] == s[r]) {\n    memo3[l][r] = 0;\n    return memo[l][r] = rec(l+1,r-1) + 1;\n  } else {\n    int tmp1 = rec(l+1, r);\n    int tmp2 = rec(l, r-1);\n\n    if (tmp1<tmp2) {\n      memo3[l][r] = 1;\n      return memo[l][r] = tmp2;\n    } else {\n      memo3[l][r] = -1;\n      return memo[l][r] = tmp1;  \n    }\n  }\n}\n\n\nint main() {\n  while(cin >> s) {\n    memset(memo2,0,sizeof(memo2));\n    rec(0, s.size()-1);\n\n    string res;\n    bool f = 0;\n    for (int l=0, r=s.size()-1; l<=r;) {\n      if (memo3[l][r]>0) r--;\n      else if (memo3[l][r]<0) l++;\n      else {\n        if (l==r) f = 1;\n        res += string(1,s[l]);\n        r--;l++;\n      }\n    }\n    string res2 = res;\n    reverse(res2.begin(), res2.end());\n    \n\n    if (f) {\n       res2.erase(res2.begin());\n    }\n     cout << res << res2 << endl;\n  }\n         \n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\nusing namespace std;\n#define REP(i,n) for (int i=0;i<(int)n; ++i)\n\nstring s;\nstring memo[2000][2001];\n\nbool memo2[2000][2001];\n\nstring rec(int l, int r) {\n  if (l>=r) return \"\"; \n  if (memo[l][r].size()) return memo[l][r];\n  string res;\n  for (int i=l; i<r; ++i) {\n    for (int j=r-1; j>=i; --j) {\n      if (s[i]==s[j]) {\n        string tmp = rec(i+1, j);\n        if (res.size() < tmp.size() + 1) {\n          tmp.push_back(s[i]);\n          res = tmp;\n        }\n          \n        break;\n      }\n    }\n  }\n  return memo[l][r] = res;\n}\n\nint main() {\n  while(cin >> s) {\n\n    REP(j,s.size()+1)REP(i,j)memo[i][j]=\"\";\n    string res = rec(0, s.size());\n\n    string res2 = res;\n    reverse(res.begin(), res.end());\n    \n    int l=0, r=s.size()-1;\n    bool f = 0;\n    for (int cnt =0;cnt<res.size() ;++cnt) {\n      while(s[l]!=res[cnt])l++;\n      while(s[r]!=res[cnt])r--;\n      if (cnt==res.size()-1) {\n        if (l==r)\n          f = 1;\n      }\n      l++;r--;\n    }\n\n    if (f) {\n      res2.erase(res2.begin());\n    }\n    cout << res << res2 << endl;\n  }\n         \n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(a) (a).begin(),(a).end()\nusing namespace std;\n\nint main(){\n  string s;\n  while(cin >> s){\n    int n = s.size();\n    string r = s;\n    reverse(all(r));\n\n    vector< vector<int> > dp(n+1,vector<int>(n+1,0));\n    rep(i,n){\n      rep(j,n){\n\tif(s[i] == r[j])dp[i+1][j+1] = dp[i][j]+1;\n\telse dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);\n      }\n    }\n\n    int m = (dp[n][n]+1)/2;\n    string pal;\n    int a = n, b = n;\n    while(a!=0 && b!=0 && (int)pal.size()<m){\n      if(a>0 && b>0 && dp[a][b] == dp[a-1][b-1]+1 && s[a-1]==r[b-1]){\n\tpal += s[a-1]; a--; b--;\n      }else if(a>0 && dp[a][b] == dp[a-1][b]){\n\ta--;\n      }else if(b>0 && dp[a][b] == dp[a][b-1]){\n\tb--;\n      }else{\n\texit(1);\n      }\n    }\n    \n    for(int i=dp[n][n]/2-1;i>=0;i--)pal += pal[i];\n    cout << pal << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <string>\n#include <iostream>\n#include <algorithm>\nusing namespace std;\nstring s; int dp[2009][2009];\nint main() {\n\twhile (cin >> s) {\n\t\tint n = s.size();\n\t\tfor (int i = 0; i < n; i++) dp[i][i + 1] = 1;\n\t\tfor (int i = 2; i <= n; i++) {\n\t\t\tfor (int l = 0; l <= n - i; l++) {\n\t\t\t\tint r = l + i;\n\t\t\t\tdp[l][r] = max(dp[l + 1][r], dp[l][r - 1]);\n\t\t\t\tif (s[l] == s[r - 1]) dp[l][r] = max(dp[l][r], dp[l + 1][r - 1] + 2);\n\t\t\t}\n\t\t}\n\t\tstring ret;\n\t\tint pl = 0, pr = n;\n\t\twhile (pr - pl >= 2) {\n\t\t\tif (s[pl] == s[pr - 1] && dp[pl][pr] == dp[pl + 1][pr - 1] + 2) ret += s[pl], pl++, pr--;\n\t\t\telse if (dp[pl][pr] == dp[pl + 1][pr]) pl++;\n\t\t\telse pr--;\n\t\t}\n\t\tstring ps = ret;\n\t\tif (pr - pl == 1) ps += s[pl];\n\t\treverse(ret.begin(), ret.end());\n\t\tps += ret;\n\t\tcout << ps << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <cmath>\n#include <algorithm>\n#include <cfloat>\n#include <stack>\n#include <queue>\n#include <vector>\n#include <string>\n#include <iostream>\n#include <set>\n#include <map>\ntypedef long long int ll;\ntypedef unsigned long long int ull;\n#define BIG_NUM 2000000000\n#define MOD 1000000007\n#define EPS 0.000000001\nusing namespace std;\n\n\nint dp[2001][2001];\nint memo[2001][2001];\n\nint main(){\n\n\tint length;\n\tchar buf[2001],reverse[2001];\n\tstack<char> ANS;\n\n\twhile(scanf(\"%s\",buf) != EOF){\n\n\t\tfor(length = 0; buf[length] != '\\0'; length++);\n\n\t\tfor(int i = 0; i < length; i++){\n\t\t\treverse[i] = buf[length-1-i];\n\t\t}\n\t\treverse[length] = '\\0';\n\n\t\tfor(int i = 0; i <= length; i++){\n\t\t\tfor(int k = 0; k <= length; k++){\n\t\t\t\tdp[i][k] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < length; i++){\n\t\t\tfor(int k = 0; k < length; k++){\n\t\t\t\tif(buf[i] == reverse[k]){\n\t\t\t\t\tdp[i+1][k+1] = dp[i][k]+1;\n\t\t\t\t\tmemo[i+1][k+1] = 0;\n\t\t\t\t}else{\n\t\t\t\t\tif(dp[i][k+1] >= dp[i+1][k]){\n\t\t\t\t\t\tdp[i+1][k+1] = dp[i][k+1];\n\t\t\t\t\t\tmemo[i+1][k+1] = 1;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdp[i+1][k+1] = dp[i+1][k];\n\t\t\t\t\t\tmemo[i+1][k+1] = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = length,k = length; i > 0 && k > 0;){\n\n\t\t\tif(memo[i][k] == 1){\n\t\t\t\ti--;\n\t\t\t}else if(memo[i][k] == -1){\n\t\t\t\tk--;\n\t\t\t}else{ //memo[i][k] == 0\n\t\t\t\tANS.push(buf[i-1]);\n\t\t\t\ti--;\n\t\t\t\tk--;\n\t\t\t}\n\t\t}\n\n\t\twhile(!ANS.empty()){\n\t\t\tprintf(\"%c\",ANS.top());\n\t\t\tANS.pop();\n\t\t}\n\n\t\tprintf(\"\\n\");\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret,ret2;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] == c[i-1][j-1]+1) ret += X[i],ret2+=Y[i],j--;\n  }\n  string ret3=ret2;\n  reverse(ret3.begin(),ret3.end());\n  if(ret3==ret2) return ret2;\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] == c[i-1][j-1]+1) ret += X[i],j--;\n  }\n  string ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  assert(ret==ret2);\n  assert((int)ret.size()==maxl);\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nstring solve(const string &s){\n\tint n=s.length();\n\tstatic int dp[2001][2001],from[2001][2001];\n\n\trep(i,n+1) dp[i][0]=dp[0][i]=0, from[i][0]=from[0][i]=-1;\n\n\trep(i,n) rep(j,n) {\n\t\tif(s[i]==s[n-j-1]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}\n\t\telse{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint len=0,i_len[2];\n\tfor(int i=1;i<n;i++){\n\t\tint tmp=2*dp[i][n-i];\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i;\n\t\t}\n\n\t\ttmp=2*dp[i][n-i-1]+1;\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i-1;\n\t\t}\n\t}\n\n\tint idx=dp[i_len[0]][i_len[1]];\n\tstring ans(idx,'@');\n\tfor(int i=i_len[0],j=i_len[1];~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0: i--; break;\n\t\t\tcase 1: j--; break;\n\t\t\tcase 2: i--; j--; idx--; ans[idx]=s[i]; break;\n\t\t}\n\t}\n\tif(len%2==1) ans+=s[i_len[0]];\n\trep(i,len/2) ans+=ans[len/2-i-1];\n\n\treturn ans;\n}\n\nint main(){\n\tfor(char s[2001];~scanf(\"%s\",s);) puts(solve(s).c_str());\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <string>\n \nusing namespace std;\n \nshort dp[2048][2048];\nshort same[2048][2048];\n\nint main()\n{\n    char s1[2048], s2[2048];\n     \n    while (scanf(\"%s\", s1) == 1){\n        int len = strlen(s1);\n\t\tfor (int i = 0; s1[i]; i++) s2[len - i - 1] = s1[i];\n         \n        memset(dp, 0, sizeof(dp));\n         \n        for (int i = 1; i <= len; i++){\n            for (int j = 1; j <= len; j++){\n                if (s1[i - 1] == s2[j - 1]){\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n\t\t\t\t\tsame[i][j] = 0;\n\t\t\t\t}\n                else {\n                    if (dp[i - 1][j] > dp[i][j - 1]){\n\t\t\t\t\t\tsame[i][j] = -1;\n\t\t\t\t\t\tdp[i][j] = dp[i - 1][j];\n                    }\n\t\t\t\t\telse {\n\t\t\t\t\t\tsame[i][j] = 1;\n\t\t\t\t\t\tdp[i][j] = dp[i][j - 1];\n\t\t\t\t\t}\n\t\t\t\t}\n            }\n        }\n\t\t\n\t\tfor (int i = len, j = len; i && j;){\n\t\t\tif (!same[i][j]){\n\t\t\t\tprintf(\"%c\", s1[i - 1]);\n\t\t\t\ti--; j--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsame[i][j] < 0 ? (i--) : (j--);\n\t\t\t}\n\t\t}\n\t\tprintf(\"\\n\");\n    }\n     \n    return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define repi(i,a,b) for(int i = (int)(a); i < (int)(b); i++)\n#define rep(i,n) repi(i,0,n)\n\nstring S;\nint dp[2222][2222];\nint trans[2222][2222];\n\nint rec(int L, int R) {\n  int& ret = dp[L][R];\n  if(ret + 1) return ret;\n  if(L == R) return ret = 1;\n  if(L > R) return ret = 0;\n  if(S[L] == S[R]) {\n    trans[L][R] = 0;\n    return ret = rec(L + 1, R - 1) + 2;\n  }\n\n  int r1 = rec(L + 1, R);\n  int r2 = rec(L, R - 1);\n\n  if(r1 > r2) {\n    trans[L][R] = 1;\n    return ret = r1;\n  }\n  else {\n    trans[L][R] = 2;\n    return ret = r2;\n  }\n\n}\n\nint main() {\n  while(cin >> S) {\n\n    for(int i=0; i<2222; i++)\n      for(int j=0; j<2222; j++)\n        dp[i][j] = -1;\n\n    int N = S.size();\n    rec(0, N);\n    int L = 0, R = N;\n    string res;\n    while(L < R) {\n      if(trans[L][R] == 0) {\n        res += S[L];\n        L ++, R --;\n      }\n      if(trans[L][R] == 1) {\n        L ++;\n      }\n      if(trans[L][R] == 2) {\n        R --;\n      }\n    }\n    cout << res;\n    reverse(res.begin(), res.end());\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint mvl[2000][26];\nint mvr[2000][26];\nint dp[2000][2000];\nchar nx[2000][2000];\n\nint L;\nstring str;\n\nvoid calc()\n{\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) {\n\t\tmvl[i][j] = -1;\n\t\tmvr[i][j] = -1;\n\t}\n\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) { \n\t\tfor(int k=i; k<L; k++) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvl[i][j] = k-i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor(int k=i; k>=0; k--) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvr[i][j] = i-k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint dfs(int l, int r)\n{\n\tif(l > r) return 0;\n\tif(dp[l][r] != -1) return dp[l][r];\n\n\tint res = 0;\n\tfor(int i=0; i<26; i++) {\n\t\tif(mvl[l][i] == -1 || mvr[r][i] == -1) continue;\n\n\t\tint nl = l + mvl[l][i];\n\t\tint nr = r - mvr[r][i];\n\n\t\tif(nl >= nr) continue;\n\t\t\n\t\tint tmp = dfs(nl + 1, nr - 1) + 2;\n\t\tif(res < tmp) {\n\t\t\tres = tmp;\n\t\t\t\n\t\t\tnx[l][r] = i;\n\t\t}\n\t}\n\n\tif(res == 0) {\n\t\tif(l <= r) {\n\t\t\tres = 1;\n\t\t}\n\t}\n\n\tdp[l][r] = res;\n\n\treturn dp[l][r];\n}\n\nstring result(int l, int r)\n{\n\tif(nx[l][r] == '$') {\n\t\tif(l <= r) return string(1,str[l]);\n\t\t\n\t\treturn \"\";\n\t}\n\n\tint nl = l + mvl[l][nx[l][r]];\n\tint nr = r - mvr[r][nx[l][r]];\n\n\treturn str[nl] + result(nl+1, nr-1) + str[nl];\n}\n\nint main()\n{\n\twhile(cin >> str) {\n\t\tL = str.size();\n\n\t\tfor(int i=0; i<L; i++)\n\t\tfor(int j=0; j<L; j++) {\n\t\t\tdp[i][j] = -1;\n\t\t\tnx[i][j] = '$';\n\t\t}\n\n\t\tcalc();\n\t\tdfs(0, L-1);\n\n\t\tstring res=result(0, L-1);\n\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 2000;\n\nint dp[N+1][N+1];\nint p[N+1][N+1];\n\n\nstring lcs(string a, string b){\n  int size = (int)a.size();\n  //vector< vector<int> > dp(size+1, vector<int>(size+1));\n  //vector< vector<int> > p(size+1, vector<int>(size+1));\n  fill(dp[0], dp[N+1], 0);\n  fill(p[0], p[N+1], 0);\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\nusing namespace std;\n#define repi(i,a,b) for(int i = (int)(a); i < (int)(b); i++)\n#define rep(i,n) repi(i,0,n)\n \nstring S;\nint dp[2222][2222];\nint trans[2222][2222];\n\nint rec(int L, int R) {\n  int& ret = dp[L][R];\n  if(ret + 1) return ret;\n  int& recons = trans[L][R];\n  if(L > R) return ret = 0;\n  if(S[L] == S[R]) {\n    recons = 0;\n    return ret = rec(L + 1, R - 1) + (L == R ? 1 : 2);\n  }\n \n  int r1 = rec(L + 1, R);\n  int r2 = rec(L, R - 1);\n \n  if(r1 > r2) {\n    recons = 1;\n    return ret = r1;\n  }\n  else {\n    recons = 2;\n    return ret = r2;\n  }\n \n}\n \nint main() {\n  while(cin >> S) {\n \n    for(int i=0; i<2222; i++)\n      for(int j=0; j<2222; j++)\n        dp[i][j] = trans[i][j] = -1;\n \n    int N = S.size();\n    rec(0, N);\n    int L = 0, R = N;\n    string res;\n    while(L < R) {\n      if(trans[L][R] == 0) res += S[L], L ++, R --;\n      if(trans[L][R] == 1) L ++;\n      if(trans[L][R] == 2) R --;\n    }\n    cout << res;\n    if(L == R) cout << S[L];\n    reverse(res.begin(), res.end());\n    cout << res << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\n//const int N = 2000;\n\nstring lcs(string a, string b){\n  int size = (int)a.size();\n  vector< vector<int> > dp(size+1, vector<int>(size+1));\n  vector< vector<int> > p(size+1, vector<int>(size+1));\n  if(size > 2000) while(1);\n  //int dp[N+1][N+1];\n  //int p[N+1][N+1];\n  //fill(dp[0], dp[N+1], 0);\n  //fill(p[0], p[N+1], 0);\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <map>\n#include <set>\n#include <cstring>\nusing namespace std;\n#define REP(i,n) for (int i=0;i<(int)n; ++i)\n\nstring s;\nint memo[2000][2000];\nbool memo2[2000][2000];\nint memo3[2000][2000];\n\nint rec(int l, int r) {\n  if (l>r) return 0; \n  if (memo2[l][r]) return memo[l][r];\n  memo2[l][r] = 1;\n  if (s[l] == s[r]) {\n    memo3[l][r] = 0;\n    if (l==r)\n      return memo[l][r] = rec(l+1,r-1) + 1;\n    else\n      return memo[l][r] = rec(l+1,r-1) + 2;\n  } else {\n    int tmp1 = rec(l+1, r);\n    int tmp2 = rec(l, r-1);\n\n    if (tmp1<tmp2) {\n      memo3[l][r] = 1;\n      return memo[l][r] = tmp2;\n    } else {\n      memo3[l][r] = -1;\n      return memo[l][r] = tmp1;  \n    }\n  }\n}\n\n\nint main() {\n  while(cin >> s) {\n    memset(memo2,0,sizeof(memo2));\n    rec(0, s.size()-1);\n\n    string res;\n    bool f = 0;\n    for (int l=0, r=s.size()-1; l<=r;) {\n      if (memo3[l][r]>0) r--;\n      else if (memo3[l][r]<0) l++;\n      else {\n        if (l==r) f = 1;\n        res += string(1,s[l]);\n        r--;l++;\n      }\n    }\n    string res2 = res;\n    reverse(res2.begin(), res2.end());\n    \n\n    if (f) {\n       res2.erase(res2.begin());\n    }\n     cout << res << res2 << endl;\n  }\n         \n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<tuple>\n#include<algorithm>\nusing namespace std;\nstring S; tuple<int, int, int>dp[2100][2100];\nint solve(int s, int t) {\n\tif (s > t)return 0;\n\tif (get<0>(dp[s][t]) != -1)return get<0>(dp[s][t]);\n\tif (s == t) { dp[s][t] = make_tuple(1, -1, -1); return 1; }\n\tif (t - s == 1) {\n\t\tif (S[s] == S[t]) { dp[s][t] = make_tuple(2, -1, -1); return 2; }\n\t}\n\tint c1 = solve(s, t - 1);\n\tint c2 = solve(s + 1, t);\n\tint c3 = solve(s + 1, t - 1); if (S[s] == S[t])c3 += 2;\n\tif (c1 >= c2 && c1 >= c3) { dp[s][t] = make_tuple(c1, s, t - 1); return c1; }\n\tif (c2 >= c1 && c2 >= c3) { dp[s][t] = make_tuple(c2, s + 1, t); return c2; }\n\tif (c3 >= c1 && c3 >= c2) { dp[s][t] = make_tuple(c3, s + 1, t - 1); return c3; }\n}\nint main() {\n\twhile (cin >> S) {\n\t\tfor (int i = 0; i < S.size(); i++) { for (int j = 0; j < S.size(); j++)dp[i][j] = make_tuple(-1, 0, 0); }\n\t\tsolve(0, S.size() - 1);\n\t\tstring V, W; int F = 0, G = S.size() - 1;\n\t\twhile (F + G >= 0) {\n\t\t\tint H = get<1>(dp[F][G]), I = get<2>(dp[F][G]);\n\t\t\tif (H == -1 || ((H - F) + (G - I)) == 2) {\n\t\t\t\tV += S[F]; if (((H - F) + (G - I)) == 2)W += S[F];\n\t\t\t}\n\t\t\tF = H; G = I;\n\t\t}\n\t\treverse(W.begin(), W.end());\n\t\tcout << V + W << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\nint dp[1024][1024];\n\nint main()\n{\n\tchar s[2048];\n\t\n\twhile (scanf(\"%s\", s) == 1){\n\t\tchar s1[1024], s2[1024];\n\t\tint len = strlen(s);\n\t\tstrncpy(s1, s, len / 2);\n\t\tstrrev(s);\n\t\tstrncpy(s2, s, len / 2);\n\t\ts1[len / 2] = s2[len / 2] = '\\0';\n\t\t\n\t\tmemset(dp, 0, sizeof(dp));\n\t\t\n\t\tstring m[2][1024];\n\t\t\n\t\tfor (int i = 0; i < 1024; i++){\n\t\t\tm[0][i] = m[1][i] = \"\";\n\t\t}\n\t\t\n\t\tfor (int i = 1; i <= len / 2; i++){\n\t\t\tfor (int j = 1; j <= len / 2; j++){\n\t\t\t\tif (s1[i - 1] == s2[j - 1]){\n\t\t\t\t\tdp[i][j] = dp[i - 1][j - 1] + 1;\n\t\t\t\t\tm[i & 1][j] = m[(i + 1) & 1][j - 1] + s1[i - 1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);\n\t\t\t\t\tif (m[i & 1][j - 1].size() > m[(i + 1) & 1][j].size()){\n\t\t\t\t\t\tm[i & 1][j] = m[i & 1][j - 1];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tm[i & 1][j] = m[(i + 1) & 1][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchar ans[1024];\n\t\tstrcpy(ans, m[(len / 2) & 1][len / 2].c_str());\n\t\tprintf(\"%s\", ans);\n\t\tif (len & 1) printf(\"%c\", s[len / 2]);\n\t\tstrrev(ans);\n\t\tprintf(\"%s\\n\", ans);\n\t}\n\t\n\treturn (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2001;\n\nstring lcs(string a, string b){\n  int dp[N+1][N+1];\n  int p[N+1][N+1];\n  fill(dp[0], dp[N+1], 0);\n  int size = (int)a.size();\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define N 2005\nusing namespace std;\nstring s,t,ans;\nint dp[N][N];\n\nvoid dfs(int y,int x){\n  if(!y||!x)return;\n  if(dp[y][x]-dp[y-1][x-1]==1&&dp[y][x]-dp[y-1][x]==1&&dp[y][x]-dp[y][x-1]==1){\n    ans+=s[y-1];\n    dfs(y-1,x-1);\n    return;\n  }\n  if(dp[y-1][x]==dp[y][x])dfs(y-1,x);\n  else dfs(y,x-1);\n}\n\nint main(){\n  while(cin>>s){\n    t=s;\n    reverse(t.begin(),t.end());\n    memset(dp,0,sizeof(dp));\n    int n=s.size(),m=t.size();\n    for(int i=0;i<n;i++){\n      for(int j=0;j<m;j++){\n\tif(s[i]==t[j])dp[i+1][j+1]=dp[i][j]+1;\n\telse dp[i+1][j+1]=max(dp[i][j+1],dp[i+1][j]);\n      }\n    }\n    ans=\"\";\n    dfs(n,m);\n    string temp=ans;\n    reverse(temp.begin(),temp.end());\n    assert(ans==temp);\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <iterator>\n#include <map>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) \\\n    distance(as.begin(),lower_bound(as.begin(),as.end(),x))\nconst int inf = 1<<8;\ntypedef short INT;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        M[b[i]].push_back(i);\n    }\n    vector <INT> xs(n+1, inf); \n    xs[0] = -inf;\n    vector <Node*> link(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            vector <INT> ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n\nusing namespace std;\n\n#define FOR(i,a,b) for(int i=(a);i<(int)(b);++i)\n#define RALL(a) (a).rbegin(),(a).rend()\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\n\n\nstring reverseLcs(string & a, string & b, vvi & dp, size_t i, size_t j)\n{\n    if (i == 0 || j == 0) {\n        return \"\";\n    }\n\n    if (a.at(i - 1) == b.at(j - 1)) {\n        return reverseLcs(a, b, dp, i - 1, j - 1) + a.at(i - 1);\n    } else {\n        if (dp[i - 1][j] == dp[i][j]) {\n            return reverseLcs(a, b, dp, i - 1, j);\n        } else {\n            return reverseLcs(a, b, dp, i, j - 1);\n        }\n    }\n}\n\nstring lcs(string & a, string & b)\n{\n    vvi dp(a.size() + 1, vi(b.size() + 1));\n\n    FOR(i, 1, dp.size()) {\n        FOR(j, 1, dp[0].size()) {\n            if (a.at(i - 1) == b.at(j - 1)) {\n                dp[i][j] = dp[i - 1][j - 1] + 1;\n            } else {\n                dp[i][j] = max(dp[i - 1][j],\n                               dp[i][j - 1]);\n            }\n        }\n    }\n\n    return reverseLcs(a, b, dp, a.length(), b.length());\n}\n\nint main()\n{\n    string str;\n    while (cin >> str) {\n        string rstr(RALL(str));\n        cout << lcs(str, rstr) << endl;\n    }\n\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define N 2005\nusing namespace std;\nstring s,t,ans;\nint dp[N][N];\n\nvoid dfs(int y,int x){\n  if(!y||!x)return;\n  if(dp[y][x]-dp[y-1][x-1]==1&&dp[y][x]-dp[y-1][x]==1&&dp[y][x]-dp[y][x-1]==1){\n    ans+=s[y-1];\n    dfs(y-1,x-1);\n    return;\n  }\n  if(dp[y][x-1]==dp[y][x])dfs(y,x-1);\n  else dfs(y-1,x);\n}\n\nint main(){\n  //IAIDDAII\n\n    while(cin>>s){\n      //s.resize(8);\n      //for(int i=0;i<8;i++) s[i]='A'+(rand())%10;\n      t=s;\n    reverse(t.begin(),t.end());\n    memset(dp,0,sizeof(dp));\n    int n=s.size(),m=t.size();\n    for(int i=0;i<n;i++){\n      for(int j=0;j<m;j++){\n\tif(s[i]==t[j])dp[i+1][j+1]=dp[i][j]+1;\n\telse dp[i+1][j+1]=max(dp[i][j+1],dp[i+1][j]);\n      }\n    }\n    ans=\"\";\n    dfs(n,m);\n    if(ans.size()%2==0){\n      ans=ans.substr(0,ans.size()/2);\n      string tmp=ans;reverse(tmp.begin(),tmp.end());\n      ans=ans+tmp;\n    }\n    else {\n      string tmp=ans.substr(0,ans.size()/2);\n      reverse(tmp.begin(),tmp.end());\n      ans=ans.substr(0,ans.size()/2)+ans[ans.size()/2]+tmp;\n    }\n    string temp=ans;\n    reverse(temp.begin(),temp.end());\n    assert(ans==temp);\n    cout<<ans<<endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <array>\n#include <string>\n#include <stack>\n#include <queue>\n#include <deque>\n#include <map>\n#include <unordered_map>\n#include <set>\n#include <unordered_set>\n#include <tuple>\n#include <bitset>\n#include <memory>\n#include <cmath>\n#include <algorithm>\n#include <functional>\n#include <iomanip>\n#include <numeric>\n#include <climits>\n#include <cfloat>\n\n\n\nint cal_longest_palindrome_subsequence(const std::string& str, const int left, const int right, std::vector<std::vector<int>>& memo) {\n\tif (left > right) return 0;\n\tif (left == right) return 1;\n\tif (memo[left][right - left - 1] >= 0) return memo[left][right - left - 1];\n\tif (str[left] == str[right]) memo[left][right - left - 1] = cal_longest_palindrome_subsequence(str, left + 1, right - 1, memo) + 2;\n\treturn memo[left][right - left - 1] = std::max({ memo[left][right - left - 1], cal_longest_palindrome_subsequence(str, left + 1, right, memo), cal_longest_palindrome_subsequence(str, left, right - 1, memo) });\n}\nstd::string make_longest_palindorome(const std::string& str) {\n\tstd::string prev_half;\n\tstd::vector<std::vector<int>> memo; memo.reserve(str.size());\n\tfor (auto i = 0; i < str.size(); ++i) memo.push_back(std::vector<int>(str.size() - i, -1));\n\tfor (int left = 0, right = str.size() - 1; left <= right; ) {\n\t\tif (str[left] == str[right]) {\n\t\t\tprev_half.push_back(str[left]); ++left; --right;\n\t\t}\n\t\telse if (cal_longest_palindrome_subsequence(str, left + 1, right, memo) > cal_longest_palindrome_subsequence(str, left, right - 1, memo)) {\n\t\t\t++left;\n\t\t}\n\t\telse {\n\t\t\t--right;\n\t\t}\n\t}\n\tconst auto result_length = cal_longest_palindrome_subsequence(str, 0, str.size() - 1, memo);\n\tif (result_length % 2 == 1) {\n\t\tfor (int i = prev_half.size() - 2; i >= 0; --i) prev_half.push_back(prev_half[i]);\n\t}\n\telse {\n\t\tfor (int i = prev_half.size() - 1; i >= 0; --i) prev_half.push_back(prev_half[i]);\n\t}\n\treturn prev_half;\n}\n\nint main() {\n\tstd::string str;\n\twhile (std::cin >> str) {\n\t\tstd::cout << make_longest_palindorome(str) << '\\n';\n\t}\n}\n"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <cassert>\nusing namespace std;\n\nint dp[2005][2005];\nstring input;\n\nint rec(int left,int right) {\n    if(dp[left][right] != -1) return dp[left][right];\n    if(left == right) return dp[left][right] = 1;\n    if(left+1 == right) {\n        if(input[left] == input[right]) return dp[left][right] = 2;\n        else return dp[left][right] = 0;\n    }\n\n    int ret = 0;\n    if(input[left] == input[right])\n        ret = 2 + rec(left+1,right-1);\n\n    ret = max(ret, rec(left+1,right));\n    ret = max(ret, rec(left,right-1));\n    return dp[left][right] = ret;\n}\n\nstring traverse(int left,int right) {\n    if(dp[left][right] == 0) return \"\";\n    if(left == right) return string(1,input[left]);\n    if(left+1 == right) {\n        if(dp[left][right] == 2)\n            return string(1,input[left]) + string(1,input[right]);\n        return \"\";\n    }\n\n    int r1 = 0;\n    if(input[left] == input[right]) r1 = 2 + rec(left+1,right-1);\n    int r2 = dp[left][right-1];\n    int r3 = dp[left+1][right];\n\n    if(r1 > r2 && r1 > r3) {\n        string k = string(1,input[left]);\n        return k + traverse(left+1,right-1) + k;\n    }else if(r2 > r1 && r2 > r3) {\n        return traverse(left,right-1);\n    }else{\n        return traverse(left+1,right);\n    }\n}\n\nint main() {\n    while(cin>>input) {\n        memset(dp, -1, sizeof(dp));\n        rec(0,input.length()-1);\n        cout<<traverse(0,input.length()-1)<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint mvl[2000][26];\nint mvr[2000][26];\nint dp[2000][2000];\nchar nx[2000][2000];\n\nint L;\nstring str;\n\nvoid calc()\n{\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) {\n\t\tmvl[i][j] = -1;\n\t\tmvr[i][j] = -1;\n\t}\n\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) { \n\t\tfor(int k=i; k<L; k++) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvl[i][j] = k-i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor(int k=i; k>=0; k--) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvr[i][j] = i-k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint dfs(int l, int r)\n{\n\tif(l > r) return 0;\n\tif(dp[l][r] != -1) return dp[l][r];\n\n\tint res = 0;\n\tfor(int i=0; i<26; i++) {\n\t\tif(mvl[l][i] == -1 || mvr[r][i] == -1) continue;\n\n\t\tint nl = l + mvl[l][i];\n\t\tint nr = r - mvr[r][i];\n\n\t\tif(nl >= nr) continue;\n\t\t\n\t\tint tmp = dfs(nl + 1, nr - 1) + 2;\n\t\tif(res < tmp) {\n\t\t\tres = tmp;\n\t\t\tnx[l][r] = i;\n\t\t}\n\t}\n\n\tif(res == 0) {\n\t\tif(l+1 != r) {\n\t\t\tres = 1;\n\t\t\t//nx[l][r] = str[l]-'A';\n\t\t}\n\t}\n\n\tdp[l][r] = res;\n\n\treturn dp[l][r];\n}\n\nstring result(int l, int r)\n{\n\tif(nx[l][r] == '$') {\n\t\tif(l + 1 != r) return string(1,str[l]);\n\t\t\n\t\treturn \"\";\n\t}\n\n\tint nl = l + mvl[l][nx[l][r]];\n\tint nr = r - mvr[r][nx[l][r]];\n\n\treturn str[nl] + result(nl+1, nr-1) + str[nl];\n}\n\nint main()\n{\n\twhile(cin >> str) {\n\t\tL = str.size();\n\n\t\tfor(int i=0; i<L; i++)\n\t\tfor(int j=0; j<L; j++) {\n\t\t\tdp[i][j] = -1;\n\t\t\tnx[i][j] = '$';\n\t\t}\n\n\t\tcalc();\n\t\tdfs(0, L-1);\n\n\t\tstring res=result(0, L-1);\n\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstdlib>\n#include<cstring>\n#include<cmath>\n#include<iostream>\n#include<string>\n#include<vector>\n#include<map>\n#include<set>\n#include<list>\n#include<queue>\n#include<deque>\n#include<algorithm>\n#include<numeric>\n#include<utility>\n#include<complex>\n#include<functional>\n \nusing namespace std;\n\n/* constant */\n\nconst int MAXLEN = 2000;\n\nconst int dxs[] = {0, -1, -1,  0};\nconst int dys[] = {0, -1,  0, -1};\n\n/* typedef */\n\n/* global variables */\n\nint dp[MAXLEN + 1][MAXLEN + 1], prvs[MAXLEN + 1][MAXLEN + 1];\n\n/* subroutines */\n\n/* main */\n\nint main() {\n  string str;\n  while (cin >> str) {\n    int len = str.length();\n\n    memset(dp, 0, sizeof(dp));\n    memset(prvs, 0, sizeof(prvs));\n\n    for (int i = 0; i < len; i++)\n      for (int j = 0; j < len - i; j++) {\n\tif (str[i] == str[len - 1 - j]) {\n\t  dp[i + 1][j + 1] = dp[i][j] + 1;\n\t  prvs[i + 1][j + 1] = 1;\n\t}\n\telse if (dp[i][j + 1] >= dp[i + 1][j]) {\n\t  dp[i + 1][j + 1] = dp[i][j + 1];\n\t  prvs[i + 1][j + 1] = 2;\n\t}\n\telse {\n\t  dp[i + 1][j + 1] = dp[i + 1][j];\n\t  prvs[i + 1][j + 1] = 3;\n\t}\n      }\n\n    int maxdp = 0, si, sj;\n\n    for (int i = 1; i <= len; i++) {\n      int j = len + 1 - i;\n      int dp0 = 2 * dp[i][j] - 1;\n      if (maxdp < dp0) {\n\tmaxdp = dp0;\n\tsi = i, sj = j;\n      }\n    }\n\n    for (int i = 1; i < len; i++) {\n      int j = len - i;\n      int dp0 = 2 * dp[i][j];\n      if (str[i - 1] == str[len - j] && maxdp < dp0) {\n\tmaxdp = dp0;\n\tsi = i, sj = j;\n      }\n    }\n    //printf(\"maxdp=%d, si=%d, sj=%d\\n\", maxdp, si, sj);\n\n    string ans;\n\n    while (si > 0 && sj > 0) {\n      int prv = prvs[si][sj];\n      if (prv == 1) {\n\tstring ss = str.substr(si - 1, 1);\n\tif (si + sj == len + 1)\n\t  ans = ss;\n\telse\n\t  ans = ss + ans + ss;\n      }\n\n      si += dxs[prv];\n      sj += dys[prv];\n    }\n\n    cout << ans << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\n\nint dp[2010][2010];\nint rev[2010][2010];\n\nint main(void){\n\tstring pa,ra;\n\twhile(cin >> pa){\n\t\tif(cin.eof())\n\t\t\tbreak;\n\n\t\trep(i,2010)rep(j,2010) dp[i][j]=0;\n\n\t\tra=pa;\n\t\treverse(ra.begin(),ra.end());\n\t\tint n=pa.size();\n\t\trep(i,n)rep(j,n){\n\t\t\tif(pa[i]==ra[j]){\n\t\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\t\trev[i+1][j+1]=0;\n\t\t\t}else if(dp[i][j+1] > dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\trev[i+1][j+1]=1;\n\t\t\t}else{\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\trev[i+1][j+1]=-1;\n\t\t\t}\n\t\t}\n\t\tstring ans=\"\";\n\t\t\n\t\tfor(int i=n,j=n;i>0&&j>0;){\n\t\t\t//dump(i) dump(j)\n\t\t\tif(rev[i][j]>0)\n\t\t\t\ti--;\n\t\t\telse if(rev[i][j]<0)\n\t\t\t\tj--;\n\t\t\telse {\t\t\n\t\t\t\tans+=pa[i-1];\n\t\t\t\ti--;j--;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = m, j = n; i >= 1; i--) {\n    if(c[j][i] != c[j][i-1]) ret += X[i-1], j--;\n  }\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\nstring s,t;\nint dp[2011][2011];\nint used[2011][2011];\nstring solve(){\n  string ans=\"\";\n  int i=s.size()-1;\n  int j=t.size()-1;\n  while(i>0&&j>0){\n    if(used[i][j]==1)ans+=t[j],i--,j--;\n    else if(used[i][j]==2)i--;\n    else j--;\n  }\n  return ans;\n}\nint main(){\n  while(cin>>s){\n    memset(dp,0,sizeof(dp));\n    memset(used,0,sizeof(used));\n    t=s;\n    reverse(s.begin(),s.end());\n    t=\"@\"+t;\n    s=\"@\"+s;\n    for(int i=1;i<s.size();i++)\n      for(int j=1;j<t.size();j++)\n    if(s[i]==t[j]){\n      if(dp[i-1][j]>=dp[i-1][j-1]+1) dp[i][j]=max(dp[i][j],dp[i-1][j]),used[i][j]=2;\n       \n      else dp[i][j]=max(dp[i][j],dp[i-1][j-1]+1),used[i][j]=1;\n    }\n        else{\n      if(dp[i-1][j]>=dp[i][j-1])dp[i][j]=max(dp[i][j],dp[i-1][j]),used[i][j]=2;\n      else dp[i][j]=max(dp[i][j],dp[i][j-1]),used[i][j]=3;\n    }\n    cout<<solve()<<endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cassert>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define MAX 2013\nusing namespace std;\nshort dp[MAX][MAX];\nchar path[MAX][MAX];\n\nvoid lcs(string a,string b)\n{\n  int n = a.size();\n  int m = b.size();\n  \n  REP(i,1,n+1)\n    {\n      REP(j,1,m+1)\n\t{\n\t  if(a[i-1] == b[j-1])\n\t    {\n\t      dp[i][j] = dp[i-1][j-1]+1;\n\t      path[i][j] = 'Z';\n\t    }\n\t  else if(dp[i][j-1] < dp[i-1][j])\n\t    {\n\t      dp[i][j] = dp[i-1][j];\n\t      path[i][j] = 'X';\n\t    }\n\t  else\n\t    {\n\t      dp[i][j] = dp[i][j-1];\n\t      path[i][j] = 'Y';\n\t    }\n\t}\n    }\n\n  // cout << dp[n][m] << endl;\n  \n  while(n > 0 && m > 0)\n    {\n      if(path[n][m] == 'Z')\n\t{\n\t  assert(a[n-1] == b[m-1]);\t \n\t  cout << a[n-1];\n\t  n--,m--;\n\t}\n      else if(path[n][m] == 'X')n--;\n      else                      m--;\n    }\n  cout << endl;\n}\n\nint main()\n{\n  string line;\n  while(cin >> line)\n    {\n      rep(i,MAX)rep(j,MAX)dp[i][j] = 0;\n      string rline(line.rbegin(),line.rend());\n      lcs(line,rline);\n\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<int, int> pii;\n\nint memo[2000][2000];\npii next[2000][2000];\n\nint recur(const string &s, int left, int right){\n\tif(memo[left][right] >= 0){ return memo[left][right]; }\n\tint ret = 0;\n\tpii p(-1, -1);\n\tif(left == right){\n\t\tret = 1;\n\t}else if(left < right){\n\t\tif(s[left] == s[right]){\n\t\t\tret = 2 + recur(s, left + 1, right - 1);\n\t\t\tp = pii(left + 1, right - 1);\n\t\t}else{\n\t\t\tint a = recur(s, left + 1, right);\n\t\t\tint b = recur(s, left, right - 1);\n\t\t\tret = max(a, b);\n\t\t\tif(a > b){\n\t\t\t\tp = pii(left + 1, right);\n\t\t\t}else{\n\t\t\t\tp = pii(left, right - 1);\n\t\t\t}\n\t\t}\n\t}\n\tnext[left][right] = p;\n\treturn (memo[left][right] = ret);\n}\n\nint main(){\n\tstring s;\n\twhile(cin >> s){\n\t\tint n = s.size();\n\t\tmemset(memo, -1, sizeof(memo));\n\t\tint len = recur(s, 0, n - 1);\n\t\tpii p(-1, -1);\n\t\tfor(int i = 0; p.first < 0 && i <= n; ++i){\n\t\t\tfor(int j = 0; p.first < 0 && j <= n; ++j){\n\t\t\t\tif(memo[i][j] == len){ p = pii(i, j); }\n\t\t\t}\n\t\t}\n\t\tvector<char> answer;\n\t\tanswer.reserve(n);\n\t\twhile(p.first >= 0 && memo[p.first][p.second] > 0){\n\t\t\tif(s[p.first] == s[p.second]){ answer.push_back(s[p.first]); }\n\t\t\tp = next[p.first][p.second];\n\t\t}\n\t\tfor(int i = answer.size() - 1 - (len % 2); i >= 0; --i){\n\t\t\tanswer.push_back(answer[i]);\n\t\t}\n\t\tanswer.push_back('\\0');\n\t\tcout << &answer[0] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\nstring lcs( string& a, string& b ) {\n    int n = a.size();\n    int m = b.size();\n\n    int X[n+1][m+1];\n    int Y[n+1][m+1];\n    for ( int i = 0; i < n+1; i++ ) {\n        for ( int j = 0; j < m+1; j++ ) {\n            X[i][j] = 0;\n            Y[i][j] = 0;\n        }\n    }\n\n    for ( int i = 0; i < n; i++ ) {\n        for ( int j = 0; j < m; j++ ) {\n            if ( a[i] == b[j] ) {\n                X[i+1][j+1] = X[i][j] + 1;\n                Y[i+1][j+1] = 0;\n            } else if ( X[i+1][j] < X[i][j+1] ) {\n                X[i+1][j+1] = X[i][j+1];\n                Y[i+1][j+1] = +1;\n            } else {\n                X[i+1][j+1] = X[i+1][j];\n                Y[i+1][j+1] = -1;\n            }\n        }\n    }\n\n    string answer;\n    for ( int i = n, j = m; i > 0 && j > 0; ) {\n        if ( Y[i][j] > 0 ) {\n            i--;\n        } else if ( Y[i][j] < 0 ) {\n            j--;\n        } else {\n            answer += a[i-1];\n            i--;\n            j--;\n        }\n    }\n    reverse( answer.begin(), answer.end() );\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\n#define MAX 2001\n\nint dp[MAX][MAX];\nstring str[MAX][MAX];\n\nvoid init(int N){\n  for(int i = 0 ; i < N ; i++){\n    for(int j = 0 ; j < N ; j++){\n      dp[i][j] = 0;\n      str[i][j].clear();\n    }\n  }\n}\n\nint main(){\n  string s;\n\n  while(cin >> s){\n    string t = s;\n    reverse(t.begin(), t.end());\n \n    int len = s.size();  init(len+1);\n    for(int i = 0 ; i < len ; i++){\n      for(int j = 0 ; j < len ; j++){\n        if(s[i] == t[j]){\n          dp[i+1][j+1] = dp[i][j] + 1;\n          str[i+1][j+1] = str[i][j] + s[i];\n        }else{\n          if(dp[i][j+1] < dp[i+1][j]){\n            dp[i+1][j+1] = dp[i+1][j];\n            str[i+1][j+1] = str[i+1][j];\n          }else{\n            dp[i+1][j+1] = dp[i][j+1];\n            str[i+1][j+1] = str[i][j+1];\n          }\n        }\n      }\n\n    }\n    cout << str[len][len] << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\nusing namespace std;\n\nint dp[2001][2001];\nstring input;\n\nint rec(int left,int right) {\n    if(left == right) return dp[left][right] = 1;\n    if(dp[left][right] != -1) return dp[left][right];\n    if(left+1 == right) {\n        if(input[left] == input[right]) return dp[left][right] = 2;\n        else return dp[left][right] = 0;\n    }\n\n    int ret = 0;\n    if(input[left] == input[right]) {\n        ret = 2 + rec(left+1,right-1);\n    }\n    ret = max(ret, rec(left+1,right-1));\n    ret = max(ret, rec(left+1,right));\n    ret = max(ret, rec(left,right-1));\n    return dp[left][right] = ret;\n}\n\nstring traverse(int left,int right) {\n    if(left == right) return string(1,input[left]);\n    if(dp[left][right] == 0) return \"\";\n    if(left+1 == right) {\n        if(input[left] == input[right]) return string(2,input[left]);\n        else return \"\";\n    }\n\n    int r1 = dp[left+1][right-1];\n    if(input[left] == input[right]) r1 += 2;\n    int r2 = dp[left][right-1];\n    int r3 = dp[left+1][right];\n\n    if(r1 >= r2 && r1 >= r3) {\n        if(input[left] == input[right]) {\n            string k = string(1,input[left]);\n            return k + traverse(left+1,right-1) + k;\n        }else{\n            return traverse(left+1,right-1);\n        }\n    }else if(r2 >= r1 && r2 >= r3) {\n        return traverse(left,right-1);\n    }else{\n        return traverse(left+1,right);\n    }\n}\n\nint main() {\n    while(cin>>input) {\n        memset(dp, -1, sizeof(dp));\n        rec(0,input.length()-1);\n\n        cout<<traverse(0,input.length()-1)<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\n\nstruct Node {\n\tint value;\n\tNode *next;\n\tNode(int value, Node *next) : value(value), next(next) { }\n};\n\nstring lcs(const string &a, const string &b){\n\tconst int INF = 99999999;\n\tconst int n = a.size(), m = b.size();\n\tvector<Node *> nodes;\n\tmap< int, vector<int> > M;\n\tfor(int j = m - 1; j >= 0; --j){ M[b[j]].push_back(j); }\n\tvector<int> xs(n + 1, INF); xs[0] = -INF;\n\tvector<Node *> link(n + 1);\n\tfor(int i = 0; i < n; ++i){\n\t\tif(M.count(a[i])){\n\t\t\tvector<int> ys = M[a[i]];\n\t\t\tfor(int j = 0; j < ys.size(); ++j){\n\t\t\t\tint k = distance(xs.begin(), lower_bound(xs.begin(), xs.end(), ys[j]));\n\t\t\t\txs[k] = ys[j];\n\t\t\t\tNode *node = new Node(b[ys[j]], link[k - 1]);\n\t\t\t\tnodes.push_back(node);\n\t\t\t\tlink[k] = node;\n\t\t\t}\n\t\t}\n\t}\n\tint l = distance(xs.begin(), lower_bound(xs.begin(), xs.end(), INF -  1)) - 1;\n\tstring answer;\n\tfor(Node *p = link[l]; p != NULL; p = p->next){\n\t\tanswer += static_cast<char>(p->value);\n\t}\n\treverse(answer.begin(), answer.end());\n\tfor(int i = 0; i < nodes.size(); ++i){ delete nodes[i]; }\n\treturn answer;\n}\n\nint main(){\n\tstring s;\n\twhile(cin >> s){\n\t\tint n = s.size();\n\t\tstring answer = \"\";\n\t\tfor(int i = 1; i < n - 1; ++i){\n\t\t\tstring a = s.substr(0, i);\n\t\t\tstring b = s.substr(i);\n\t\t\treverse(b.begin(), b.end());\n\t\t\tstring c = lcs(a, b);\n\t\t\tint length = c.size() * 2;\n\t\t\tif(s[i - 1] != s[i]){ ++length; }\n\t\t\tif(answer.size() < length){\n\t\t\t\tstring d = c;\n\t\t\t\treverse(d.begin(), d.end());\n\t\t\t\tif(length % 2){\n\t\t\t\t\tif(s[i] == d[0]){\n\t\t\t\t\t\tc += s[i - 1];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tc += s[i];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tc += d;\n\t\t\t\tanswer = c;\n\t\t\t}\n\t\t}\n\t\tcout << answer << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <string>\n \nusing namespace std;\n \nint dp[2048][2048];\n \nint main()\n{\n    char s1[2048], s2[2048];\n     \n    while (scanf(\"%s\", s1) == 1){\n        int len = strlen(s1);\n\t\tfor (int i = 0; s1[i]; i++) s2[len - i - 1] = s1[i];\n         \n        memset(dp, 0, sizeof(dp));\n         \n        string m[2][2048];\n        string ans = \"\";\n        for (int i = 0; i < 2048; i++){\n            m[0][i] = m[1][i] = \"\";\n        }\n         \n        for (int i = 1; i <= len; i++){\n            for (int j = 1; j <= len; j++){\n                if (s1[i - 1] == s2[j - 1]){\n                    dp[i][j] = dp[i - 1][j - 1] + 1;\n                    m[i & 1][j] = m[(i + 1) & 1][j - 1] + s1[i - 1];\n\t\t\t\t\tif (m[i & 1][j].size() > ans.size()) ans = m[i & 1][j];\n                }\n                else {\n                    dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);\n                    if (m[i & 1][j - 1].size() > m[(i + 1) & 1][j].size()){\n                        m[i & 1][j] = m[i & 1][j - 1];\n                    }\n                    else {\n                        m[i & 1][j] = m[(i + 1) & 1][j];\n                    }\n\t\t\t\t\tif (m[i & 1][j].size() > ans.size()) ans = m[i & 1][j];\n                }\n            }\n        }\n\t\t\n\t\tprintf(\"%s\\n\", ans.c_str());\n    }\n     \n    return (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include \"bits/stdc++.h\"\n#include<unordered_map>\n#include<unordered_set>\n#pragma warning(disable:4996)\nusing namespace std;\nusing ld = long double;\nconst ld eps = 1e-9;\n\n\nint solve(int l, int r, const string& st,vector<vector<int>>&memo,vector<vector<int>>&flags) {\n\tif (memo[l][r] == -1) {\n\t\tif(l==r)memo[l][r]=0;\n\t\telse if(l+1==r)memo[l][r]=1;\n\t\telse {\n\n\t\t\tif (st[l] == st[r - 1]) {\n\t\t\t\tmemo[l][r]=2+solve(l+1,r-1,st,memo,flags);\n\t\t\t\tflags[l][r]=3;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tint lk=solve(l+1,r,st,memo,flags);\n\t\t\t\tint rk=solve(l,r-1,st,memo,flags);\n\n\t\t\t\tif (lk > rk) {\n\t\t\t\t\tflags[l][r]=2;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tflags[l][r]=1;\n\t\t\t\t}\n\t\t\t\tmemo[l][r]=max(lk,rk);\n\t\t\t}\n\t\t}\n\t}\n\treturn memo[l][r];\n}\n\nint main() {\n\tstring st;\n\twhile (cin>>st) {\n\t\tvector<vector<int>>memo(st.size()+1,vector<int>(st.size()+1,-1)),flags(st.size()+1,vector<int>(st.size()+1));\n\t\tint ans=solve(0,st.size(),st,memo,flags);\n\t\tstring ans_st1,ans_st2;\n\n\t\tint al=0;\n\t\tint ar=st.size();\n\t\twhile (true) {\n\t\t\tint num=flags[al][ar];\n\t\t\tif (num == 3) {\n\t\t\t\tans_st1.push_back(st[al]);\n\t\t\t\tans_st2.push_back(st[ar-1]);\n\t\t\t\tal++;\n\t\t\t\tar--;\n\t\t\t}\n\t\t\telse if (num == 2) {\n\t\t\t\tal++;\n\t\t\t}\n\t\t\telse if (num == 1) {\n\t\t\t\tar--;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (al + 1 == ar) {\n\t\t\t\t\tans_st1.push_back(st[al]);\n\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treverse(ans_st2.begin(),ans_st2.end());\n\t\tcout<<ans_st1<<ans_st2<<endl;\n\t}\n\treturn 0;\n}\n"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  memset(c,0,sizeof(c));\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] == c[i-1][j-1]+1) ret += Y[j],j--;\n  }\n  string ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  assert(ret==ret2);\n  assert((int)ret.size()==maxl);\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <cstring>\nusing namespace std;\n\nstring lcs( string& a, string& b ) {\n    int n = a.size();\n    int m = b.size();\n\n    int X[n+1][m+1];\n    int Y[n+1][m+1];\n    for ( int i = 0; i < n+1; i++ ) {\n        for ( int j = 0; j < m+1; j++ ) {\n            X[i][j] = 0;\n            Y[i][j] = 0;\n        }\n    }\n\n    for ( int i = 0; i < n; i++ ) {\n        for ( int j = 0; j < m; j++ ) {\n            if ( a[i] == b[j] ) {\n                X[i+1][j+1] = X[i][j] + 1;\n                Y[i+1][j+1] = 0;\n            } else if ( X[i+1][j] < X[i][j+1] ) {\n                X[i+1][j+1] = X[i][j+1];\n                Y[i+1][j+1] = +1;\n            } else {\n                X[i+1][j+1] = X[i+1][j];\n                Y[i+1][j+1] = -1;\n            }\n        }\n    }\n\n    string answer;\n    for ( int i = n, j = m; i > 0 && j > 0; ) {\n        if ( Y[i][j] > 0 ) {\n            i--;\n        } else if ( Y[i][j] < 0 ) {\n            j--;\n        } else {\n            answer += a[i-1];\n            i--;\n            j--;\n        }\n    }\n    reverse( answer.begin(), answer.end() );\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\n#define F first\n#define S second\n#define all(v) (v).begin(), (v).end()\n#define rep(i, n) for(int i = 0; i < (int)(n); i++)\n#define reps(i, f, n) for(int i = (int)(f); i < (int)(n); i++)\n#define each(a, b) for(auto& a : b)\n\ntypedef pair<int, int> P;\n\nint dp[2010][2010];\nint tr[2010][2010];\n\nsigned main()\n{\n  string s;\n  while(cin >> s) {\n    string t = s; reverse(all(s));    \n    memset(dp, 0, sizeof(dp));\n    memset(tr, 0, sizeof(dp));\n    for(int i = 0; i < s.size(); i++) {\n      for(int j = 0; j < t.size(); j++) {\n\tif(s[i] == t[j]) dp[i+1][j+1] = dp[i][j] + 1, tr[i+1][j+1] = 1;\n\telse {\n\t  if(dp[i+1][j] > dp[i][j+1]) dp[i+1][j+1] = dp[i+1][j], tr[i+1][j+1] = 2;\n\t  else dp[i+1][j+1] = dp[i][j+1], tr[i+1][j+1] = 3;\n\t}\n      }\n    }\n    string x;\n    for(int i = s.size(), j = t.size(); i > 0 && j > 0; ) {\n      switch(tr[i][j]) {\n      case 1: x += s[i-1], i--, j--; break;\n      case 2: j--; break;\n      case 3: i--; break;\n      }\n    }\n    cout << x << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <map>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) \\\n    distance(as.begin(),lower_bound(as.begin(),as.end(),x))\nconst int inf = 1<<8;\ntypedef short INT;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        M[b[i]].push_back(i);\n    }\n    vector <INT> xs(n+1, inf); \n    xs[0] = -inf;\n    vector <Node*> link(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            vector <INT> ys = M[a[i]];\n            for ( INT j = 0; j < ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\n/*\nshort X[3001][3001];\nshort Y[3001][3001];\nstring lcs( string a, string b ) {\n    int n = a.size();\n    int m = b.size();\n    for ( int i = 0; i < n+1; i++ ) {\n        for ( int j = 0; j < m+1; j++ ) {\n            X[i][j] = 0;\n            Y[i][j] = 0;\n        }\n    }\n\n    for ( int i = 0; i < n; i++ ) {\n        for ( int j = 0; j < m; j++ ) {\n            if ( a[i] == b[j] ) {\n                X[i+1][j+1] = X[i][j] + 1;\n                Y[i+1][j+1] = 0;\n            } else if ( X[i+1][j] < X[i][j+1] ) {\n                X[i+1][j+1] = X[i][j+1];\n                Y[i+1][j+1] = +1;\n            } else {\n                X[i+1][j+1] = X[i+1][j];\n                Y[i+1][j+1] = -1;\n            }\n        }\n    }\n\n    string answer;\n    for ( int i = n, j = m; i > 0 && j > 0; ) {\n        if ( Y[i][j] > 0 ) {\n            i--;\n        } else if ( Y[i][j] < 0 ) {\n            j--;\n        } else {\n            answer += a[i-1];\n            i--;\n            j--;\n        }\n    }\n    reverse( answer.begin(), answer.end() );\n    return answer;\n}\n*/\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] == c[i-1][j-1]+1) ret += Y[j],j--;\n  }\n  string ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  assert(ret==ret2);\n  assert((int)ret.size()==maxl);\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<short,short> pii;\n\nshort dp[2001][2001];\npii to[2001][2001];\n\nstring s;\nstring s2;\nint n;\n\n// sツづ2ツづ可づつつ「ツづ、ツ催妥・ツ閉板閉ェツ暗ェツ致ツ閉カツ篠堋療アツ陳キツづーツ仰づ淞づゥ\n// ツつスツつセツつオツ、s_posツづ2_posツづーcrossツつウツつケツづづ債つ「ツつッツづ按つ「\nint dfs(int a,int b){\n\tint b_rev=n-1-b;\n\tif(b_rev<a){\n\t\tto[a][b].first=-1;\n\t\treturn 0;\n\t}\n\telse if(b_rev==a){\n\t\tto[a][b].first=-2;\n\t\treturn 1;\n\t}\n\tif(dp[a][b]!=-1)return dp[a][b];\n\tint res=0;\n\tif(s[a]==s2[b]){\n\t\tint tmp=res;\n\t\tres=max(res,dfs(a+1,b+1)+1);\n\t\tif(tmp!=res){\n\t\t\tto[a][b]=pii(a+1,b+1);\n\t\t}\n\t}\n\tint tmp=res;\n\tres=max(res,dfs(a+1,b));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a+1,b);\n\t}\n\ttmp=res;\n\tres=max(res,dfs(a,b+1));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a,b+1);\n\t}\n\treturn dp[a][b]=res;\n}\n\nint main(){\n\n\twhile(cin>>s){\n\t\tn=s.size();\n\t\tmemset(dp,-1,sizeof(dp));\n\t\ts2=s;\n\t\treverse(s2.begin(),s2.end());\n\t\tint res=dfs(0,0);\n\t\tpii cur=pii(0,0);\n\t\tstring ret;\n\t\twhile(1){\n\t\t\tpii nxt=to[cur.first][cur.second];\n\t\t\tif(nxt.first==-1){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(nxt.first==-2){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+s[cur.first]+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// diffツつェ1\n\t\t\tif(nxt.first-cur.first==1&&nxt.second-cur.second==1)\n\t\t\t\tret+=s[cur.first];\n\t\t\tcur=nxt;\n\t\t}\n\t\tcout<<ret<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\n\nusing namespace std;\n\n#define TOPLEFT 0\n#define TOP 1\n#define LEFT 2\n#define MAX 2000\n\nvoid printLcs(string &l, vector<vector<short> > &b, const string &x, int i, int j, int k){\n  if(i==0 || j==0) return;\n  if(b[i][j]==TOPLEFT){\n    printLcs(l, b, x, i-1, j-1, k-1);\n    l[k] = x[i-1];\n  }else if(b[i][j]==TOP){\n    printLcs(l, b, x, i-1, j, k);\n  }else{\n    printLcs(l, b, x, i, j-1, k);\n  }\n}\n\nvoid lcs(string &x, string &y, string &l){\n  int m, n;\n  vector<vector<short> > c, b;\n  m = x.size();\n  n = y.size();\n\n  c.resize(m+1, vector<short>(n+1));\n  b.resize(m+1, vector<short>(n+1));\n  \n  for(int i=0; i<=m; i++) c[i][0] = 0;\n  for(int j=0; j<=n; j++) c[0][j] = 0;\n\n  for(int i=1; i<=m; i++){\n    for(int j=1; j<=n; j++){\n      if(x[i-1]==y[j-1]){\n\tc[i][j] = c[i-1][j-1]+1;\n\tb[i][j] = TOPLEFT;\n      }else if(c[i-1][j]>=c[i][j-1]){\n\tc[i][j] = c[i-1][j];\n\tb[i][j] = TOP;\n      }else{\n\tc[i][j] = c[i][j-1];\n\tb[i][j] = LEFT;\n      }\n    }\n  }\n\n  l.resize(c[m][n]);\n\n  printLcs(l, b, x, m, n, l.size()-1);\n}\n\nint main(){\n    string s1, s2, l;\n    while( cin >> s1 ){\n\ts2 = s1;\n\treverse(s2.begin(), s2.end());\n\tlcs(s1, s2, l);\n\tcout << l << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nstring lcs( string a, string b ) {\n    int n = a.size();\n    int m = b.size();\n\n    int X[n+1][m+1];\n    int Y[n+1][m+1];\n    for ( int i = 0; i < n+1; i++ ) {\n        for ( int j = 0; j < m+1; j++ ) {\n            X[i][j] = 0;\n            Y[i][j] = 0;\n        }\n    }\n\n    for ( int i = 0; i < n; i++ ) {\n        for ( int j = 0; j < m; j++ ) {\n            if ( a[i] == b[j] ) {\n                X[i+1][j+1] = X[i][j] + 1;\n                Y[i+1][j+1] = 0;\n            } else if ( X[i+1][j] < X[i][j+1] ) {\n                X[i+1][j+1] = X[i][j+1];\n                Y[i+1][j+1] = +1;\n            } else {\n                X[i+1][j+1] = X[i+1][j];\n                Y[i+1][j+1] = -1;\n            }\n        }\n    }\n\n    string answer;\n    for ( int i = n, j = m; i > 0 && j > 0; ) {\n        if ( Y[i][j] > 0 ) {\n            i--;\n        } else if ( Y[i][j] < 0 ) {\n            j--;\n        } else {\n            answer += a[i-1];\n            i--;\n            j--;\n        }\n    }\n    reverse( answer.begin(), answer.end() );\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2000;\n\nstring lcs(string a, string b){\n  int dp[N+1][N+1];\n  int p[N+1][N+1];\n  fill(dp[0], dp[N+1], 0);\n  int size = a.size();\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <iterator>\n#include <map>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) distance(as.begin(),lower_bound(as.begin(),as.end(),x))\nconst int inf = 1<<8;\ntypedef short INT;\n\nvector <INT> xs;\nvector <INT> ys;\nvector <Node*> link;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        M[b[i]].push_back(i);\n    }\n    xs = vector<INT>(n+1, inf); \n    xs[0] = -inf;\n    link = vector <Node*>(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(a) (a).begin(),(a).end()\nusing namespace std;\n\nint main(){\n  string s;\n  while(cin >> s){\n    int n = s.size();\n    string r = s;\n    reverse(all(r));\n\n    vector< vector<int> > dp(n+1,vector<int>(n+1,0));\n    rep(i,n){\n      rep(j,n){\n\tif(s[i] == r[j])dp[i+1][j+1] = dp[i][j]+1;\n\telse dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);\n      }\n    }\n\n    string pal;\n    int a = n, b = n;\n    while(a!=0 && b!=0){\n      if(a>0 && b>0 && dp[a][b] == dp[a-1][b-1]+1){\n\tpal += s[a-1]; a--; b--;\n      }else if(a>0 && dp[a][b] == dp[a-1][b]){\n\ta--;\n      }else if(b>0 && dp[a][b] == dp[a][b-1]){\n\tb--;\n      }else{\n\texit(1);\n      }\n    }\n    cout << pal << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nstring ss[N+1][N+1];\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  ss[0][0] = \"\";\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1, ss[i][j] = ss[i-1][j-1] + X[i];\n      else {\n\tif(c[i-1][j] >= c[i][j-1]) c[i][j]=c[i-1][j], ss[i][j] = ss[i-1][j];\n\telse c[i][j] = c[i][j-1], ss[i][j] = ss[i][j-1];\n      }\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  return ss[m][n];\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<string>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nstring solve(const string &s){\n\tint n=s.length();\n\tstatic int dp[2001][2001],from[2001][2001];\n\n\trep(i,n+1) dp[i][0]=dp[0][i]=0, from[i][0]=from[0][i]=-1;\n\n\trep(i,n) rep(j,n) if(i+j<=n) {\n\t\tif(s[i]==s[n-j-1]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}\n\t\telse{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint len=0,i_len[2];\n\tfor(int i=1;i<n;i++){\n\t\tint tmp=2*dp[i][n-i];\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i;\n\t\t}\n\n\t\ttmp=2*dp[i][n-i-1]+1;\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i-1;\n\t\t}\n\t}\n\n\tint idx=dp[i_len[0]][i_len[1]];\n\tstring ans(idx,'@');\n\tfor(int i=i_len[0],j=i_len[1];~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0: i--; break;\n\t\t\tcase 1: j--; break;\n\t\t\tcase 2: i--; j--; idx--; ans[idx]=s[i]; break;\n\t\t}\n\t}\n\tif(len%2==1) ans+=s[i_len[0]];\n\trep(i,len/2) ans+=ans[len/2-i-1];\n\n\treturn ans;\n}\n\nint main(){\n\tfor(char s[2001];~scanf(\"%s\",s);) puts(solve(s).c_str());\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] == c[i-1][j-1]+1) ret += Y[i],j--;\n  }\n  string ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  assert(ret==ret2);\n  assert((int)ret.size()==maxl);\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<int,int> pii;\n\nint dp[2001][2001];\npii to[2001][2001];\n\nstring s;\nstring s2;\nint n;\n\n// sツづ2ツづ可づつつ「ツづ、ツ催妥・ツ閉板閉ェツ暗ェツ致ツ閉カツ篠堋療アツ陳キツづーツ仰づ淞づゥ\n// ツつスツつセツつオツ、s_posツづ2_posツづーcrossツつウツつケツづづ債つ「ツつッツづ按つ「\nint dfs(int a,int b){\n\tint b_rev=n-1-b;\n\tif(b_rev<a){\n\t\tto[a][b].first=-1;\n\t\tto[a][b].second=-1;\n\t\treturn 0;\n\t}\n\telse if(b_rev==a){\n\t\tif(s[a]==s2[b]){\n\t\t\tto[a][b].first=-2;\n\t\t\treturn 1;\n\t\t}\n\t}\n\tif(dp[a][b]!=-1)return dp[a][b];\n\tint res=0;\n\tif(s[a]==s2[b]){\n\t\tint tmp=res;\n\t\tres=max(res,dfs(a+1,b+1)+1);\n\t\tif(tmp!=res){\n\t\t\tto[a][b]=pii(a+1,b+1);\n\t\t}\n\t}\n\tint tmp=res;\n\tres=max(res,dfs(a+1,b));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a+1,b);\n\t}\n\ttmp=res;\n\tres=max(res,dfs(a,b+1));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a,b+1);\n\t}\n\treturn dp[a][b]=res;\n}\n\nint main(){\n\n\twhile(cin>>s){\n\t\tn=s.size();\n\t\tmemset(dp,-1,sizeof(dp));\n\t\ts2=s;\n\t\treverse(s2.begin(),s2.end());\n\t\tint res=dfs(0,0);\n\t\t//cout<<res<<endl;\n\t\tpii cur;\n\t\tstring ret;\n\t\twhile(1){\n\t\t\tif(cur.first==-1)break;\n\t\t\tpii nxt=to[cur.first][cur.second];\n\t\t\tif(nxt.first==-2){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+s[cur.first]+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// diffツつェ1\n\t\t\tif(nxt.first-cur.first==1&&nxt.second-cur.second==1)\n\t\t\t\tret+=s[cur.first];\n\t\t\tcur=nxt;\n\t\t}\n\t\tcout<<ret<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<algorithm>\n#include<vector>\n#include<stack>\n#include<map>\n#include<set>\n#include<queue>\n#include<cstdio>\n#include<climits>\n#include<cmath>\n#include<cstring>\n#include<string>\n#include<sstream>\n#include<numeric>\n#include<cassert>\n\n#define f first\n#define s second\n#define mp make_pair\n\n#define REP(i,n) for(int i=0; i<(int)(n); i++)\n#define rep(i,s,n) for(int i=(s); i<(int)(n); i++)\n#define FOR(i,c) for(__typeof((c).begin()) i=(c).begin(); i!=(c).end(); i++)\n#define ALL(c) (c).begin(), (c).end()\n#define IN(x,s,g) ((x) >= (s) && (x) < (g))\n#define ISIN(x,y,w,h) (IN((x),0,(w)) && IN((y),0,(h)))\n#define print(x) printf(\"%d\\n\",x)\n\nusing namespace std;\n\ntypedef unsigned int uint;\ntypedef long long ll;\n\nconst int _dx[] = {0,1,0,-1};\nconst int _dy[] = {-1,0,1,0};\n\nint getInt(){\n  int ret = 0,c;\n  c = getchar();\n  while(!isdigit(c)) c = getchar();\n  while(isdigit(c)){\n    ret *= 10;\n    ret += c - '0';\n    c = getchar();\n  }\n  return ret;\n}\n\nint dp[2010][2010];\n\nint main(){\n  char buff[2010];\n  char ans[2010];\n  int anspos;\n\n  while(~scanf(\"%s\", buff)){\n    int len = strlen(buff);\n\n    REP(i,len+1) REP(j,len+1) dp[i][j] = 0;\n\n    REP(i,len) REP(j,len){\n      if(buff[i] == buff[len - 1 - j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n      }\n      dp[i+1][j] = max(dp[i+1][j], dp[i][j]);\n      dp[i][j+1] = max(dp[i][j+1], dp[i][j]);\n    }\n    REP(i,len) dp[i+1][len] = max(dp[i+1][len], dp[i][len]);\n    REP(j,len) dp[len][j+1] = max(dp[len][j+1], dp[len][j]);\n    \n    int p1 = len;\n    int p2 = len;\n    anspos = 0;\n\n    while(p1 != 0 || p2 != 0){\n      if(p2 != 0 && dp[p1][p2-1] == dp[p1][p2]){\n\tp2 = p2 - 1;\n      }else if(p1 != 0 && dp[p1-1][p2] == dp[p1][p2]){\n\tp1 = p1 - 1;\n      }else{\n\tassert(p1 != 0 && p2 != 0);\n\tassert(dp[p1-1][p2-1] + 1 == dp[p1][p2]);\n\tans[anspos++] = buff[p1-1];\n\n\tif((dp[len][len]+1)/2 == anspos){\n\t  for(int i = anspos - 1 - (dp[len][len] % 2); i >= 0; i--)\n\t    ans[anspos++] = ans[i];\n\t  ans[anspos] = '\\0';\n\t  break;\n\t}\n\t\n\tp1 = p1 - 1;\n\tp2 = p2 - 1;\n      }\n    }\n\n    puts(ans);\n  }\n  \n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\n#include<cassert>\n#define REP(i,s,n) for(int i=s;i<n;i++)\n#define rep(i,n) REP(i,0,n)\n#define MAX 2013\nusing namespace std;\nshort dp[MAX][MAX];\nchar path[MAX][MAX];\n\nvoid lcs(string a,string b)\n{\n  int n = a.size();\n  int m = b.size();\n  \n  REP(i,1,n+1)\n    {\n      REP(j,1,m+1)\n\t{\n\t  if(a[i-1] == b[j-1])\n\t    {\n\t      dp[i][j] = dp[i-1][j-1]+1;\n\t      path[i][j] = 'Z';\n\t    }\n\t  else if(dp[i][j-1] < dp[i-1][j])\n\t    {\n\t      dp[i][j] = dp[i-1][j];\n\t      path[i][j] = 'X';\n\t    }\n\t  else\n\t    {\n\t      dp[i][j] = dp[i][j-1];\n\t      path[i][j] = 'Y';\n\t    }\n\t}\n    }\n\n  // cout << dp[n][m] << endl;\n  \n  string res = \"\";\n  while(n > 0 && m > 0)\n    {\n      if(path[n][m] == 'Z')\n\t{\n\t  assert(a[n-1] == b[m-1]);\t \n\t  res += a[n-1];\n\t  n--,m--;\n\t}\n      else if(path[n][m] == 'X')n--;\n      else                      m--;\n    }\n\n  cout << res << endl; \n\n}\n\nint main()\n{\n  string line;\n  while(cin >> line)\n    {\n      rep(i,MAX)rep(j,MAX)dp[i][j] = 0;\n      string rline(line.rbegin(),line.rend());\n      lcs(line,rline);\n\n\n    }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n\nusing namespace std;\n\nint main(void){\n  string str;\n  while(getline(cin,str)){\n    string revstr;\n    for(int i=0;i<str.size();i++)revstr[str.length()-i-1]=str[i];\n  \n    string dp[1000][1000];\n    for(int i=0;i<str.size();i++){\n      for(int j=i+1;j<str.size();j++){\n\tif(str[i]==revstr[j]){\n\t  dp[i+1][j+1]=dp[i][j]+str[i];\n\t}\n\telse {\n\t  if(dp[i][j+1].size()>dp[i+1][j].size())dp[i+1][j+1]=dp[i][j+1];\n\t  else dp[i+1][j+1]=dp[i+1][j];\n\t}\n      }\n    }\n    cout << dp[str.size()-1][str.size()-1] << endl;\n    \n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <sstream>\n#include <string>\n#include <algorithm>\n#include <vector>\n#include <stack>\n#include <queue>\n#include <set>\n#include <map>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <cassert>\n\nusing namespace std;\n\n#define FOR(i,k,n) for(int i=(k); i<(int)(n); ++i)\n#define REP(i,n) FOR(i,0,n)\n#define FORIT(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)\n\ntemplate<class T> void debug(T begin, T end){ for(T i = begin; i != end; ++i) cerr<<*i<<\" \"; cerr<<endl; }\ninline bool valid(int x, int y, int W, int H){ return (x >= 0 && y >= 0 && x < W && y < H); }\n\ntypedef long long ll;\nconst int INF = 100000000;\nconst double EPS = 1e-8;\nconst int MOD = 1000000007;\nint dx[8] = {1, 0, -1, 0, 1, -1, -1, 1};\nint dy[8] = {0, 1, 0, -1, 1, 1, -1, -1};\n\nint main(){\n  string s;\n  while(cin >> s){\n    int N = s.size();\n    int dp[2001] = {}; // dp[i] = [i, s.size())まで使ったときの最大の文字列\n    static int prev[2001][2001] = {};\n    memset(prev, -1, sizeof(prev));\n    vector<int> indexes[26];\n    REP(i, N) indexes[s[i] - 'A'].push_back(i);\n    REP(i, s.size()){\n      for(int j = i + 1; j < s.size(); j++){\n        //[i + 1, j + 1) = [i + 1, j]\n        int cur = dp[j + 1];\n        vector<int>& v = indexes[s[i] - 'A'];\n        int idx = upper_bound(v.begin(), v.end(), j) - v.begin() - 1; \n        if(0 <= idx && i + 1 <= v[idx] && dp[v[idx]] < cur + 1){\n          dp[v[idx]] = cur + 1;\n          prev[i + 1][v[idx]] = j + 1;\n        }\n      }\n      // center\n      if(dp[i] < dp[i + 1] + 1){\n        dp[i] = dp[i + 1] + 1;\n        prev[i + 1][i] = i + 1;\n      }\n    }\n    int max_c = 0;\n    REP(i, N) if(dp[max_c] < dp[i]) max_c = i;\n    int curr = max_c;\n    string ans;\n    for(int i = curr + 1; i >= 0; i--){\n      if(prev[i + 1][curr] == -1){\n      }else{\n        if(i != curr) ans = s[i] + ans + s[curr];\n        else ans = s[i];\n        curr = prev[i + 1][curr];\n      }\n    }\n    cout << ans << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <cmath>\n#include <climits>\n#include <cfloat>\n#include <ctime>\n#include <map>\n#include <utility>\n#include <set>\n#include <iostream>\n#include <memory>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <functional>\n#include <sstream>\n#include <complex>\n#include <stack>\n#include <queue>\n#include <numeric>\n#include <list>\n\nusing namespace std;\n\n#ifdef _MSC_VER\n#define __typeof__ decltype\ntemplate <class T> int __builtin_popcount(T n) { return n ? 1 + __builtin_popcount(n & (n - 1)) : 0; }\n#endif\n\n#define foreach(it, c) for (__typeof__((c).begin()) it=(c).begin(); it != (c).end(); ++it)\n#define all(c) (c).begin(), (c).end()\n#define rall(c) (c).rbegin(), (c).rend()\n#define popcount __builtin_popcount\n\n#define rep(i, n) for (int i = 0; i < n; ++i)\n\ntemplate <class T> void max_swap(T& a, const T& b) { a = max(a, b); }\ntemplate <class T> void min_swap(T& a, const T& b) { a = min(a, b); }\n\ntypedef long long ll;\ntypedef pair<int, int> pint;\n\nconst double PI = acos(-1.0);\nconst int dx[] = { 0, 1, 0, -1 };\nconst int dy[] = { 1, 0, -1, 0 };\n\n\n\nstring lcs(const string& a, const string& b)\n{\n\tconst int dx[] = { -1, 0, -1 };\n\tconst int dy[] = { 0, -1, -1 };\n\n\tvector<vector<int> > dp(a.size() + 1, vector<int>(b.size() + 1, 0));\n\tvector<vector<int> > path(a.size() + 1, vector<int>(b.size() + 1, -1));\n\tfor (int i = 0; i < a.size(); ++i)\n\t{\n\t\tfor (int j = 0; j < b.size(); ++j)\n\t\t{\n\t\t\tif (a[i] == b[j])\n\t\t\t{\n\t\t\t\tdp[i + 1][j + 1] = dp[i][j] + 1;\n\t\t\t\tpath[i + 1][j + 1] = 2;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (dp[i + 1][j] > dp[i][j + 1])\n\t\t\t\t{\n\t\t\t\t\tdp[i + 1][j + 1] = dp[i + 1][j];\n\t\t\t\t\tpath[i + 1][j + 1] = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tdp[i + 1][j + 1] = dp[i][j + 1];\n\t\t\t\t\tpath[i + 1][j + 1] = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tstringstream ss;\n\tfor (int i = a.size(), j = b.size(); path[i][j] != -1; )\n\t{\n\t\tint p = path[i][j];\n\t\tif (p == 2)\n\t\t{\n\t\t\tss << a[i - 1];\n\t\t}\n\n\t\ti += dy[p];\n\t\tj += dx[p];\n\t}\n\tstring res = ss.str();\n\treverse(all(res));\n\treturn res;\n}\nint main()\n{\n\tstatic char buf[2048];\n\twhile (~scanf(\"%s\", buf))\n\t{\n\t\tstring a(buf), b(buf);\n\t\treverse(all(b));\n\t\tcout << lcs(a, b) << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <deque>\n#include <stack>\n#include <string>\n#include <cstring>\n\nusing namespace std;\n\n#define MAX_N 2001 \nenum T {FROM, TO, NONE};\n\nstring s;\nint dp[MAX_N][MAX_N];\nT which_drop[MAX_N][MAX_N];\nint drop(int from, int to) {\n    if (dp[from][to] >= 0) return dp[from][to];\n    if (to - from < 0) return 0;\n    if (to == from) {\n        return 0;\n    }\n    if (s[from] == s[to]) {\n        which_drop[from][to] = NONE;\n        return drop(from+1, to-1);\n    }\n\n    int drop_first = drop(from+1, to)+1;\n    int drop_last = drop(from, to-1)+1;\n\n    if (drop_first < drop_last) {\n        which_drop[from][to] = FROM;\n        return dp[from][to] = drop_first;\n    } else {\n        which_drop[from][to] = TO;\n        return dp[from][to] = drop_last;\n    }\n}\n\nstring org(int from, int to) {\n    string ret = \"\";\n    if (from == to) {\n        ret.push_back(s[from]);\n        return ret;\n    }\n    if (to - from < 0) {\n        return ret;\n    }\n    switch (which_drop[from][to]) {\n        case FROM:\n            ret.append(org(from+1, to));\n            break;\n        case TO:\n            ret.append(org(from, to-1));\n            break;\n        case NONE:\n            ret.push_back(s[from]);\n            ret.append(org(from+1, to-1));\n            ret.push_back(s[to]);\n            break;\n    }\n    //cout << from << ' ' << to << ':';\n    //cout << which_drop[from][to] << endl;\n    //cout << ret << endl;\n    return ret;\n} \n\n\nint main() {\n    while (cin >> s) {\n        memset(dp, -1, sizeof(dp));\n        memset(which_drop, -1, sizeof(which_drop));\n        drop(0, s.size()-1);\n        //cout << drop(0, s.size()-1) << endl;\n        cout << org(0, s.size()-1) << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\n#define MAX 2001\n\nint dp[MAX][MAX];\nint arr[MAX][MAX];\n\nvoid init(int N){\n  for(int i = 0 ; i < N ; i++){\n    for(int j = 0 ; j < N ; j++){\n      dp[i][j] = 0;\n      arr[i][j] = MAX;\n    }\n  }\n}\n\nint main(){\n  string s;\n\n  while(cin >> s){\n    string t = s;\n    reverse(t.begin(), t.end());\n \n    int len = s.size();  init(len+1);\n    for(int i = 0 ; i < len ; i++){\n      for(int j = 0 ; j < len ; j++){\n        if(s[i] == t[j]){\n          dp[i+1][j+1] = dp[i][j] + 1;\n          arr[i+1][j+1] = 0;\n        }else{\n          if(dp[i][j+1] < dp[i+1][j]){\n            dp[i+1][j+1] = dp[i+1][j];\n            arr[i+1][j+1] = -1;\n          }else{\n            dp[i+1][j+1] = dp[i][j+1];\n            arr[i+1][j+1] = 1;\n          }\n        }\n      }\n    }\n    string str;\n    for(int i = len, j = len ; i > 0 && j > 0 ;){\n      if(!arr[i][j]){\n        str += s[i-1];\n        i--, j--;\n      }else if(arr[i][j] == 1){\n        i--;\n      }else{\n        j--;\n      }\n    }\n    cout << str << endl;\n  }\n\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<short,short> pii;\n\nshort dp[2001][2001];\npii to[2001][2001];\n\nstring s;\nstring s2;\nint n;\n\n// sツづ2ツづ可づつつ「ツづ、ツ催妥・ツ閉板閉ェツ暗ェツ致ツ閉カツ篠堋療アツ陳キツづーツ仰づ淞づゥ\n// ツつスツつセツつオツ、s_posツづ2_posツづーcrossツつウツつケツづづ債つ「ツつッツづ按つ「\nint dfs(int a,int b){\n\tint b_rev=n-1-b;\n\tif(b_rev<a){\n\t\tto[a][b].first=-1;\n\t\treturn 0;\n\t}\n\telse if(b_rev==a){\n\t\tif(s[a]==s2[b]){\n\t\t\tto[a][b].first=-2;\n\t\t\treturn 1;\n\t\t}\n\t\telse{\n\t\t\tto[a][b].first=-1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif(dp[a][b]!=-1)return dp[a][b];\n\tint res=0;\n\tif(s[a]==s2[b]){\n\t\tint tmp=res;\n\t\tres=max(res,dfs(a+1,b+1)+1);\n\t\tif(tmp!=res){\n\t\t\tto[a][b]=pii(a+1,b+1);\n\t\t}\n\t}\n\tint tmp=res;\n\tres=max(res,dfs(a+1,b));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a+1,b);\n\t}\n\ttmp=res;\n\tres=max(res,dfs(a,b+1));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a,b+1);\n\t}\n\treturn dp[a][b]=res;\n}\n\nint main(){\n\n\twhile(cin>>s){\n\t\tn=s.size();\n\t\tmemset(dp,-1,sizeof(dp));\n\t\ts2=s;\n\t\treverse(s2.begin(),s2.end());\n\t\tint res=dfs(0,0);\n\t\tpii cur;\n\t\tstring ret;\n\t\twhile(1){\n\t\t\tif(cur.first==-1)break;\n\t\t\tpii nxt=to[cur.first][cur.second];\n\t\t\tif(nxt.first==-2){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+s[cur.first]+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// diffツつェ1\n\t\t\tif(nxt.first-cur.first==1&&nxt.second-cur.second==1)\n\t\t\t\tret+=s[cur.first];\n\t\t\tcur=nxt;\n\t\t}\n\t\tcout<<ret<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 3000;\n\nstring lcs(string a, string b){\n  int size = (int)a.size();\n  //vector< vector<int> > dp(size+1, vector<int>(size+1));\n  //vector< vector<int> > p(size+1, vector<int>(size+1));\n  int dp[N+1][N+1];\n  int p[N+1][N+1];\n  fill(dp[0], dp[N+1], 0);\n  fill(p[0], p[N+1], 0);\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<string>\n#include<algorithm>\t\n#include<map>\n#include<set>\n#include<utility>\n#include<cmath>\n#include<cstring>\n#include<queue>\n#include<cstdio>\n#include<sstream>\n#include<iomanip>\n#define loop(i,a,b) for(int i=a;i<b;i++) \n#define rep(i,a) loop(i,0,a)\n#define pb push_back\n#define mp make_pair\n#define all(in) in.begin(),in.end()\n#define shosu(x) fixed<<setprecision(x)\nusing namespace std;\n//kaewasuretyuui\ntypedef long long ll;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<pii> vp;\ntypedef vector<vp> vvp;\ntypedef pair<int,pii> pip;\ntypedef vector<pip>vip;\nconst double PI=acos(-1);\nconst double EPS=1e-8;\nconst int inf=1e8;\nstring LCS(string &a,string &b){\n\tconst int LMAX=2010;\n\tint m=a.size(),n=b.size();\n\tint dp[LMAX+1][LMAX+1],from[LMAX+1][LMAX+1];\n\trep(i,m+1)dp[i][0]=0,from[i][0]=-1;\n\trep(i,n+1)dp[0][i]=0,from[0][i]=-1;\n\trep(i,m)rep(j,n){\n\t\tif(a[i]==b[j]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}else{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}else{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\tint idx=dp[m][n];\n\tstring out(idx,'!');\n\tfor(int i=m,j=n;~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0:i--;break;\n\t\t\tcase 1:j--;break;\n\t\t\tcase 2:i--;j--;idx--;out[idx]=a[i];break;\n\t\t}\n\t}\n\treturn out;\n}\nint main(){\n\tstring s;\n\twhile(cin>>s){\n\t\tstring t=s;\n\t\treverse(all(t));\n\t\tcout<<LCS(s,t)<<endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <map>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) \\\n    distance(as.begin(),lower_bound(as.begin(),as.end(),x))\nconst int inf = 1<<8;\ntypedef short INT;\n\nvector <INT> xs;\nvector <INT> ys;\nvector <Node*> link;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        M[b[i]].push_back(i);\n    }\n    xs = vector<INT>(n+1, inf); \n    xs[0] = -inf;\n    link = vector <Node*>(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\n#include <iterator>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) distance(as.begin(),lower_bound(as.begin(),as.end(),x))\n\ntypedef short INT;\nconst INT inf = 1<<8;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        M[b[i]].push_back(i);\n    }\n    vector <INT> xs(n+1, inf); \n    xs[0] = -inf;\n    vector <Node*> link(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            vector <INT> ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <cstdio>\n#include <cstring>\n#include <string>\n\nusing namespace std;\n\nint dp[1024][1024];\n\nint main()\n{\n\tchar s[2048];\n\t\n\twhile (scanf(\"%s\", s) == 1){\n\t\tchar s1[1024], s2[1024];\n\t\tint len = strlen(s);\n\t\tstrncpy(s1, s, len / 2);\n\t\tfor (int i = 0; i < len / 2; i++){\n\t\t\ts2[i] = s[len - i - 1];\n\t\t}\n\t\ts1[len / 2] = s2[len / 2] = '\\0';\n\t\t\n\t\tmemset(dp, 0, sizeof(dp));\n\t\t\n\t\tstring m[2][1024];\n\t\t\n\t\tfor (int i = 0; i < 1024; i++){\n\t\t\tm[0][i] = m[1][i] = \"\";\n\t\t}\n\t\t\n\t\tfor (int i = 1; i <= len / 2; i++){\n\t\t\tfor (int j = 1; j <= len / 2; j++){\n\t\t\t\tif (s1[i - 1] == s2[j - 1]){\n\t\t\t\t\tdp[i][j] = dp[i - 1][j - 1] + 1;\n\t\t\t\t\tm[i & 1][j] = m[(i + 1) & 1][j - 1] + s1[i - 1];\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);\n\t\t\t\t\tif (m[i & 1][j - 1].size() > m[(i + 1) & 1][j].size()){\n\t\t\t\t\t\tm[i & 1][j] = m[i & 1][j - 1];\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tm[i & 1][j] = m[(i + 1) & 1][j];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchar ans[1024];\n\t\tstrcpy(ans, m[(len / 2) & 1][len / 2].c_str());\n\t\tprintf(\"%s\", ans);\n\t\tif (len & 1) printf(\"%c\", s[len / 2]);\n\t\tfor (int i = strlen(ans) - 1; i >= 0; i--) printf(\"%c\", ans[i]);\n\t\tprintf(\"\\n\");\n\t}\n\t\n\treturn (0);\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <algorithm>\n#include <string>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<int,int> pii;\n\nint dp[2001][2001];\npii to[2001][2001];\n\nstring s;\nstring s2;\nint n;\n\n// sツづ2ツづ可づつつ「ツづ、ツ催妥・ツ閉板閉ェツ暗ェツ致ツ閉カツ篠堋療アツ陳キツづーツ仰づ淞づゥ\n// ツつスツつセツつオツ、s_posツづ2_posツづーcrossツつウツつケツづづ債つ「ツつッツづ按つ「\nint dfs(int a,int b){\n\tint b_rev=n-1-b;\n\tif(b_rev<a){\n\t\tto[a][b].first=-1;\n\t\tto[a][b].second=-1;\n\t\treturn 0;\n\t}\n\telse if(b_rev==a){\n\t\tif(s[a]==s2[b]){\n\t\t\tto[a][b].first=-2;\n\t\t\treturn 1;\n\t\t}\n\t\telse{\n\t\t\tto[a][b].first=-1;\n\t\t\treturn 0;\n\t\t}\n\t}\n\tif(dp[a][b]!=-1)return dp[a][b];\n\tint res=0;\n\tif(s[a]==s2[b]){\n\t\tint tmp=res;\n\t\tres=max(res,dfs(a+1,b+1)+1);\n\t\tif(tmp!=res){\n\t\t\tto[a][b]=pii(a+1,b+1);\n\t\t}\n\t}\n\tint tmp=res;\n\tres=max(res,dfs(a+1,b));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a+1,b);\n\t}\n\ttmp=res;\n\tres=max(res,dfs(a,b+1));\n\tif(tmp!=res){\n\t\tto[a][b]=pii(a,b+1);\n\t}\n\treturn dp[a][b]=res;\n}\n\nint main(){\n\n\twhile(cin>>s){\n\t\tn=s.size();\n\t\tmemset(dp,-1,sizeof(dp));\n\t\ts2=s;\n\t\treverse(s2.begin(),s2.end());\n\t\tint res=dfs(0,0);\n\t\t//cout<<res<<endl;\n\t\tpii cur;\n\t\tstring ret;\n\t\twhile(1){\n\t\t\tif(cur.first==-1)break;\n\t\t\tpii nxt=to[cur.first][cur.second];\n\t\t\tif(nxt.first==-2){\n\t\t\t\tstring tmp=ret;\n\t\t\t\treverse(tmp.begin(),tmp.end());\n\t\t\t\tret=ret+s[cur.first]+tmp;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// diffツつェ1\n\t\t\tif(nxt.first-cur.first==1&&nxt.second-cur.second==1)\n\t\t\t\tret+=s[cur.first];\n\t\t\tcur=nxt;\n\t\t}\n\t\tcout<<ret<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <map>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) \\\n    distance(as.begin(),lower_bound(as.begin(),as.end(),x))\nconst int inf = 1<<8;\ntypedef short INT;\n\nvector <INT> xs;\nvector <INT> ys;\nvector <Node*> link;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        M[b[i]].push_back(i);\n    }\n    xs = vector<INT>(n+1, inf); \n    xs[0] = -inf;\n    link = vector <Node*>(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "//38\n#include<iostream>\n#include<algorithm>\n#include<string>\n\nusing namespace std;\n\nint main(){\n  for(string s;cin>>s;){\n    static int dp[2001][2001];\n    fill(dp[0],dp[2001],0);\n    for(int i=1;i<=s.size();i++){\n      for(int j=1;j<=s.size();j++){\n\tdp[i][j]=max(dp[i-1][j],max(dp[i][j-1],dp[i-1][j-1]+(s[i-1]==s.rbegin()[j-1])));\n\n      }\n    }\n    string t;\n    int x=s.size(),y=s.size();\n    while(x&&y){\n      if(s[x-1]==s.rbegin()[y-1]){\n\tt+=s[x-1];\n\tx--;\n\ty--;\n      }else if(dp[x-1][y]>dp[x][y-1]){\n\tx--;\n      }else{\n\ty--;\n      }\n    }\n    cout<<t<<endl;\n  }\n  return 0;\n}\n\t  "
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nstring lcs(string a, string b){\n  int size = (int)a.size();\n  vector< vector<int> > dp(size+1, vector<int>(size+1));\n  vector< vector<int> > p(size+1, vector<int>(size+1));\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<cstdio>\n#include<cstring>\n\n#define rep(i,n) for(int i=0;i<(n);i++)\n\nusing namespace std;\n\nchar *solve(const char *s){\n\tint n=strlen(s);\n\tstatic int dp[2001][2001],from[2001][2001];\n\n\trep(i,n+1) dp[i][0]=dp[0][i]=0, from[i][0]=from[0][i]=-1;\n\n\trep(i,n) rep(j,n) {\n\t\tif(s[i]==s[n-j-1]){\n\t\t\tdp[i+1][j+1]=dp[i][j]+1;\n\t\t\tfrom[i+1][j+1]=2;\n\t\t}\n\t\telse{\n\t\t\tif(dp[i][j+1]<dp[i+1][j]){\n\t\t\t\tdp[i+1][j+1]=dp[i+1][j];\n\t\t\t\tfrom[i+1][j+1]=1;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdp[i+1][j+1]=dp[i][j+1];\n\t\t\t\tfrom[i+1][j+1]=0;\n\t\t\t}\n\t\t}\n\t}\n\n\tint len=0,i_len[2];\n\tfor(int i=1;i<n;i++){\n\t\tint tmp=2*dp[i][n-i];\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i;\n\t\t}\n\n\t\ttmp=2*dp[i][n-i-1]+1;\n\t\tif(len<tmp){\n\t\t\tlen=tmp;\n\t\t\ti_len[0]=i;\n\t\t\ti_len[1]=n-i-1;\n\t\t}\n\t}\n\n\tint idx=len/2;\n\tchar ans[2001]={};\n\tfor(int i=i_len[0],j=i_len[1];~from[i][j];){\n\t\tswitch(from[i][j]){\n\t\t\tcase 0: i--; break;\n\t\t\tcase 1: j--; break;\n\t\t\tcase 2: i--; j--; idx--; ans[idx]=s[i]; break;\n\t\t}\n\t}\n\tif(len%2==1) ans[len/2]=s[i_len[0]];\n\trep(i,len/2) ans[len/2+i+1]=ans[len/2-i-1];\n\n\treturn ans;\n}\n\nint main(){\n\tfor(char s[2001];~scanf(\"%s\",s);) puts(solve(s));\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 200;\n\nstring lcs(string a, string b){\n  int dp[N+1][N+1];\n  int p[N+1][N+1];\n  fill(dp[0], dp[N+1], 0);\n  int size = a.size();\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = n, j = m; i >= 1; i--) {\n    if(c[i][j] == c[i-1][j-1]+1) ret += X[i],j--;\n  }\n  assert(false);\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 2000;\n\nstring lcs(string a, string b){\n  int size = (int)a.size();\n  //vector< vector<int> > dp(size+1, vector<int>(size+1));\n  //vector< vector<int> > p(size+1, vector<int>(size+1));\n  int dp[N+1][N+1];\n  int p[N+1][N+1];\n  fill(dp[0], dp[N+1], 0);\n  fill(p[0], p[N+1], 0);\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(cin >> input){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <algorithm>\n#include <bitset>\n#include <cctype>\n#include <cmath>\n#include <cstdio>\n#include <cstdlib>\n#include <cstring>\n#include <ctime>\n#include <deque>\n#include <functional>\n#include <iomanip>\n#include <iostream>\n#include <list>\n#include <map>\n#include <numeric>\n#include <queue>\n#include <set>\n#include <sstream>\n#include <stack>\n#include <string>\n#include <utility>\n#include <vector>\n\nusing namespace std;\n\ninline int toInt(string s) {int v; istringstream sin(s);sin>>v;return v;}\ntemplate<class T> inline string toString(T x) {ostringstream sout;sout<<x;return sout.str();}\ntemplate<class T> inline T sqr(T x) {return x*x;}\n\ntypedef vector<int> vi;\ntypedef vector<vi> vvi;\ntypedef vector<string> vs;\ntypedef pair<int, int> pii;\ntypedef long long ll;\n\n#define all(a)  (a).begin(),(a).end()\n#define rall(a) (a).rbegin(), (a).rend()\n#define pb push_back\n#define mp make_pair\n#define each(i,c) for(typeof((c).begin()) i=(c).begin(); i!=(c).end(); ++i)\n#define exist(s,e) ((s).find(e)!=(s).end())\n#define range(i,a,b) for(int i=(a);i<(b);++i)\n#define rep(i,n)  range(i,0,n)\n#define clr(a,b) memset((a), (b) ,sizeof(a))\n#define dump(x)  cerr << #x << \" = \" << (x) << endl;\n#define debug(x) cerr << #x << \" = \" << (x) << \" (L\" << __LINE__ << \")\" << \" \" << __FILE__ << endl;\n\nconst double eps = 1e-10;\nconst double pi  = acos(-1.0);\nconst ll INF =1LL << 62;\nconst int inf =1 << 29;\n\n\nint dp[2010][2010];\n\nint main(void){\n\tstring pa,ra;\n\twhile(cin >> pa){\n\t\tif(cin.eof())\n\t\t\tbreak;\n\n\t\trep(i,2010)rep(j,2010) dp[i][j]=0;\n\t\tra=pa;\n\t\treverse(ra.begin(),ra.end());\n\t\tint n=pa.size();\n\t\trep(i,n)rep(j,n){\n\t\t\tdp[i+1][j]=max(dp[i+1][j],dp[i][j]);\n\t\t\tdp[i][j+1]=max(dp[i][j+1],dp[i][j]);\n\t\t\tdp[i+1][j+1]=max(dp[i+1][j+1],dp[i][j]+(pa[i]==ra[j]));\n\t\t}\n\t\tstring ans=\"\";\n\t\tint cur=dp[n][n];\n\t\t//dump(cur)\n\n\t\tfor(int i=n,j=n;i>0&&j>0;){\n\t\t\tif(dp[i][j]==dp[i-1][j])\n\t\t\t\ti--;\n\t\t\telse if(dp[i][j]==dp[i][j-1])\n\t\t\t\tj--;\n\t\t\telse if(dp[i][j]==dp[i-1][j-1]+1){\n\t\t\t\tans+=pa[i-1];\n\t\t\t\ti--;j--;\n\t\t\t}\n\t\t}\n\t\tcout << ans << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "\n#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\n#include <map>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) \\\n    distance(as.begin(),lower_bound(as.begin(),as.end(),x))\nconst int inf = 1<<8;\ntypedef short INT;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        M[b[i]].push_back(i);\n    }\n    vector <INT> xs(n+1, inf); \n    xs[0] = -inf;\n    vector <Node*> link(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            vector <INT> ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\n/*\nshort X[3001][3001];\nshort Y[3001][3001];\nstring lcs( string a, string b ) {\n    int n = a.size();\n    int m = b.size();\n    for ( int i = 0; i < n+1; i++ ) {\n        for ( int j = 0; j < m+1; j++ ) {\n            X[i][j] = 0;\n            Y[i][j] = 0;\n        }\n    }\n\n    for ( int i = 0; i < n; i++ ) {\n        for ( int j = 0; j < m; j++ ) {\n            if ( a[i] == b[j] ) {\n                X[i+1][j+1] = X[i][j] + 1;\n                Y[i+1][j+1] = 0;\n            } else if ( X[i+1][j] < X[i][j+1] ) {\n                X[i+1][j+1] = X[i][j+1];\n                Y[i+1][j+1] = +1;\n            } else {\n                X[i+1][j+1] = X[i+1][j];\n                Y[i+1][j+1] = -1;\n            }\n        }\n    }\n\n    string answer;\n    for ( int i = n, j = m; i > 0 && j > 0; ) {\n        if ( Y[i][j] > 0 ) {\n            i--;\n        } else if ( Y[i][j] < 0 ) {\n            j--;\n        } else {\n            answer += a[i-1];\n            i--;\n            j--;\n        }\n    }\n    reverse( answer.begin(), answer.end() );\n    return answer;\n}\n*/\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<vector>\n#include<algorithm>\nusing namespace std;\n\nint main(){\n    string s1;\n    while(cin>>s1){\n        string s2;\n        s2=s1;\n        reverse(s2.begin(), s2.end());\n        \n        vector<vector<short> >v1;\n        vector<vector<pair<short,short> > >v2;\n        \n        vector<short>v(s1.length()+1,0);\n        v1.resize(s1.length()+1,v);\n        \n        vector<pair<short,short> >v3(s1.length()+1,make_pair(-1,-1));\n        v2.resize(s1.length()+1,v3);\n        \n        for(int i=0;i<s1.length();i++){\n            for(int j=0;j<s1.length();j++){\n                if(s1[i]==s2[j]){\n                    v1[i+1][j+1]=v1[i][j]+1;\n                    v2[i+1][j+1]=make_pair(i, j);\n                }\n                else if(v1[i+1][j]>v1[i][j+1]){\n                    v1[i+1][j+1]=v1[i+1][j];\n                    v2[i+1][j+1]=v2[i+1][j];\n                }\n                else{\n                    v1[i+1][j+1]=v1[i][j+1];\n                    v2[i+1][j+1]=v2[i][j+1];\n                }\n            }\n        }\n        pair<short,short>p=v2[s1.length()][s2.length()];\n        while(1){\n            if(p.first==-1&&p.second==-1)break;\n            cout<<s1[p.first];\n            p=v2[p.first][p.second];\n        }\n        cout<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <cstring>\n#include <cassert>\nusing namespace std;\n\nint dp[2005][2005];\nstring input;\n\nint rec(int left,int right) {\n    if(dp[left][right] != -1) return dp[left][right];\n    if(left == right) return dp[left][right] = 1;\n    if(left+1 == right) {\n        if(input[left] == input[right]) return dp[left][right] = 2;\n        else return dp[left][right] = 1;\n    }\n\n    int ret = 0;\n    if(input[left] == input[right])\n        ret = 2 + rec(left+1,right-1);\n\n    ret = max(ret, rec(left+1,right));\n    ret = max(ret, rec(left,right-1));\n    return dp[left][right] = ret;\n}\n\nstring traverse(int left,int right) {\n    if(dp[left][right] == 0) return \"\";\n    if(left == right) return string(1,input[left]);\n    if(left+1 == right) {\n        if(dp[left][right] == 2)\n            return string(1,input[left]) + string(1,input[right]);\n        return string(1,input[left]);\n    }\n\n    int r1 = 0;\n    if(input[left] == input[right]) r1 = 2 + rec(left+1,right-1);\n    int r2 = dp[left][right-1];\n    int r3 = dp[left+1][right];\n\n    if(r1 > r2 && r1 > r3) {\n        string k = string(1,input[left]);\n        return k + traverse(left+1,right-1) + k;\n    }else if(r2 > r1 && r2 > r3) {\n        return traverse(left,right-1);\n    }else{\n        return traverse(left+1,right);\n    }\n}\n\nint main() {\n    while(cin>>input) {\n        memset(dp, -1, sizeof(dp));\n        rec(0,input.length()-1);\n\n        // for(int i=0; i<4; ++i) {\n        //     for(int j=0; j<4; ++j)\n        //         cout<<dp[i][j]<<\" \";\n        //     cout<<endl;\n        // }\n        cout<<traverse(0,input.length()-1)<<endl;\n    }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(a) (a).begin(),(a).end()\nusing namespace std;\n\nint main(){\n  string s;\n  while(cin >> s){\n    int n = s.size();\n    string r = s;\n    reverse(all(r));\n\n    vector< vector<int> > dp(n+1,vector<int>(n+1,0));\n    rep(i,n){\n      rep(j,n){\n\tif(s[i] == r[j])dp[i+1][j+1] = dp[i][j]+1;\n\telse dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);\n      }\n    }\n\n    int m = (dp[n][n]+1)/2;\n    string pal;\n    int a = n, b = n;\n    while(a!=0 && b!=0 && (int)pal.size()<m){\n      if(a>0 && b>0 && dp[a][b] == dp[a-1][b-1]+1){\n\tpal += s[a-1]; a--; b--;\n      }else if(a>0 && dp[a][b] == dp[a-1][b]){\n\ta--;\n      }else if(b>0 && dp[a][b] == dp[a][b-1]){\n\tb--;\n      }else{\n\texit(1);\n      }\n    }\n    \n    for(int i=dp[n][n]/2-1;i>=0;i--)pal += pal[i];\n    cout << pal << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<iostream>\n#include<string>\n#include<tuple>\n#include<algorithm>\nusing namespace std;\nstring S; tuple<int, int, int>dp[2100][2100];\nint solve(int s, int t) {\n\tif (s > t)return 0;\n\tif (get<0>(dp[s][t]) != -1)return get<0>(dp[s][t]);\n\tif (s == t) { dp[s][t] = make_tuple(1, -1, -1); return 1; }\n\tif (t - s == 1) {\n\t\tif (S[s] == S[t]) { dp[s][t] = make_tuple(2, -1, -1); return 2; }\n\t}\n\tint c1 = solve(s, t - 1);\n\tint c2 = solve(s + 1, t);\n\tint c3 = solve(s + 1, t - 1); if (S[s] == S[t])c3 += 2;\n\tif (c1 >= c2 && c1 >= c3) { dp[s][t] = make_tuple(c1, s, t - 1); return c1; }\n\tif (c2 >= c1 && c2 >= c3) { dp[s][t] = make_tuple(c2, s + 1, t); return c2; }\n\tif (c3 >= c1 && c3 >= c2) { dp[s][t] = make_tuple(c3, s + 1, t - 1); return c3; }\n}\nint main() {\n\twhile (cin >> S) {\n\t\tfor (int i = 0; i < S.size(); i++) { for (int j = 0; j < S.size(); j++)dp[i][j] = make_tuple(-1, 0, 0); }\n\t\tsolve(0, S.size() - 1);\n\t\tstring V, W; int F = 0, G = S.size() - 1;\n\t\twhile (F + G >= 0) {\n\t\t\tint H = get<1>(dp[F][G]), I = get<2>(dp[F][G]);\n\t\t\tif (H == -1 || ((H - F) + (G - I)) == 2) {\n\t\t\t\tV += S[F]; if (F != G)W += S[F];\n\t\t\t}\n\t\t\tF = H; G = I;\n\t\t}\n\t\treverse(W.begin(), W.end());\n\t\tcout << V + W << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <cstdio>\n#include <algorithm>\n#include <queue>\n#include <set>\nusing namespace std;\n\nint dp[2001][2001];\nint used[2001][2001];\n\nstring s;\nint f(int l,int r){\n\tif(dp[l][r] != -1) return dp[l][r];\n\tif(l >= r) return 0;\n\tif(s[l] == s[r]){\n\t\tused[l][r] = 0;\n\t\treturn dp[l][r] = f(l+1,r-1);\n\t}else{\n\t\tint a = f(l+1,r) + 1;\n\t\tint b = f(l,r-1) + 1;\n\t\tif(a < b){\n\t\t\tused[l][r] = -1;\n\t\t\treturn dp[l][r] = a;\n\t\t}else{\n\t\t\tused[l][r] = 1;\n\t\t\treturn dp[l][r] = b;\n\t\t}\n\t}\n}\nint mask[2001];\n\nvoid get(int l,int r){\n\tif(l >= r) return;\n\tif(used[l][r] == 0){\n\t\tget(l+1,r-1);\n\t}else if(used[l][r] == -1){\n\t\tmask[l] = 1;\n\t\tget(l+1,r);\n\t}else{\n\t\tmask[r] = 1;\n\t\tget(l,r-1);\n\t}\n}\n\nint main(){\n\twhile(cin >> s){\n\t\tmemset(dp,-1,sizeof(dp));\n\t\tmemset(mask,0,sizeof(mask));\n\t\tf(0,s.size()-1);\n\t\tget(0,s.size()-1);\n\t\t\n\t\tfor(int i = 0 ; i < s.size() ; i++)\n\t\t\tif(mask[i] == 0) cout << s[i];\n\t\tcout << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\n#include <iterator>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) distance(as.begin(),lower_bound(as.begin(),as.end(),x))\n\ntypedef short INT;\nconst INT inf = 9999;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        if ( M.find( b[i] ) == M.end() ) M[b[i]] = vector<INT>();\n        M[b[i]].push_back(i);\n    }\n    vector <INT> xs(n+1, inf); \n    xs[0] = -inf;\n    vector <Node*> link(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            vector <INT> ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <vector>\n#include <algorithm>\n#include <iostream>\n#include <cstring>\nusing namespace std;\ntemplate<typename T>\nvector<T> LCS(const vector<T> &a,const vector<T> &b){\n\tint DP[a.size()+1][b.size()+1],back[a.size()+1][b.size()+1];\n\tmemset(DP,0,sizeof(DP));\n\tmemset(back,1,sizeof(back));\n\tfor(int i=1;i<=(int)a.size();i++){\n\t\tfor(int j=1;j<=(int)b.size();j++){\n\t\t\tif(a[i-1]==b[j-1]){\n\t\t\t\tif(DP[i][j]<DP[i-1][j-1]+1){\n\t\t\t\t\tDP[i][j]=DP[i-1][j-1]+1;\n\t\t\t\t\tback[i][j]=0;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(DP[i][j]<DP[i-1][j]){\n\t\t\t\tDP[i][j]=DP[i-1][j];\n\t\t\t\tback[i][j]=1;\n\t\t\t}\n\t\t\tif(DP[i][j]<DP[i][j-1]){\n\t\t\t\tDP[i][j]=DP[i][j-1];\n\t\t\t\tback[i][j]=-1;\n\t\t\t}\n\t\t}\n\t}\n\tint x=a.size(),y=b.size();\n\tvector<T> res;\n\twhile(x>0&&y>0){\n\t\tif(back[x][y]==0){\n\t\t\tres.push_back(a[x-1]);\n\t\t\tx--;y--;\n\t\t}else if(back[x][y]>0)x--;else y--;\n\t}\n\tstd::reverse(res.begin(),res.end());\n\treturn res;\n}\nstring LCS(const string &a,const string &b){\n\tvector<char> a_,b_,ret;\n\tfor(int i=0;i<(int)a.size();i++)a_.push_back(a[i]);\n\tfor(int i=0;i<(int)b.size();i++)b_.push_back(b[i]);\n\tret=LCS(a_,b_);\n\tstring res;\n\tfor(int i=0;i<(ret.size());i++)\n\t\tres+=ret[i];\n\treturn res;\n}\nint main() {\n\tstring in;\n\twhile(cin>>in){\n\t\tstring a=in;\n\t\treverse(a.begin(),a.end());\n\t\tcout<<LCS(a,in)<<endl;\n\t}\n\n\treturn 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <algorithm>\n \nusing namespace std;\n \n#define MAX 2001\n \nint dp[MAX][MAX];\nint arr[MAX][MAX];\n \nvoid init(int N){\n    for(int i = 0 ; i < N ; i++){\n\tfor(int j = 0 ; j < N ; j++){\n\t    dp[i][j] = 0;\n\t    arr[i][j] = MAX;\n\t}\n    }\n}\n \nint main(){\n    string s;\n \n    while(cin >> s){\n\tstring t = s;\n\treverse(t.begin(), t.end());\n  \n\tint len = s.size();  init(len+1);\n\tfor(int i = 0 ; i < len ; i++){\n\t    for(int j = 0 ; j < len ; j++){\n\t\tif(s[i] == t[j]){\n\t\t    dp[i+1][j+1] = dp[i][j] + 1;\n\t\t    arr[i+1][j+1] = 0;\n\t\t}else{\n\t\t    if(dp[i][j+1] < dp[i+1][j]){\n\t\t\tdp[i+1][j+1] = dp[i+1][j];\n\t\t\tarr[i+1][j+1] = -1;\n\t\t    }else{\n\t\t\tdp[i+1][j+1] = dp[i][j+1];\n\t\t\tarr[i+1][j+1] = 1;\n\t\t    }\n\t\t}\n\t    }\n\t}\n\tstring str;\n\tfor(int i = len, j = len ; i > 0 && j > 0 ;){\n\t    if(!arr[i][j]){\n\t\tstr += s[i-1];\n\t\ti--, j--;\n\t    }else if(arr[i][j] == 1){\n\t\ti--;\n\t    }else{\n\t\tj--;\n\t    }\n\t}\n\tcout << str << endl;\n    }\n \n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <map>\n#include <algorithm>\n#include <iterator>\nusing namespace std;\n\nstruct Node {\n    char v;\n    Node* next;\n    Node(int v, Node* next): v(v), next(next) {}\n};\n#define index_of(as, x) distance(as.begin(),lower_bound(as.begin(),as.end(),x))\n\ntypedef short INT;\nconst INT inf = 1<<8;\n\nstring lcs( string& a, string& b ) {\n    const INT n = a.size();\n    const INT m = b.size();\n    map <char, vector<INT> > M;\n    for ( INT i = m-1; i >= 0; i-- ) {\n        if ( M.find( b[i] ) == M.end() ) M[b[i]] = vector<INT>();\n        M[b[i]].push_back(i);\n    }\n    vector <INT> xs(n+1, inf); \n    xs[0] = -inf;\n    vector <Node*> link(n+1);\n    for ( INT i = 0; i < n; i++ ) {\n        if ( M.count( a[i] ) ) {\n            vector <INT> ys = M[a[i]];\n            for ( INT j = 0; j < (INT)ys.size(); j++ ) {\n                INT k = index_of( xs, ys[j] );\n                xs[k] = ys[j];\n                link[k] = new Node( b[ys[j]], link[k-1] );\n            }\n        }\n    }\n\n    string answer;\n    int l = index_of(xs, inf-1) - 1;\n    for ( Node* p = link[l]; p; p = p->next ) {\n        answer.push_back( p->v );\n    }\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(a) (a).begin(),(a).end()\nusing namespace std;\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  string s;\n  while(cin >> s){\n    int n = s.size();\n    string r = s;\n    reverse(all(r));\n\n    vector< vector<int> > dp(n+1,vector<int>(n+1,0));\n    rep(i,n){\n      rep(j,n){\n\tif(s[i] == r[j])dp[i+1][j+1] = dp[i][j]+1;\n\telse dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);\n      }\n    }\n\n    int m = (dp[n][n]+1)/2;\n    string pal;\n    int a = n, b = n;\n    while(a!=0 && b!=0 && (int)pal.size()<m){\n      if(a>0 && b>0 && dp[a][b] == dp[a-1][b-1]+1 && s[a-1]==r[b-1]){\n\tpal += s[a-1]; a--; b--;\n      }else if(a>0 && dp[a][b] == dp[a-1][b]){\n\ta--;\n      }else if(b>0 && dp[a][b] == dp[a][b-1]){\n\tb--;\n      }else{\n\texit(1);\n      }\n    }\n    \n    for(int i=dp[n][n]/2-1;i>=0;i--)pal += pal[i];\n    cout << pal << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\n#define rep(i,n) for(int i=0;i<(int)(n);i++)\n#define all(a) (a).begin(),(a).end()\nusing namespace std;\n\nint dp[2001][2001];\n\nint main(){\n  cin.tie(0); ios::sync_with_stdio(0);\n  string s;\n  while(cin >> s){\n    int n = s.size();\n    string r = s;\n    reverse(all(r));\n\n    //vector< vector<int> > dp(n+1,vector<int>(n+1,0));\n    memset(dp,0,sizeof(dp));\n    rep(i,n){\n      rep(j,n){\n\tif(s[i] == r[j])dp[i+1][j+1] = dp[i][j]+1;\n\telse dp[i+1][j+1] = max(dp[i][j+1], dp[i+1][j]);\n      }\n    }\n\n    int m = (dp[n][n]+1)/2;\n    string pal;\n    int a = n, b = n;\n    while(a!=0 && b!=0 && (int)pal.size()<m){\n      if(a>0 && b>0 && dp[a][b] == dp[a-1][b-1]+1 && s[a-1]==r[b-1]){\n\tpal += s[a-1]; a--; b--;\n      }else if(a>0 && dp[a][b] == dp[a-1][b]){\n\ta--;\n      }else if(b>0 && dp[a][b] == dp[a][b-1]){\n\tb--;\n      }else{\n\texit(1);\n      }\n    }\n    \n    for(int i=dp[n][n]/2-1;i>=0;i--)pal += pal[i];\n    cout << pal << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <stdio.h>\n#include <string.h>\n#include <algorithm>\n#include <iostream>\n#include <math.h>\n#include <assert.h>\n#include <vector>\n\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned int uint;\ntypedef unsigned long long ull;\nstatic const double EPS = 1e-9;\nstatic const double PI = acos(-1.0);\n\n#define REP(i, n) for (int i = 0; i < (int)(n); i++)\n#define FOR(i, s, n) for (int i = (s); i < (int)(n); i++)\n#define FOREQ(i, s, n) for (int i = (s); i <= (int)(n); i++)\n#define FORIT(it, c) for (__typeof((c).begin())it = (c).begin(); it != (c).end(); it++)\n#define MEMSET(v, h) memset((v), h, sizeof(v))\n\nint memo[2010][2010];\nint child[2010][2010];\nchar str[3000];\n\nint calc(int left, int right) {\n  if (memo[left][right] != -1) { return memo[left][right]; }\n  if (left >= right) { return 0; }\n  if (left == right - 1) { return 1; }\n  int ret = 0;\n  if (str[left] == str[right - 1]) {\n    child[left][right] = 0;\n    ret = calc(left + 1, right - 1) + 2;\n  } else {\n    int lret = calc(left + 1, right);\n    int rret = calc(left, right - 1);\n    if (lret >= rret) {\n      child[left][right] = 1;\n    } else {\n      child[left][right] = 2;\n    }\n    ret = max(lret, rret);\n  }\n  return memo[left][right] = ret;\n}\n\nstring MakeString(int left, int right) {\n  if (left >= right) { return \"\"; }\n  string ret = \"\";\n  if (left == right - 1) { ret = str[left]; }\n  else if (child[left][right] == 0) {\n    ret = str[left] + MakeString(left + 1, right - 1) + str[right - 1];\n  } else if (child[left][right] == 1) {\n    ret = MakeString(left + 1, right);\n  } else {\n    ret = MakeString(left, right - 1);\n  }\n  return ret;\n}\n\nint main() {\n  while (scanf(\"%s\", str) > 0) {\n    MEMSET(memo, -1);\n    MEMSET(child, -1);\n    calc(0, strlen(str));\n    cout << MakeString(0, strlen(str)) << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <cstring>\n#include <algorithm>\nusing namespace std;\n\nint n;\nstring s;\nshort dp[2002][2002];\n\nint main(){\n  while(cin >> s){\n    n = s.length();\n    memset(dp, 0, sizeof(dp));\n\n    for(int i = 0; i < n; i++){\n      dp[i][i] = 1;\n    }\n\n    for(int i = 1; i < n; i++){\n      for(int j = 0; j + i < n; j++){\n        int k = i + j;\n\n        if(s[j] == s[k] && dp[j][k] < dp[j + 1][k - 1] + 2){\n          dp[j][k] = dp[j + 1][k - 1] + 2;\n        }\n\n        if(dp[j][k] < dp[j + 1][k]){\n          dp[j][k] = dp[j + 1][k];\n        }\n        if(dp[j][k] < dp[j][k - 1]){\n          dp[j][k] = dp[j][k - 1];\n        }\n      }\n    }\n\n    string ans = \"\";\n    int x = n - 1;\n    int y = 0;\n\n    while(y < x){\n      if(dp[y][x] == dp[y + 1][x]){\n        y = y + 1;\n      }\n      else if(dp[y][x] == dp[y][x - 1]){\n        x = x - 1;\n      }\n      else if(s[y] == s[x] && dp[y + 1][x - 1] + 2 == dp[y][x]){\n        ans += s[x];\n        x = x - 1;\n        y = y + 1;\n      }\n    }\n\n    string rev = ans;\n    reverse(rev.begin(), rev.end());\n\n    if(dp[0][n - 1] % 2 == 0){\n      ans += rev;\n    }\n    else{\n      ans += s[x];\n      ans += rev;\n    }\n    cout << ans << endl;\n  }\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nstring ss[2][N+1];\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  ss[0][0] = \"\";\n  memset(c,0,sizeof(c));\n  for(int i=0;i<N+1;i++) ss[0][i]=ss[1][i]=\"\";\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1, ss[i%2][j] = ss[(i-1)%2][j-1] + X[i];\n      else {\n    if(c[i-1][j] >= c[i][j-1]) c[i][j]=c[i-1][j], ss[i%2][j] = ss[(i-1)%2][j];\n    else c[i][j] = c[i][j-1], ss[i%2][j] = ss[i%2][j-1];\n      }\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret=ss[m%2][n],ret2=ret;\n  reverse(ret2.begin(),ret2.end());\n  //assert(ret==ret2);\n  assert((int)ret.size()==maxl);\n  return ss[m%2][n];\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nusing namespace std;\n\nconst int N = 2000;\n\nstring lcs(string a, string b){\n  int dp[N+1][N+1];\n  int p[N+1][N+1];\n  fill(dp[0], dp[N+1], 0);\n  int size = a.size();\n  for(int i=0;i<size;++i){\n    for(int j=0;j<size;++j){\n      if(a[i] == b[j]){\n\tdp[i+1][j+1] = dp[i][j] + 1;\n\tp[i+1][j+1] = 0;\n      }else if(dp[i+1][j] < dp[i][j+1]){\n\tdp[i+1][j+1] = dp[i][j+1];\n\tp[i+1][j+1] = 1;\n      }else{\n\tdp[i+1][j+1] = dp[i+1][j];\n\tp[i+1][j+1] = -1;\n      }\n    }\n  }\n  string res;\n  for(int i=size, j=size;i>0 && j>0;){\n    if(p[i][j] > 0) --i;\n    else if(p[i][j] < 0) --j;\n    else{\n      res += a[i-1];\n      --i;\n      --j;\n    }\n  }\n  reverse(res.begin(), res.end());\n  return res;\n}\n\nmain(){\n  string input;\n  while(getline(cin, input) != 0){\n    string tmp = input;\n    reverse(tmp.begin(), tmp.end());\n    cout << lcs(input, tmp) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include<bits/stdc++.h>\nusing namespace std;\n#define N 2050\nint c[N+1][N+1];\nstring lcs(string X,string Y){\n  int m = X.size();\n  int n = Y.size();\n  int maxl = 0;\n  X = ' ' + X;\n  Y = ' ' + Y;\n  for(int i=0;i<=m;i++) c[i][0]=0;\n  for(int j=1;j<=n;j++) c[0][j]=0;\n  for(int i=1;i<=m;i++){\n    for(int j=1;j<=n;j++){\n      if(X[i]==Y[j]) c[i][j]=c[i-1][j-1]+1;\n      else c[i][j]=max(c[i-1][j],c[i][j-1]);\n      maxl=max(maxl,c[i][j]);\n    }\n  }\n  string ret;\n  for(int i = m; i >= 1; i--) {\n    if(c[n][i] != c[n][i-1]) ret += X[i-1];\n  }\n  return ret;\n}\nint main(){\n  string s;\n  while(cin >> s) {\n    string t = s;\n    reverse(t.begin(), t.end());\n    cout << lcs(s, t) << endl;\n  }\n  return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n#include <vector>\n#include <algorithm>\nusing namespace std;\n\nint X[3001][3001];\nint Y[3001][3001];\n\nstring lcs( string a, string b ) {\n    int n = a.size();\n    int m = b.size();\n    for ( int i = 0; i < n+1; i++ ) {\n        for ( int j = 0; j < m+1; j++ ) {\n            X[i][j] = 0;\n            Y[i][j] = 0;\n        }\n    }\n\n    for ( int i = 0; i < n; i++ ) {\n        for ( int j = 0; j < m; j++ ) {\n            if ( a[i] == b[j] ) {\n                X[i+1][j+1] = X[i][j] + 1;\n                Y[i+1][j+1] = 0;\n            } else if ( X[i+1][j] < X[i][j+1] ) {\n                X[i+1][j+1] = X[i][j+1];\n                Y[i+1][j+1] = +1;\n            } else {\n                X[i+1][j+1] = X[i+1][j];\n                Y[i+1][j+1] = -1;\n            }\n        }\n    }\n\n    string answer;\n    for ( int i = n, j = m; i > 0 && j > 0; ) {\n        if ( Y[i][j] > 0 ) {\n            i--;\n        } else if ( Y[i][j] < 0 ) {\n            j--;\n        } else {\n            answer += a[i-1];\n            i--;\n            j--;\n        }\n    }\n    reverse( answer.begin(), answer.end() );\n    return answer;\n}\n\nint main() {\n    string input;\n    while ( cin >> input ) {\n        string a = input;\n        string b = input;\n        reverse( b.begin(), b.end() );\n        string answer = lcs( a, b );\n        cout << answer << endl;\n    }\n    return 0;\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint mvl[2000][26];\nint mvr[2000][26];\nint dp[2000][2000];\nchar nx[2000][2000];\n\nint L;\nstring str;\n\nvoid calc()\n{\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) {\n\t\tmvl[i][j] = -1;\n\t\tmvr[i][j] = -1;\n\t}\n\n\tfor(int i=0; i<L; i++)\n\tfor(int j=0; j<26; j++) { \n\t\tfor(int k=i; k<L; k++) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvl[i][j] = k-i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor(int k=i; k>=0; k--) {\n\t\t\tif(str[k] == 'A' + j) {\n\t\t\t\tmvr[i][j] = i-k;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\nint dfs(int l, int r)\n{\n\tif(l > r) return 0;\n\tif(dp[l][r] != -1) return dp[l][r];\n\n\tint res = 0;\n\tfor(int i=0; i<26; i++) {\n\t\tif(mvl[l][i] == -1 || mvr[r][i] == -1) continue;\n\n\t\tint nl = l + mvl[l][i];\n\t\tint nr = r - mvr[r][i];\n\n\t\tif(nl >= nr) continue;\n\t\t\n\t\tint tmp = dfs(nl + 1, nr - 1) + 2;\n\t\tif(res < tmp) {\n\t\t\tres = tmp;\n\t\t\tnx[l][r] = i;\n\t\t}\n\t}\n\n\tif(res == 0) {\n\t\tif(l+1 != r) {\n\t\t\tres = 1;\n\t\t}\n\t}\n\n\tdp[l][r] = res;\n\n\treturn dp[l][r];\n}\n\nstring result(int l, int r)\n{\n\tif(nx[l][r] == '$') {\n\t\tif(l <= r) return string(1,str[l]);\n\t\t\n\t\treturn \"\";\n\t}\n\n\tint nl = l + mvl[l][nx[l][r]];\n\tint nr = r - mvr[r][nx[l][r]];\n\n\treturn str[nl] + result(nl+1, nr-1) + str[nl];\n}\n\nint main()\n{\n\twhile(cin >> str) {\n\t\tL = str.size();\n\n\t\tfor(int i=0; i<L; i++)\n\t\tfor(int j=0; j<L; j++) {\n\t\t\tdp[i][j] = -1;\n\t\t\tnx[i][j] = '$';\n\t\t}\n\n\t\tcalc();\n\t\tdfs(0, L-1);\n\n\t\tstring res=result(0, L-1);\n\n\t\tcout << res << endl;\n\t}\n}"
  },
  {
    "language": "C++",
    "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <string>\n#include <algorithm>\n#include <cstring>\n\nusing namespace std;\ntypedef pair<short, short> pii;\n\nshort memo[2000][2000];\npii next[2000][2000];\n\nint recur(const string &s, short left, short right){\n\tif(memo[left][right] >= 0){ return memo[left][right]; }\n\tint ret = 0;\n\tpii p(-1, -1);\n\tif(left == right){\n\t\tret = 1;\n\t}else if(left < right){\n\t\tif(s[left] == s[right]){\n\t\t\tret = 2 + recur(s, left + 1, right - 1);\n\t\t\tp = pii(left + 1, right - 1);\n\t\t}else{\n\t\t\tint a = recur(s, left + 1, right);\n\t\t\tint b = recur(s, left, right - 1);\n\t\t\tret = max(a, b);\n\t\t\tif(a > b){\n\t\t\t\tp = pii(left + 1, right);\n\t\t\t}else{\n\t\t\t\tp = pii(left, right - 1);\n\t\t\t}\n\t\t}\n\t}\n\tnext[left][right] = p;\n\treturn (memo[left][right] = ret);\n}\n\nint main(){\n\tstring s;\n\twhile(cin >> s){\n\t\tint n = s.size();\n\t\tmemset(memo, -1, sizeof(memo));\n\t\tint len = recur(s, 0, n - 1);\n\t\tpii p(-1, -1);\n\t\tfor(int i = 0; p.first < 0 && i <= n; ++i){\n\t\t\tfor(int j = 0; p.first < 0 && j <= n; ++j){\n\t\t\t\tif(memo[i][j] == len){ p = pii(i, j); }\n\t\t\t}\n\t\t}\n\t\tvector<char> answer;\n\t\tanswer.reserve(n);\n\t\twhile(p.first >= 0 && memo[p.first][p.second] > 0){\n\t\t\tif(s[p.first] == s[p.second]){ answer.push_back(s[p.first]); }\n\t\t\tp = next[p.first][p.second];\n\t\t}\n\t\tfor(int i = answer.size() - 1 - (len % 2); i >= 0; --i){\n\t\t\tanswer.push_back(answer[i]);\n\t\t}\n\t\tanswer.push_back('\\0');\n\t\tcout << &answer[0] << endl;\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 2035: It Prefokery Pio\n// 2017.10.9 bal4u@uu\n// 2017.11.21\n\n#include <stdio.h>\n#include <string.h>\n\nchar s[2005], t[2005];\n\nint c[2005][2005];  // for LCS\nchar z[2005];\nchar f[2005][2005];\nvoid LCS(char *x, int m, char *y, int n)\n{\n\tint i, j, k;\n\n\tmemset(c, 0, sizeof(int)*n); memset(f, 0, n);\n\tfor (i = 1; i <= m; i++) for (j = 1; j <= n; j++) {\n\t\tif (x[i-1] == y[j-1])            c[i][j] = c[i-1][j-1]+1, f[i][j] =  0;\n\t\telse if (c[i-1][j] >= c[i][j-1]) c[i][j] = c[i-1][j],     f[i][j] =  1;\n\t\telse                             c[i][j] = c[i][j-1],     f[i][j] = -1;\n\t}\n\tk = c[m][n]-1;\n\tz[k+1] = 0;\n\twhile (k >= 0) {\n\t\tif      (f[m][n] > 0) m--;\n\t\telse if (f[m][n] < 0) n--;\n\t\telse z[k] = x[m-1], k--, m--, n--;\n\t}\n}\n\nint main()\n{\n\tchar *p, *q;\n\n\twhile (fgets(s, 2005, stdin) != NULL) {\n\t\tp = s, q = t+2002;\n\t\twhile (*p > ' ') *--q = *p++;\n\t\tLCS(s, p-s, q, p-s);\n\t\tputs(z);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 2035: It Prefokery Pio\n// 2017.10.9 bal4u@uu\n\n#include <stdio.h>\n#include <string.h>\n\nchar s[2002], t[2010];\n\nchar c[2002][2002], z[2002];    // for LCS\nvoid LCS(char *x, int m, char *y, int n)\n{\n\tint i, j, ret, ret2;\n\n\tmemset(c, 0, sizeof(c));\n\tfor (i = 1; i <= m; i++) for (j = 1; j <= n; j++) {\n\t\tif (x[i-1] == y[j-1]) c[i][j] = c[i-1][j-1] + 1;\n\t\telse {\n\t\t\tif (c[i-1][j] >= c[i][j-1]) c[i][j] = c[i-1][j];\n\t\t\telse c[i][j] = c[i][j-1];\n\t\t}\n\t}\n\tret2 = ret = c[m][n]-1;\n\twhile (ret >= 0) {\n\t\tif (c[m][n] == c[m-1][n-1] + 1) z[ret] = x[m-1], ret--, m--, n--;\n\t\telse if (c[m][n] == c[m-1][n]) m--; else n--;\n\t}\n\tz[ret2+1] = 0;\n}\n\nint main()\n{\n\tint n;\n\tchar *p, *q;\n\n\twhile (scanf(\"%s\", s) == 1) {\n\t\tn = strlen(s);\n\t\tp = s, q = t+n; *q = 0;\n\t\twhile (*p) *--q = *p++;\n\t\tLCS(s, n, t, n);\n\t\tputs(z);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "C",
    "code": "/*\n  AOJ 2035\n  Title:It Prefokery Pio\n  @kankichi573\n*/\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#define max(x,y) (((x)>(y))?(x):(y))\n#define min(x,y) (((x)<(y))?(x):(y))\n#define MAXLEN 2000\n\nchar a[MAXLEN+1],b[MAXLEN+1];\nint lcs[MAXLEN+1][MAXLEN+1];\nint lena,lenb;\nchar answer[MAXLEN+1];\nint anslen;\n\nvoid print_lcs(char a[],char b[],int lcs[][MAXLEN+1],int i,int j)\n{\n  if(i==0 || j==0)\n    return;\n  if(a[i-1]==b[j-1])\n    {\n      print_lcs(a,b,lcs,i-1,j-1);\n      answer[anslen]=a[i-1];\n      anslen++;\n    }\n  else if(lcs[i-1][j]>=lcs[i][j-1])\n    print_lcs(a,b,lcs,i-1,j);\n  else\n    print_lcs(a,b,lcs,i,j-1);\n}\nvoid strreverse(char a[],char b[],int len)\n{\n  int i;\n  b[lena]='\\0';\n  for(i=0;i<len;i++)\n    b[i]=a[len-1-i];\n}\nmain()\n{\n  int i,j;\n  while(EOF!=scanf(\"%s\",a))\n    {\n      memset(answer,0,sizeof(answer));\n      lena=lenb=strlen(a);\n      strreverse(a,b,lena);\n      \n      for(i=0;i<=lena;i++)\n\tlcs[i][0]=0;\n      for(i=0;i<=lena;i++)\n\tlcs[0][i]=0;\n      for(i=0;i<lena;i++)\n\tfor(j=0;j<lenb;j++)\n\t  {\n\t    if(a[i]==b[j])\n\t      lcs[i+1][j+1]=lcs[i][j]+1;\n\t    else\n\t      lcs[i+1][j+1]=max(lcs[i][j+1],lcs[i+1][j]);\n\t  }\n      anslen=0;\n      print_lcs(a,b,lcs,lena,lenb);\n      answer[anslen+1]='\\0';\n      printf(\"%s\\n\",answer);\n    }\n      return(0);\n}"
  },
  {
    "language": "C",
    "code": "// AOJ 2035: It Prefokery Pio\n// 2017.10.9 bal4u@uu\n\n#include <stdio.h>\n#include <string.h>\n\nchar s[2005], t[2005];\n\nint c[2005][2005]; char z[2005];    // for LCS\nchar f[2005][2005];\nvoid LCS(char *x, int m, char *y, int n)\n{\n\tint i, j, ret, ret2;\n\n\tmemset(c, 0, sizeof(c)); memset(f, 0, sizeof(f));\n\tfor (i = 1; i <= m; i++) for (j = 1; j <= n; j++) {\n\t\tif (x[i-1] == y[j-1]) c[i][j] = c[i-1][j-1]+1, f[i][j] = 0;\n\t\telse {\n\t\t\tif (c[i-1][j] >= c[i][j-1]) c[i][j] = c[i-1][j], f[i][j] = 1;\n\t\t\telse                        c[i][j] = c[i][j-1], f[i][j] = -1;\n\t\t}\n\t}\n\tret2 = ret = c[m][n]-1;\n\twhile (ret >= 0) {\n\t\tif      (f[m][n] > 0) m--;\n\t\telse if (f[m][n] < 0) n--;\n\t\telse z[ret] = x[m-1], ret--, m--, n--;\n\t}\n\tz[ret2+1] = 0;\n}\n\nint main()\n{\n\tint n;\n\tchar *p, *q;\n\n\twhile (scanf(\"%s\", s) == 1) {\n\t\tn = strlen(s);\n\t\tp = s, q = t+n; *q = 0;\n\t\twhile (*p) *--q = *p++;\n\t\tLCS(s, n, t, n);\n\t\tputs(z);\n\t}\n\treturn 0;\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//It Prefokery Pio\npublic class Main{\n\n\tString lcs(String a, String b){\n\t\ta = \" \"+a; b = \" \"+b;\n\t\tint na = a.length(), nb = b.length();\n\t\tString[][] dp = new String[na][nb];\n\t\tfor(int i=0;i<na;i++)dp[i][0]=\"\";\n\t\tfor(int i=0;i<nb;i++)dp[0][i]=\"\";\n\t\tfor(int i=1;i<na;i++)for(int j=1;j<nb;j++){\n\t\t\tchar ca = a.charAt(i), cb = b.charAt(j);\n\t\t\tif(ca==cb)dp[i][j] = dp[i-1][j-1]+ca;\n\t\t\telse dp[i][j] = dp[i-1][j].length()<dp[i][j-1].length()?dp[i][j-1]:dp[i-1][j];\n\t\t}\n\t\treturn dp[na-1][nb-1];\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;sc.hasNext();){\n\t\t\tString s = sc.next();\n\t\t\tString r = (new StringBuilder(s)).reverse().toString();\n\t\t\tSystem.out.println(lcs(s, r));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.io.*;\nimport java.util.*;\n\npublic class Main {\n    String s;\n    String[][] dp;\n    Scanner sc;\n    Main() {\n        sc = new Scanner(System.in);\n    }\n    String drop(int from, int to) {\n        //System.out.printf(\"%d,%d\\n\", from, to);\n        if (dp[from][to] != \"\") return dp[from][to];\n        if (to - from < 0) return \"\";\n        if (to == from) return Character.toString(s.charAt(to));\n        if (s.charAt(from) == s.charAt(to)) {\n            return s.charAt(from) + drop(from+1, to-1) + s.charAt(to);\n        }\n        String drop_first = drop(from+1, to);\n        String drop_last = drop(from, to-1);\n    \n        if (drop_first.length() < drop_last.length()) {\n            return dp[from][to] = drop_last;\n        } else {\n            return dp[from][to] = drop_first;\n        }\n    }\n    public static void main(String[] args) {\n        new Main().run();\n    }\n    boolean init() {\n        if (!sc.hasNext()) return false;\n        s = sc.next();\n        return true;\n    }\n    void run() {\n        while (init()) {\n            dp = new String[s.length()][s.length()];\n            for (int i = 0; i < s.length(); i++) \n                for (int j = 0; j < s.length(); j++)\n                    dp[i][j] = \"\";\n            System.out.println(drop(0, s.length()-1));\n        }\n    }\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\n//It Prefokery Pio\npublic class Main{\n\n\tint[][] dp;\n//\tint[][] pre;\n\tint n, M = 2000;\n\tList<Integer>[] p;\n//\tMap<Integer, Integer>[] mem;\n\tMap<Integer, Integer>[] past;\n\tchar[] s;\n\t\n\tint bsdown(int c, int L, int R){\n\t\tint n = p[c].size();\n\t\tif(n==0)return -1;\n\t\tint l=0, r=n-1;\n\t\twhile(r-l>1){\n\t\t\tint m = (l+r)/2;\n\t\t\tint x = p[c].get(m);\n\t\t\tif(x<L)l=m;\n\t\t\telse r=m;\n\t\t}\n\t\tint left = p[c].get(l), right = p[c].get(r);\n\t\tif(L<=left&&left<=R)return left;\n\t\telse if(L<=right&&right<=R)return right;\n\t\treturn -1;\n\t}\n\tint bsup(int c, int L, int R){\n\t\tint n = p[c].size();\n\t\tif(n==0)return -1;\n\t\tint l=0, r=n-1;\n\t\twhile(r-l>1){\n\t\t\tint m = (l+r)/2;\n\t\t\tint x = p[c].get(m);\n\t\t\tif(R<x)r=m;\n\t\t\telse l=m;\n\t\t}\n\t\tint left = p[c].get(l), right = p[c].get(r);\n\t\tif(L<=right&&right<=R)return right;\n\t\telse if(L<=left&&left<=R)return left;\n\t\treturn -1;\n\t}\n\t\n\tint get(int L, int R){\n\t\tif(R<L)return 0;\n//\t\tif(mem[L].containsKey(R))return mem[L].get(R);\n\t\tif(dp[L][R]!=-1)return dp[L][R];\n\t\tif(L==R){\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n//\t\t\tmem[L].put(R, 1);\n//\t\t\treturn 1;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n\t\t\treturn dp[L][R]=1;\n\t\t}\n\t\tif(L+1==R){\n\t\t\tif(s[L]!=s[R])return 0;\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n//\t\t\tmem[L].put(R, 2);\n//\t\t\treturn 2;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n\t\t\treturn dp[L][R]=2;\n\t\t}\n\t\tint max = 0;\n\t\tint pl = -1, pr = -1;\n\t\tfor(int c=0;c<26;c++){\n\t\t\tint left = -1, right = -1;\n\t\t\tleft = bsdown(c, L, R); right = bsup(c, L, R);\n//\t\t\tSystem.out.println(\"L:\"+L+\"left:\"+left+\" right:\"+right+\" R:\"+R);\n//\t\t\tfor(int x:p[c]){\n//\t\t\t\tif(R<x)break;\n//\t\t\t\tif(x<L)continue;\n//\t\t\t\tleft = x; break;\n//\t\t\t}\n//\t\t\tfor(int x=p[c].size()-1;x>=0;x--){\n//\t\t\t\tint pos = p[c].get(x);\n//\t\t\t\tif(pos<L)break;\n//\t\t\t\tif(R<pos)continue;\n//\t\t\t\tright = pos; break;\n//\t\t\t}\n\t\t\tif(left==-1||right==-1)continue;\n\t\t\tint v = (left==right?1:2)+get(left+1, right-1);\n\t\t\tif(max<v){\n\t\t\t\tmax = v; pl = left; pr = right;\n\t\t\t}\n\t\t}\n\t\tpast[L].put(R, (pl+1)*M+(pr-1));\n//\t\tmem[L].put(R, max);\n//\t\treturn max;\n//\t\tpre[L][R] = (pl+1)*M+(pr-1);\n\t\treturn dp[L][R] = max;\n\t}\n\t\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n//\t\tString f = \"\";\n//\t\tfor(int i=0;i<2000;i++){\n//\t\t\tf+=(char)(i%26+'A');\n//\t\t}\n//\t\tSystem.out.println(f);\n\t\twhile(sc.hasNext()){\n\t\t\ts = sc.next().toCharArray();\n\t\t\tlong T = System.currentTimeMillis();\n\t\t\tn = s.length;\n\t\t\tp = new List[26];\n\t\t\tfor(int i=0;i<26;i++)p[i]=new ArrayList<Integer>();\n\t\t\tfor(int i=0;i<n;i++)p[s[i]-'A'].add(i);\n\t\t\tdp = new int[n][n]; \n//\t\t\tpre = new int[n][n];\n\t\t\tfor(int[]a:dp)Arrays.fill(a, -1);\n//\t\t\tfor(int[]a:pre)Arrays.fill(a, -1);\n//\t\t\tmem = new HashMap[n];\n\t\t\tpast = new HashMap[n];\n\t\t\tfor(int i=0;i<n;i++){\n//\t\t\t\tmem[i]=new HashMap<Integer, Integer>();\n\t\t\t\tpast[i]=new HashMap<Integer, Integer>();\n\t\t\t}\n\t\t\tget(0, n-1);\n\t\t\tList<Integer> t = new ArrayList<Integer>();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint L = 0, R = n-1;\n\t\t\twhile(past[L].containsKey(R)){\n\t\t\t\tint x = past[L].get(R);\n\t\t\t\tif(x<0)break;\n//\t\t\t\tSystem.out.println(\"X:\"+x);\n\t\t\t\tint nl = x/M, nr = x%M;\n//\t\t\t\tSystem.out.println(nl+\" \"+nr);\n\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n\t\t\t\tres.append(s[nl-1]);\n\t\t\t\tL = nl; R = nr;\n\t\t\t}\n//\t\t\twhile(pre[L][R]>=0){\n//\t\t\t\tint nl = pre[L][R]/M, nr = pre[L][R]%M;\n//\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n//\t\t\t\tres.append(s[nl-1]);\n//\t\t\t\tL = nl; R = nr;\n//\t\t\t}\n//\t\t\tSystem.out.println(mem[0].get(n-1));\n\t\t\tfor(int i=t.size()-1;i>=0;i--)res.append(s[t.get(i)]);\n\t\t\tSystem.out.println(res);\n\t\t\tSystem.out.println((System.currentTimeMillis()-T));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\n//It Prefokery Pio\npublic class Main{\n\n//\tint[][] dp;\n//\tint[][] pre;\n\tint n, M = 2000;\n\tList<Integer>[] p;\n\tMap<Integer, Integer>[] mem, past;\n\tchar[] s;\n\t\n\tint get(int L, int R){\n\t\tif(R<L)return 0;\n\t\tif(mem[L].containsKey(R))return mem[L].get(R);\n//\t\tif(dp[L][R]!=-1)return dp[L][R];\n\t\tif(L==R){\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n\t\t\tmem[L].put(R, 1);\n\t\t\treturn 1;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n//\t\t\treturn dp[L][R]=1;\n\t\t}\n\t\tif(L+1==R){\n\t\t\tif(s[L]!=s[R])return 0;\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n\t\t\tmem[L].put(R, 2);\n\t\t\treturn 2;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n//\t\t\treturn dp[L][R]=2;\n\t\t}\n\t\tint max = 0;\n\t\tint pl = -1, pr = -1;\n\t\tfor(int c=0;c<26;c++){\n\t\t\tint left = -1, right = -1;\n\t\t\tfor(int x:p[c]){\n\t\t\t\tif(R<x)break;\n\t\t\t\tif(x<L)continue;\n\t\t\t\tleft = x; break;\n\t\t\t}\n\t\t\tfor(int x=p[c].size()-1;x>=0;x--){\n\t\t\t\tint pos = p[c].get(x);\n\t\t\t\tif(pos<L)break;\n\t\t\t\tif(R<pos)continue;\n\t\t\t\tright = pos; break;\n\t\t\t}\n\t\t\tif(left==-1||right==-1)continue;\n\t\t\tint v = (left==right?1:2)+get(left+1, right-1);\n\t\t\tif(max<v){\n\t\t\t\tmax = v; pl = left; pr = right;\n\t\t\t}\n\t\t}\n\t\tpast[L].put(R, (pl+1)*M+(pr-1));\n\t\tmem[L].put(R, max);\n\t\treturn max;\n//\t\tpre[L][R] = (pl+1)*M+(pr-1);\n//\t\treturn dp[L][R] = max;\n\t}\n\t\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n//\t\tString f = \"\";\n//\t\tfor(int i=0;i<2000;i++){\n//\t\t\tf+=(char)(i%26+'A');\n//\t\t}\n//\t\tSystem.out.println(f);\n\t\twhile(sc.hasNext()){\n\t\t\ts = sc.next().toCharArray();\n//\t\t\tlong T = System.currentTimeMillis();\n\t\t\tn = s.length;\n\t\t\tp = new List[26];\n\t\t\tfor(int i=0;i<26;i++)p[i]=new ArrayList<Integer>();\n\t\t\tfor(int i=0;i<n;i++)p[s[i]-'A'].add(i);\n//\t\t\tdp = new int[n][n]; pre = new int[n][n];\n//\t\t\tfor(int[]a:dp)Arrays.fill(a, -1);\n//\t\t\tfor(int[]a:pre)Arrays.fill(a, -1);\n\t\t\tmem = new HashMap[n];\n\t\t\tpast = new HashMap[n];\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tmem[i]=new HashMap<Integer, Integer>();\n\t\t\t\tpast[i]=new HashMap<Integer, Integer>();\n\t\t\t}\n\t\t\tget(0, n-1);\n\t\t\tList<Integer> t = new ArrayList<Integer>();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint L = 0, R = n-1;\n\t\t\twhile(past[L].containsKey(R)){\n\t\t\t\tint x = past[L].get(R);\n\t\t\t\tint nl = x/M, nr = x%M;\n\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n\t\t\t\tres.append(s[nl-1]);\n\t\t\t\tL = nl; R = nr;\n\t\t\t}\n//\t\t\twhile(pre[L][R]>=0){\n//\t\t\t\tint nl = pre[L][R]/M, nr = pre[L][R]%M;\n//\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n//\t\t\t\tres.append(s[nl-1]);\n//\t\t\t\tL = nl; R = nr;\n//\t\t\t}\n\t\t\tfor(int i=t.size()-1;i>=0;i--)res.append(s[t.get(i)]);\n\t\t\tSystem.out.println(res);\n//\t\t\tSystem.out.println((System.currentTimeMillis()-T));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.Scanner;\n\n//It Prefokery Pio\npublic class Main{\n\n\tint[][] dp;\n\tint[][] pre;\n\tint n, M = 2000;\n\tList<Integer>[] p;\n\tchar[] s;\n\t\n\tint get(int L, int R){\n\t\tif(R<L)return 0;\n\t\tif(dp[L][R]!=-1)return dp[L][R];\n\t\tif(L==R){\n\t\t\tpre[L][R] = (L+1)*M+(R-1);\n\t\t\treturn dp[L][R]=1;\n\t\t}\n\t\tif(L+1==R){\n\t\t\tif(s[L]!=s[R])return 0;\n\t\t\tpre[L][R] = (L+1)*M+(R-1);\n\t\t\treturn dp[L][R]=2;\n\t\t}\n\t\tint max = 0;\n\t\tint pl = -1, pr = -1;\n\t\tfor(int c=0;c<26;c++){\n\t\t\tint left = -1, right = -1;\n\t\t\tfor(int x:p[c]){\n\t\t\t\tif(R<x)break;\n\t\t\t\tif(x<L)continue;\n\t\t\t\tleft = x; break;\n\t\t\t}\n\t\t\tfor(int x=p[c].size()-1;x>=0;x--){\n\t\t\t\tint pos = p[c].get(x);\n\t\t\t\tif(pos<L)break;\n\t\t\t\tif(R<pos)continue;\n\t\t\t\tright = pos; break;\n\t\t\t}\n\t\t\tif(left==-1||right==-1)continue;\n\t\t\tint v = (left==right?1:2)+get(left+1, right-1);\n\t\t\tif(max<v){\n\t\t\t\tmax = v; pl = left; pr = right;\n\t\t\t}\n\t\t}\n\t\tpre[L][R] = (pl+1)*M+(pr-1);\n\t\treturn dp[L][R] = max;\n\t}\n\t\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\twhile(sc.hasNext()){\n\t\t\ts = sc.next().toCharArray();\n\t\t\tn = s.length;\n\t\t\tp = new List[26];\n\t\t\tfor(int i=0;i<26;i++)p[i]=new ArrayList<Integer>();\n\t\t\tfor(int i=0;i<n;i++)p[s[i]-'A'].add(i);\n\t\t\tdp = new int[n][n]; pre = new int[n][n];\n\t\t\tfor(int[]a:dp)Arrays.fill(a, -1);\n\t\t\tfor(int[]a:pre)Arrays.fill(a, -1);\n\t\t\tget(0, n-1);\n\t\t\tList<Integer> t = new ArrayList<Integer>();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint L = 0, R = n-1;\n\t\t\twhile(pre[L][R]>=0){\n\t\t\t\tint nl = pre[L][R]/M, nr = pre[L][R]%M;\n\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n\t\t\t\tres.append(s[nl-1]);\n\t\t\t\tL = nl; R = nr;\n\t\t\t}\n\t\t\tfor(int i=t.size()-1;i>=0;i--)res.append(s[t.get(i)]);\n\t\t\tSystem.out.println(res);\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.Scanner;\n\n//It Prefokery Pio\npublic class Main{\n\n\tString lcs(String a, String b){\n\t\tint na = a.length();\n\t\tint nb = b.length();\n\t\tint dp[][] = new int[na+1][nb+1];\n\t\tfor(int i=0;i<na;i++)dp[i][0] = 0;\n\t\tfor(int i=0;i<nb;i++)dp[0][i] = 0;\n\t\tfor(int i=1;i<=na;i++){\n\t\t\tfor(int j=1;j<=nb;j++){\n\t\t\t\tif(a.charAt(i-1)==b.charAt(j-1)){\n\t\t\t\t\tdp[i][j] = dp[i-1][j-1] + 1;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tdp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tchar[] r = new char[dp[na][nb]];\n\t\tint i = na;\n\t\tint j = nb;\n\t\twhile(0<i&&0<j){\n\t\t\tif(dp[i][j]==dp[i-1][j])i--;\n\t\t\telse if(dp[i][j]==dp[i][j-1])j--;\n\t\t\telse{\n\t\t\t\tr[dp[i-1][j-1]] = a.charAt(i-1);\n\t\t\t\ti--;\n\t\t\t\tj--;\n\t\t\t}\n\t\t}\n\t\treturn new String(r);\n\t}\n\t\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n\t\tfor(;sc.hasNext();){\n\t\t\tString s = sc.next();\n\t\t\tString r = (new StringBuilder(s)).reverse().toString();\n\t\t\tSystem.out.println(lcs(s, r));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\n//It Prefokery Pio\npublic class Main{\n\n//\tint[][] dp;\n//\tint[][] pre;\n\tint n, M = 2000;\n\tList<Integer>[] p;\n\tMap<Integer, Integer>[] mem, past;\n\tchar[] s;\n\t\n\tint bsdown(int c, int L, int R){\n\t\tint n = p[c].size();\n\t\tif(n==0)return -1;\n\t\tint l=0, r=n-1;\n\t\twhile(r-l>1){\n\t\t\tint m = (l+r)/2;\n\t\t\tint x = p[c].get(m);\n\t\t\tif(x<L)l=m;\n\t\t\telse r=m;\n\t\t}\n\t\tint left = p[c].get(l), right = p[c].get(r);\n\t\tif(L<=left&&left<=R)return left;\n\t\telse if(L<=right&&right<=R)return right;\n\t\treturn -1;\n\t}\n\tint bsup(int c, int L, int R){\n\t\tint n = p[c].size();\n\t\tif(n==0)return -1;\n\t\tint l=0, r=n-1;\n\t\twhile(r-l>1){\n\t\t\tint m = (l+r)/2;\n\t\t\tint x = p[c].get(m);\n\t\t\tif(R<x)r=m;\n\t\t\telse l=m;\n\t\t}\n\t\tint left = p[c].get(l), right = p[c].get(r);\n\t\tif(L<=right&&right<=R)return right;\n\t\telse if(L<=left&&left<=R)return left;\n\t\treturn -1;\n\t}\n\t\n\tint get(int L, int R){\n\t\tif(R<L)return 0;\n\t\tif(mem[L].containsKey(R))return mem[L].get(R);\n//\t\tif(dp[L][R]!=-1)return dp[L][R];\n\t\tif(L==R){\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n\t\t\tmem[L].put(R, 1);\n\t\t\treturn 1;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n//\t\t\treturn dp[L][R]=1;\n\t\t}\n\t\tif(L+1==R){\n\t\t\tif(s[L]!=s[R])return 0;\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n\t\t\tmem[L].put(R, 2);\n\t\t\treturn 2;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n//\t\t\treturn dp[L][R]=2;\n\t\t}\n\t\tint max = 0;\n\t\tint pl = -1, pr = -1;\n\t\tfor(int c=0;c<26;c++){\n\t\t\tint left = -1, right = -1;\n\t\t\tleft = bsdown(c, L, R); right = bsup(c, L, R);\n//\t\t\tSystem.out.println(\"L:\"+L+\"left:\"+left+\" right:\"+right+\" R:\"+R);\n//\t\t\tfor(int x:p[c]){\n//\t\t\t\tif(R<x)break;\n//\t\t\t\tif(x<L)continue;\n//\t\t\t\tleft = x; break;\n//\t\t\t}\n//\t\t\tfor(int x=p[c].size()-1;x>=0;x--){\n//\t\t\t\tint pos = p[c].get(x);\n//\t\t\t\tif(pos<L)break;\n//\t\t\t\tif(R<pos)continue;\n//\t\t\t\tright = pos; break;\n//\t\t\t}\n\t\t\tif(left==-1||right==-1)continue;\n\t\t\tint v = (left==right?1:2)+get(left+1, right-1);\n\t\t\tif(max<v){\n\t\t\t\tmax = v; pl = left; pr = right;\n\t\t\t}\n\t\t}\n\t\tpast[L].put(R, (pl+1)*M+(pr-1));\n\t\tmem[L].put(R, max);\n\t\treturn max;\n//\t\tpre[L][R] = (pl+1)*M+(pr-1);\n//\t\treturn dp[L][R] = max;\n\t}\n\t\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n//\t\tString f = \"\";\n//\t\tfor(int i=0;i<2000;i++){\n//\t\t\tf+=(char)(i%26+'A');\n//\t\t}\n//\t\tSystem.out.println(f);\n\t\twhile(sc.hasNext()){\n\t\t\ts = sc.next().toCharArray();\n//\t\t\tlong T = System.currentTimeMillis();\n\t\t\tn = s.length;\n\t\t\tp = new List[26];\n\t\t\tfor(int i=0;i<26;i++)p[i]=new ArrayList<Integer>();\n\t\t\tfor(int i=0;i<n;i++)p[s[i]-'A'].add(i);\n//\t\t\tdp = new int[n][n]; pre = new int[n][n];\n//\t\t\tfor(int[]a:dp)Arrays.fill(a, -1);\n//\t\t\tfor(int[]a:pre)Arrays.fill(a, -1);\n\t\t\tmem = new HashMap[n];\n\t\t\tpast = new HashMap[n];\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tmem[i]=new HashMap<Integer, Integer>();\n\t\t\t\tpast[i]=new HashMap<Integer, Integer>();\n\t\t\t}\n\t\t\tget(0, n-1);\n\t\t\tList<Integer> t = new ArrayList<Integer>();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint L = 0, R = n-1;\n\t\t\twhile(past[L].containsKey(R)){\n\t\t\t\tint x = past[L].get(R);\n\t\t\t\tif(x<0)break;\n//\t\t\t\tSystem.out.println(\"X:\"+x);\n\t\t\t\tint nl = x/M, nr = x%M;\n//\t\t\t\tSystem.out.println(nl+\" \"+nr);\n\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n\t\t\t\tres.append(s[nl-1]);\n\t\t\t\tL = nl; R = nr;\n\t\t\t}\n//\t\t\twhile(pre[L][R]>=0){\n//\t\t\t\tint nl = pre[L][R]/M, nr = pre[L][R]%M;\n//\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n//\t\t\t\tres.append(s[nl-1]);\n//\t\t\t\tL = nl; R = nr;\n//\t\t\t}\n//\t\t\tSystem.out.println(mem[0].get(n-1));\n\t\t\tfor(int i=t.size()-1;i>=0;i--)res.append(s[t.get(i)]);\n\t\t\tSystem.out.println(res);\n//\t\t\tSystem.out.println((System.currentTimeMillis()-T));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Java",
    "code": "import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.Scanner;\n\n//It Prefokery Pio\npublic class Main{\n\n//\tint[][] dp;\n//\tint[][] pre;\n\tint n, M = 2000;\n\tList<Integer>[] p;\n\tMap<Integer, Integer>[] mem, past;\n\tchar[] s;\n\t\n\tint bsdown(int c, int L, int R){\n\t\tint n = p[c].size();\n\t\tif(n==0)return -1;\n\t\tint l=0, r=n-1;\n\t\twhile(r-l>1){\n\t\t\tint m = (l+r)/2;\n\t\t\tint x = p[c].get(m);\n\t\t\tif(x<L)l=m;\n\t\t\telse r=m;\n\t\t}\n\t\tif(L<=p[c].get(l))return p[c].get(l);\n\t\telse if(L<=p[c].get(r))return p[c].get(r);\n\t\treturn -1;\n\t}\n\tint bsup(int c, int L, int R){\n\t\tint n = p[c].size();\n\t\tif(n==0)return -1;\n\t\tint l=0, r=n-1;\n\t\twhile(r-l>1){\n\t\t\tint m = (l+r)/2;\n\t\t\tint x = p[c].get(m);\n\t\t\tif(R<x)r=m;\n\t\t\telse l=m;\n\t\t}\n\t\tif(p[c].get(r)<=R)return p[c].get(r);\n\t\telse if(p[c].get(l)<=R)return p[c].get(l);\n\t\treturn -1;\n\t}\n\t\n\tint get(int L, int R){\n\t\tif(R<L)return 0;\n\t\tif(mem[L].containsKey(R))return mem[L].get(R);\n//\t\tif(dp[L][R]!=-1)return dp[L][R];\n\t\tif(L==R){\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n\t\t\tmem[L].put(R, 1);\n\t\t\treturn 1;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n//\t\t\treturn dp[L][R]=1;\n\t\t}\n\t\tif(L+1==R){\n\t\t\tif(s[L]!=s[R])return 0;\n\t\t\tpast[L].put(R, (L+1)*M+(R-1));\n\t\t\tmem[L].put(R, 2);\n\t\t\treturn 2;\n//\t\t\tpre[L][R] = (L+1)*M+(R-1);\n//\t\t\treturn dp[L][R]=2;\n\t\t}\n\t\tint max = 0;\n\t\tint pl = -1, pr = -1;\n\t\tfor(int c=0;c<26;c++){\n\t\t\tint left = -1, right = -1;\n\t\t\tleft = bsdown(c, L, R); right = bsup(c, L, R);\n//\t\t\tfor(int x:p[c]){\n//\t\t\t\tif(R<x)break;\n//\t\t\t\tif(x<L)continue;\n//\t\t\t\tleft = x; break;\n//\t\t\t}\n//\t\t\tfor(int x=p[c].size()-1;x>=0;x--){\n//\t\t\t\tint pos = p[c].get(x);\n//\t\t\t\tif(pos<L)break;\n//\t\t\t\tif(R<pos)continue;\n//\t\t\t\tright = pos; break;\n//\t\t\t}\n\t\t\tif(left==-1||right==-1)continue;\n\t\t\tint v = (left==right?1:2)+get(left+1, right-1);\n\t\t\tif(max<v){\n\t\t\t\tmax = v; pl = left; pr = right;\n\t\t\t}\n\t\t}\n\t\tpast[L].put(R, (pl+1)*M+(pr-1));\n\t\tmem[L].put(R, max);\n\t\treturn max;\n//\t\tpre[L][R] = (pl+1)*M+(pr-1);\n//\t\treturn dp[L][R] = max;\n\t}\n\t\n\t@SuppressWarnings(\"unchecked\")\n\tvoid run(){\n\t\tScanner sc = new Scanner(System.in);\n//\t\tString f = \"\";\n//\t\tfor(int i=0;i<2000;i++){\n//\t\t\tf+=(char)(i%26+'A');\n//\t\t}\n//\t\tSystem.out.println(f);\n\t\twhile(sc.hasNext()){\n\t\t\ts = sc.next().toCharArray();\n//\t\t\tlong T = System.currentTimeMillis();\n\t\t\tn = s.length;\n\t\t\tp = new List[26];\n\t\t\tfor(int i=0;i<26;i++)p[i]=new ArrayList<Integer>();\n\t\t\tfor(int i=0;i<n;i++)p[s[i]-'A'].add(i);\n//\t\t\tdp = new int[n][n]; pre = new int[n][n];\n//\t\t\tfor(int[]a:dp)Arrays.fill(a, -1);\n//\t\t\tfor(int[]a:pre)Arrays.fill(a, -1);\n\t\t\tmem = new HashMap[n];\n\t\t\tpast = new HashMap[n];\n\t\t\tfor(int i=0;i<n;i++){\n\t\t\t\tmem[i]=new HashMap<Integer, Integer>();\n\t\t\t\tpast[i]=new HashMap<Integer, Integer>();\n\t\t\t}\n\t\t\tget(0, n-1);\n\t\t\tList<Integer> t = new ArrayList<Integer>();\n\t\t\tStringBuilder res = new StringBuilder();\n\t\t\tint L = 0, R = n-1;\n\t\t\twhile(past[L].containsKey(R)){\n\t\t\t\tint x = past[L].get(R);\n\t\t\t\tint nl = x/M, nr = x%M;\n\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n\t\t\t\tres.append(s[nl-1]);\n\t\t\t\tL = nl; R = nr;\n\t\t\t}\n//\t\t\twhile(pre[L][R]>=0){\n//\t\t\t\tint nl = pre[L][R]/M, nr = pre[L][R]%M;\n//\t\t\t\tif(nl-1!=nr+1)t.add(nr+1);\n//\t\t\t\tres.append(s[nl-1]);\n//\t\t\t\tL = nl; R = nr;\n//\t\t\t}\n\t\t\tfor(int i=t.size()-1;i>=0;i--)res.append(s[t.get(i)]);\n\t\t\tSystem.out.println(res);\n//\t\t\tSystem.out.println((System.currentTimeMillis()-T));\n\t\t}\n\t}\n\t\n\tpublic static void main(String[] args) {\n\t\tnew Main().run();\n\t}\n}"
  },
  {
    "language": "Ruby",
    "code": "def f(i, j, side)\n\treturn \"\" if side.size * 2 + (j-i+1) < $max\n\treturn side + $a[i] + side.reverse if i == j\n\treturn side + side.reverse if j < i\n\tcache = $memo[[i, j]]\n\treturn side + cache + side.reverse if cache\n\t\n\tif $a[i] == $a[j]\n\t\treturn f(i+1, j-1, side + $a[i])\t\n\tend\n\n\tx = f(i+1, j, side)\n\ty = f(i, j-1, side)\n\tans = (x.size > y.size ? x : y)\n\t$max = ans.size if ans.size > $max\n\t$memo[[i, j]] = ans[side.size..-side.size-1]\n\tans\nend\n\ndef f(i, j, side)\n\treturn \"\" if side.size * 2 + (j-i+1) < $max\n\treturn side + $a[i] + side.reverse if i == j\n\treturn side + side.reverse if j < i\n\tcache = $memo[[i, j]]\n\treturn side + cache + side.reverse if cache\n\t\n\tif $a[i] == $a[j]\n\t\treturn f(i+1, j-1, side + $a[i])\t\n\tend\n\n\thash = {}\n\tans = nil\n\tj.downto(i){|k|\n\t\tnext if hash[$a[k]]\n\t\thash[$a[k]] = 1\n\t\tl = $first[i][$a[k]]\n\t\tx = f(l, k, side)\n\t\tans = x if !ans || x.size > ans.size\n\t}\n\n\t$max = ans.size if ans.size > $max\n\t$memo[[i, j]] = ans[side.size..-side.size-1]\n\tans\nend\n\nwhile gets\n\t$a = $_.chomp.split(\"\")\n\t$first = (0..$a.size-1).map{|i|\n\t\thash = {}\n\t\t(i..$a.size-1).each{|j|\n\t\t\thash[$a[j]] ||= j\n\t\t}\n\t\thash\n\t}\n\t$max = 0\n\t$memo = {}\n\tputs f(0, $a.size-1, \"\")\nend"
  },
  {
    "language": "Python",
    "code": "import sys\n\nsys.setrecursionlimit(10000) # 10000回 まで再帰呼び出しを許可\n\ndef trydecr(word):\n    longest=0\n    decrtemp=\"\"\n    decr=\"\"\n    if len(word)==0:\n        return \"\"\n    else:\n        for index in range(len(word)):\n            i=len(word)-1\n            while i>index:\n                if word[i]==word[index]:\n                    decrtemp=word[index]+trydecr(word[index+1:i])+word[index]\n                    if len(decrtemp)>longest:\n                        decr=decrtemp\n                        longest=len(decrtemp)\n                i=i-1\n        if len(decr)!=0:\n            return decr\n        else:\n            return word[0]\n\n\nwhile(1):\n    try:\n        word=raw_input()\n    except:\n        break\n    decr=trydecr(word)\n#    longest=0\n#    decr=\"\"\n#    for i in range(len(word)): #trying with head letter=word ith letter\n#        decrtemp=trydecr(word[i:])\n#        print decrtemp\n#        if len(decrtemp)>longest:\n#            decr=decrtemp\n#            longest=len(decrtemp)\n    print decr"
  },
  {
    "language": "Python",
    "code": "def trydecr(word):\n    longest=0\n    decrtemp=\"\"\n    decr=\"\"\n    if len(word)==0:\n        return \"\"\n    else:\n        for index in range(len(word)):\n            i=len(word)-1\n            while i>index:\n                if word[i]==word[index]:\n                    decrtemp=word[index]+trydecr(word[index+1:i])+word[index]\n                    if len(decrtemp)>longest:\n                        decr=decrtemp\n                        longest=len(decrtemp)\n                i=i-1\n        if len(decr)!=0:\n            return decr\n        else:\n            return word[0]\n\n\nwhile(1):\n    try:\n        word=raw_input()\n    except:\n        break\n    decr=trydecr(word)\n#    longest=0\n#    decr=\"\"\n#    for i in range(len(word)): #trying with head letter=word ith letter\n#        decrtemp=trydecr(word[i:])\n#        print decrtemp\n#        if len(decrtemp)>longest:\n#            decr=decrtemp\n#            longest=len(decrtemp)\n    print decr"
  },
  {
    "language": "Python",
    "code": "import sys\n\nsys.setrecursionlimit(10000) \n\ndef trydecr(word,memo):\n    longest=0\n    decrtemp=\"\"\n    decr=\"\"\n    if len(word)==0:\n        return \"\"\n    else:\n        for index in range(len(word)):\n            i=len(word)-1\n            while i>index:\n                if word[i]==word[index]:\n                    decrtemp=word[index]+trydecr(word[index+1:i])+word[index]\n                    if len(decrtemp)>longest:\n                        decr=decrtemp\n                        longest=len(decrtemp)\n                i=i-1\n        if len(decr)!=0:\n            return decr\n        else:\n            return word[0]\n\n\nwhile(1):\n    try:\n        word=raw_input()\n    except:\n        break\n    decr=trydecr(word)\n#    longest=0\n#    decr=\"\"\n#    for i in range(len(word)): #trying with head letter=word ith letter\n#        decrtemp=trydecr(word[i:])\n#        print decrtemp\n#        if len(decrtemp)>longest:\n#            decr=decrtemp\n#            longest=len(decrtemp)\n    print decr"
  },
  {
    "language": "Python",
    "code": "import sys\n\nsys.setrecursionlimit(10000) \n\ndef trydecr(word):\n    longest=0\n    decrtemp=\"\"\n    decr=\"\"\n    if len(word)==0:\n        return \"\"\n    else:\n        for index in range(len(word)):\n            i=len(word)-1\n            while i>index:\n                if word[i]==word[index]:\n                    decrtemp=word[index]+trydecr(word[index+1:i])+word[index]\n                    if len(decrtemp)>longest:\n                        decr=decrtemp\n                        longest=len(decrtemp)\n                i=i-1\n        if len(decr)!=0:\n            return decr\n        else:\n            return word[0]\n\n\nwhile(1):\n    try:\n        word=raw_input()\n    except:\n        break\n    decr=trydecr(word)\n#    longest=0\n#    decr=\"\"\n#    for i in range(len(word)): #trying with head letter=word ith letter\n#        decrtemp=trydecr(word[i:])\n#        print decrtemp\n#        if len(decrtemp)>longest:\n#            decr=decrtemp\n#            longest=len(decrtemp)\n    print decr"
  }
]