[
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    char player1_move[10];\n    char player2_move[10];\n    int player1_power = 0;\n    int player2_power = 0;\n\n    scanf(\"%s %s\", player1_move, player2_move);\n\n    if (strcmp(player1_move, \"attack\") == 0 && player1_power == 0 && \n        strcmp(player2_move, \"attack\") == 0 && player2_power == 0) {\n        printf(\"No winner\\n\");\n        return 0;\n    }\n\n    if (strcmp(player1_move, \"attack\") == 0 && player1_power == 0) {\n        printf(\"Player 2 wins\\n\");\n        return 0;\n    }\n\n    if (strcmp(player2_move, \"attack\") == 0 && player2_power == 0) {\n        printf(\"Player 1 wins\\n\");\n        return 0;\n    }\n\n    if (strcmp(player1_move, \"charge\") == 0 && player1_power < 5) {\n        player1_power++;\n    }\n\n    if (strcmp(player2_move, \"charge\") == 0 && player2_power < 5) {\n        player2_power++;\n    }\n\n    if (strcmp(player1_move, \"attack\") == 0 && strcmp(player2_move, \"charge\") == 0) {\n        printf(\"Player 1 wins\\n\");\n        return 0;\n    }\n\n    if (strcmp(player2_move, \"attack\") == 0 && strcmp(player1_move, \"charge\") == 0) {\n        printf(\"Player 2 wins\\n\");\n        return 0;\n    }\n\n    if (strcmp(player1_move, \"attack\") == 0 && strcmp(player2_move, \"defend\") == 0) {\n        if (player1_power == 5) {\n            printf(\"Player 1 wins\\n\");\n            return 0;\n        }\n    }\n\n    if (strcmp(player2_move, \"attack\") == 0 && strcmp(player1_move, \"defend\") == 0) {\n        if (player2_power == 5) {\n            printf(\"Player 2 wins\\n\");\n            return 0;\n        }\n    }\n\n    if (strcmp(player1_move, \"attack\") == 0 && strcmp(player2_move, \"attack\") == 0) {\n        if (player1_power > player2_power) {\n            printf(\"Player 1 wins\\n\");\n            return 0;\n        } else if (player2_power > player1_power) {\n            printf(\"Player 2 wins\\n\");\n            return 0;\n        } else {\n            printf(\"No winner\\n\");\n            return 0;\n        }\n    }\n\n    printf(\"No winner\\n\");\n    return 0;\n}",
    "timestamp": "2025-08-05 21:57:21"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "C",
    "code": "#include <stdio.h>\n#include <string.h>\n\nint main() {\n    char moves[2][10];\n    int power[2] = {0, 0};\n    int winner = -1; // -1: no winner, 0: player A, 1: player B\n\n    scanf(\"%s %s\", moves[0], moves[1]);\n\n    // Check for disqualification\n    if (strcmp(moves[0], \"attack\") == 0 && power[0] == 0 && \n        strcmp(moves[1], \"attack\") != 0) {\n        winner = 1;\n    } else if (strcmp(moves[1], \"attack\") == 0 && power[1] == 0 && \n               strcmp(moves[0], \"attack\") != 0) {\n        winner = 0;\n    } else if (strcmp(moves[0], \"attack\") == 0 && power[0] == 0 && \n               strcmp(moves[1], \"attack\") == 0 && power[1] == 0) {\n        winner = -1;\n    } else {\n        // Handle other cases\n        if (strcmp(moves[0], \"attack\") == 0 && strcmp(moves[1], \"attack\") == 0) {\n            if (power[0] > power[1]) {\n                winner = 0;\n            } else if (power[1] > power[0]) {\n                winner = 1;\n            } else {\n                winner = -1;\n            }\n        } else if (strcmp(moves[0], \"attack\") == 0 && strcmp(moves[1], \"charge\") == 0) {\n            winner = 0;\n        } else if (strcmp(moves[1], \"attack\") == 0 && strcmp(moves[0], \"charge\") == 0) {\n            winner = 1;\n        } else if (strcmp(moves[0], \"attack\") == 0 && strcmp(moves[1], \"defend\") == 0) {\n            if (power[0] == 5) {\n                winner = 0;\n            } else {\n                winner = -1;\n            }\n        } else if (strcmp(moves[1], \"attack\") == 0 && strcmp(moves[0], \"defend\") == 0) {\n            if (power[1] == 5) {\n                winner = 1;\n            } else {\n                winner = -1;\n            }\n        } else {\n            winner = -1;\n        }\n    }\n\n    // Update powers for next round if no winner yet\n    if (winner == -1) {\n        if (strcmp(moves[0], \"charge\") == 0 && power[0] < 5) {\n            power[0]++;\n        }\n        if (strcmp(moves[1], \"charge\") == 0 && power[1] < 5) {\n            power[1]++;\n        }\n    }\n\n    // Output the result\n    if (winner == -1) {\n        printf(\"No winner\\n\");\n    } else if (winner == 0) {\n        printf(\"Player A wins\\n\");\n    } else {\n        printf(\"Player B wins\\n\");\n    }\n\n    return 0;\n}",
    "timestamp": "2025-08-05 21:58:25"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\nusing namespace std;\n\nint main() {\n    string moves1, moves2;\n    cin >> moves1 >> moves2;\n    \n    int power1 = 0, power2 = 0;\n    int winner = 0; // 0: no winner, 1: player1 wins, 2: player2 wins\n    \n    for (size_t i = 0; i < moves1.size(); ++i) {\n        char move1 = moves1[i];\n        char move2 = moves2[i];\n        \n        if (winner != 0) break;\n        \n        if (move1 == 'a' && power1 == 0 && !(move2 == 'a' && power2 == 0)) {\n            winner = 2;\n            break;\n        }\n        if (move2 == 'a' && power2 == 0 && !(move1 == 'a' && power1 == 0)) {\n            winner = 1;\n            break;\n        }\n        \n        if (move1 == 'a' && move2 == 'a') {\n            if (power1 > power2) {\n                winner = 1;\n            } else if (power2 > power1) {\n                winner = 2;\n            }\n            power1 = power2 = 0;\n        } else if (move1 == 'a') {\n            if (move2 == 'c') {\n                winner = 1;\n            } else if (move2 == 'd') {\n                if (power1 == 5) {\n                    winner = 1;\n                }\n            }\n            power1 = power2 = 0;\n        } else if (move2 == 'a') {\n            if (move1 == 'c') {\n                winner = 2;\n            } else if (move1 == 'd') {\n                if (power2 == 5) {\n                    winner = 2;\n                }\n            }\n            power1 = power2 = 0;\n        } else {\n            if (move1 == 'c' && power1 < 5) {\n                power1++;\n            }\n            if (move2 == 'c' && power2 < 5) {\n                power2++;\n            }\n        }\n    }\n    \n    if (winner == 1) {\n        cout << \"player1\" << endl;\n    } else if (winner == 2) {\n        cout << \"player2\" << endl;\n    } else {\n        cout << \"no winner\" << endl;\n    }\n    \n    return 0;\n}",
    "timestamp": "2025-08-05 21:58:46"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class GameWinner {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        int n = scanner.nextInt();\n        scanner.nextLine();\n        \n        int powerA = 0;\n        int powerB = 0;\n        String winner = null;\n        \n        for (int i = 0; i < n; i++) {\n            String moveA = scanner.nextLine().trim();\n            String moveB = scanner.nextLine().trim();\n            \n            if (winner != null) {\n                continue;\n            }\n            \n            if (moveA.equals(\"attack\")) {\n                if (powerA == 0) {\n                    if (powerB == 0 && moveB.equals(\"attack\")) {\n                        continue;\n                    } else {\n                        winner = \"playerB\";\n                        continue;\n                    }\n                }\n            }\n            \n            if (moveB.equals(\"attack\")) {\n                if (powerB == 0) {\n                    if (powerA == 0 && moveA.equals(\"attack\")) {\n                        continue;\n                    } else {\n                        winner = \"playerA\";\n                        continue;\n                    }\n                }\n            }\n            \n            if (moveA.equals(\"attack\") && moveB.equals(\"attack\")) {\n                if (powerA > powerB) {\n                    winner = \"playerA\";\n                } else if (powerB > powerA) {\n                    winner = \"playerB\";\n                }\n                powerA = 0;\n                powerB = 0;\n                continue;\n            }\n            \n            if (moveA.equals(\"attack\")) {\n                if (moveB.equals(\"charge\")) {\n                    winner = \"playerA\";\n                } else if (moveB.equals(\"defend\")) {\n                    if (powerA == 5) {\n                        winner = \"playerA\";\n                    }\n                }\n                powerA = 0;\n                powerB = 0;\n                continue;\n            }\n            \n            if (moveB.equals(\"attack\")) {\n                if (moveA.equals(\"charge\")) {\n                    winner = \"playerB\";\n                } else if (moveA.equals(\"defend\")) {\n                    if (powerB == 5) {\n                        winner = \"playerB\";\n                    }\n                }\n                powerA = 0;\n                powerB = 0;\n                continue;\n            }\n            \n            if (moveA.equals(\"charge\")) {\n                powerA = Math.min(powerA + 1, 5);\n            }\n            \n            if (moveB.equals(\"charge\")) {\n                powerB = Math.min(powerB + 1, 5);\n            }\n        }\n        \n        if (winner == null) {\n            System.out.println(\"no winner\");\n        } else {\n            System.out.println(winner);\n        }\n    }\n}",
    "timestamp": "2025-08-05 21:59:10"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "Java",
    "code": "import java.util.Scanner;\n\npublic class GameWinner {\n    public static void main(String[] args) {\n        Scanner scanner = new Scanner(System.in);\n        \n        String player1Move = scanner.next();\n        String player2Move = scanner.next();\n        \n        int player1Power = 0;\n        int player2Power = 0;\n        \n        if (player1Move.equals(\"charge\")) {\n            player1Power++;\n        }\n        if (player2Move.equals(\"charge\")) {\n            player2Power++;\n        }\n        \n        if (player1Move.equals(\"attack\") && player2Move.equals(\"attack\")) {\n            if (player1Power > player2Power) {\n                System.out.println(\"Player 1\");\n            } else if (player1Power < player2Power) {\n                System.out.println(\"Player 2\");\n            } else if (player1Power == 0 && player2Power == 0) {\n                System.out.println(\"Neither\");\n            } else {\n                System.out.println(\"Neither\");\n            }\n        } else if (player1Move.equals(\"attack\") && player2Move.equals(\"defend\")) {\n            if (player1Power == 5) {\n                System.out.println(\"Player 1\");\n            } else {\n                System.out.println(\"Neither\");\n            }\n        } else if (player1Move.equals(\"defend\") && player2Move.equals(\"attack\")) {\n            if (player2Power == 5) {\n                System.out.println(\"Player 2\");\n            } else {\n                System.out.println(\"Neither\");\n            }\n        } else if (player1Move.equals(\"attack\") && player2Power == 0) {\n            if (player1Power > 0) {\n                System.out.println(\"Player 1\");\n            } else {\n                System.out.println(\"Neither\");\n            }\n        } else if (player2Move.equals(\"attack\") && player1Power == 0) {\n            if (player2Power > 0) {\n                System.out.println(\"Player 2\");\n            } else {\n                System.out.println(\"Neither\");\n            }\n        } else {\n            System.out.println(\"Neither\");\n        }\n        \n        scanner.close();\n    }\n}",
    "timestamp": "2025-08-05 21:59:17"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "C++",
    "code": "#include <iostream>\n#include <string>\n\nint main() {\n    std::string player1Move, player2Move;\n    int player1Power = 0, player2Power = 0;\n\n    std::cin >> player1Move >> player2Move;\n\n    if (player1Move == \"charge\" && player1Power < 5) {\n        player1Power++;\n    }\n    if (player2Move == \"charge\" && player2Power < 5) {\n        player2Power++;\n    }\n\n    if (player1Move == \"attack\" && player2Move == \"attack\") {\n        if (player1Power > player2Power) {\n            std::cout << \"Player 1\" << std::endl;\n        } else if (player2Power > player1Power) {\n            std::cout << \"Player 2\" << std::endl;\n        } else {\n            std::cout << \"Draw\" << std::endl;\n        }\n    } else if (player1Move == \"attack\" && player2Move == \"defend\") {\n        if (player1Power > 4) {\n            std::cout << \"Player 1\" << std::endl;\n        } else {\n            std::cout << \"Draw\" << std::endl;\n        }\n    } else if (player2Move == \"attack\" && player1Move == \"defend\") {\n        if (player2Power > 4) {\n            std::cout << \"Player 2\" << std::endl;\n        } else {\n            std::cout << \"Draw\" << std::endl;\n        }\n    } else if (player1Move == \"attack\" && player2Move == \"charge\") {\n        std::cout << \"Player 1\" << std::endl;\n    } else if (player2Move == \"attack\" && player1Move == \"charge\") {\n        std::cout << \"Player 2\" << std::endl;\n    } else if (player1Move == \"attack\" && player1Power == 0 && player2Power > 0) {\n        std::cout << \"Player 2\" << std::endl;\n    } else if (player2Move == \"attack\" && player2Power == 0 && player1Power > 0) {\n        std::cout << \"Player 1\" << std::endl;\n    } else if (player1Move == \"attack\" && player1Power == 0 && player2Power == 0) {\n        std::cout << \"Draw\" << std::endl;\n    } else if (player2Move == \"attack\" && player2Power == 0 && player1Power == 0) {\n        std::cout << \"Draw\" << std::endl;\n    } else {\n        std::cout << \"Draw\" << std::endl;\n    }\n\n    return 0;\n}",
    "timestamp": "2025-08-05 21:59:25"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def determine_winner(player1_move, player2_move, player1_power, player2_power):\n    if player1_move == 'charge':\n        player1_power = min(5, player1_power + 1)\n    if player2_move == 'charge':\n        player2_power = min(5, player2_power + 1)\n        \n    if player1_move == 'attack' and player1_power == 0 and player2_move == 'attack' and player2_power == 0:\n        return \"No winner\"\n    if player1_move == 'attack' and player1_power == 0:\n        return \"Player 2 wins\" if player2_move == 'charge' else \"Disqualification\"\n    if player2_move == 'attack' and player2_power == 0:\n        return \"Player 1 wins\" if player1_move == 'charge' else \"Disqualification\"\n    \n    if player1_move == 'attack' and player2_move == 'charge':\n        return \"Player 1 wins\"\n    if player2_move == 'attack' and player1_move == 'charge':\n        return \"Player 2 wins\"\n    \n    if player1_move == 'attack' and player2_move == 'attack':\n        if player1_power > player2_power:\n            return \"Player 1 wins\"\n        elif player2_power > player1_power:\n            return \"Player 2 wins\"\n        else:\n            return \"No winner\"\n    \n    if player1_move == 'attack' and player2_move == 'defend':\n        return \"Player 1 wins\" if player1_power == 5 else \"No winner\"\n    if player2_move == 'attack' and player1_move == 'defend':\n        return \"Player 2 wins\" if player2_power == 5 else \"No winner\"\n    \n    return \"No winner\"\n\n# Example usage\nplayer1_power = 0\nplayer2_power = 0\nprint(determine_winner('charge', 'attack', player1_power, player2_power))\nprint(determine_winner('attack', 'attack', player1_power, player2_power))",
    "timestamp": "2025-08-13 08:20:01"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "java",
    "code": "public class GameWinner {\n    public static String determineWinner(String[] player1Moves, String[] player2Moves) {\n        int player1Power = 0;\n        int player2Power = 0;\n        \n        for (int i = 0; i < player1Moves.length; i++) {\n            String move1 = player1Moves[i];\n            String move2 = player2Moves[i];\n            \n            if (move1.equals(\"attack\") && move2.equals(\"attack\")) {\n                if (player1Power == 0 && player2Power == 0) {\n                    return \"No winner\";\n                } else if (player1Power > player2Power) {\n                    return \"Player 1\";\n                } else if (player1Power < player2Power) {\n                    return \"Player 2\";\n                } else {\n                    return \"No winner\";\n                }\n            }\n            \n            if (move1.equals(\"charge\")) {\n                player1Power = Math.min(5, player1Power + 1);\n            }\n            if (move2.equals(\"charge\")) {\n                player2Power = Math.min(5, player2Power + 1);\n            }\n            \n            if (move1.equals(\"attack\")) {\n                if (player1Power == 0) {\n                    return \"Player 2\";\n                } else if (move2.equals(\"charge\")) {\n                    return \"Player 1\";\n                } else if (move2.equals(\"defend\") && player1Power == 5) {\n                    return \"Player 1\";\n                }\n            }\n            \n            if (move2.equals(\"attack\")) {\n                if (player2Power == 0) {\n                    return \"Player 1\";\n                } else if (move1.equals(\"charge\")) {\n                    return \"Player 2\";\n                } else if (move1.equals(\"defend\") && player2Power == 5) {\n                    return \"Player 2\";\n                }\n            }\n        }\n        \n        return \"No winner\";\n    }\n\n    public static void main(String[] args) {\n        String[] player1Moves = {\"charge\", \"charge\", \"attack\"};\n        String[] player2Moves = {\"charge\", \"attack\", \"defend\"};\n        System.out.println(determineWinner(player1Moves, player2Moves));\n    }\n}",
    "timestamp": "2025-08-13 08:20:12"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "c",
    "code": "#include <stdio.h>\n#include <string.h>\n\n#define MAX_POWER 5\n#define NUM_MOVES 100\n\ntypedef struct {\n    int attack_power;\n} Player;\n\nconst char* determine_winner(Player* player1, Player* player2, char moves1[][10], char moves2[][10], int num_moves) {\n    for (int i = 0; i < num_moves; i++) {\n        char* move1 = moves1[i];\n        char* move2 = moves2[i];\n\n        int power1 = player1->attack_power;\n        int power2 = player2->attack_power;\n\n        if (strcmp(move1, \"attack\") == 0 && strcmp(move2, \"attack\") == 0) {\n            if (power1 == 0 && power2 == 0) continue;\n            if (power1 > power2) return \"Player 1 wins\";\n            if (power2 > power1) return \"Player 2 wins\";\n        } else if (strcmp(move1, \"attack\") == 0) {\n            if (power1 == 0) return \"Player 2 wins\";\n            if (strcmp(move2, \"defend\") == 0) {\n                if (power1 == MAX_POWER) return \"Player 1 wins\";\n            } else if (strcmp(move2, \"charge\") == 0) {\n                return \"Player 1 wins\";\n            }\n        } else if (strcmp(move2, \"attack\") == 0) {\n            if (power2 == 0) return \"Player 1 wins\";\n            if (strcmp(move1, \"defend\") == 0) {\n                if (power2 == MAX_POWER) return \"Player 2 wins\";\n            } else if (strcmp(move1, \"charge\") == 0) {\n                return \"Player 2 wins\";\n            }\n        }\n        \n        if (strcmp(move1, \"charge\") == 0) {\n            if (player1->attack_power < MAX_POWER) player1->attack_power++;\n        }\n        if (strcmp(move2, \"charge\") == 0) {\n            if (player2->attack_power < MAX_POWER) player2->attack_power++;\n        }\n    }\n    return \"No winner\";\n}\n\nint main() {\n    Player player1 = {0};\n    Player player2 = {0};\n    \n    char moves1[NUM_MOVES][10];\n    char moves2[NUM_MOVES][10];\n    int num_moves;\n    \n    // Example input: Set \"num_moves\" and fill \"moves1\" and \"moves2\" arrays here\n    num_moves = 3;\n    strcpy(moves1[0], \"charge\");\n    strcpy(moves1[1], \"attack\");\n    strcpy(moves1[2], \"defend\");\n    \n    strcpy(moves2[0], \"defend\");\n    strcpy(moves2[1], \"charge\");\n    strcpy(moves2[2], \"attack\");\n    \n    const char* result = determine_winner(&player1, &player2, moves1, moves2, num_moves);\n    printf(\"%s\\n\", result);\n    \n    return 0;\n}",
    "timestamp": "2025-08-13 08:20:20"
  },
  {
    "model": "claude-3-5-haiku-20241022",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def determine_winner(player1_move, player2_move, player1_power=0, player2_power=0):\n    # Handle disqualification cases\n    if player1_move == 'attack' and player1_power == 0 and player2_power > 0:\n        return 'Player 2'\n    if player2_move == 'attack' and player2_power == 0 and player1_power > 0:\n        return 'Player 1'\n    \n    # Update attack powers\n    if player1_move == 'charge':\n        player1_power = min(player1_power + 1, 5)\n    if player2_move == 'charge':\n        player2_power = min(player2_power + 1, 5)\n    \n    # Handle attack scenarios\n    if player1_move == 'attack' and player2_move == 'attack':\n        if player1_power > player2_power:\n            return 'Player 1'\n        elif player2_power > player1_power:\n            return 'Player 2'\n        else:\n            return 'No winner'\n    \n    if player1_move == 'attack':\n        if player2_move == 'defend' and player1_power == 5:\n            return 'Player 1'\n        elif player2_move == 'charge':\n            return 'Player 1'\n        else:\n            return 'No winner'\n    \n    if player2_move == 'attack':\n        if player1_move == 'defend' and player2_power == 5:\n            return 'Player 2'\n        elif player1_move == 'charge':\n            return 'Player 2'\n        else:\n            return 'No winner'\n    \n    return 'No winner'\n\n# Example usage\nprint(determine_winner('attack', 'charge'))  # Player 1\nprint(determine_winner('charge', 'attack'))  # Player 2\nprint(determine_winner('attack', 'defend', 5, 0))  # Player 1\nprint(determine_winner('attack', 'defend', 4, 0))  # No winner",
    "timestamp": "2025-08-13 08:20:32"
  },
  {
    "model": "deepseek-v3",
    "prompt_type": "zero_shot",
    "language": "python",
    "code": "def determine_winner(player1_moves, player2_moves):\n    p1_power = 0\n    p2_power = 0\n    \n    for move1, move2 in zip(player1_moves, player2_moves):\n        # Check for disqualification\n        if move1 == 'attack' and p1_power == 0:\n            if not (move2 == 'attack' and p2_power == 0):\n                return \"player2\"\n        if move2 == 'attack' and p2_power == 0:\n            if not (move1 == 'attack' and p1_power == 0):\n                return \"player1\"\n        \n        # Process moves\n        if move1 == 'charge':\n            p1_power = min(p1_power + 1, 5)\n        if move2 == 'charge':\n            p2_power = min(p2_power + 1, 5)\n        \n        # Determine outcome for the round\n        if move1 == 'attack' and move2 == 'attack':\n            if p1_power > p2_power:\n                return \"player1\"\n            elif p2_power > p1_power:\n                return \"player2\"\n            else:\n                pass  # no winner this round\n        elif move1 == 'attack' and move2 == 'charge':\n            return \"player1\"\n        elif move1 == 'attack' and move2 == 'defend':\n            if p1_power == 5:\n                return \"player1\"\n            else:\n                pass\n        elif move1 == 'charge' and move2 == 'attack':\n            return \"player2\"\n        elif move1 == 'defend' and move2 == 'attack':\n            if p2_power == 5:\n                return \"player2\"\n            else:\n                pass\n        elif move1 == 'charge' and move2 == 'charge':\n            pass\n        elif move1 == 'charge' and move2 == 'defend':\n            pass\n        elif move1 == 'defend' and move2 == 'charge':\n            pass\n        elif move1 == 'defend' and move2 == 'defend':\n            pass\n        \n        # Reset power if attack was used\n        if move1 == 'attack':\n            p1_power = 0\n        if move2 == 'attack':\n            p2_power = 0\n    \n    return \"draw\"",
    "timestamp": "2025-08-13 08:20:50"
  },
  {
    "model": "gpt-4o",
    "prompt_type": "zero_shot",
    "language": "c++",
    "code": "#include <iostream>\n#include <string>\n#include <algorithm>\n\nint main() {\n    int attackPower1 = 0, attackPower2 = 0;\n    std::string move1, move2;\n    \n    while (std::cin >> move1 >> move2) {\n        if (move1 == \"attack\" && move2 == \"attack\") {\n            if (attackPower1 == 0 && attackPower2 == 0) {\n                std::cout << \"No winner\\n\";\n            } else if (attackPower1 == attackPower2) {\n                std::cout << \"No winner\\n\";\n            } else if (attackPower1 > attackPower2) {\n                std::cout << \"Player 1 wins\\n\";\n            } else {\n                std::cout << \"Player 2 wins\\n\";\n            }\n            break;\n        } else if (move1 == \"attack\") {\n            if (attackPower1 == 0) {\n                std::cout << \"Player 2 wins\\n\";\n            } else if (move2 == \"charge\") {\n                std::cout << \"Player 1 wins\\n\";\n            } else if (move2 == \"defend\" && attackPower1 == 5) {\n                std::cout << \"Player 1 wins\\n\";\n            } else {\n                std::cout << \"No winner\\n\";\n            }\n            break;\n        } else if (move2 == \"attack\") {\n            if (attackPower2 == 0) {\n                std::cout << \"Player 1 wins\\n\";\n            } else if (move1 == \"charge\") {\n                std::cout << \"Player 2 wins\\n\";\n            } else if (move1 == \"defend\" && attackPower2 == 5) {\n                std::cout << \"Player 2 wins\\n\";\n            } else {\n                std::cout << \"No winner\\n\";\n            }\n            break;\n        } else if (move1 == \"charge\" && move2 == \"charge\") {\n            std::cout << \"No winner\\n\";\n            attackPower1 = std::min(attackPower1 + 1, 5);\n            attackPower2 = std::min(attackPower2 + 1, 5);\n        } else if (move1 == \"charge\") {\n            std::cout << \"No winner\\n\";\n            attackPower1 = std::min(attackPower1 + 1, 5);\n        } else if (move2 == \"charge\") {\n            std::cout << \"No winner\\n\";\n            attackPower2 = std::min(attackPower2 + 1, 5);\n        } else {\n            std::cout << \"No winner\\n\";\n        }\n    }\n    \n    return 0;\n}",
    "timestamp": "2025-08-13 11:45:06"
  }
]